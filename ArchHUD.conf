name: ArchHud - Archaegeo v1.315 (Minified)
slots:
  core:
    class: CoreUnit
  radar:
    class: RadarPVPUnit
    select: manual
  antigrav:
    class: AntiGravityGeneratorUnit
  warpdrive:
    class: WarpDriveUnit
  gyro:
    class: GyroUnit
  weapon:
    class: WeaponUnit
    select: manual
  dbHud:
    class: databank
    select: manual
  telemeter:
    class: TelemeterUnit
    select: manual
  vBooster:
    class: VerticalBooster
  hover:
    class: Hovercraft
  door:
    class: DoorUnit
    select: manual
  switch:
    class: ManualSwitchUnit
    select: manual
  forcefield:
    class: ForceFieldUnit
    select: manual
  atmofueltank:
    class: AtmoFuelContainer
    select: manual
  spacefueltank:
    class: SpaceFuelContainer
    select: manual
  rocketfueltank:
    class: RocketFuelContainer
    select: manual
handlers:
  unit:
    start:
      lua: |
        -- error handling code added by wrap.lua
        __wrap_lua__stopped = false
        __wrap_lua__stopOnError = false
        __wrap_lua__rethrowErrorAlways = false
        __wrap_lua__rethrowErrorIfStopped = true
        __wrap_lua__printError = true
        __wrap_lua__showErrorOnScreens = true
        
        function __wrap_lua__error (message)
          if __wrap_lua__stopped then return end
        
          -- make the traceback more readable and escape HTML syntax characters
          message = tostring(message):gsub('"%-%- |STDERROR%-EVENTHANDLER[^"]*"', 'chunk'):gsub("&", "&amp;"):gsub("<", "&lt;"):gsub(">", "&gt;")
        
          local unit = unit or self or {}
        
          if __wrap_lua__showErrorOnScreens then
            for _, value in pairs(unit) do
              if type(value) == "table" and value.setCenteredText and value.setHTML then -- value is a screen
                if message:match("\n") then
                  value.setHTML([[
        <pre style="color: white; background-color: black; font-family: Consolas,monospace; font-size: 4vh; white-space: pre-wrap; margin: 1em">
        Error: ]] .. message .. [[
        </pre>]])
                else
                  value.setCenteredText(message)
                end
              end
            end
          end
        
          if __wrap_lua__printError and system and system.print then
            system.print("Error: " .. message:gsub("\n", "<br>"))
          end
        
          if __wrap_lua__stopOnError then
            __wrap_lua__stopped = true
          end
        
          if __wrap_lua__stopped and unit and unit.exit then
            unit.exit()
          end
        
          if __wrap_lua__rethrowErrorAlways or (__wrap_lua__stopped and __wrap_lua__rethrowErrorIfStopped) then
            error(message)
          end
        end
        
        -- in case traceback is removed or renamed
        __wrap_lua__traceback = traceback or (debug and debug.traceback) or function (arg1, arg2) return arg2 or arg1 end
        
        local ok, message = xpcall(function ()
        
        -- script code
        
        useTheseSettings = false --export:
        userControlScheme = "virtual joystick" --export:
        soundFolder = "archHUD" --export:
        freeLookToggle = true --export:
        BrakeToggleDefault = true --export:
        RemoteFreeze = false --export:
        RemoteHud = true --export:
        brightHud = false --export:
        VanillaRockets = false --export:
        InvertMouse = false --export:
        autoRollPreference = false --export:
        turnAssist = true --export:
        ExternalAGG = false --export:
        UseSatNav = false --export:
        ShouldCheckDamage = true --export:
        CalculateBrakeLandingSpeed = false --export:
        AtmoSpeedAssist = true --export:
        ForceAlignment = false --export:
        DisplayDeadZone = true --export:
        showHud = true --export: 
        ShowOdometer = true --export:
        hideHudOnToggleWidgets = true --export:
        ShiftShowsRemoteButtons = true --export:
        DisplayOrbit = true --export: 
        SetWaypointOnExit = true --export:
        IntruderAlertSystem = false --export:
        AlwaysVSpd = false --export:
        BarFuelDisplay = true --export:
        showHelp = true --export:
        Cockpit = false --export:
        voices = true --export:
        alerts = true --export:
        YawStallAngle = 35 --export:
        PitchStallAngle = 35 --export:
        brakeLandingRate = 30 --export:
        MaxPitch = 30 --export:
        TargetOrbitRadius = 1.4 --export:
        LowOrbitHeight = 1000 --export:
        AtmoSpeedLimit = 1050 --export:
        SpaceSpeedLimit = 30000 --export:
        AutoTakeoffAltitude = 1000 --export:
        TargetHoverHeight = 50 --export:
        LandingGearGroundHeight = 0 --export:
        ReEntryHeight = 5000 --export:
        MaxGameVelocity = 8333.00 --export:
        AutopilotInterplanetaryThrottle = 1.0 --export:
        warmup = 32 --export:
        fuelTankHandlingAtmo = 0 --export:
        fuelTankHandlingSpace = 0 --export:
        fuelTankHandlingRocket = 0 --export:
        ContainerOptimization = 0 --export:
        FuelTankOptimization = 0 --export:
        ResolutionX = 1920 --export:
        ResolutionY = 1080 --export:
        circleRad = 400 --export:
        SafeR = 130 --export:
        SafeG = 224 --export:
        SafeB = 255 --export:
        PvPR = 255 --export:
        PvPG = 0 --export:
        PvPB = 0 --export:
        centerX = 960 --export:
        centerY = 540 --export:
        throtPosX = 1300 --export:
        throtPosY = 540 --export:
        vSpdMeterX = 1525  --export:
        vSpdMeterY = 325 --export:
        altMeterX = 550  --export:
        altMeterY = 540 --export:
        fuelX = 30 --export:
        fuelY = 700 --export:
        DeadZone = 50 --export:
        OrbitMapSize = 250 --export:
        OrbitMapX = 75 --export:
        OrbitMapY = 0 --export:
        soundVolume = 100 --export:
        speedChangeLarge = 5 --export:
        speedChangeSmall = 1 --export:
        MouseXSensitivity = 0.003 --export:
        MouseYSensitivity = 0.003 --export:
        autoRollFactor = 2 --export:
        rollSpeedFactor = 1.5 --export:
        autoRollRollThreshold = 180 --export:
        minRollVelocity = 150 --export:
        turnAssistFactor = 2 --export:
        TrajectoryAlignmentStrength = 0.002 --export:
        torqueFactor = 2 --export:
        pitchSpeedFactor = 0.8 --export:
        yawSpeedFactor = 1 --export:
        brakeSpeedFactor = 3 --export:
        brakeFlatFactor = 1 --export:
        DampingMultiplier = 40 --export:
        apTickRate = 0.0166667 --export:
        hudTickRate = 0.0666667 --export:
        ExtraLongitudeTags = "none" --export:
        ExtraLateralTags = "none" --export:
        ExtraVerticalTags = "none" --export:
        local a=Navigator.new(system,core,unit)script={}VERSION_NUMBER=1.315;BrakeToggleStatus=BrakeToggleDefault;VertTakeOffEngine=false;BrakeIsOn=false;RetrogradeIsOn=false;ProgradeIsOn=false;Autopilot=false;TurnBurn=false;AltitudeHold=false;BrakeLanding=false;AutoTakeoff=false;Reentry=false;VertTakeOff=false;HoldAltitude=1000;AutopilotAccelerating=false;AutopilotRealigned=false;AutopilotBraking=false;AutopilotCruising=false;AutopilotEndSpeed=0;AutopilotStatus="Aligning"AutopilotPlanetGravity=0;PrevViewLock=1;AutopilotTargetName="None"AutopilotTargetCoords=nil;AutopilotTargetIndex=0;GearExtended=nil;TotalDistanceTravelled=0.0;TotalFlightTime=0;SavedLocations={}VectorToTarget=false;LocationIndex=0;LastMaxBrake=0;LockPitch=nil;LastMaxBrakeInAtmo=0;AntigravTargetAltitude=1000;LastStartTime=0;SpaceTarget=false;LeftAmount=0;IntoOrbit=false;safeMass=0;iphCondition="All"stablized=true;sounds=true;local b={"VertTakeOff","VertTakeOffEngine","SpaceTarget","BrakeToggleStatus","BrakeIsOn","RetrogradeIsOn","ProgradeIsOn","Autopilot","TurnBurn","AltitudeHold","BrakeLanding","Reentry","AutoTakeoff","HoldAltitude","AutopilotAccelerating","AutopilotBraking","AutopilotCruising","AutopilotRealigned","AutopilotEndSpeed","AutopilotStatus","AutopilotPlanetGravity","PrevViewLock","AutopilotTargetName","AutopilotTargetCoords","AutopilotTargetIndex","TotalDistanceTravelled","TotalFlightTime","SavedLocations","VectorToTarget","LocationIndex","LastMaxBrake","LockPitch","LastMaxBrakeInAtmo","AntigravTargetAltitude","LastStartTime","safeMass","iphCondition","stablized","sounds"}local c=math.abs;local d=math.floor;local e=string.format;local f=json.decode;local g=json.encode;local h=core.getElementMaxHitPointsById;local j=unit.getAtmosphereDensity;local k=core.getElementMassById;local l=a.control.isRemoteControlled;local m=math.atan;local n=string.match;local o=utils.round;local p=system.getTime;local vec3=vec3;local q=utils.clamp;local r=a.axisCommandManager;local s=system.destroyWidgetPanel;local t=system.updateData;local u=system.addDataToWidget;local v=system.lockView;local w=system.isViewLocked;local function x(y,z)local A=10^(z or 0)return d(y*A+0.5)/A end;local B=16;local C=SafeR;local D=SafeB;local E=SafeG;local F=0;local G=0;local H=false;local I=0;local J=false;local K=x(ResolutionX/2,0)local L=x(ResolutionY/2,0)local M=false;local N=55;local O=false;local P=false;local Q=0;local R=0;local S=0;local T=0;local U=0;local V=0;local W=0;local X=false;local Y=false;local Z="empty"local a0=5;local a1=5;local a2=a0;local a3=a1;local a4=false;local a5,a6=0;local a7,a8=0;local a9=nil;local aa=0;local ab=0;local ac=0;local ad=0;local ae=0;local af=3;local ag=0;local ah=""local ai=0;local aj=false;local ak=false;local al=false;local am=-1;local an=false;local ao=""local ap=j()>0;local aq=j()local ar=core.getAltitude()local as=core.getElementIdList()local at=p()local au=core.getConstructMass()local av=false;local aw=nil;local ax=false;local ay=[[rgb(]]..d(C+0.5)..","..d(E+0.5)..","..d(D+0.5)..[[)]]local az=[[rgb(]]..d(C*0.9+0.5)..","..d(E*0.9+0.5)..","..d(D*0.9+0.5)..[[)]]local aA={}local aB=0;local aC=0;local aD=""local aE=true;local aF={}local aG={}local aH={}local aI=ResolutionX;local aJ=ResolutionY;local aK=false;local aL=false;local aM=nil;local aN={}local aO={}local aP={}local aQ=0;local aR=false;local aS={}local aT={}local aU=d(1/apTickRate)*2;local aV={}local aW={}local aX={}local aY={}local aZ=false;local a_=0;local b0=nil;local b1=nil;local b2=nil;local b3=nil;local b4=nil;local b5=nil;local b6=nil;local b7=nil;local b8=nil;local b9=nil;local ba=nil;local bb=nil;local bc=false;local bd=false;local be=autoRollPreference;local bf=LandingGearGroundHeight;local bg=false;local bh=p()local bi=0;local bj=0;local bk=0;local bl=AtmoSpeedLimit;local bm=0;local bn=nil;local bo=0;local bp=0;local bq=false;local br=false;local bs={VectorToTarget=false}local bt=false;local bu=0;local bv=nil;local bw=false;local bx=false;local by=false;local bz=false;local bA=0;local bB=p()local bC=vec3(core.getConstructWorldOrientationUp())local bD=vec3(core.getConstructWorldOrientationForward())local bE=vec3(core.getConstructWorldOrientationRight())local bF=vec3(core.getWorldVelocity())local bG=vec3(bF):len()local bH=vec3(core.getWorldVertical())local bI=-bH:dot(bF)local bJ=vec3(core.getConstructWorldPos())local bK=0;local bL=false;local bM=false;local bN=nil;local bO=true;local bP=0;local bQ=0;local bR=false;local bS={}local bT=showHud;local bU={}local bV=false;local bW=""local bX=""local bY=nil;local function bZ(b_,c0,type)if type==nil and not voices or type~=nil and not alerts or soundFolder=="archHUD"or not sounds then return end;if type~=nil then system.logInfo("sound_notification|audiopacks/"..soundFolder.."/"..b_.."|"..c0 .."|"..soundVolume)else system.logInfo("sound_q|audiopacks/"..soundFolder.."/"..b_.."|"..c0 .."|"..soundVolume)end end;local function c1(c2,c3)for i=1,#c3 do c2[#c2+1]=c3[i]end;return c2 end;local function c4(c5)local c6={}local c7={"userControlScheme","soundFolder","freeLookToggle","BrakeToggleDefault","RemoteFreeze","brightHud","RemoteHud","VanillaRockets","InvertMouse","autoRollPreference","turnAssist","ExternalAGG","UseSatNav","ShouldCheckDamage","CalculateBrakeLandingSpeed","AtmoSpeedAssist","ForceAlignment","DisplayDeadZone","showHud","ShowOdometer","hideHudOnToggleWidgets","ShiftShowsRemoteButtons","DisplayOrbit","SetWaypointOnExit","IntruderAlertSystem","AlwaysVSpd","BarFuelDisplay","showHelp","Cockpit","voices","alerts"}local c8={"YawStallAngle","PitchStallAngle","brakeLandingRate","MaxPitch","TargetOrbitRadius","LowOrbitHeight","AtmoSpeedLimit","SpaceSpeedLimit","AutoTakeoffAltitude","TargetHoverHeight","LandingGearGroundHeight","ReEntryHeight","MaxGameVelocity","AutopilotInterplanetaryThrottle","warmup","fuelTankHandlingAtmo","fuelTankHandlingSpace","fuelTankHandlingRocket","ContainerOptimization","FuelTankOptimization"}local c9={"ResolutionX","ResolutionY","circleRad","SafeR","SafeG","SafeB","PvPR","PvPG","PvPB","centerX","centerY","throtPosX","throtPosY","vSpdMeterX","vSpdMeterY","altMeterX","altMeterY","fuelX","fuelY","DeadZone","OrbitMapSize","OrbitMapX","OrbitMapY","soundVolume"}local ca={"speedChangeLarge","speedChangeSmall","MouseXSensitivity","MouseYSensitivity","autoRollFactor","rollSpeedFactor","autoRollRollThreshold","minRollVelocity","turnAssistFactor","TrajectoryAlignmentStrength","torqueFactor","pitchSpeedFactor","yawSpeedFactor","brakeSpeedFactor","brakeFlatFactor","DampingMultiplier","apTickRate","hudTickRate","ExtraLongitudeTags","ExtraLateralTags","ExtraVerticalTags"}if not c5 then c1(c6,c7)c1(c6,c8)c1(c6,c9)c1(c6,ca)return c6 elseif c5=="boolean"then return c7 elseif c5=="handling"then return c8 elseif c5=="hud"then return c9 elseif c5=="physics"then return ca end end;local function cb(cc,cd,ce,cf,cg)if cf==nil then cf=""end;if cg==nil then cg=""end;return e([[<text class="%s" x=%s y=%s style="%s">%s</text>]],cf,cc,cd,cg,ce)end;local function ch(ci,cj)if r:getAxisCommandType(0)~=axisCommandType.byThrottle and not cj then a.control.cancelCurrentControlMasterMode()end;r:setThrottleCommand(axisCommandId.longitudinal,ci)F=q(x(ci*100,0)/100,-1,1)end;local function ck(ci,cj)if r:getAxisCommandType(0)~=axisCommandType.byTargetSpeed and not cj then a.control.cancelCurrentControlMasterMode()end;r:setTargetSpeedCommand(axisCommandId.longitudinal,ci)bN=ci end;local function cl(cm,cn)if cm==0 then return c(cn)<1e-09 end;if cn==0 then return c(cm)<1e-09 end;return c(cm-cn)<math.max(c(cm),c(cn))*epsilon end;local function co(ag,cp)local cq=ag>100000;if cp==nil then cp=1 end;if cq then return x(ag/1000/200,cp).."SU"elseif ag<1000 then return x(ag,cp).."M"else return x(ag/1000,cp).."KM"end end;local function cr()AltitudeHold=false;if VertTakeOff then StrongBrakes=true;Reentry=false;AutoTakeoff=false;BrakeLanding=true;be=true;ac=0;if ap and am==-1 then BrakeLanding=false;AltitudeHold=true;ac=0;a:setEngineForceCommand('thrust analog vertical fueled ',vec3(),1)ck(d(bl))end else bw=false;GearExtended=false;a.control.retractLandingGears()r:setTargetGroundAltitude(TargetHoverHeight)BrakeIsOn=true end;VertTakeOff=not VertTakeOff end;local function cs()bw=false;bo=nil;bp=nil;bA=0;if aq==0 then if IntoOrbit then bZ("NoOrbit.mp3","AP")IntoOrbit=false;bq=false;bv=nil;be=autoRollPreference;if AltitudeHold then AltitudeHold=false;AutoTakeoff=false end;bs.VectorToTarget=false;bs.AutopilotAlign=false;bt=false elseif unit.getClosestPlanetInfluence()>0 then bZ("Orbit.mp3","AP")IntoOrbit=true;be=true;if bv==nil then bv=planet end;if AltitudeHold then AltitudeHold=false;AutoTakeoff=false end else Z="Unable to engage auto-orbit, not near a planet"end else IntoOrbit=false;bq=false;bv=nil;be=autoRollPreference;if AltitudeHold then AltitudeHold=false end;bs.VectorToTarget=false;bs.AutopilotAlign=false;bt=false end end;local function ct()if bB-bj<1.5 then if planet.hasAtmosphere then if aq>0 then HoldAltitude=planet.spaceEngineMinAltitude-50;bZ("ElevenPercent.mp3","EP")else if unit.getClosestPlanetInfluence()>0 then HoldAltitude=planet.noAtmosphericDensityAltitude+LowOrbitHeight;bu=HoldAltitude;bt=true;if not IntoOrbit then cs()end;bq=true end end;bj=-1;if AltitudeHold or IntoOrbit or VertTakeOff then return end end else bj=bB end;if unit.getClosestPlanetInfluence()>0 and aq==0 then bu=ar;bt=true;bq=true;cs()if IntoOrbit then bj=bB else bj=0 end;return end;AltitudeHold=not AltitudeHold;BrakeLanding=false;Reentry=false;if AltitudeHold then Autopilot=false;ProgradeIsOn=false;RetrogradeIsOn=false;X=false;be=true;LockPitch=nil;bw=false;if am==-1 then bZ("AltitudeHoldEnabled.mp3","AH")AutoTakeoff=false;if bj>-1 then if unit.getClosestPlanetInfluence()>0 then HoldAltitude=ar end end;if VertTakeOff then cr()end else bZ("LaunchingFromSurface.mp3","LS")AutoTakeoff=true;if bj>-1 then HoldAltitude=ar+AutoTakeoffAltitude end;GearExtended=false;a.control.retractLandingGears()BrakeIsOn=true;r:setTargetGroundAltitude(TargetHoverHeight)if VertTakeOffEngine and bL then cr()end end;if ak then HoldAltitude=100000 end else bZ("AltitudeHoldDisabled.mp3","AH")if IntoOrbit then cs()end;if VertTakeOff then cr()end;be=autoRollPreference;AutoTakeoff=false;VectorToTarget=false;bj=0 end end;local function cu()if l()==1 then X=not X;if X then Autopilot=false;RetrogradeIsOn=false;ProgradeIsOn=false;AltitudeHold=false;Reentry=false;BrakeLanding=false;AutoTakeoff=false;OldGearExtended=GearExtended;GearExtended=false;a.control.retractLandingGears()r:setTargetGroundAltitude(TargetHoverHeight)bZ("Follow.mp3","F")else bZ("NoFollow.mp3","F")BrakeIsOn=true;be=autoRollPreference;GearExtended=OldGearExtended;if GearExtended then a.control.extendLandingGears()r:setTargetGroundAltitude(LandingGearGroundHeight)end end else Z="Follow Mode only works with Remote controller"X=false end end;local function cv()local function cw(SpaceTarget)VectorToTarget=not VectorToTarget;if VectorToTarget then TurnBurn=false;if not AltitudeHold and not SpaceTarget then ct()end end;VectorStatus="Proceeding to Waypoint"end;if bB-bk<1.5 and aq>0 then if not bz then Z="No space engines detected, Orbital Hop not supported"return end;if planet.hasAtmosphere then if aq>0 then HoldAltitude=planet.noAtmosphericDensityAltitude+LowOrbitHeight;bZ("OrbitHeight.mp3","OH")end;bk=-1;if Autopilot or VectorToTarget or IntoOrbit then return end end else bk=bB end;TargetSet=false;if AutopilotTargetIndex>0 and not Autopilot and not VectorToTarget and not ak and not IntoOrbit then ba.UpdateAutopilotTarget()bb.showWayPoint(a9,AutopilotTargetCoords)local cx=unit.getClosestPlanetInfluence()>0;if CustomTarget~=nil then LockPitch=nil;SpaceTarget=CustomTarget.planetname=="Space"if SpaceTarget then bZ("AutopilotToSpace.mp3","AP")if aq~=0 then ak=true;ct()else Autopilot=true end elseif planet.name==CustomTarget.planetname then StrongBrakes=true;if aq>0 then if not VectorToTarget then bZ("VectorToTarget.mp3","AP")cw(SpaceTarget)end else bZ("AutopilotEngaged.mp3","AP")if not(a9.name==planet.name and cx)then bw=false;Autopilot=true elseif not ap then if IntoOrbit then cs()end;bu=planet.noAtmosphericDensityAltitude+LowOrbitHeight;bt=true;bs.AutopilotAlign=true;bs.VectorToTarget=true;bq=false;if not IntoOrbit then cs()end end end else bZ("AutopilotToPlanet.mp3","AP")RetrogradeIsOn=false;ProgradeIsOn=false;if aq~=0 then ak=true;ct()else Autopilot=true end end elseif aq==0 then if CustomTarget==nil and(a9.name==planet.name and cx)and not IntoOrbit then WaypointSet=false;bw=false;bq=false;cs()else bZ("AutopilotToPlanet.mp3","AP")Autopilot=true;RetrogradeIsOn=false;ProgradeIsOn=false;AutopilotRealigned=false;X=false;AltitudeHold=false;BrakeLanding=false;Reentry=false;AutoTakeoff=false;M=false;LockPitch=nil;WaypointSet=false end else bZ("AutopilotToPlanet.mp3","AP")ak=true;ct()end else bZ("AutopilotSecured.mp3","AP")ak=false;Autopilot=false;AutopilotRealigned=false;VectorToTarget=false;M=false;AutoTakeoff=false;AltitudeHold=false;VectorToTarget=false;HoldAltitude=ar;TargetSet=false;Reentry=false;if IntoOrbit then cs()end end end;local function cy(cz)local cA=-1;local cB;cA=ba.findAtlasIndex(SavedLocations)if cA~=-1 then local cC;if cz~=nil then cB={position=SavedLocations[cA].position,name=cz,atmosphere=SavedLocations[cA].atmosphere,planetname=SavedLocations[cA].planetname,gravity=SavedLocations[cA].gravity}else cB={position=bJ,name=SavedLocations[cA].name,atmosphere=aq,planetname=planet.name,gravity=unit.getClosestPlanetInfluence(),safe=true}end;SavedLocations[cA]=cB;cA=-1;cA=ba.findAtlasIndex(b0[0])if cA>-1 then b0[0][cA]=cB end;ba.UpdateAtlasLocationsList()Z=CustomTarget.name.." position updated"ba.UpdateAutopilotTarget()else Z="Name Not Found"end end;local function cD()BrakeIsOn=not BrakeIsOn;if BrakeLanding then BrakeLanding=false;be=autoRollPreference end;if BrakeIsOn then bZ("EngagingBrake.mp3","B",1)VectorToTarget=false;AutoTakeoff=false;Reentry=false;ProgradeIsOn=false;BrakeLanding=false;AutoLanding=false;bY=nil;if not bM then AltitudeHold=false;LockPitch=nil end;if VertTakeOff then cr()end;if IntoOrbit then cs()end;be=autoRollPreference;aj=false;al=false;ac=0 else bZ("DisengagingBrake.mp3","B",1)end end;local function cE(cF,cG,cH)local function cI(cF,cJ)cF=vec3(cF)cJ=vec3(cJ):normalize()local cK=cF*cJ;return cK.x+cK.y+cK.z end;local cL=0.001;local cM=1;if not ap or not bg or am~=-1 or bG<N then if cH==nil then cH=DampingMultiplier end;if cG==nil then cG=cL end;cF=vec3(cF):normalize()local cN=vec3()-cF;local cO=-cI(cN,core.getConstructWorldOrientationRight())*cM;local cP=-cI(cN,core.getConstructWorldOrientationUp())*cM;if aB==0 then aB=cO/2 end;if aC==0 then aC=cP/2 end;if c(cO)<0.1 then S=S-cO*2 else S=S-(cO+(cO-aB)*cH)end;if c(cP)<0.1 then R=R+cP*2 else R=R+cP+(cP-aC)*cH end;aB=cO;aC=cP;if c(cO)<cG and c(cP)<cG then return true end;return false elseif bg and am==-1 then cF=bF;if cH==nil then cH=DampingMultiplier end;if cG==nil then cG=cL end;cF=vec3(cF):normalize()local cN=bD-cF;local cO=-cI(cN,core.getConstructWorldOrientationRight())*cM;local cP=-cI(cN,core.getConstructWorldOrientationUp())*cM;if aB==0 then aB=cO/2 end;if aC==0 then aC=cP/2 end;if c(cO)<0.1 then S=S-cO*5 else S=S-(cO+(cO-aB)*cH)end;if c(cP)<0.1 then R=R+cP*5 else R=R+cP+(cP-aC)*cH end;aB=cO;aC=cP;if c(cO)<cG and c(cP)<cG then return true end;return false end end;local function cQ()if Reentry then Z="Re-Entry cancelled"bZ("NoReEntry.mp3","RE")Reentry=false;be=autoRollPreference;AltitudeHold=false elseif not planet.hasAtmosphere then Z="Re-Entry requirements not met: you must start out of atmosphere\n and within a planets gravity well over a planet with atmosphere"af=5 elseif not O then Reentry=true;if r:getAxisCommandType(0)~=controlMasterModeId.cruise then a.control.cancelCurrentControlMasterMode()end;be=true;BrakeIsOn=false;Z="Beginning Parachute Re-Entry - Strap In.  Target speed: "..bl;bZ("Parachute.mp3","RE")else Reentry=true;AltitudeHold=true;be=true;BrakeIsOn=false;HoldAltitude=planet.surfaceMaxAltitude+ReEntryHeight;if HoldAltitude>planet.spaceEngineMinAltitude then HoldAltitude=planet.spaceEngineMinAltitude-planet.spaceEngineMinAltitude/10 end;local ce=co(HoldAltitude)Z="Beginning Re-entry.  Target speed: "..bl.." Target Altitude: "..ce;bZ("Glide.mp3","RE")ck(d(bl))end;AutoTakeoff=false end;local function cR()if antigrav and not ExternalAGG then if bM then bZ("AntigravSecured.mp3","AG")antigrav.deactivate()antigrav.hide()else if AntigravTargetAltitude==nil then AntigravTargetAltitude=ar end;if AntigravTargetAltitude<1000 then AntigravTargetAltitude=1000 end;bZ("AntigravActivated.mp3","AG")antigrav.activate()antigrav.show()end end end;local function cS(cT)local cU=0;local cV=0;local cW=0;if cT<60 then cT=d(cT)elseif cT<3600 then cU=d(cT/60)cT=d(cT%60)elseif cT<86400 then cV=d(cT/3600)cU=d(cT%3600/60)else cW=d(cT/86400)cV=d(cT%86400/3600)end;if cW>0 then return cW.."d "..cV.."h "elseif cV>0 then return cV.."h "..cU.."m "elseif cU>0 then return cU.."m "..cT.."s"elseif cT>0 then return cT.."s"else return"0s"end end;local function cX(cY)local function cZ(c_)for d0,d1 in pairs(c_)do dbHud_1.setStringValue(d1,g(_G[d1]))if cY and dbHud_2 then dbHud_2.setStringValue(d1,g(_G[d1]))end end end;if dbHud_1 then cZ(b)cZ(c4())system.print("Saved Variables to Datacore")if cY and dbHud_2 then Z="Databank copied.  Remove copy when ready."end end end;local function d2()return{[0]={[0]={GM=0,bodyId=0,center={x=0,y=0,z=0},name='Space',planetarySystemId=0,radius=0,hasAtmosphere=false,gravity=0,noAtmosphericDensityAltitude=0,surfaceMaxAltitude=0},[2]={name="Alioth",description="Alioth is the planet selected by the arkship for landfall; it is a typical goldilocks planet where humanity may rebuild in the coming decades. The arkship geological survey reports mountainous regions alongside deep seas and lush forests. This is where it all starts.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9401,atmosphericEngineMaxAltitude=5580,biosphere="Forest",classification="Mesoplanet",bodyId=2,GM=157470826617,gravity=1.0082568597356114,fullAtmosphericDensityMaxAltitude=-10,habitability="High",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=6272,numSatellites=2,positionFromSun=2,center={x=-8,y=-8,z=-126303},radius=126067.8984375,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=3410,surfaceArea=199718780928,surfaceAverageAltitude=200,surfaceMaxAltitude=1100,surfaceMinAltitude=-330,systemZone="High",territories=259472,type="Planet",waterLevel=0,planetarySystemId=0},[21]={name="Alioth Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=21,GM=2118960000,gravity=0.24006116402380084,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=457933,y=-1509011,z=115524},radius=30000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=0,surfaceArea=11309733888,surfaceAverageAltitude=140,surfaceMaxAltitude=200,surfaceMinAltitude=10,systemZone=nil,territories=14522,type="",waterLevel=nil,planetarySystemId=0},[22]={name="Alioth Moon 4",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=22,GM=2165833514,gravity=0.2427018259886451,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=-1692694,y=729681,z=-411464},radius=30330,safeAreaEdgeAltitude=500000,size="L",spaceEngineMinAltitude=0,surfaceArea=11559916544,surfaceAverageAltitude=-15,surfaceMaxAltitude=-5,surfaceMinAltitude=-50,systemZone=nil,territories=14522,type="",waterLevel=nil,planetarySystemId=0},[5]={name="Feli",description="Feli is easily identified by its massive and deep crater. Outside of the crater, the arkship geological survey reports a fairly bland and uniform planet, it also cannot explain the existence of the crater. Feli is particular for having an extremely small atmosphere, allowing life to develop in the deeper areas of its crater but limiting it drastically on the actual surface.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.5488,atmosphericEngineMaxAltitude=66725,biosphere="Barren",classification="Mesoplanet",bodyId=5,GM=16951680000,gravity=0.4801223280476017,fullAtmosphericDensityMaxAltitude=30,habitability="Low",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=78500,numSatellites=1,positionFromSun=5,center={x=-43534464,y=22565536,z=-48934464},radius=41800,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=42800,surfaceArea=21956466688,surfaceAverageAltitude=18300,surfaceMaxAltitude=18500,surfaceMinAltitude=46,systemZone="Low",territories=27002,type="Planet",waterLevel=nil,planetarySystemId=0},[50]={name="Feli Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=50,GM=499917600,gravity=0.11202853997062348,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=-43902841.78,y=22261034.7,z=-48862386},radius=14000,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=0,surfaceArea=2463008768,surfaceAverageAltitude=800,surfaceMaxAltitude=900,surfaceMinAltitude=0,systemZone=nil,territories=3002,type="",waterLevel=nil,planetarySystemId=0},[120]={name="Ion",description="Ion is nothing more than an oversized ice cube frozen through and through. It is a largely inhospitable planet due to its extremely low temperatures. The arkship geological survey reports extremely rough mountainous terrain with little habitable land.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9522,atmosphericEngineMaxAltitude=10480,biosphere="Ice",classification="Hypopsychroplanet",bodyId=120,GM=7135606629,gravity=0.36009174603570127,fullAtmosphericDensityMaxAltitude=-30,habitability="Average",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=17700,numSatellites=2,positionFromSun=12,center={x=2865536.7,y=-99034464,z=-934462.02},radius=44950,safeAreaEdgeAltitude=500000,size="XS",spaceEngineMinAltitude=6410,surfaceArea=25390383104,surfaceAverageAltitude=500,surfaceMaxAltitude=1300,surfaceMinAltitude=250,systemZone="Average",territories=32672,type="Planet",waterLevel=nil,planetarySystemId=0},[121]={name="Ion Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=121,GM=106830900,gravity=0.08802242599860607,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=2472916.8,y=-99133747,z=-1133582.8},radius=11000,safeAreaEdgeAltitude=500000,size="XS",spaceEngineMinAltitude=0,surfaceArea=1520530944,surfaceAverageAltitude=100,surfaceMaxAltitude=200,surfaceMinAltitude=3,systemZone=nil,territories=1922,type="",waterLevel=nil,planetarySystemId=0},[122]={name="Ion Moon 2",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=122,GM=176580000,gravity=0.12003058201190042,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=2995424.5,y=-99275010,z=-1378480.7},radius=15000,safeAreaEdgeAltitude=500000,size="XS",spaceEngineMinAltitude=0,surfaceArea=2827433472,surfaceAverageAltitude=-1900,surfaceMaxAltitude=-1400,surfaceMinAltitude=-2100,systemZone=nil,territories=3632,type="",waterLevel=nil,planetarySystemId=0},[9]={name="Jago",description="Jago is a water planet. The large majority of the planet&apos;s surface is covered by large oceans dotted by small areas of landmass across the planet. The arkship geological survey reports deep seas across the majority of the planet with sub 15 percent coverage of solid ground.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9835,atmosphericEngineMaxAltitude=9695,biosphere="Water",classification="Mesoplanet",bodyId=9,GM=18606274330,gravity=0.5041284298678057,fullAtmosphericDensityMaxAltitude=-90,habitability="Very High",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=10900,numSatellites=0,positionFromSun=9,center={x=-94134462,y=12765534,z=-3634464},radius=61590,safeAreaEdgeAltitude=500000,size="XL",spaceEngineMinAltitude=5900,surfaceArea=47668367360,surfaceAverageAltitude=0,surfaceMaxAltitude=1200,surfaceMinAltitude=-500,systemZone="Very High",territories=60752,type="Planet",waterLevel=0,planetarySystemId=0},[100]={name="Lacobus",description="Lacobus is an ice planet that also features large bodies of water. The arkship geological survey reports deep oceans alongside a frozen and rough mountainous environment. Lacobus seems to feature regional geothermal activity allowing for the presence of water on the surface.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.7571,atmosphericEngineMaxAltitude=11120,biosphere="Ice",classification="Psychroplanet",bodyId=100,GM=13975172474,gravity=0.45611622622739767,fullAtmosphericDensityMaxAltitude=-20,habitability="Average",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=12510,numSatellites=3,positionFromSun=10,center={x=98865536,y=-13534464,z=-934461.99},radius=55650,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=6790,surfaceArea=38917074944,surfaceAverageAltitude=800,surfaceMaxAltitude=1660,surfaceMinAltitude=250,systemZone="Average",territories=50432,type="Planet",waterLevel=0,planetarySystemId=0},[102]={name="Lacobus Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=102,GM=444981600,gravity=0.14403669598391783,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=99180968,y=-13783862,z=-926156.4},radius=18000,safeAreaEdgeAltitude=500000,size="XL",spaceEngineMinAltitude=0,surfaceArea=4071504128,surfaceAverageAltitude=150,surfaceMaxAltitude=300,surfaceMinAltitude=10,systemZone=nil,territories=5072,type="",waterLevel=nil,planetarySystemId=0},[103]={name="Lacobus Moon 2",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=103,GM=211503600,gravity=0.11202853997062348,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=99250052,y=-13629215,z=-1059341.4},radius=14000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=0,surfaceArea=2463008768,surfaceAverageAltitude=-1380,surfaceMaxAltitude=-1280,surfaceMinAltitude=-1880,systemZone=nil,territories=3002,type="",waterLevel=nil,planetarySystemId=0},[101]={name="Lacobus Moon 3",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=101,GM=264870000,gravity=0.12003058201190042,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=98905288.17,y=-13950921.1,z=-647589.53},radius=15000,safeAreaEdgeAltitude=500000,size="L",spaceEngineMinAltitude=0,surfaceArea=2827433472,surfaceAverageAltitude=500,surfaceMaxAltitude=820,surfaceMinAltitude=3,systemZone=nil,territories=3632,type="",waterLevel=nil,planetarySystemId=0},[1]={name="Madis",description="Madis is a barren wasteland of a rock; it sits closest to the sun and temperatures reach extreme highs during the day. The arkship geological survey reports long rocky valleys intermittently separated by small ravines.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.8629,atmosphericEngineMaxAltitude=7165,biosphere="Barren",classification="hyperthermoplanet",bodyId=1,GM=6930729684,gravity=0.36009174603570127,fullAtmosphericDensityMaxAltitude=220,habitability="Low",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=8050,numSatellites=3,positionFromSun=1,center={x=17465536,y=22665536,z=-34464},radius=44300,safeAreaEdgeAltitude=500000,size="XS",spaceEngineMinAltitude=4480,surfaceArea=24661377024,surfaceAverageAltitude=750,surfaceMaxAltitude=850,surfaceMinAltitude=670,systemZone="Low",territories=30722,type="Planet",waterLevel=nil,planetarySystemId=0},[10]={name="Madis Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=10,GM=78480000,gravity=0.08002039003323584,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=17448118.224,y=22966846.286,z=143078.82},radius=10000,safeAreaEdgeAltitude=500000,size="XL",spaceEngineMinAltitude=0,surfaceArea=1256637056,surfaceAverageAltitude=210,surfaceMaxAltitude=420,surfaceMinAltitude=0,systemZone=nil,territories=1472,type="",waterLevel=nil,planetarySystemId=0},[11]={name="Madis Moon 2",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=11,GM=237402000,gravity=0.09602446196397631,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=17194626,y=22243633.88,z=-214962.81},radius=12000,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=0,surfaceArea=1809557376,surfaceAverageAltitude=-700,surfaceMaxAltitude=300,surfaceMinAltitude=-2900,systemZone=nil,territories=1922,type="",waterLevel=nil,planetarySystemId=0},[12]={name="Madis Moon 3",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=12,GM=265046609,gravity=0.12003058201190042,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=17520614,y=22184730,z=-309989.99},radius=15000,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=0,surfaceArea=2827433472,surfaceAverageAltitude=700,surfaceMaxAltitude=1100,surfaceMinAltitude=0,systemZone=nil,territories=3632,type="",waterLevel=nil,planetarySystemId=0},[26]={name="Sanctuary",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9666,atmosphericEngineMaxAltitude=6935,biosphere="",classification="",bodyId=26,GM=68234043600,gravity=1.0000000427743831,fullAtmosphericDensityMaxAltitude=-30,habitability="",hasAtmosphere=true,isSanctuary=true,noAtmosphericDensityAltitude=7800,numSatellites=0,positionFromSun=0,center={x=-1404835,y=562655,z=-285074},radius=83400,safeAreaEdgeAltitude=0,size="L",spaceEngineMinAltitude=4230,surfaceArea=87406149632,surfaceAverageAltitude=80,surfaceMaxAltitude=500,surfaceMinAltitude=-60,systemZone=nil,territories=111632,type="",waterLevel=0,planetarySystemId=0},[6]={name="Sicari",description="Sicari is a typical desert planet; it has survived for millenniums and will continue to endure. While not the most habitable of environments it remains a relatively untouched and livable planet of the Alioth sector. The arkship geological survey reports large flatlands alongside steep plateaus.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.897,atmosphericEngineMaxAltitude=7725,biosphere="Desert",classification="Mesoplanet",bodyId=6,GM=10502547741,gravity=0.4081039739797361,fullAtmosphericDensityMaxAltitude=-625,habitability="Average",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=8770,numSatellites=0,positionFromSun=6,center={x=52765536,y=27165538,z=52065535},radius=51100,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=4480,surfaceArea=32813432832,surfaceAverageAltitude=130,surfaceMaxAltitude=220,surfaceMinAltitude=50,systemZone="Average",territories=41072,type="Planet",waterLevel=nil,planetarySystemId=0},[7]={name="Sinnen",description="Sinnen is a an empty and rocky hell. With no atmosphere to speak of it is one of the least hospitable planets in the sector. The arkship geological survey reports mostly flatlands alongside deep ravines which look to have once been riverbeds. This planet simply looks to have dried up and died, likely from solar winds.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9226,atmosphericEngineMaxAltitude=10335,biosphere="Desert",classification="Mesoplanet",bodyId=7,GM=13033380591,gravity=0.4401121421448438,fullAtmosphericDensityMaxAltitude=-120,habitability="Average",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=11620,numSatellites=1,positionFromSun=7,center={x=58665538,y=29665535,z=58165535},radius=54950,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=6270,surfaceArea=37944188928,surfaceAverageAltitude=317,surfaceMaxAltitude=360,surfaceMinAltitude=23,systemZone="Average",territories=48002,type="Planet",waterLevel=nil,planetarySystemId=0},[70]={name="Sinnen Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=70,GM=396912600,gravity=0.1360346539426409,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=58969616,y=29797945,z=57969449},radius=17000,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=0,surfaceArea=3631681280,surfaceAverageAltitude=-2050,surfaceMaxAltitude=-1950,surfaceMinAltitude=-2150,systemZone=nil,territories=4322,type="",waterLevel=nil,planetarySystemId=0},[110]={name="Symeon",description="Symeon is an ice planet mysteriously split at the equator by a band of solid desert. Exactly how this phenomenon is possible is unclear but some sort of weather anomaly may be responsible. The arkship geological survey reports a fairly diverse mix of flat-lands alongside mountainous formations.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9559,atmosphericEngineMaxAltitude=6920,biosphere="Ice, Desert",classification="Hybrid",bodyId=110,GM=9204742375,gravity=0.3920998898971822,fullAtmosphericDensityMaxAltitude=-30,habitability="High",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=7800,numSatellites=0,positionFromSun=11,center={x=14165536,y=-85634465,z=-934464.3},radius=49050,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=4230,surfaceArea=30233462784,surfaceAverageAltitude=39,surfaceMaxAltitude=450,surfaceMinAltitude=126,systemZone="High",territories=38882,type="Planet",waterLevel=nil,planetarySystemId=0},[4]={name="Talemai",description="Talemai is a planet in the final stages of an Ice Age. It seems likely that the planet was thrown into tumult by a cataclysmic volcanic event which resulted in its current state. The arkship geological survey reports large mountainous regions across the entire planet.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.8776,atmosphericEngineMaxAltitude=9685,biosphere="Barren",classification="Psychroplanet",bodyId=4,GM=14893847582,gravity=0.4641182439650478,fullAtmosphericDensityMaxAltitude=-78,habitability="Average",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=10890,numSatellites=3,positionFromSun=4,center={x=-13234464,y=55765536,z=465536},radius=57500,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=5890,surfaceArea=41547563008,surfaceAverageAltitude=580,surfaceMaxAltitude=610,surfaceMinAltitude=520,systemZone="Average",territories=52922,type="Planet",waterLevel=nil,planetarySystemId=0},[42]={name="Talemai Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=42,GM=264870000,gravity=0.12003058201190042,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=-13058408,y=55781856,z=740177.76},radius=15000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=0,surfaceArea=2827433472,surfaceAverageAltitude=720,surfaceMaxAltitude=850,surfaceMinAltitude=0,systemZone=nil,territories=3632,type="",waterLevel=nil,planetarySystemId=0},[40]={name="Talemai Moon 2",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=40,GM=141264000,gravity=0.09602446196397631,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=-13503090,y=55594325,z=769838.64},radius=12000,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=0,surfaceArea=1809557376,surfaceAverageAltitude=250,surfaceMaxAltitude=450,surfaceMinAltitude=0,systemZone=nil,territories=1922,type="",waterLevel=nil,planetarySystemId=0},[41]={name="Talemai Moon 3",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=41,GM=106830900,gravity=0.08802242599860607,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=-12800515,y=55700259,z=325207.84},radius=11000,safeAreaEdgeAltitude=500000,size="XS",spaceEngineMinAltitude=0,surfaceArea=1520530944,surfaceAverageAltitude=190,surfaceMaxAltitude=400,surfaceMinAltitude=0,systemZone=nil,territories=1922,type="",waterLevel=nil,planetarySystemId=0},[8]={name="Teoma",description="[REDACTED] The arkship geological survey [REDACTED]. This planet should not be here.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.7834,atmosphericEngineMaxAltitude=5580,biosphere="Forest",classification="Mesoplanet",bodyId=8,GM=18477723600,gravity=0.48812434578525177,fullAtmosphericDensityMaxAltitude=15,habitability="High",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=6280,numSatellites=0,positionFromSun=8,center={x=80865538,y=54665536,z=-934463.94},radius=62000,safeAreaEdgeAltitude=500000,size="L",spaceEngineMinAltitude=3420,surfaceArea=48305131520,surfaceAverageAltitude=700,surfaceMaxAltitude=1100,surfaceMinAltitude=-200,systemZone="High",territories=60752,type="Planet",waterLevel=0,planetarySystemId=0},[3]={name="Thades",description="Thades is a scorched desert planet. Perhaps it was once teaming with life but now all that remains is ash and dust. The arkship geological survey reports a rocky mountainous planet bisected by a massive unnatural ravine; something happened to this planet.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.03552,atmosphericEngineMaxAltitude=32180,biosphere="Desert",classification="Thermoplanet",bodyId=3,GM=11776905000,gravity=0.49612641213015557,fullAtmosphericDensityMaxAltitude=150,habitability="Low",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=32800,numSatellites=2,positionFromSun=3,center={x=29165536,y=10865536,z=65536},radius=49000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=21400,surfaceArea=30171856896,surfaceAverageAltitude=13640,surfaceMaxAltitude=13690,surfaceMinAltitude=370,systemZone="Low",territories=38882,type="Planet",waterLevel=nil,planetarySystemId=0},[30]={name="Thades Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=30,GM=211564034,gravity=0.11202853997062348,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=29214402,y=10907080.695,z=433858.2},radius=14000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=0,surfaceArea=2463008768,surfaceAverageAltitude=60,surfaceMaxAltitude=300,surfaceMinAltitude=0,systemZone=nil,territories=3002,type="",waterLevel=nil,planetarySystemId=0},[31]={name="Thades Moon 2",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=31,GM=264870000,gravity=0.12003058201190042,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=29404193,y=10432768,z=19554.131},radius=15000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=0,surfaceArea=2827433472,surfaceAverageAltitude=70,surfaceMaxAltitude=350,surfaceMinAltitude=0,systemZone=nil,territories=3632,type="",waterLevel=nil,planetarySystemId=0}}}end;local function d3()local function d4(d5)return type(d5)=='number'end;local function d6(d5)return type(tonumber(d5))=='number'end;local function d7(d8)return type(d8)=='table'end;local function d9(da)return type(da)=='string'end;local function db(d1)return d7(d1)and d4(d1.x and d1.y and d1.z)end;local function dc(dd)return d7(dd)and d4(dd.latitude and dd.longitude and dd.altitude and dd.bodyId and dd.systemId)end;local de=math.pi/180;local df=180/math.pi;local epsilon=1e-10;local y=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local dg='::pos{'..y..','..y..','..y..','..y..','..y..'}'local utils=require('cpml.utils')local vec3=require('cpml.vec3')local function dh(d5)local cK=string.gsub(string.reverse(e('%.4f',d5)),'^0*%.?','')return cK==''and'0'or string.reverse(cK)end;local function di(dj)if db(dj)then return e('{x=%.3f,y=%.3f,z=%.3f}',dj.x,dj.y,dj.z)end;if d7(dj)and not getmetatable(dj)then local dk={}local dl=next(dj)if type(dl)=='nil'or dl==1 then dk=dj else for d0,d1 in pairs(dj)do local ci=di(d1)if type(d0)=='number'then table.insert(dk,e('[%s]=%s',d0,ci))else table.insert(dk,e('%s=%s',d0,ci))end end end;return e('{%s}',table.concat(dk,','))end;if d9(dj)then return e("'%s'",dj:gsub("'",[[\']]))end;return tostring(dj)end;local dm={}dm.__index=dm;dm.__tostring=function(dj,dn)local dp={}for d0 in pairs(dj)do table.insert(dp,d0)end;table.sort(dp)local dk={}for _,d0 in ipairs(dp)do local ci=di(dj[d0])if type(d0)=='number'then table.insert(dk,e('[%s]=%s',d0,ci))else table.insert(dk,e('%s=%s',d0,ci))end end;if dn then return e('%s%s',dn,table.concat(dk,',\n'..dn))end;return e('{%s}',table.concat(dk,','))end;dm.__eq=function(dq,dr)return dq.planetarySystemId==dr.planetarySystemId and dq.bodyId==dr.bodyId and cl(dq.radius,dr.radius)and cl(dq.center.x,dr.center.x)and cl(dq.center.y,dr.center.y)and cl(dq.center.z,dr.center.z)and cl(dq.GM,dr.GM)end;local function ds(dt,du,dv,dw,dx)assert(d6(dt),'Argument 1 (planetarySystemId) must be a number:'..type(dt))assert(d6(du),'Argument 2 (bodyId) must be a number:'..type(du))assert(d6(dv),'Argument 3 (radius) must be a number:'..type(dv))assert(d7(dw),'Argument 4 (worldCoordinates) must be a array or vec3.'..type(dw))assert(d6(dx),'Argument 5 (GM) must be a number:'..type(dx))return setmetatable({planetarySystemId=tonumber(dt),bodyId=tonumber(du),radius=tonumber(dv),center=vec3(dw),GM=tonumber(dx)},dm)end;local MapPosition={}MapPosition.__index=MapPosition;MapPosition.__tostring=function(dy)return e('::pos{%d,%d,%s,%s,%s}',dy.systemId,dy.bodyId,dh(dy.latitude*df),dh(dy.longitude*df),dh(dy.altitude))end;MapPosition.__eq=function(dq,dr)return dq.bodyId==dr.bodyId and dq.systemId==dr.systemId and cl(dq.latitude,dr.latitude)and cl(dq.altitude,dr.altitude)and(cl(dq.longitude,dr.longitude)or cl(dq.latitude,math.pi/2)or cl(dq.latitude,-math.pi/2))end;local function dz(dA,du,dB,dC,dD)local dt=dA;if d9(dA)and not dC and not dD and not du and not dB then dt,du,dB,dC,dD=n(dA,dg)assert(dt,'Argument 1 (position string) is malformed.')else assert(d6(dt),'Argument 1 (systemId) must be a number:'..type(dt))assert(d6(du),'Argument 2 (bodyId) must be a number:'..type(du))assert(d6(dB),'Argument 3 (latitude) must be in degrees:'..type(dB))assert(d6(dC),'Argument 4 (longitude) must be in degrees:'..type(dC))assert(d6(dD),'Argument 5 (altitude) must be in meters:'..type(dD))end;dt=tonumber(dt)du=tonumber(du)dB=tonumber(dB)dC=tonumber(dC)dD=tonumber(dD)if du==0 then return setmetatable({latitude=dB,longitude=dC,altitude=dD,bodyId=du,systemId=dt},MapPosition)end;return setmetatable({latitude=de*q(dB,-90,90),longitude=de*(dC%360),altitude=dD,bodyId=du,systemId=dt},MapPosition)end;local dE={}dE.__index=dE;dE.__tostring=function(dj,dn)local dF=dn and dn..'  'local dG={}local dp={}for d0 in pairs(dj)do table.insert(dp,d0)end;table.sort(dp)for _,dH in ipairs(dp)do bdy=dj[dH]local dI=dm.__tostring(bdy,dF)if dn then table.insert(dG,e('[%s]={\n%s\n%s}',dH,dI,dn))else table.insert(dG,e('  [%s]=%s',dH,dI))end end;if dn then return e('\n%s%s%s',dn,table.concat(dG,',\n'..dn),dn)end;return e('{\n%s\n}',table.concat(dG,',\n'))end;local function dJ(dK)local b0={}local pid;for _,d1 in pairs(dK)do local dL=d1.planetarySystemId;if type(dL)~='number'then error('Invalid planetary system ID: '..tostring(dL))elseif pid and dL~=pid then error('Mistringmatch planetary system IDs: '..dL..' and '..pid)end;local dM=d1.bodyId;if type(dM)~='number'then error('Invalid body ID: '..tostring(dM))elseif b0[dM]then error('Duplicate body ID: '..tostring(dM))end;setmetatable(d1.center,getmetatable(vec3.unit_x))b0[dM]=setmetatable(d1,dm)pid=dL end;return setmetatable(b0,dE)end;b4={}local function dN(dK)return setmetatable({galaxyAtlas=dK or{}},b4)end;b4.__index=function(d8,i)if type(i)=='number'then local system=d8.galaxyAtlas[i]return dJ(system)end;return rawget(b4,i)end;b4.__pairs=function(dj)return function(d8,d0)local dO,nv=next(d8,d0)return dO,nv and dJ(nv)end,dj.galaxyAtlas,nil end;b4.__tostring=function(dj)local dP={}for _,dQ in pairs(dj or{})do local dR=dQ:getPlanetarySystemId()local dS=dE.__tostring(dQ,'    ')table.insert(dP,e('  [%s]={%s\n  }',dR,dS))end;return e('{\n%s\n}\n',table.concat(dP,',\n'))end;b4.BodyParameters=ds;b4.MapPosition=dz;b4.PlanetarySystem=dJ;function b4.createBodyParameters(dT,du,dU,dV,dW,dX,dY)assert(d6(dT),'Argument 1 (planetarySystemId) must be a number:'..type(dT))assert(d6(du),'Argument 2 (bodyId) must be a number:'..type(du))assert(d6(dU),'Argument 3 (surfaceArea) must be a number:'..type(dU))assert(d7(dV),'Argument 4 (aPosition) must be an array or vec3:'..type(dV))assert(d7(dW),'Argument 5 (verticalAtPosition) must be an array or vec3:'..type(dW))assert(d6(dX),'Argument 6 (altitude) must be in meters:'..type(dX))assert(d6(dY),'Argument 7 (gravityAtPosition) must be number:'..type(dY))local dv=math.sqrt(dU/4/math.pi)local ag=dv+dX;local dZ=vec3(dV)+ag*vec3(dW)local dx=dY*ag*ag;return ds(dT,du,dv,dZ,dx)end;b4.isMapPosition=dc;function b4:getPlanetarySystem(dA)if i==nil then i=0 end;if nv==nil then nv=0 end;local dT=dA;if dc(dA)then dT=dA.systemId end;if type(dT)=='number'then local system=self.galaxyAtlas[i]if system then if getmetatable(nv)~=dE then system=dJ(system)end;return system end end end;function dE:castIntersections(d_,cJ,e0,e1)local e0=e0 or function(e2)return 1.05*e2.radius end;local e3={}if e1 then for _,i in ipairs(e1)do e3[i]=self[i]end else e1={}for d0,e2 in pairs(self)do table.insert(e1,d0)e3[d0]=e2 end end;local function e4(e5,e6)local e7=e3[e5].center-d_;local e8=e3[e6].center-d_;return e7:len()<e8:len()end;table.sort(e1,e4)local e9=cJ:normalize()for i,dL in ipairs(e1)do local e2=e3[dL]local ea=e2.center-d_;local dv=e0(e2)local eb=ea:dot(e9)local ec=eb^2-(ea:len2()-dv^2)if ec>=0 then local ed=math.sqrt(ec)local ee=eb+ed;local ef=eb-ed;if ef>0 then return e2,ee,ef elseif ee>0 then return e2,ee,nil end end end;return nil,nil,nil end;function dE:closestBody(eg)assert(type(eg)=='table','Invalid coordinates.')local eh,e2;local ei=vec3(eg)for _,ej in pairs(self)do local ek=(ej.center-ei):len2()if(not e2 or ek<eh)and ej.name~="Space"then e2=ej;eh=ek end end;return e2 end;function dE:convertToBodyIdAndWorldCoordinates(dA)local el=dA;if d9(dA)then el=dz(dA)end;if el.bodyId==0 then return 0,vec3(el.latitude,el.longitude,el.altitude)end;local ej=self:getBodyParameters(el)if ej then return el.bodyId,ej:convertToWorldCoordinates(el)end end;function dE:getBodyParameters(dA)local du=dA;if dc(dA)then du=dA.bodyId end;assert(d6(du),'Argument 1 (bodyId) must be a number:'..type(du))return self[du]end;function dE:getPlanetarySystemId()local _,d1=next(self)return d1 and d1.planetarySystemId end;function dm:convertToMapPosition(dw)assert(d7(dw),'Argument 1 (worldCoordinates) must be an array or vec3:'..type(dw))local em=vec3(dw)if self.bodyId==0 then return setmetatable({latitude=em.x,longitude=em.y,altitude=em.z,bodyId=0,systemId=self.planetarySystemId},MapPosition)end;local en=em-self.center;local ag=en:len()local dD=ag-self.radius;local dB=0;local dC=0;if not cl(ag,0)then local eo=m(en.y,en.x)dC=eo>=0 and eo or 2*math.pi+eo;dB=math.pi/2-math.acos(en.z/ag)end;return setmetatable({latitude=dB,longitude=dC,altitude=dD,bodyId=self.bodyId,systemId=self.planetarySystemId},MapPosition)end;function dm:convertToWorldCoordinates(dA)local el=d9(dA)and dz(dA)or dA;if el.bodyId==0 then return vec3(el.latitude,el.longitude,el.altitude)end;assert(dc(el),'Argument 1 (mapPosition) is not an instance of "MapPosition".')assert(el.systemId==self.planetarySystemId,'Argument 1 (mapPosition) has a different planetary system ID.')assert(el.bodyId==self.bodyId,'Argument 1 (mapPosition) has a different planetary body ID.')local ep=math.cos(el.latitude)return self.center+(self.radius+el.altitude)*vec3(ep*math.cos(el.longitude),ep*math.sin(el.longitude),math.sin(el.latitude))end;function dm:getAltitude(dw)return(vec3(dw)-self.center):len()-self.radius end;function dm:getDistance(dw)return(vec3(dw)-self.center):len()end;function dm:getGravity(dw)local eq=self.center-vec3(dw)local er=eq:len2()return self.GM/er*eq/math.sqrt(er)end;return setmetatable(b4,{__call=function(_,...)return dN(...)end})end;local function es()local b6={}local et=30000000/3600;local eu=et*et;local ev=100;local function ew(d1)return 1/math.sqrt(1-d1*d1/eu)end;function b6.computeAccelerationTime(ex,ey,ez)local eA=et*math.asin(ex/et)return(et*math.asin(ez/et)-eA)/ey end;function b6.computeDistanceAndTime(ex,ez,eB,eC,eD,eE)eD=eD or 0;eE=eE or 0;local eF=ex<=ez;local eG=eC*(eF and 1 or-1)/eB;local eH=-eE/eB;local eI=eG+eH;if eF and eI<=0 or not eF and eI>=0 then return-1,-1 end;local eJ,eK=0,0;if eG~=0 and eD>0 then local eA=math.asin(ex/et)local eL=math.pi*(eG/2+eH)local eM=eG*eD;local eN=et*math.pi;local d1=function(d8)local eO=(eL*d8-eM*math.sin(math.pi*d8/2/eD)+eN*eA)/eN;local eP=math.tan(eO)return et*eP/math.sqrt(eP*eP+1)end;local eQ=eF and function(da)return da>=ez end or function(da)return da<=ez end;eK=2*eD;if eQ(d1(eK))then local eR=0;while c(eK-eR)>0.5 do local d8=(eK+eR)/2;if eQ(d1(d8))then eK=d8 else eR=d8 end end end;local eS=ex;local eT=eK/ev;for eU=1,ev do local eV=d1(eU*eT)eJ=eJ+(eV+eS)*eT/2;eS=eV end;if eK<2*eD then return eJ,eK end;ex=eS end;local eA=et*math.asin(ex/et)local bB=(et*math.asin(ez/et)-eA)/eI;local eW=eu*math.cos(eA/et)/eI;local ag=eW-eu*math.cos((eI*bB+eA)/et)/eI;return ag+eJ,bB+eK end;function b6.computeTravelTime(ex,ey,ag)if ag==0 then return 0 end;if ey>0 then local eA=et*math.asin(ex/et)local eW=eu*math.cos(eA/et)/ey;return(et*math.acos(ey*(eW-ag)/eu)-eA)/ey end;if ex==0 then return-1 end;assert(ex>0,'Acceleration and initial speed are both zero.')return ag/ex end;function b6.lorentz(d1)return ew(d1)end;return b6 end;local function eX()local vec3=require('cpml.vec3')local d3=d3()local function d9(da)return type(da)=='string'end;local function d7(d8)return type(d8)=='table'end;Kepler={}Kepler.__index=Kepler;function Kepler:escapeAndOrbitalSpeed(dD)assert(self.body)local ag=dD+self.body.radius;if not cl(ag,0)then local orbit=math.sqrt(self.body.GM/ag)return math.sqrt(2)*orbit,orbit end;return nil,nil end;function Kepler:orbitalParameters(dA,eY)assert(self.body)assert(d7(dA)or d9(dA))assert(d7(eY))local eZ=(d9(dA)or d3.isMapPosition(dA))and self.body:convertToWorldCoordinates(dA)or vec3(dA)local d1=vec3(eY)local e_=eZ-self.body.center;local e8=d1:len2()local f0=e_:len()local f1=self.body.GM;local f2=((e8-f1/f0)*e_-e_:dot(d1)*d1)/f1;local cm=f1/(2*f1/f0-e8)local f3=f2:len()local e9=f2:normalize()local f4=cm*(1-f3)local f5=cm*(1+f3)local f6=f4*e9+self.body.center;local f7=f3<=1 and-f5*e9+self.body.center or nil;local f8=math.sqrt(cm*f1*(1-f3*f3))local f9=f7 and 2*math.pi*math.sqrt(cm^3/f1)local fa=math.acos(f2:dot(e_)/(f3*f0))if e_:dot(d1)<0 then fa=-(fa-2*math.pi)end;local fb=math.acos((math.cos(fa)+f3)/(1+f3*math.cos(fa)))local fc=fb;if fc<0 then fc=fc+2*math.pi end;local fd=fc-f3*math.sin(fc)local fe=0;local ff=0;local fg=0;if f9~=nil then fe=fd/(2*math.pi/f9)ff=f9-fe;fg=ff+f9/2;if fa-math.pi>0 then ff=fe;fg=ff+f9/2 end;if fg>f9 then fg=fg-f9 end end;return{periapsis={position=f6,speed=f8/f4,circularOrbitSpeed=math.sqrt(f1/f4),altitude=f4-self.body.radius},apoapsis=f7 and{position=f7,speed=f8/f5,circularOrbitSpeed=math.sqrt(f1/f5),altitude=f5-self.body.radius},currentVelocity=d1,currentPosition=eZ,eccentricity=f3,period=f9,eccentricAnomaly=fb,meanAnomaly=fd,timeToPeriapsis=ff,timeToApoapsis=fg}end;local function fh(fi)local ej=d3.BodyParameters(fi.planetarySystemId,fi.bodyId,fi.radius,fi.center,fi.GM)return setmetatable({body=ej},Kepler)end;return setmetatable(Kepler,{__call=function(_,...)return fh(...)end})end;local function fj()local fk=0;local function fl(fm)local dv=500000;local fn,fo,fp=math.huge;local fq=false;local fr=vec3({13771471,7435803,-128971})local fs=18000000;fn=vec3(fm):dist(fr)if fn<fs then return true,c(fn-fs),"Safe Zone",0 end;fo=vec3(fm):dist(vec3(planet.center))if fo<dv then fq=true end;if c(fo-dv)<c(fn-fs)then return fq,c(fo-dv),planet.name,planet.bodyId else return fq,c(fn-fs),"Safe Zone",0 end end;local function ft(d1)if aI==1920 then return d1 else return x(aI*d1/1920,0)end end;local function fu(d1)if aJ==1080 then return d1 else return x(aJ*d1/1080,0)end end;local function fv()return w()==0 and userControlScheme~="keyboard"and l()==0 end;local function fw()local fx="TRAVEL"if not bO then fx="CRUISE"end;if Autopilot then fx="AUTOPILOT"end;return fx end;local function fy(fz,aZ,cc,fA,fB,fC,fD,fE)local fF=1;local fG=2;local fH=3;local fI=4;local fJ=5;local fK=6;local fL=""local fM=0;local fN=fuelY;local fO=fuelY+5;if not BarFuelDisplay then fO=fO+5 end;if l()==1 and not RemoteHud then fN=fN-50;fO=fO-50 end;if fB=="ATMO"then fL="atmofueltank"elseif fB=="SPACE"then fL="spacefueltank"else fL="rocketfueltank"end;fM=_G[fL.."_size"]if#fC>0 then for i=1,#fC do local fP=string.sub(fC[i][fG],1,12)local fQ=0;for fR=1,fM do if fC[i][fG]==f(unit[fL.."_"..fR].getData()).name then fQ=fR;break end end;if aZ or fD[i]==nil or fE[i]==nil then local fS=0;local fT=0;local fU=0;local fV=0;local fW=p()if fQ~=0 then fE[i]=f(unit[fL.."_"..fQ].getData()).percentage;fD[i]=f(unit[fL.."_"..fQ].getData()).timeLeft;if fD[i]=="n/a"then fD[i]=0 end else fU=k(fC[i][fF])-fC[i][fI]fS=fC[i][fH]fE[i]=d(0.5+fU*100/fS)fT=fC[i][fJ]fV=fC[i][fK]if fT<=fU then fD[i]=0 else fD[i]=d(0.5+fU/((fT-fU)/(fW-fV)))end;fC[i][fJ]=fU;fC[i][fK]=fW end end;if fP==fA then fP=e("%s %d",fB,i)end;if fQ==0 then fP=fP.." *"end;local fX;if fD[i]==0 then fX=""else fX=cS(fD[i])end;if fE[i]~=nil then local fY=d(fE[i]*2.55)local fZ=e("rgb(%d,%d,%d)",255-fY,fY,0)local cf=""if fX~=""and fD[i]<120 or fE[i]<5 then if aZ then cf=[[class="red"]]end end;if BarFuelDisplay then table.insert(fz,e([[
                                            <g class="pdim">                        
                                            <rect fill=grey class="bar" x="%d" y="%d" width="100" height="13"></rect></g>
                                            <g class="bar txtstart">
                                            <rect fill=%s width="%d" height="13" x="%d" y="%d"></rect>
                                            <text fill=black x="%d" y="%d">%s%% %s</text>
                                            </g>]],cc,fO,fZ,fE[i],cc,fO,cc+2,fO+10,fE[i],fX))fz[#fz+1]=cb(cc,fN,fP,cf.."txtstart pdim txtfuel")fN=fN-30;fO=fO-30 else fz[#fz+1]=cb(cc,fN,fP,cf.." pdim txtfuel")fz[#fz+1]=cb(cc,fO,e("%d%% %s",fE[i],fX),"pdim txtfuel","fill:"..fZ)fN=fN+30;fO=fO+30 end end end end end;local function f_(fz,dD)if dD<200000 and not ap or dD and ap then local g0=0;if c(bI)>1 then g0=45*math.log(c(bI),10)if bI<0 then g0=-g0 end end;fz[#fz+1]=e([[
                                <g class="pbright txt txtvspd" transform="translate(%d %d) scale(0.6)">
                                        <text x="31" y="-41">1000</text>
                                        <text x="-10" y="-65">100</text>
                                        <text x="-54" y="-45">10</text>
                                        <text x="-73" y="3">O</text>
                                        <text x="-56" y="52">-10</text>
                                        <text x="-14" y="72">-100</text>
                                        <text x="29" y="50">-1000</text>
                                        <text x="85" y="0" class="txtvspdval txtend">%d m/s</text>
                                    <g class="linethick">
                                        <path d="m-41 75 2.5-4.4m17 12 1.2-4.9m20 7.5v-10m-75-34 4.4-2.5m-12-17 4.9-1.2m17 40 7-7m-32-53h10m34-75 2.5 4.4m17-12 1.2 4.9m20-7.5v10m-75 34 4.4 2.5m-12 17 4.9 1.2m17-40 7 7m-32 53h10m116 75-2.5-4.4m-17 12-1.2-4.9m40-17-7-7m-12-128-2.5 4.4m-17-12-1.2 4.9m40 17-7 7"/>
                                        <circle r="90" />
                                    </g>
                                    <path transform="rotate(%d)" d="m-0.094-7c-22 2.2-45 4.8-67 7 23 1.7 45 5.6 67 7 4.4-0.068 7.8-4.9 6.3-9.1-0.86-2.9-3.7-5-6.8-4.9z" />
                                </g>
                            ]],vSpdMeterX,vSpdMeterY,d(bI),d(g0))end;return fz end;local function g1(g2)local g3=-bH;g2=g2-g2:project_on(g3)local g4=vec3(0,0,1)g4=g4-g4:project_on(g3)local g5=g4:cross(g3)local g0=g4:angle_between(g2)*constants.rad2deg;if g2:dot(g5)<0 then g0=360-g0 end;return g0 end;local function g6(fz,centerX,centerY,g7,g8,cx)local g9=circleRad;local ga=20;local gb=d(g7)if cx then for i=-45,45,5 do local gc=i;fz[#fz+1]=e([[<g transform="rotate(%f,%d,%d)">]],gc,centerX,centerY)len=5;if i%15==0 then len=15 elseif i%10==0 then len=10 end;fz[#fz+1]=e([[<line x1=%d y1=%d x2=%d y2="%d"/></g>]],centerX,centerY+g9+ga-len,centerX,centerY+g9+ga)end;fz[#fz+1]=cb(centerX,centerY+g9+ga-35,g8,"pdim txt txtmid")fz[#fz+1]=cb(centerX,centerY+g9+ga-25,gb.." deg","pdim txt txtmid")fz[#fz+1]=e([[<g transform="rotate(%f,%d,%d)">]],-g7,centerX,centerY)fz[#fz+1]=e([[<<polygon points="%d,%d %d,%d %d,%d"/>]],centerX-5,centerY+g9+ga-20,centerX+5,centerY+g9+ga-20,centerX,centerY+g9+ga-15)fz[#fz+1]="</g>"end;local gd=gb;if cx then gd=g1(bD)end;local ge=20;local gf=d(gd)local gg=0;local gh=centerY+g9+ga+20;local gi=centerX;if g8~="YAW"then gh=fu(130)gi=ft(960)end;local gj=[[<path class="txttick line" d="]]local gk=d(gf-(ge+10)-gf%5+0.5)for i=gk+60,gk,-5 do local cc=gi-(-i*5+gd*5)if i%10==0 then gg=10;local y=i;if y==360 then y=0 elseif y>360 then y=y-360 elseif y<0 then y=y+360 end;fz[#fz+1]=cb(cc+5,gh-12,y)elseif i%5==0 then gg=5 end;if gg==10 then gj=e([[%s M %f %f v %d]],gj,cc,gh-5,gg)else gj=e([[%s M %f %f v %d]],gj,cc,gh-2.5,gg)end end;fz[#fz+1]=gj..[["/>]]fz[#fz+1]=e([[<<polygon points="%d,%d %d,%d %d,%d"/>]],gi-5,gh+10,gi+5,gh+10,gi,gh+5)if cx then g8="HDG"end;fz[#fz+1]=cb(gi,gh+25,gf.."deg","pdim txt txtmid","")fz[#fz+1]=cb(gi,gh+35,g8,"pdim txt txtmid","")end;local function gl(fz,gm,g7,centerX,centerY,cx,gn,eV)local g9=circleRad;local go=d(g9*3/5)if g9>0 then local gp=d(gm)local len=0;local gj=e([[<path transform="rotate(%f,%d,%d)" class="dim line" d="]],-1*g7,centerX,centerY)if not ap then gj=e([[<path transform="rotate(0,%d,%d)" class="dim line" d="]],centerX,centerY)end;fz[#fz+1]=e([[<clipPath id="cut"><circle r="%f" cx="%d" cy="%d"/></clipPath>]],g9-1,centerX,centerY)fz[#fz+1]=[[<g class="dim txttick" clip-path="url(#cut)">]]for i=d(gp-30-gp%5+0.5),d(gp+30+gp%5+0.5),5 do if i%10==0 then len=30 elseif i%5==0 then len=20 end;local cd=centerY+-i*5+gm*5;if len==30 then gj=e([[%s M %d %f h %d]],gj,centerX-go-len,cd,len)if ap then fz[#fz+1]=e([[<g path transform="rotate(%f,%d,%d)" class="pdim txt txtmid"><text x="%d" y="%f">%d</text></g>]],-1*g7,centerX,centerY,centerX-go+10,cd,i)fz[#fz+1]=e([[<g path transform="rotate(%f,%d,%d)" class="pdim txt txtmid"><text x="%d" y="%f">%d</text></g>]],-1*g7,centerX,centerY,centerX+go-10,cd,i)if i==0 or i==180 or i==-180 then fz[#fz+1]=e([[<path transform="rotate(%f,%d,%d)" d="m %d,%f %d,0" stroke-width="1" style="fill:none;stroke:#F5B800;" />]],-1*g7,centerX,centerY,centerX-go+20,cd,go*2-40)end else fz[#fz+1]=cb(centerX-go+10,cd,i,"pdim txt txtmid")fz[#fz+1]=cb(centerX+go-10,cd,i,"pdim txt txtmid")end;gj=e([[%s M %d %f h %d]],gj,centerX+go,cd,len)else gj=e([[%s M %d %f h %d]],gj,centerX-go-len,cd,len)gj=e([[%s M %d %f h %d]],gj,centerX+go,cd,len)end end;fz[#fz+1]=gj..[["/>]]local gq="PITCH"if not cx then gq="REL PITCH"end;if gm>90 and not ap then gm=90-(gm-90)elseif gm<-90 and not ap then gm=-90-(gm+90)end;if g9>200 then if ap then if eV>N then fz[#fz+1]=cb(centerX,centerY-15,"Yaw","pdim txt txtmid")fz[#fz+1]=cb(centerX,centerY+20,gn,"pdim txt txtmid")end;fz[#fz+1]=e([[<g transform="rotate(%f,%d,%d)">]],-g7,centerX,centerY)else fz[#fz+1]=e([[<g transform="rotate(0,%d,%d)">]],centerX,centerY)end;fz[#fz+1]=e([[<<polygon points="%d,%d %d,%d %d,%d"/> class="pdim txtend"><text x="%d" y="%f">%d</text>]],centerX-go+25,centerY-5,centerX-go+20,centerY,centerX-go+25,centerY+5,centerX-go+50,centerY+4,gp)fz[#fz+1]=e([[<<polygon points="%d,%d %d,%d %d,%d"/> class="pdim txtend"><text x="%d" y="%f">%d</text>]],centerX+go-25,centerY-5,centerX+go-20,centerY,centerX+go-25,centerY+5,centerX+go-30,centerY+4,gp)fz[#fz+1]="</g>"end;local gr=d(g9/3)fz[#fz+1]=e([[<path d="m %d,%d %d,0" stroke-width="2" style="fill:none;stroke:#F5B800;" />]],centerX-gr,centerY,g9-gr)if not ap and cx then fz[#fz+1]=e([[<path transform="rotate(%f,%d,%d)" d="m %d,%f %d,0" stroke-width="1" style="fill:none;stroke:#F5B800;" />]],-1*g7,centerX,centerY,centerX-go+10,centerY,go*2-20)end;fz[#fz+1]="</g>"if g9<200 then if ap and eV>N then fz[#fz+1]=cb(centerX,centerY-g9,gq,"pdim txt txtmid")fz[#fz+1]=cb(centerX,centerY-g9+10,gp,"pdim txt txtmid")fz[#fz+1]=cb(centerX,centerY-15,"Yaw","pdim txt txtmid")fz[#fz+1]=cb(centerX,centerY+20,gn,"pdim txt txtmid")else fz[#fz+1]=cb(centerX,centerY-g9,gq,"pdim txt txtmid")fz[#fz+1]=cb(centerX,centerY-g9+15,gp,"pdim txt txtmid")end end end end;local function gs(fz,dD,cx)local gt=altMeterX;local gu=altMeterY;local gv=78;local gw=19;local gx=am;if am~=-1 then fz[#fz+1]=cb(gt+gv,gu+gw+20,e("AGL: %.1fm",am),"pdim altsm txtend")end;if cx and(dD<200000 and not ap or dD and ap)then table.insert(fz,e([[
                                <g class="pdim">                        
                                    <rect class="line" x="%d" y="%d" width="%d" height="%d"/> 
                                    <clipPath id="alt"><rect class="line" x="%d" y="%d" width="%d" height="%d"/></clipPath>
                                    <g clip-path="url(#alt)">]],gt-1,gu-4,gv+2,gw+6,gt+1,gu-1,gv-4,gw))local cA=0;local gy=1;local gz=0;local gA=dD<0;local gB=9;if gA then gB=0 end;local dD=c(dD)while cA<6 do local gC=11;local gD=16;local gE=9;local gF=14;local cf="altsm"if cA>2 then gD=gD+3;gC=gC+2;gF=gF+2;gE=gE-6;cf="altbig"end;if gA then cf=cf.." red"end;local gG=dD/gy%10;local gH=d(gG)local gI=d((gH+1)%10)local gJ=gz;if cA==0 then gJ=gG-gH;if gA then gJ=1-gJ end end;if gA and(cA==0 or gz~=0)then local gK=gI;gI=gH;gH=gK end;local gL=gD*(gJ-1)local gM=gL+gD;local cc=gt+gE+(6-cA)*gC;local cd=gu+gF;fz[#fz+1]=cb(cc,cd+gL,gI,cf)fz[#fz+1]=cb(cc,cd+gM,gH,cf)cA=cA+1;gy=gy*10;if gH==gB then gz=gJ else gz=0 end end;table.insert(fz,[[</g></g>]])end end;local function gN(eY)eY=vec3(eY)local gO=-math.deg(m(eY.y,eY.z))+180;gO=gO-90;if gO<0 then gO=360+gO end;if gO>180 then gO=-180+gO-180 end;return-gO end;local function gP(eY)eY=vec3(eY)local gd=math.deg(m(eY.y,eY.x))-90;if gd<-180 then gd=360+gd end;return gd end;local function gQ(fz,eY,eV,centerX,centerY)if eV>5 and not ap or eV>N then local g9=circleRad;local gR=20;local gS=20;local gT=vec3(eY)local gU=gN(gT)local gV=gP(gT)local gW=14;local gX=gW/2;local gY=-gV/gS*g9;local gZ=gU/gR*g9;local cc=centerX+gY;local cd=centerY+gZ;local ag=math.sqrt(gY^2+gZ^2)local g_=[[<circle
                            cx="]]..cc..[["
                            cy="]]..cd..[["
                            r="]]..gX/gW..[["
                            style="fill:#d7fe00;stroke:none;fill-opacity:1"/>
                        <circle
                            cx="]]..cc..[["
                            cy="]]..cd..[["
                            r="]]..gX..[["
                            style="stroke:#d7fe00;stroke-opacity:1;fill:none" />
                        <path
                            d="M ]]..cc-gW..[[,]]..cd..[[ h ]]..gX..[["
                            style="stroke:#d7fe00;stroke-opacity:1" />
                        <path
                            d="M ]]..cc+gX..[[,]]..cd..[[ h ]]..gX..[["
                            style="stroke:#d7fe00;stroke-opacity:1" />
                        <path
                            d="M ]]..cc..[[,]]..cd-gW..[[ v ]]..gX..[["
                            style="stroke:#d7fe00;stroke-opacity:1" />]]if ag<g9 then fz[#fz+1]=g_ else local g0=m(gZ,gY)local h0=4;local h1=centerX+g9*math.cos(g0)local h2=centerY+g9*math.sin(g0)fz[#fz+1]=e('<g transform="rotate(%f %f %f)"><rect x="%f" y="%f" width="%f" height="%f" stroke="#d7fe00" fill="#d7fe00" /><path d="M %f %f l %f %f l %f %f z" fill="#d7fe00" stroke="#d7fe00"></g>',g0*180/math.pi,h1,h2,h1-h0,h2-h0/2,h0*2,h0,h1+h0,h2-h0,h0,h0,-h0,h0)end;if not ap then gU=gN(-gT)gV=gP(-gT)gY=-gV/gS*g9;gZ=gU/gR*g9;cc=centerX+gY;cd=centerY+gZ;ag=math.sqrt(gY^2+gZ^2)if ag<g9 then local h3=[[<circle
                                    cx="]]..cc..[["
                                    cy="]]..cd..[["
                                    r="]]..gX..[["
                                    style="stroke:#d7fe00;stroke-opacity:1;fill:none" />
                                <path
                                    d="M ]]..cc..[[,]]..cd-gW..[[ v ]]..gX..[["
                                    style="stroke:#d7fe00;stroke-opacity:1" id="l"/>
                                <use
                                    xlink:href="#l"
                                    transform="rotate(120,]]..cc..[[,]]..cd..[[)" />
                                <use
                                    xlink:href="#l"
                                    transform="rotate(-120,]]..cc..[[,]]..cd..[[)" />
                                <path
                                    d="M ]]..cc-gX..[[,]]..cd..[[ h ]]..gW..[["
                                    style="stroke-width:0.5;stroke:#d7fe00;stroke-opacity:1"
                                    transform="rotate(-45,]]..cc..[[,]]..cd..[[)" id="c"/>
                                <use
                                    xlink:href="#c"
                                    transform="rotate(-90,]]..cc..[[,]]..cd..[[)"/>]]fz[#fz+1]=h3 end end end end;local function h4(fz,fx,h5,h6)h5=d(h5+0.5)local fN=throtPosY+10;local fO=throtPosY+20;if l()==1 and not RemoteHud then fN=55;fO=65 end;local h7="CRUISE"local unit="km/h"local ci=h6;if fx=="TRAVEL"or fx=="AUTOPILOT"then h7="THROT"unit="%"ci=h5;local h8="dim"if h5<0 then h8="red"end;fz[#fz+1]=e([[<g class="%s">
                                <path class="linethick" d="M %d %d L %d %d L %d %d L %d %d"/>
                                <g transform="translate(0 %.0f)">
                                    <polygon points="%d,%d %d,%d %d,%d"/>
                                </g>]],h8,throtPosX-7,throtPosY-50,throtPosX,throtPosY-50,throtPosX,throtPosY+50,throtPosX-7,throtPosY+50,1-c(h5),throtPosX-10,throtPosY+50,throtPosX-15,throtPosY+53,throtPosX-15,throtPosY+47)end;fz[#fz+1]=cb(throtPosX+10,fN,h7,"pbright txtstart")fz[#fz+1]=cb(throtPosX+10,fO,e("%.0f %s",ci,unit),"pbright txtstart")if ap and AtmoSpeedAssist and bO and H then h5=d(I*100+0.5)local h8="red"if h5<0 then h8="red"end;fz[#fz+1]=e([[<g class="%s">
                                <g transform="translate(0 %d)">
                                    <polygon points="%d,%d %d,%d %d,%d"/>
                                </g></g>]],h8,1-c(h5),throtPosX-10,throtPosY+50,throtPosX-15,throtPosY+53,throtPosX-15,throtPosY+47)fz[#fz+1]=cb(throtPosX+10,fN+40,"LIMIT","pbright txtstart")fz[#fz+1]=cb(throtPosX+10,fO+40,h5 .."%","pbright txtstart")end;if ap and AtmoSpeedAssist or Reentry then fz[#fz+1]=cb(throtPosX+10,fN-40,"LIMIT: "..bl.." km/h","dim txtstart")elseif not ap and Autopilot then fz[#fz+1]=cb(throtPosX+10,fN-40,"LIMIT: "..d(MaxGameVelocity*3.6+0.5).." km/h","dim txtstart")end end;local function h9(fz,ha)local hb=throtPosY-10;local hc=throtPosX+10;fz[#fz+1]=cb(0,0,"","pdim txt txtend")if l()==1 and not RemoteHud then hb=75 end;fz[#fz+1]=cb(hc,hb,d(ha).." km/h","pbright txtbig txtstart")end;local function hd(fz)fz[#fz+1]=cb(ft(1900),fu(1070),e("ARCH Hud Version: %.3f",VERSION_NUMBER),"hudver")fz[#fz+1]=[[<g class="warnings">]]if unit.isMouseControlActivated()==1 then fz[#fz+1]=cb(ft(960),fu(550),"Warning: Invalid Control Scheme Detected","warnings")fz[#fz+1]=cb(ft(960),fu(600),"Keyboard Scheme must be selected","warnings")fz[#fz+1]=cb(ft(960),fu(650),"Set your preferred scheme in Lua Parameters instead","warnings")end;local he=ft(960)local hf=fu(860)local hg=fu(880)local hh=fu(900)local hi=fu(960)local hj=fu(200)local hk=fu(250)local hl=fu(960)if l()==1 and not RemoteHud then hf=fu(135)hg=fu(155)hh=fu(175)hj=fu(115)hk=fu(95)end;if BrakeIsOn then fz[#fz+1]=cb(he,hf,"Brake Engaged","warnings")elseif G>0 then fz[#fz+1]=cb(he,hf,"Auto-Brake Engaged","warnings","opacity:"..G)end;if ap and bg and am==-1 then if not Autopilot and not VectorToTarget and not BrakeLanding and not bM and not VertTakeOff and not AutoTakeoff then fz[#fz+1]=cb(he,hj+50,"** STALL WARNING **","warnings")bZ("StallWarning.mp3","SW",1)end end;if aw then fz[#fz+1]=cb(he,hl,"Gyro Enabled","warnings")end;if GearExtended then if P then fz[#fz+1]=cb(he,hg,"Gear Extended","warn")else fz[#fz+1]=cb(he,hg,"Landed (G: Takeoff)","warnings")end;local hm=co(a:getTargetGroundAltitude())fz[#fz+1]=cb(he,hh,"Hover Height: "..hm,"warn")end;if a4 then fz[#fz+1]=cb(he,hi+20,"ROCKET BOOST ENABLED","warn")end;if antigrav and not ExternalAGG and bM and AntigravTargetAltitude~=nil then if c(ar-antigrav.getBaseAltitude())<501 then fz[#fz+1]=cb(he,hj+15,e("AGG On - Target Altitude: %d Singularity Altitude: %d",d(AntigravTargetAltitude),d(antigrav.getBaseAltitude())),"warn")else fz[#fz+1]=cb(he,hj+15,e("AGG On - Target Altitude: %d Singluarity Altitude: %d",d(AntigravTargetAltitude),d(antigrav.getBaseAltitude())),"warnings")end elseif Autopilot and AutopilotTargetName~="None"then fz[#fz+1]=cb(he,hj+20,"Autopilot "..AutopilotStatus,"warn")elseif LockPitch~=nil then fz[#fz+1]=cb(he,hj+20,e("LockedPitch: %d",d(LockPitch)),"warn")elseif X then fz[#fz+1]=cb(he,hj+20,"Follow Mode Engaged","warn")elseif Reentry then fz[#fz+1]=cb(he,hj+20,"Re-entry in Progress","warn")end;local hn,ee,ef=b5:getPlanetarySystem(0):castIntersections(bJ,bF:normalize(),function(e2)if e2.noAtmosphericDensityAltitude>0 then return e2.radius+e2.noAtmosphericDensityAltitude else return e2.radius+e2.surfaceMaxAltitude*1.5 end end)local ho=ee;if ef~=nil and ee~=nil then ho=math.min(ef,ee)end;if AltitudeHold or VertTakeOff then local hm=co(HoldAltitude,2)if VertTakeOff then if bM then hm=co(antigrav.getBaseAltitude(),2).." AGG singularity height"end;fz[#fz+1]=cb(he,hj,"VTO to "..hm,"warn")elseif AutoTakeoff and not IntoOrbit then if ak then fz[#fz+1]=cb(he,hj,"Takeoff to "..AutopilotTargetName,"warn")else fz[#fz+1]=cb(he,hj,"Takeoff to "..hm,"warn")end;if BrakeIsOn and not VertTakeOff then fz[#fz+1]=cb(he,hj+50,"Throttle Up and Disengage Brake For Takeoff","crit")end else fz[#fz+1]=cb(he,hj,"Altitude Hold: "..hm,"warn")end end;if VertTakeOff and(antigrav~=nil and antigrav)then if aq>0.1 then fz[#fz+1]=cb(he,hj+20,"Beginning ascent","warn")elseif aq<0.09 and aq>0.05 then fz[#fz+1]=cb(he,hj+20,"Aligning trajectory","warn")elseif aq<0.05 then fz[#fz+1]=cb(he,hj+20,"Leaving atmosphere","warn")end end;if IntoOrbit then if bn~=nil then fz[#fz+1]=cb(he,hj,bn,"warn")end end;if IntruderAlertSystem and safeMass==-1 then fz[#fz+1]=cb(he,hj+70,"POSSIBLE INTRUDER ALERT - MASS GAIN OF "..bK.."kg DETECTED","warnings")bZ("Alarm.mp3","AL",1)end;if BrakeLanding then if StrongBrakes then fz[#fz+1]=cb(he,hj,"Brake-Landing","warnings")else fz[#fz+1]=cb(he,hj,"Coast-Landing","warnings")end end;if ProgradeIsOn then fz[#fz+1]=cb(he,hj,"Prograde Alignment","crit")end;if RetrogradeIsOn then fz[#fz+1]=cb(he,hj,"Retrograde Alignment","crit")end;if ho~=nil and aq==0 then local hm=co(ho)local travelTime=b6.computeTravelTime(bG,0,ho)local hp="Collision"if hn.noAtmosphericDensityAltitude>0 then hp="Atmosphere"end;fz[#fz+1]=cb(he,hk+20,hn.name.." "..hp.." "..cS(travelTime).." In "..hm,"crit")end;if VectorToTarget and not IntoOrbit then fz[#fz+1]=cb(he,hj+35,VectorStatus,"warn")end;fz[#fz+1]="</g>"return fz end;local function hq(eV)return d(x(eV*3.6,0)+0.5).." km/h"end;local function hr(fz)local hs=OrbitMapX;local ht=OrbitMapY;local hu=OrbitMapSize;local hv=4;local hw=15;local cc=0;local cd=0;local hx,hy,hz,hA;local function hB(type)local hC,bB,eV,hD;if type=="Periapsis"then hC=orbit.periapsis.altitude;bB=orbit.timeToPeriapsis;eV=orbit.periapsis.speed;hD=35 else hC=orbit.apoapsis.altitude;bB=orbit.timeToApoapsis;eV=orbit.apoapsis.speed;hD=-35 end;fz[#fz+1]=e([[<line class="pdim op30 linethick" x1="%f" y1="%f" x2="%f" y2="%f"/>]],cc+hD,cd-5,hs+hu/2-hx+hA,cd-5)fz[#fz+1]=cb(cc,cd,type)cd=cd+hw;local hm=co(hC)fz[#fz+1]=cb(cc,cd,hm)cd=cd+hw;fz[#fz+1]=cb(cc,cd,cS(bB))cd=cd+hw;fz[#fz+1]=cb(cc,cd,hq(eV))end;if orbit~=nil and aq<0.2 and planet~=nil and orbit.apoapsis~=nil and orbit.periapsis~=nil and orbit.period~=nil and orbit.apoapsis.speed>5 and DisplayOrbit then ht=ht+hv;cc=hs+hu+hs/2+hv;cd=ht+hu/2+5+hv;hx=hu/4;hA=0;fz[#fz+1]=[[<g class="pbright txtorb txtmid">]]fz[#fz+1]=e('<rect width="%f" height="%d" rx="10" ry="10" x="%d" y="%d" style="fill:rgb(0,0,100);stroke-width:4;stroke:white;fill-opacity:0.3;" />',hu+hs*2,hu+ht,hv,hv)if orbit.periapsis~=nil and orbit.apoapsis~=nil then hz=(orbit.apoapsis.altitude+orbit.periapsis.altitude+planet.radius*2)/(hx*2)hy=(planet.radius+orbit.periapsis.altitude+(orbit.apoapsis.altitude-orbit.periapsis.altitude)/2)/hz*(1-orbit.eccentricity)hA=hx-orbit.periapsis.altitude/hz-planet.radius/hz;local hE=""if orbit.periapsis.altitude<=0 then hE='redout'end;fz[#fz+1]=e([[<ellipse class="%s line" cx="%f" cy="%f" rx="%f" ry="%f"/>]],hE,hs+hu/2+hA+hv,ht+hu/2+hv,hx,hy)fz[#fz+1]=e('<circle cx="%f" cy="%f" r="%f" stroke="white" stroke-width="3" fill="blue" />',hs+hu/2+hv,ht+hu/2+hv,planet.radius/hz)end;if orbit.apoapsis~=nil and orbit.apoapsis.speed<MaxGameVelocity and orbit.apoapsis.speed>1 then hB("Apoapsis")end;cd=ht+hu/2+5+hv;cc=hs-hs/2+10+hv;if orbit.periapsis~=nil and orbit.periapsis.speed<MaxGameVelocity and orbit.periapsis.speed>1 then hB("Periapsis")end;fz[#fz+1]=cb(hs+hu/2+hv,planet.name,20+hv,"txtorbbig")if orbit.period~=nil and orbit.periapsis~=nil and orbit.apoapsis~=nil and orbit.apoapsis.speed>1 then local hF=orbit.timeToApoapsis/orbit.period*2*math.pi;local hG=hx*math.cos(hF)local hH=hy*math.sin(hF)fz[#fz+1]=e('<circle cx="%f" cy="%f" r="5" stroke="white" stroke-width="3" fill="white" />',hs+hu/2+hG+hA+hv,ht+hu/2+hH+hv)end;fz[#fz+1]=[[</g>]]return fz else return fz end end;local function hI()if radarPanelID~=nil and ai==0 then s(radarPanelID)radarPanelID=nil;if perisPanelID~=nil then s(perisPanelID)perisPanelID=nil end else if ai==1 then s(radarPanelID)radarPanelID=nil;_autoconf.displayCategoryPanel(radar,radar_size,L_TEXT("ui_lua_widget_periscope", "Periscope"),"periscope")perisPanelID=_autoconf.panels[_autoconf.panels_size]end;placeRadar=true;if radarPanelID==nil and placeRadar then _autoconf.displayCategoryPanel(radar,radar_size,L_TEXT("ui_lua_widget_radar", "Radar"),"radar")radarPanelID=_autoconf.panels[_autoconf.panels_size]placeRadar=false end;ai=0 end end;local function hJ(fz)local cc=30;local cd=275;local hK={"Alt-1: Increment Interplanetary Helper","Alt-2: Decrement Interplanetary Helper","Alt-3: Toggle Vanilla Widget view"}local hL={"","------------------IN ATMO-----------------","Alt-4: Autopilot in atmo to target","Alt-4-4: Autopilot to LowOrbitHeight over atmosphere and orbit to target","Alt-6: Altitude hold at current altitude","Alt-6-6: Altitude Hold at 11% atmosphere"}local hM={"","------------------NO ATMO-----------------","Alt-4 (Alt < 100k): Autopilot to Orbit and land","Alt-4 (Alt > 100k): Autopilot to target","Alt-6: Orbit at current altitude","Alt-6-6: Orbit at LowOrbitHeight over atmosphere"}local hN={"","------------------ALWAYS--------------------","Alt-5: Lock Pitch at current pitch","Alt-7: Toggle InHud Sounds","Alt-8: Toggle ground stabilization (underwater flight)","Alt-9: Activate Gyroscope","","CTRL: Toggle Brakes on and off, cancels active AP","LeftAlt: Tap to shift freelook on and off","Shift: Hold while not in freelook to see Buttons","Type /commands or /help in lua chat to see text commands"}if ap then c1(hK,hL)table.insert(hK,"--------------CONDITIONAL-----------------")if VertTakeOff then table.insert(hK,"Hit Alt-6 before exiting Atmosphere during VTO to hold in level flight")end;if am~=-1 then if antigrav then if bM then table.insert(hK,"Alt-6: AGG is on, will takeoff to AGG Height")else table.insert(hK,"Turn on AGG to takeoff to AGG Height")end end;if VertTakeOffEngine then table.insert(hK,"Alt-6: Begins Vertical Takeoff.")else table.insert(hK,"Alt-4/Alt-6: Autotakeoff if below hoverheight")end else table.insert(hK,"G: Begin BrakeLanding or Land")end else c1(hK,hM)end;if AltitudeHold then table.insert(hK,"Alt-Spacebar/Alt-C will raise/lower target height")end;c1(hK,hN)for i=1,#hK do cd=cd+12;fz[#fz+1]=cb(cc,cd,hK[i],"pdim txttick txtstart")end end;local function hO(hP,hQ)local hR;local hS=(hQ-hP):normalize()local e_=(bJ-hP):dot(hS)/hS:dot(hS)if e_<=0.then return(bJ-hP):len()elseif e_>=(hQ-hP):len()then return(bJ-hQ):len()end;local hT=hP+e_*hS;hR=(hT-bJ):len()return hR end;local function hU()local hR;local hV=nil;local hW=nil;local hX=nil;for d0,hY in pairs(b0[0])do if hY.hasAtmosphere then local ag=hO(planet.center,hY.center)if hV==nil or ag<hV then hW=hY;hV=ag;hX=planet end;if a9 and a9.hasAtmosphere and a9.name~=planet.name then local ek=hO(a9.center,hY.center)if ek<hV then hW=hY;hV=ek;hX=a9 end end end end;local hZ=ft(1770)local h_=fu(330)if hV then local i0="txttick "local i1=500000;if hV<hW.radius+i1 or hV<hX.radius+i1 then if bV then i0="txttick red "else i0="txttick orange "end end;hR=co(hV,2)bX=cb(hZ,h_,"Pipe ("..hX.name.."--"..hW.name.."): "..hR,i0 .."pbright txtmid")end end;local i2={}function i2.HUDPrologue(fz)bV,fk,_,_=fl(bJ)if not bV then C=PvPR;E=PvPG;D=PvPB else C=SafeR;E=SafeG;D=SafeB end;ay=[[rgb(]]..d(C+0.5)..","..d(E+0.5)..","..d(D+0.5)..[[)]]az=[[rgb(]]..d(C*0.9+0.5)..","..d(E*0.9+0.5)..","..d(D*0.9+0.5)..[[)]]local i3=ay;local i4=az;local i5=ay;local i6=az;if fv()and not brightHud then i3=[[rgb(]]..d(C*0.4+0.5)..","..d(E*0.4+0.5)..","..d(D*0.3+0.5)..[[)]]i4=[[rgb(]]..d(C*0.3+0.5)..","..d(E*0.3+0.5)..","..d(D*0.2+0.5)..[[)]]end;fz[#fz+1]=e([[
                        <head>
                            <style>
                                body {margin: 0}
                                svg {position:absolute;top:0;left:0;font-family:Montserrat;} 
                                .txt {font-size:10px;font-weight:bold;}
                                .txttick {font-size:12px;font-weight:bold;}
                                .txtbig {font-size:14px;font-weight:bold;}
                                .altsm {font-size:16px;font-weight:normal;}
                                .altbig {font-size:21px;font-weight:normal;}
                                .line {stroke-width:2px;fill:none}
                                .linethick {stroke-width:3px;fill:none}
                                .warnings {font-size:26px;fill:red;text-anchor:middle;font-family:Bank}
                                .warn {fill:orange;font-size:24px}
                                .crit {fill:darkred;font-size:28px}
                                .bright {fill:%s;stroke:%s}
                                .pbright {fill:%s;stroke:%s}
                                .dim {fill:%s;stroke:%s}
                                .pdim {fill:%s;stroke:%s}
                                .red {fill:red;stroke:red}
                                .orange {fill:orange;stroke:orange}
                                .redout {fill:none;stroke:red}
                                .op30 {opacity:0.3}
                                .op10 {opacity:0.1}
                                .txtstart {text-anchor:start}
                                .txtend {text-anchor:end}
                                .txtmid {text-anchor:middle}
                                .txtvspd {font-family:sans-serif;font-weight:normal}
                                .txtvspdval {font-size:20px}
                                .txtfuel {font-size:11px;font-weight:bold}
                                .txtorb {font-size:12px}
                                .txtorbbig {font-size:18px}
                                .hudver {font-size:10px;font-weight:bold;fill:red;text-anchor:end;font-family:Bank}
                                .msg {font-size:40px;fill:red;text-anchor:middle;font-weight:normal}
                                .cursor {stroke:white}
                            </style>
                        </head>
                        <body>
                            <svg height="100%%" width="100%%" viewBox="0 0 %d %d">
                            ]],i3,i3,i5,i5,i4,i4,i6,i6,aI,aJ)return fz end;function i2.DrawVerticalSpeed(fz,dD)f_(fz,dD)end;function i2.UpdateHud(fz)local dD=ar;local eY=core.getVelocity()local eV=vec3(eY):len()local gO=bP;local i7=bQ;local g7=i7;local gm=bP;local h5=d(unit.getThrottle())local ha=eV*3.6;local h6=unit.getAxisCommandValue(0)local i8=ft(1770)local i9=fu(310)if AtmoSpeedAssist and bO then h6=F;h5=F*100 end;local fx=fw()local g8="ROLL"local cx=unit.getClosestPlanetInfluence()>0;if h5==nil then h5=0 end;if not cx then if eV>5 then gO=gN(eY)i7=gP(eY)else gO=0;i7=0 end;g8="YAW"end;if fk>50000 and not ap then local ia;if fk>200000 then ia=x(fk/200000,2).." su"else ia=x(fk/1000,1).." km"end;fz[#fz+1]=cb(i8,i9,"PvP Boundary: "..ia,"pbright txtbig txtmid")end;fz[#fz+1]=ah;fz[#fz+1]=aD;fz[#fz+1]=bW;if bX~=""then fz[#fz+1]=bX end;if a_%aU==0 then aZ=true end;if fuelX~=0 and fuelY~=0 then fy(fz,aZ,fuelX,"Atmospheric ","ATMO",aN,aX,aY)fy(fz,aZ,fuelX+120,"Space fuel t","SPACE",aO,aV,aW)fy(fz,aZ,fuelX+240,"Rocket fuel ","ROCKET",aP,aS,aT)end;if aZ then aZ=false;a_=0 end;a_=a_+1;f_(fz,dD)if l()==0 or RemoteHud then if not fv()or brightHud then if cx then g6(fz,centerX,centerY,g7,g8,cx)gl(fz,gm,g7,centerX,centerY,cx,d(gP(eY)),eV)else g6(fz,centerX,centerY,i7,g8,cx)gl(fz,gO,i7,centerX,centerY,cx,d(i7),eV)end;gs(fz,dD,cx)gQ(fz,eY,eV,centerX,centerY)end end;h4(fz,fx,h5,h6)h9(fz,ha)hd(fz)hr(fz)if showHelp then hJ(fz)end;return fz end;function i2.HUDEpilogue(fz)fz[#fz+1]="</svg>"return fz end;function i2.ExtraData(fz)local ib=ft(1240)local ic=fu(55)local id=ic+10;local ie;local ig=0;local fx=fw()if VertTakeOffEngine then fx=fx.."-VERTICAL"end;if TurnBurn then fx="TB-"..fx end;if not stablized then fx=fx.."-DeCoupled"end;local ih=vec3(core.getWorldAcceleration()):len()/9.80665;ie=core.g()fz[#fz+1]=[[<g class="pdim txt txtend">]]if l()==1 and not RemoteHud then ib=ft(1120)ic=fu(55)id=ic+10 elseif ap then local ii=ft(770)fz[#fz+1]=cb(ii,ic,"ATMOSPHERE","pdim txt txtend")fz[#fz+1]=cb(ii,id,e("%.2f",aq),"pdim txt txtend","")end;fz[#fz+1]=cb(ib,ic,"GRAVITY","pdim txt txtend")fz[#fz+1]=cb(ib,id,e("%.2f",ie/9.80665),"pdim txt txtend")fz[#fz+1]=cb(ib,ic+20,"ACCEL","pdim txt txtend")fz[#fz+1]=cb(ib,id+20,e("%.2f",ih),"pdim txt txtend")fz[#fz+1]=cb(ft(960),fu(180),fx,"txtbig txtmid")end;function i2.DrawOdometer(fz,aa,TotalDistanceTravelled,ab)local ie;local ij=0;local ik=0;local ig=0;if ap then ig=LastMaxBrakeInAtmo else ig=LastMaxBrake end;maxThrust=a:maxForceForward()ie=core.g()if ie>0.1 then ik=au*ie;ij=maxThrust/ie end;fz[#fz+1]=e([[
                        <g class="pbright txt">
                        <path class="linethick" d="M %d 0 L %d %d Q %d %d %d %d L %d 0"/>]],ft(660),ft(700),fu(35),ft(960),fu(55),ft(1240),fu(35),ft(1280))if l()==0 or RemoteHud then fz[#fz+1]=cb(ft(700),fu(20),e("Trip: %.2f km",aa),"txtstart")fz[#fz+1]=cb(ft(700),fu(30),e("Lifetime: %.2f kSU",TotalDistanceTravelled/200000),"txtstart")fz[#fz+1]=cb(ft(830),fu(20),"Trip Time: "..cS(ab),"txtstart")fz[#fz+1]=cb(ft(830),fu(30),"Total Time: "..cS(TotalFlightTime),"txtstart")fz[#fz+1]=cb(ft(970),fu(20),e("Mass: %.2f Tons",au/1000),"txtstart")fz[#fz+1]=cb(ft(1240),fu(10),e("Max Brake: %.2f kN",ig/1000),"txtend")fz[#fz+1]=cb(ft(1240),fu(30),e("Max Thrust: %.2f kN",maxThrust/1000),"txtend")if ie>0.1 then fz[#fz+1]=cb(ft(970),fu(30),e("Max Mass: %.2f Tons",ij/1000),"txtstart")fz[#fz+1]=cb(ft(1240),fu(20),e("Req Thrust: %.2f kN",ik/1000),"txtend")else fz[#fz+1]=cb(ft(970),fu(30),"Max Mass: n/a","txtstart")fz[#fz+1]=cb(ft(1240),fu(20),"Req Thrust: n/a","txtend")end end;fz[#fz+1]="</g>"return fz end;function i2.DrawWarnings(fz)return hd(fz)end;function i2.DisplayOrbitScreen(fz)return hr(fz)end;function i2.DisplayMessage(fz,hm)if hm~="empty"then local cd=310;for il in string.gmatch(hm,"([^\n]+)")do cd=cd+35;fz[#fz+1]=cb("50%",cd,il,"msg")end end;if af~=0 then unit.setTimer("msgTick",af)af=0 end end;function i2.DrawDeadZone(fz)fz[#fz+1]=e([[<circle class="dim line" style="fill:none" cx="50%%" cy="50%%" r="%d"/>]],DeadZone)end;function i2.UpdatePipe()if ap then bX=""return end;hU()end;function i2.UpdateRadar()if radar_1 then local im=radar_1.getEntries()local io=radar_1.getData()local ip=ft(1770)local iq=fu(350)if#im>0 then local ir=io:find('identifiedConstructs":%[%]')if ir==nil and perisPanelID==nil then ai=1;hI()end;if ir~=nil and perisPanelID~=nil then hI()end;if radarPanelID==nil then hI()end;bW=cb(ip,iq,"Radar: "..#im.." contacts","pbright txtbig txtmid")local is={}for d0,d1 in pairs(im)do if radar_1.hasMatchingTransponder(d1)==1 then table.insert(is,d1)end end;if#is>0 then local cd=fu(15)local cc=ft(1370)bW=bW..cb(cc,cd,"Friendlies In Range","pbright txtbig txtmid")for d0,d1 in pairs(is)do cd=cd+20;bW=bW..cb(cc,cd,radar_1.getConstructName(d1),"pdim txtmid")end end else local it;it=io:find('worksInEnvironment":false')if it then bW=cb(ip,iq,"Radar: Jammed","pbright txtbig txtmid")else bW=cb(ip,iq,"Radar: No Contacts","pbright txtbig txtmid")end;if radarPanelID~=nil then ai=0;hI()end end end end;function i2.DrawSettings(fz)if#bS>0 then local cc=ft(640)local cd=fu(200)fz[#fz+1]=[[<g class="pbright txtvspd txtstart">]]for d0,d1 in pairs(bS)do fz[#fz+1]=cb(cc,cd,d1 ..": ".._G[d1])cd=cd+20;if d0%12==0 then cc=cc+ft(350)cd=fu(200)end end;fz[#fz+1]=cb(ft(640),fu(200)+260,"To Change: In Lua Chat, enter /G VariableName Value")fz[#fz+1]="</g>"end;return fz end;return i2 end;local function iu()local function iv()local function iw(ix,iy)return ix.name<iy.name end;bU={}for d0,d1 in pairs(b0[0])do bU[#bU+1]={name=d1.name,index=d0}end;table.sort(bU,iw)end;local d2={}function d2.UpdateAtlasLocationsList()iv()end;function d2.UpdateAutopilotTarget()if AutopilotTargetIndex==0 then AutopilotTargetName="None"a9=nil;CustomTarget=nil;return true end;local iz=bU[AutopilotTargetIndex].index;local iA=b0[0][iz]if iA.center then AutopilotTargetName=iA.name;a9=b5[0][iz]if CustomTarget~=nil then if aq==0 then if t(widgetMaxBrakeTimeText,widgetMaxBrakeTime)~=1 then u(widgetMaxBrakeTimeText,widgetMaxBrakeTime)end;if t(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)~=1 then u(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)end;if t(widgetCurBrakeTimeText,widgetCurBrakeTime)~=1 then u(widgetCurBrakeTimeText,widgetCurBrakeTime)end;if t(widgetCurBrakeDistanceText,widgetCurBrakeDistance)~=1 then u(widgetCurBrakeDistanceText,widgetCurBrakeDistance)end;if t(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)~=1 then u(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)end end;if t(widgetMaxMassText,widgetMaxMass)~=1 then u(widgetMaxMassText,widgetMaxMass)end;if t(widgetTravelTimeText,widgetTravelTime)~=1 then u(widgetTravelTimeText,widgetTravelTime)end;if t(widgetTargetOrbitText,widgetTargetOrbit)~=1 then u(widgetTargetOrbitText,widgetTargetOrbit)end end;CustomTarget=nil else CustomTarget=iA;for _,d1 in pairs(b5[0])do if d1.name==CustomTarget.planetname then a9=d1;AutopilotTargetName=CustomTarget.name;break end end;if t(widgetMaxMassText,widgetMaxMass)~=1 then u(widgetMaxMassText,widgetMaxMass)end;if t(widgetTravelTimeText,widgetTravelTime)~=1 then u(widgetTravelTimeText,widgetTravelTime)end end;if CustomTarget==nil then AutopilotTargetCoords=vec3(a9.center)else AutopilotTargetCoords=CustomTarget.position end;if a9.planetname~="Space"then if a9.hasAtmosphere then AutopilotTargetOrbit=d(a9.radius*(TargetOrbitRadius-1)+a9.noAtmosphericDensityAltitude)else AutopilotTargetOrbit=d(a9.radius*(TargetOrbitRadius-1)+a9.surfaceMaxAltitude)end else AutopilotTargetOrbit=1000 end;if CustomTarget~=nil and CustomTarget.planetname=="Space"then AutopilotEndSpeed=0 else _,AutopilotEndSpeed=b8(a9):escapeAndOrbitalSpeed(AutopilotTargetOrbit)end;AutopilotPlanetGravity=0;AutopilotAccelerating=false;AutopilotBraking=false;AutopilotCruising=false;Autopilot=false;AutopilotRealigned=false;AutopilotStatus="Aligning"return true end;function d2.adjustAutopilotTargetIndex(g3)if not Autopilot and not VectorToTarget and not ak and not IntoOrbit then if g3==nil then AutopilotTargetIndex=AutopilotTargetIndex+1;if AutopilotTargetIndex>#bU then AutopilotTargetIndex=0 end else AutopilotTargetIndex=AutopilotTargetIndex-1;if AutopilotTargetIndex<0 then AutopilotTargetIndex=#bU end end;if AutopilotTargetIndex==0 then ba.UpdateAutopilotTarget()else local iz=bU[AutopilotTargetIndex].index;local iA=b0[0][iz]if iA.name=="Space"or iphCondition=="Custom Only"and iA.center or iphCondition=="No Moons"and string.find(iA.name,"Moon")~=nil then if g3==nil then ba.adjustAutopilotTargetIndex()else ba.adjustAutopilotTargetIndex(1)end else ba.UpdateAutopilotTarget()end end else Z="Disengage autopilot before changing Interplanetary Helper"bZ("Disengage.mp3","AP")end end;function d2.findAtlasIndex(iB)for d0,d1 in pairs(iB)do if d1.name and d1.name==CustomTarget.name then return d0 end end;return-1 end;for d0,d1 in pairs(SavedLocations)do table.insert(b0[0],d1)end;iv()d2.UpdateAutopilotTarget()return d2 end;local function iC()local iD={}local iE={vec3(bF),-vec3(bF),vec3(bC),-vec3(bC),vec3(bE),-vec3(bE)}local function iF(eV)local iG=AutopilotEndSpeed;if not Autopilot then iG=0 end;if not ap then return b6.computeDistanceAndTime(eV,iG,au,0,0,LastMaxBrake-AutopilotPlanetGravity*au)else if LastMaxBrakeInAtmo and LastMaxBrakeInAtmo>0 then return b6.computeDistanceAndTime(eV,iG,au,0,0,LastMaxBrakeInAtmo-AutopilotPlanetGravity*au)else return 0,0 end end end;local function iH(eV)local iG=AutopilotEndSpeed;if not Autopilot then iG=0 end;return b6.computeDistanceAndTime(eV,iG,au,a:maxForceForward(),warmup,LastMaxBrake-AutopilotPlanetGravity*au)end;function iD.GetAutopilotBrakeDistanceAndTime(eV)return iF(eV)end;function iD.GetAutopilotTBBrakeDistanceAndTime(eV)return iH(eV)end;local function iI(iJ,iK,iL)iK=iK:project_on_plane(iJ)iL=iL:project_on_plane(iJ)return m(iK:cross(iL):dot(iJ),iK:dot(iL))end;local function iM()local function iN()local iO=-1;local iP=-1;if vBooster then iO=vBooster.distance()end;if hover then iP=hover.distance()end;if iO~=-1 and iP~=-1 then if iO<iP then return iO else return iP end elseif iO~=-1 then return iO elseif iP~=-1 then return iP else return-1 end end;local iQ=iN()local iR=-1;if telemeter_1 then iR=telemeter_1.getDistance()end;if iQ~=-1 and iR~=-1 then if iQ<iR then return iQ else return iR end elseif iQ~=-1 then return iQ else return iR end end;local function iS(planet,eg,iT)local function iU(iV,dw)local em=vec3(dw)if iV.bodyId==0 then return setmetatable({latitude=em.x,longitude=em.y,altitude=em.z,bodyId=0,systemId=iV.planetarySystemId},MapPosition)end;local en=em-iV.center;local ag=en:len()local dD=ag-iV.radius;local dB=0;local dC=0;if not cl(ag,0)then local eo=m(en.y,en.x)dC=eo>=0 and eo or 2*math.pi+eo;dB=math.pi/2-math.acos(en.z/ag)end;return setmetatable({latitude=math.deg(dB),longitude=math.deg(dC),altitude=dD,bodyId=iV.bodyId,systemId=iV.planetarySystemId},MapPosition)end;local iW=iU(planet,eg)iW="::pos{"..iW.systemId..","..iW.bodyId..","..iW.latitude..","..iW.longitude..","..iW.altitude.."}"if iT then return iW else system.setWaypoint(iW)return true end end;function iD.showWayPoint(planet,eg,iT)return iS(planet,eg,iT)end;function iD.APTick()ap=j()>0;aq=j()ar=core.getAltitude()am=iM()bB=p()bh=bB;if antigrav then bM=antigrav.getState()==1 end;local iX=1;local iY=1;local iZ=bB-bh;local i_=-math.deg(iI(bC,bF,bD))local j0=math.deg(iI(bE,bF,bD))local g3=bH*-1;bg=ap and i_<-YawStallAngle or i_>YawStallAngle or j0<-PitchStallAngle or j0>PitchStallAngle;local j1=system.getMouseDeltaX()local j2=system.getMouseDeltaY()if InvertMouse and not Y then j2=-j2 end;S=0;W=0;R=0;sys=b5[0]planet=sys:closestBody(core.getConstructWorldPos())kepPlanet=b8(planet)orbit=kepPlanet:orbitalParameters(core.getConstructWorldPos(),bF)if ar==0 then ar=(bJ-planet.center):len()-planet.radius end;local ie=planet:getGravity(core.getConstructWorldPos()):len()*au;bi=0;b7=core.getMaxKinematicsParametersAlongAxis("ground",core.getConstructOrientationUp())[1]if w()==0 then if l()==1 and Y then if not bc then ad=ad+j1;ae=ae+j2 end else ad=0;ae=0 end else ad=ad+j1;ae=ae+j2;ag=math.sqrt(ad*ad+ae*ae)if not Y and l()==0 then if userControlScheme=="virtual joystick"then if ad>0 and ad>DeadZone then S=S-(ad-DeadZone)*MouseXSensitivity elseif ad<0 and ad<DeadZone*-1 then S=S-(ad+DeadZone)*MouseXSensitivity else S=0 end;if ae>0 and ae>DeadZone then R=R-(ae-DeadZone)*MouseYSensitivity elseif ae<0 and ae<DeadZone*-1 then R=R-(ae+DeadZone)*MouseYSensitivity else R=0 end else ad=0;ae=0;if userControlScheme=="mouse"then R=(-utils.smoothstep(j2,-100,100)+0.5)*2*iX;S=(-utils.smoothstep(j1,-100,100)+0.5)*2*iY end end end end;local j3=bG>8334;if bG>SpaceSpeedLimit/3.6 and not ap and not Autopilot and not j3 then Z="Space Speed Engine Shutoff reached"bZ("SpeedLimit.mp3","SP")ch(0)end;if not j3 and LastIsWarping then if not BrakeIsOn then cD()end;if Autopilot then cv()end end;LastIsWarping=j3;if ap and aq>0.09 then if bG>bl/3.6 and not AtmoSpeedAssist and not ax then BrakeIsOn=true;ax=true elseif not AtmoSpeedAssist and ax then if bG<bl/3.6 then BrakeIsOn=false;ax=false end end end;if BrakeIsOn then V=1 else V=0 end;if ProgradeIsOn then if aj then BrakeIsOn=false;local j4=false;if CustomTarget~=nil then j4=cE(CustomTarget.position-bJ,0.1)else j4=cE(vec3(bF),0.01)end;be=true;if j4 then ck(d(bl))if(c(bQ)<2 or c(bP)>85)and bG>=bl/3.6-1 then BrakeIsOn=false;ProgradeIsOn=false;O=true;aj=false;al=true;Autopilot=false;cQ()end elseif ap and AtmoSpeedAssist then ch(1)end elseif bG>N then cE(vec3(bF),0.01)end end;if RetrogradeIsOn then if ap then RetrogradeIsOn=false elseif bG>N then cE(-vec3(bF))end end;if not ProgradeIsOn and aj and not IntoOrbit then if aq==0 then O=true;cQ()aj=false;al=true else aj=false;cv()end end;if al and CustomTarget~=nil and(ar<HoldAltitude+250 and ar>HoldAltitude-250)and bG*3.6>bl-250 and c(bI)<25 and aq>=0.1 and(CustomTarget.position-bJ):len()>2000+ar then cv()al=false end;if VertTakeOff then be=true;local j5=HoldAltitude;if bI<-30 then Z="Unable to achieve lift. Safety Landing."ac=0;be=autoRollPreference;VertTakeOff=false;BrakeLanding=true elseif not ExternalAGG and bM or HoldAltitude<planet.spaceEngineMinAltitude then if bM then j5=antigrav.getBaseAltitude()end;if ar<j5-100 then bm=0;ac=15;BrakeIsOn=false elseif bI>0 then BrakeIsOn=true;ac=0 elseif bI<-30 then BrakeIsOn=true;ac=15 elseif ar>=j5 then if bM then if Autopilot or VectorToTarget then cr()else BrakeIsOn=true;VertTakeOff=false end;Z="Takeoff complete. Singularity engaged"bZ("Singularity.mp3","AG")else BrakeIsOn=false;Z="VTO complete. Engaging Horizontal Flight"bZ("VTOC.mp3","VT")cr()end;ac=0 end else if aq>0.08 then bm=0;BrakeIsOn=false;ac=20 elseif aq<0.08 and aq>0 then BrakeIsOn=false;if by then bm=0;ac=20 else ac=0;bm=36;ck(3500)end else be=autoRollPreference;IntoOrbit=true;bw=false;CancelIntoOrbit=false;bq=false;bo=nil;bp=nil;if bv==nil then bv=planet end;bu=j5;bt=true;VertTakeOff=false end end;if bm~=nil then if vTpitchPID==nil then vTpitchPID=pid.new(2*0.01,0,2*0.1)end;local j6=q(bm-bP,-PitchStallAngle*0.80,PitchStallAngle*0.80)vTpitchPID:inject(j6)local j7=q(vTpitchPID:get(),-1,1)R=j7 end end;if IntoOrbit then local cN;local j8=false;local j9=co(bu)if bv==nil then bv=planet;if VectorToTarget then bv=a9 end end;if not bt then bu=d(bv.radius+bv.surfaceMaxAltitude+LowOrbitHeight)if bv.hasAtmosphere then bu=d(bv.radius+bv.noAtmosphericDensityAltitude+LowOrbitHeight)end;bt=true end;if bs.VectorToTarget then cN=CustomTarget.position-bJ end;local ja,jb=b8(bv):escapeAndOrbitalSpeed((bJ-bv.center):len()-bv.radius)local jc=bQ;if not bq then local jd=false;local je=false;ch(0)bp=0;bn="Aligning to orbital path - OrbitHeight: "..j9;if bs.VectorToTarget then cE(cN:normalize():project_on_plane(bH))j8=bD:dot(cN:project_on_plane(bC):normalize())>0.95 else cE(bF)j8=i_<0.5;if bG<150 then j8=true end end;R=0;bo=0;if bP<=bo+1 and bP>=bo-1 then jd=true else jd=false end;if jc<=bp+1 and jc>=bp-1 then je=true else je=false end;if jd and je and j8 then bo=nil;bp=nil;bq=true end else if bs.VectorToTarget then cE(cN:normalize():project_on_plane(bH))elseif bG>150 then cE(bF)end;R=0;if bs.VectorToTarget then local a5,_=b6.computeDistanceAndTime(bG,bl/3.6,au,0,0,LastMaxBrake)if bw and cN:len()>15000+a5+ar then bn="Orbiting to Target"if ar-100<=bv.noAtmosphericDensityAltitude or travelTime>orbit.timeToPeriapsis and orbit.periapsis.altitude<bv.noAtmosphericDensityAltitude then bw=false end elseif bw or cN:len()<15000+a5+ar then Z="Orbit complete, proceeding with reentry"bZ("OrbitComplete.mp3","OB")AutopilotTargetCoords=CustomTarget.position;O=true;al=true;bs.VectorToTarget,bs.AutopilotAlign=false,false;cs()cQ()end end;if orbit.periapsis~=nil and orbit.apoapsis~=nil and orbit.eccentricity<1 and ar>bu*0.9 and ar<bu*1.4 then if orbit.apoapsis~=nil then if orbit.periapsis.altitude>=bu*0.99 and orbit.apoapsis.altitude>=bu*0.99 and orbit.periapsis.altitude<orbit.apoapsis.altitude and orbit.periapsis.altitude*1.05>=orbit.apoapsis.altitude or bw then if bw then BrakeIsOn=false;ch(0)bo=0;if not bs.VectorToTarget then Z="Orbit complete"bZ("OrbitComplete.mp3","OB")cs()end else bA=bA+1;if bA>=2 then bw=true end end else bn="Adjusting Orbit - OrbitHeight: "..j9;br=true;ck(jb*3.6+1)if VSpdPID==nil then VSpdPID=pid.new(0.5,0,10*0.1)end;local jf=bI;local jg=ar-bu;local jh=c(jg)if bI<10 and c(bP)<10 and jh<100 then jf=bI*2 end;if jf<10 and c(bP)<10 and jh<100 then jf=jf*2 end;if jf<5 and c(bP)<5 and jh<100 then jf=jf*4 end;VSpdPID:inject(jf)bo=q(-VSpdPID:get(),-90,90)if OrbitAltPID==nil then OrbitAltPID=pid.new(0.15,0,5*0.1)end;OrbitAltPID:inject(jg)bo=q(bo-q(OrbitAltPID:get(),-15,15),-90,90)end end else local ji=2.75;local jj=c(o(ja*ji))local jk=jj%50;if jk>0 then jj=jj-jk+50 end;BrakeIsOn=false;if ar<bu*0.8 then bn="Escaping planet gravity - OrbitHeight: "..j9;bo=utils.map(bI,200,0,-15,80)elseif ar>=bu*0.8 and ar<bu*1.15 then bn="Approaching orbital corridor - OrbitHeight: "..j9;jj=jj*0.75;bo=utils.map(bI,100,-100,-15,65)elseif ar>=bu*1.15 and ar<bu*1.5 then bn="Approaching orbital corridor - OrbitHeight: "..j9;jj=jj*0.75;if bI<0 or br then bo=utils.map(ar,bu*1.5,bu*1.01,-30,0)else bo=utils.map(ar,bu*0.99,bu*1.5,0,30)end elseif ar>bu*1.5 then bn="Reentering orbital corridor - OrbitHeight: "..j9;bo=-65;local jl=utils.map(bI,-150,-400,1,0.55)jj=jj*jl end;ck(d(jj))end end;if bo~=nil then if OrbitPitchPID==nil then OrbitPitchPID=pid.new(1*0.01,0,5*0.1)end;local jm=bo-bP;OrbitPitchPID:inject(jm)local jn=q(OrbitPitchPID:get(),-0.5,0.5)R=jn end end;if Autopilot and aq==0 and not aj then local function jo(jp,orbit)system.print(jp)BrakeIsOn=false;AutopilotBraking=false;Autopilot=false;TargetSet=false;AutopilotStatus="Aligning"ch(0)M=false;Z=jp;bZ("APComplete.mp3","AP")if orbit or aj then if orbit and AutopilotTargetOrbit~=nil and not aj then bu=AutopilotTargetOrbit;bt=true end;cs()end end;local jq,jr=AutopilotTargetCoords,false;if CustomTarget~=nil and CustomTarget.planetname~="Space"then AutopilotRealigned=true;if not TargetSet then local js=(CustomTarget.position-a9.center):normalize()local jt=js:project_on_plane((a9.center-bJ):normalize()):normalize()local ju=a9.center+jt*(a9.radius+AutopilotTargetOrbit)local jv=CustomTarget.position+(CustomTarget.position-a9.center):normalize()*(AutopilotTargetOrbit-a9:getAltitude(CustomTarget.position))if(bJ-ju):len()<(bJ-jv):len()then jq=ju else jq=jv;AutopilotEndSpeed=0 end;AutopilotTargetCoords=jq;bb.showWayPoint(a9,AutopilotTargetCoords)jr=true;TargetSet=true end;AutopilotPlanetGravity=0 elseif CustomTarget~=nil and CustomTarget.planetname=="Space"then AutopilotPlanetGravity=0;jr=true;TargetSet=true;AutopilotRealigned=true;jq=CustomTarget.position+(bJ-CustomTarget.position)*AutopilotTargetOrbit elseif CustomTarget==nil then AutopilotPlanetGravity=0;if not TargetSet then local js=(bJ+bF*100000-a9.center):normalize()local jt=js:project_on_plane((a9.center-bJ):normalize()):normalize()if jt:len()<1 then js=(bJ+bD*100000-a9.center):normalize()jt=js:project_on_plane((a9.center-bJ):normalize()):normalize()end;jq=a9.center+jt*(a9.radius+AutopilotTargetOrbit)AutopilotTargetCoords=jq;TargetSet=true;jr=true;AutopilotRealigned=true;bb.showWayPoint(a9,AutopilotTargetCoords)end end;AutopilotDistance=(vec3(jq)-bJ):len()local hn,ee,ef=b5:getPlanetarySystem(0):castIntersections(bJ,bF:normalize(),function(e2)if e2.noAtmosphericDensityAltitude>0 then return e2.radius+e2.noAtmosphericDensityAltitude else return e2.radius+e2.surfaceMaxAltitude*1.5 end end)local ho=ee;if ef~=nil and ee~=nil then ho=math.min(ef,ee)end;if ho~=nil and ho<AutopilotDistance and hn.name==a9.name then AutopilotDistance=ho end;local j4=true;local jw=(a9.center-(bJ+vec3(bF):normalize()*AutopilotDistance)):len()-a9.radius;local hm=co(jw)t(widgetTrajectoryAltitudeText,'{"label": "Projected Altitude", "value": "'..hm..'"}')local a5,a6;if not TurnBurn then a5,a6=iF(bG)else a5,a6=iH(bG)end;if bG>300 and AutopilotAccelerating then local cN=vec3(jq)-bJ;local jx=q(math.deg(iI(bC,bF:normalize(),cN:normalize()))*bG/500,-90,90)local jy=q(math.deg(iI(bE,bF:normalize(),cN:normalize()))*bG/500,-90,90)if c(jx)<20 and c(jy)<20 then jx=jx*2;jy=jy*2 end;if c(jx)<2 and c(jy)<2 then jx=jx*2;jy=jy*2 end;local i_=-math.deg(iI(bC,bD,bF:normalize()))local j0=-math.deg(iI(bE,bD,bF:normalize()))if apPitchPID==nil then apPitchPID=pid.new(2*0.01,0,2*0.1)end;apPitchPID:inject(jy-j0)local jz=q(apPitchPID:get(),-1,1)R=R+jz;if apYawPID==nil then apYawPID=pid.new(2*0.01,0,2*0.1)end;apYawPID:inject(jx-i_)local jA=q(apYawPID:get(),-1,1)S=S+jA;jr=true;if c(jx)>2 or c(jy)>2 then if AutopilotStatus~="Adjusting Trajectory"then AutopilotStatus="Adjusting Trajectory"bZ("AdjustingTrajectory.mp3","AP")end else if AutopilotStatus~="Accelerating"then AutopilotStatus="Accelerating"bZ("Accelerating.mp3","AP")end end end;if jw<AutopilotTargetOrbit*1.5 then if CustomTarget~=nil and CustomTarget.planetname=="Space"then AutopilotEndSpeed=0 elseif CustomTarget==nil then _,AutopilotEndSpeed=b8(a9):escapeAndOrbitalSpeed(jw)end end;if not AutopilotCruising and not AutopilotBraking and not jr then j4=cE((jq-bJ):normalize())elseif TurnBurn and(AutopilotBraking or AutopilotCruising)then j4=cE(-vec3(bF):normalize())end;if AutopilotAccelerating then if not M then BrakeIsOn=false;ch(AutopilotInterplanetaryThrottle)F=x(AutopilotInterplanetaryThrottle,2)M=true end;local jB=unit.getThrottle()if AtmoSpeedAssist then jB=F end;if vec3(core.getVelocity()):len()>=MaxGameVelocity or jB==0 and M then AutopilotAccelerating=false;if AutopilotStatus~="Cruising"then bZ("Cruising.mp3","AP")AutopilotStatus="Cruising"end;AutopilotCruising=true;ch(0)end;if AutopilotDistance<=a5 then AutopilotAccelerating=false;if AutopilotStatus~="Braking"then bZ("Braking.mp3","AP")AutopilotStatus="Braking"end;AutopilotBraking=true;ch(0)M=false end elseif AutopilotBraking then if AutopilotStatus~="Orbiting to Target"then BrakeIsOn=true;V=1 end;if TurnBurn then ch(1,true)end;local _,jb=b8(a9):escapeAndOrbitalSpeed((bJ-planet.center):len()-planet.radius)local cN;if CustomTarget~=nil then cN=CustomTarget.position-bJ end;if CustomTarget~=nil and CustomTarget.planetname=="Space"and bG<50 then jo("Autopilot complete, arrived at space location")BrakeIsOn=true;V=1 elseif CustomTarget~=nil and CustomTarget.planetname~="Space"and bG<=jb and(orbit.apoapsis==nil or orbit.periapsis==nil or orbit.apoapsis.altitude<=0 or orbit.periapsis.altitude<=0)then jo("Autopilot complete, commencing reentry")AutopilotTargetCoords=CustomTarget.position;aj=true;bb.showWayPoint(a9,AutopilotTargetCoords)elseif orbit.periapsis~=nil and orbit.periapsis.altitude>0 and orbit.eccentricity<1 or AutopilotStatus=="Circularizing"then if AutopilotStatus~="Circularizing"then bZ("Circularizing.mp3","AP")AutopilotStatus="Circularizing"end;if bG<=jb then if CustomTarget~=nil then if bF:normalize():dot(cN:normalize())>0.4 then if AutopilotStatus~="Orbiting to Target"then bZ("Orbiting.mp3")AutopilotStatus="Orbiting to Target"end;if not WaypointSet then BrakeIsOn=false;bb.showWayPoint(a9,CustomTarget.position)WaypointSet=true end else jo("Autopilot complete, proceeding with reentry")AutopilotTargetCoords=CustomTarget.position;aj=true;bb.showWayPoint(a9,CustomTarget.position)WaypointSet=false end else jo("Autopilot completed, setting orbit",true)V=0 end end elseif AutopilotStatus=="Circularizing"then jo("Autopilot complete, fixing Orbit",true)end elseif AutopilotCruising then if AutopilotDistance<=a5 then AutopilotAccelerating=false;if AutopilotStatus~="Braking"then bZ("Braking.mp3","AP")AutopilotStatus="Braking"end;AutopilotBraking=true end;local jB=unit.getThrottle()if AtmoSpeedAssist then jB=F end;if jB>0 then AutopilotAccelerating=true;if AutopilotStatus~="Accelerating"then AutopilotStatus="Accelerating"bZ("Accelerating.mp3","AP")end;AutopilotCruising=false end else if j4 then if not AutopilotRealigned and CustomTarget==nil or not AutopilotRealigned and CustomTarget~=nil and CustomTarget.planetname~="Space"then if not aj then AutopilotTargetCoords=vec3(a9.center)+(AutopilotTargetOrbit+a9.radius)*bE;AutopilotShipUp=bC;AutopilotShipRight=bE end;AutopilotRealigned=true elseif j4 then AutopilotAccelerating=true;if AutopilotStatus~="Accelerating"then AutopilotStatus="Accelerating"bZ("Accelerating.mp3","AP")end;if not M then ch(AutopilotInterplanetaryThrottle,true)F=x(AutopilotInterplanetaryThrottle,2)M=true;BrakeIsOn=false end end end end elseif Autopilot and(CustomTarget~=nil and CustomTarget.planetname~="Space"and aq>0)then Z="Autopilot complete, proceeding with reentry"bZ("APComplete.mp3","AP")AutopilotTargetCoords=CustomTarget.position;BrakeIsOn=false;AutopilotBraking=false;Autopilot=false;TargetSet=false;AutopilotStatus="Aligning"V=0;ch(0)M=false;ProgradeIsOn=true;aj=true;bb.showWayPoint(a9,CustomTarget.position)end;if X then be=true;local jy=0;local eZ=bJ+vec3(unit.getMasterPlayerRelativePosition())local jC=eZ-bJ;local jD=vec3(jC):project_on(bD):len()local jE=vec3(jC):project_on(bE):len()local ag=math.sqrt(jD*jD+jE*jE)cE(jC:normalize())local jF=40;local jG=ag<jF;local jH=100;local jI=q((ag-jF)/2,10,jH)R=0;local j4=c(S)<0.1;if j4 and bG<jI and not jG then BrakeIsOn=false;jy=-20 else BrakeIsOn=true;jy=0 end;local jJ=0;if c(jy-bP)>jJ then if pitchPID==nil then pitchPID=pid.new(2*0.01,0,2*0.1)end;pitchPID:inject(jy-bP)local jz=pitchPID:get()R=jz end end;if AltitudeHold or BrakeLanding or Reentry or VectorToTarget or LockPitch~=nil then local cx=unit.getClosestPlanetInfluence()>0;local jK=HoldAltitude-ar;local jL=500+bG;local jM=1;if AutoTakeoff then jM=q(bG/100,0.1,1)end;local jy=(utils.smoothstep(jK,-jL,jL)-0.5)*2*MaxPitch*jM;if not Reentry and not aj and not VectorToTarget and bD:dot(bF:normalize())<0.99 then jy=(utils.smoothstep(jK,-jL*q(20-19*aq*10,1,20),jL*q(20-19*aq*10,1,20))-0.5)*2*MaxPitch*q(2-aq*10,1,2)*jM end;if not AltitudeHold then jy=0 end;if LockPitch~=nil then if cx and not IntoOrbit then jy=LockPitch else LockPitch=nil end end;be=true;local jN=R;if Reentry then local jO=d(bl)local jP,jQ=b6.computeDistanceAndTime(bG,jO/3.6,au,0,0,LastMaxBrake-planet.gravity*9.8*au)local jR=ar-(planet.noAtmosphericDensityAltitude+5000)if not bO and ar>planet.noAtmosphericDensityAltitude+5000 and bG<=jO/3.6 and bG>jO/3.6-10 and c(bF:normalize():dot(bD))>0.9 then ch(0)elseif bO and bG>jO/3.6 and(jP>-1 and jR<=jP or ar<=planet.noAtmosphericDensityAltitude+5000)then BrakeIsOn=true else BrakeIsOn=false end;ck(jO,true)if not O then jy=-80;if aq>0.02 then Z="PARACHUTE DEPLOYED"Reentry=false;BrakeLanding=true;jy=0;be=autoRollPreference end elseif planet.noAtmosphericDensityAltitude>0 and ar>planet.noAtmosphericDensityAltitude+5000 then be=true elseif ar<=planet.noAtmosphericDensityAltitude+5000 then ck(jO)if not bO and r:getTargetSpeed(axisCommandId.longitudinal)==bl then O=false;Reentry=false;be=true end end end;if bG>N and not ak and not VectorToTarget and not BrakeLanding and ForceAlignment then cE(vec3(bF))end;if bY~=nil or(VectorToTarget or ak)and AutopilotTargetIndex>0 and aq>0.01 then local cN;if bY~=nil then if type(bY)=="table"then cN=bY elseif bY<3 and bY>0 then cN=-bH:cross(bF)*5000 elseif bY>=3 then cN=bH:cross(bF)*5000 elseif bY==0 then cN=bF*25000 end elseif CustomTarget~=nil then cN=CustomTarget.position-bJ else cN=a9.center-bJ end;local jx=math.deg(iI(bH:normalize(),bF,cN))*2;local jS=math.rad(c(bQ))if bG>minRollVelocity and aq>0.01 then local jT=q(90-jy*2,-90,90)bi=q(jx*2,-jT,jT)local jU=jx;jx=q(q(jx,-YawStallAngle*0.80,YawStallAngle*0.80)*math.cos(jS)+4*(bP-jy)*math.sin(math.rad(bQ)),-YawStallAngle*0.80,YawStallAngle*0.80)jy=q(q(jy*math.cos(jS),-PitchStallAngle*0.80,PitchStallAngle*0.80)+c(q(c(jU)*math.sin(jS),-PitchStallAngle*0.80,PitchStallAngle*0.80)),-PitchStallAngle*0.80,PitchStallAngle*0.80)else bi=0;jx=q(jx,-YawStallAngle*0.80,YawStallAngle*0.80)end;local jV=i_-jx;if(type(bY)=="table"or bY==0)and c(jV)<=0.001 then if bY==0 then ct()end;bY=nil;return end;if not bg and bG>minRollVelocity and aq>0.01 then if yawPID==nil then yawPID=pid.new(2*0.01,0,2*0.1)end;yawPID:inject(jV)local jA=q(yawPID:get(),-1,1)S=S+jA elseif ap and am>-1 or bG<minRollVelocity then cE(cN)elseif bg and aq>0.01 then if(i_<-YawStallAngle or i_>YawStallAngle)and aq>0.01 then cE(bF)end;if(j0<-PitchStallAngle or j0>PitchStallAngle)and aq>0.01 then jy=q(bP-j0,bP-PitchStallAngle*0.80,bP+PitchStallAngle*0.80)end end;if CustomTarget~=nil and not ak then local j5=planet:getAltitude(CustomTarget.position)local jR=math.sqrt(cN:len()^2-(ar-j5)^2)local jW=LastMaxBrakeInAtmo;if jW then jW=jW*q(bG/100,0.1,1)*aq else jW=LastMaxBrake end;if aq<0.01 then jW=LastMaxBrake end;local jX=bF:len()-c(bI)local jY=vec3(core.getWorldAirFrictionAcceleration())local jZ=math.sqrt(jY:len()-jY:project_on(g3):len())*au;if bG>100 then a5,a6=b6.computeDistanceAndTime(bG,100,au,0,0,jW+jZ)local j_,k0=b6.computeDistanceAndTime(100,0,au,0,0,jW/2)a5=a5+j_ else a5,a6=b6.computeDistanceAndTime(bG,0,au,0,0,jW/2)end;StrongBrakes=true;if not ak and not Reentry and jR<=a5+bG*iZ/2 and(bF:project_on_plane(bH):normalize():dot(cN:project_on_plane(bH):normalize())>0.99 or VectorStatus=="Finalizing Approach")then VectorStatus="Finalizing Approach"ch(0)if AltitudeHold then ct()VectorToTarget=true end;BrakeIsOn=true elseif not AutoTakeoff then BrakeIsOn=false end;if VectorStatus=="Finalizing Approach"and(jX<0.1 or jR<0.1 or LastDistanceToTarget~=nil and LastDistanceToTarget<jR)then if not bM then bZ("BrakeLandingEngaged.mp3","BL")BrakeLanding=true end;VectorToTarget=false;VectorStatus="Proceeding to Waypoint"end;LastDistanceToTarget=jR end elseif VectorToTarget and aq==0 and HoldAltitude>planet.noAtmosphericDensityAltitude and not(ak or Reentry)then if CustomTarget~=nil and a9.name==planet.name then local cN=CustomTarget.position-bJ;local j5=planet:getAltitude(CustomTarget.position)local jR=math.sqrt(cN:len()^2-(ar-j5)^2)local jW=LastMaxBrakeInAtmo;if jW then a5,a6=b6.computeDistanceAndTime(bG,0,au,0,0,jW/2)StrongBrakes=true;if jR<=a5+bG*iZ/2 and bF:project_on_plane(bH):normalize():dot(cN:project_on_plane(bH):normalize())>0.99 then if planet.hasAtmosphere then BrakeIsOn=false;ProgradeIsOn=false;O=true;aj=false;al=true;Autopilot=false;cQ()end end;LastDistanceToTarget=jR end end end;if aq==0 and(AltitudeHold and HoldAltitude>planet.noAtmosphericDensityAltitude)and not(ak or IntoOrbit or Reentry)then if not bw and not IntoOrbit then bu=HoldAltitude;bt=true;if VectorToTarget then bs.VectorToTarget=true end;cs()VectorToTarget=false;bq=true end end;if bg and aq>0.01 and am==-1 and bG>minRollVelocity and VectorStatus~="Finalizing Approach"then cE(bF)jy=q(bP-j0,bP-PitchStallAngle*0.80,bP+PitchStallAngle*0.80)end;R=jN;local iR=-1;if BrakeLanding then jy=0;local k1=false;local k2=30;if b7~=nil and b7>0 then local jZ=0;local k3=q(aq,0.4,2)local jW=LastMaxBrakeInAtmo*q(bG/100,0.1,1)*k3;local k4=b7*k3+jW+jZ-ie;local k5=jW/2+jZ-ie;local k6=bG-math.sqrt(c(k5/2)*20/(0.5*au))*utils.sign(k5)if k6<0 then k6=0 end;local k7;if bG>100 then local k8,_=b6.computeDistanceAndTime(bG,100,au,0,0,jW)local k9,_=b6.computeDistanceAndTime(100,0,au,0,0,math.sqrt(jW))k7=k8+k9 else k7=b6.computeDistanceAndTime(bG,0,au,0,0,math.sqrt(jW))end;if k7<20 then BrakeIsOn=false else local ka=0;if k6>100 then local kb,_=b6.computeDistanceAndTime(k6,100,au,0,0,k4)local kc,_=b6.computeDistanceAndTime(100,0,au,0,0,b7*k3+math.sqrt(jW)+jZ-ie)ka=kb+kc else ka,_=b6.computeDistanceAndTime(k6,0,au,0,0,b7*k3+math.sqrt(jW)+jZ-ie)end;ka=(ka+15+bG*iZ)*1.1;local kd=CustomTarget~=nil and planet:getAltitude(CustomTarget.position)>0 and CustomTarget.safe;if kd then local j5=planet:getAltitude(CustomTarget.position)local ke=ar-j5-100;local cN=CustomTarget.position-bJ;local kf=math.sqrt(cN:len()^2-(ar-j5)^2)if kf>100 then kd=false elseif ke<=ka or ka==-1 then BrakeIsOn=true;k1=true else BrakeIsOn=false;k1=true end end;if not kd and CalculateBrakeLandingSpeed then if ka>=k2 then BrakeIsOn=true else BrakeIsOn=false end;k1=true end end end;if not bO then ch(0)end;r:setTargetGroundAltitude(500)r:activateGroundEngineAltitudeStabilization(500)stablized=true;iR=am;if iR>-1 then be=autoRollPreference;if bG<1 or bF:normalize():dot(bH)<0 then BrakeLanding=false;AltitudeHold=false;GearExtended=true;a.control.extendLandingGears()r:setTargetGroundAltitude(LandingGearGroundHeight)ac=0;BrakeIsOn=true else BrakeIsOn=true end elseif StrongBrakes and bF:normalize():dot(-g3)<0.999 then BrakeIsOn=true elseif bI<-brakeLandingRate and not k1 then BrakeIsOn=true elseif not k1 then BrakeIsOn=false end end;if AutoTakeoff or ak then local hn,ef,ee;if AutopilotTargetCoords~=nil then hn,ef,ee=b5:getPlanetarySystem(0):castIntersections(bJ,(AutopilotTargetCoords-bJ):normalize(),function(e2)return e2.radius+e2.noAtmosphericDensityAltitude end)end;if bM then if ar>=HoldAltitude-50 then AutoTakeoff=false;if not Autopilot and not VectorToTarget then BrakeIsOn=true;ch(0)end else HoldAltitude=antigrav.getBaseAltitude()end elseif c(jy)<15 and ar/HoldAltitude>0.75 then AutoTakeoff=false;if not ak then if bO and not AtmoSpeedAssist then a.control.cancelCurrentControlMasterMode()end elseif ak and bG<N then Autopilot=true;ak=false;AltitudeHold=false;AutoTakeoff=false;ch(0)elseif ak then ch(0)BrakeIsOn=true end elseif ak and aq==0 and a9~=nil and(hn==nil or hn.name==a9.name)then Autopilot=true;ak=false;AltitudeHold=false;AutoTakeoff=false;if not bO then ch(0)end;AutopilotAccelerating=true end end;local kg=am>-1;local kh=bP;if(VectorToTarget or ak)and not kg and bG>minRollVelocity and aq>0.01 then local jS=math.rad(c(bQ))kh=bP*c(math.cos(jS))+j0*math.sin(jS)end;local ki=q(jy-kh,-PitchStallAngle*0.80,PitchStallAngle*0.80)if aq<0.01 and VectorToTarget then ki=q(jy-kh,-85,MaxPitch)elseif aq<0.01 then ki=q(jy-kh,-MaxPitch,MaxPitch)end;if c(bQ)<5 or VectorToTarget or BrakeLanding or kg or AltitudeHold then if pitchPID==nil then pitchPID=pid.new(5*0.01,0,5*0.1)end;pitchPID:inject(ki)local jz=pitchPID:get()R=R+jz end end;if antigrav~=nil and(antigrav and not ExternalAGG and ar<200000)then if AntigravTargetAltitude==nil or AntigravTargetAltitude<1000 then AntigravTargetAltitude=1000 end;if desiredBaseAltitude~=AntigravTargetAltitude then desiredBaseAltitude=AntigravTargetAltitude;antigrav.setBaseAltitude(desiredBaseAltitude)end end end;am=iM()return iD end;function script.onStart()local function kj()local function kk(kl)local km=dbHud_1.hasKey;for d0,d1 in pairs(kl)do if km(d1)then local cK=f(dbHud_1.getStringValue(d1))if cK~=nil then _G[d1]=cK;aK=true end end end end;if dbHud_1 then if not useTheseSettings then kk(c4())coroutine.yield()kk(b)else kk(b)Z="Updated user preferences used.  Will be saved when you exit seat.\nToggle off useTheseSettings to use saved values"af=5;aK=false end;coroutine.yield()if aK then Z="Loaded Saved Variables"K=x(ResolutionX/2,0)L=x(ResolutionY/2,0)aI=ResolutionX;aJ=ResolutionY;BrakeToggleStatus=BrakeToggleDefault;userControlScheme=string.lower(userControlScheme)be=autoRollPreference;bl=AtmoSpeedLimit;ay=[[rgb(]]..d(C+0.5)..","..d(E+0.5)..","..d(D+0.5)..[[)]]az=[[rgb(]]..d(C*0.9+0.5)..","..d(E*0.9+0.5)..","..d(D*0.9+0.5)..[[)]]elseif not useTheseSettings then Z="No Saved Variables Found - Exit HUD to save settings"end else Z="No databank found. Attach one to control unit and rerun \nthe autoconfigure to save preferences and locations"end;if LastStartTime+180<bB then LastMaxBrakeInAtmo=0 end;LastStartTime=bB;userControlScheme=string.lower(userControlScheme)if string.find("keyboard virtual joystick mouse",userControlScheme)==nil then Z="Invalid User Control Scheme selected.\nChange userControlScheme in Lua Parameters to keyboard, mouse, or virtual joystick\nOr use shift and button in screen"af=7 end;if antigrav and not ExternalAGG then if AntigravTargetAltitude==nil then AntigravTargetAltitude=ar end;antigrav.setBaseAltitude(AntigravTargetAltitude)end;if safeMass==0 then safeMass=au end end;local function kn()local function ko(kp,kq)if kp>kq then kq=kp end;local kr,ks=0,0;if ContainerOptimization>0 then kr=ContainerOptimization*0.05 end;if FuelTankOptimization>0 then ks=FuelTankOptimization*0.05 end;kq=kq*(1-(kr+ks))return kq end;local kt=core.getElementNameById;local ku=fuelX~=0 and fuelY~=0;for d0 in pairs(as)do local type=core.getElementTypeById(as[d0])if n(type,'^.*Atmospheric Engine$')then if n(tostring(core.getElementTagsById(as[d0])),'^.*vertical.*$')then bL=true end end;if n(type,'^.*Space Engine$')then bz=true;if n(tostring(core.getElementTagsById(as[d0])),'^.*vertical.*$')then local kv=core.getElementRotationById(as[d0])if kv[4]<0 then if o(-kv[4],0.1)==0.5 then bx=true end else if o(kv[4],0.1)==0.5 then by=true end end end end;if type=="Landing Gear"then P=true end;if type=="Dynamic Core Unit"then local kw=h(as[d0])if kw>10000 then B=128 elseif kw>1000 then B=64 elseif kw>150 then B=32 end end;aQ=aQ+h(as[d0])if ku and(type=="Atmospheric Fuel Tank"or type=="Space Fuel Tank"or type=="Rocket Fuel Tank")then local kw=h(as[d0])local kx=k(as[d0])local kp=0;local fW=p()if type=="Atmospheric Fuel Tank"then local kq=400;local ky=35.03;if kw>10000 then kq=51200;ky=5480 elseif kw>1300 then kq=6400;ky=988.67 elseif kw>150 then kq=1600;ky=182.67 end;kp=kx-ky;if fuelTankHandlingAtmo>0 then kq=kq+kq*fuelTankHandlingAtmo*0.2 end;kq=ko(kp,kq)aN[#aN+1]={as[d0],kt(as[d0]),kq,ky,kp,fW}end;if type=="Rocket Fuel Tank"then local kq=320;local ky=173.42;if kw>65000 then kq=40000;ky=25740 elseif kw>6000 then kq=5120;ky=4720 elseif kw>700 then kq=640;ky=886.72 end;kp=kx-ky;if fuelTankHandlingRocket>0 then kq=kq+kq*fuelTankHandlingRocket*0.1 end;kq=ko(kp,kq)aP[#aP+1]={as[d0],kt(as[d0]),kq,ky,kp,fW}end;if type=="Space Fuel Tank"then local kq=2400;local ky=182.67;if kw>10000 then kq=76800;ky=5480 elseif kw>1300 then kq=9600;ky=988.67 end;kp=kx-ky;if fuelTankHandlingSpace>0 then kq=kq+kq*fuelTankHandlingSpace*0.2 end;kq=ko(kp,kq)aO[#aO+1]={as[d0],kt(as[d0]),kq,ky,kp,fW}end end end;if not bL then VertTakeOff,VertTakeOffEngine=false,false end end;local function kz()if gyro~=nil then aw=gyro.getState()==1 end;if not stablized then r:deactivateGroundEngineAltitudeStabilization()end;if userControlScheme~="keyboard"then v(1)else v(0)end;if door and(ap or not ap and ar<10000)then for _,d1 in pairs(door)do d1.toggle()end end;if switch then for _,d1 in pairs(switch)do d1.toggle()end end;if forcefield and(ap or not ap==0 and ar<10000)then for _,d1 in pairs(forcefield)do d1.toggle()end end;if antigrav then bM=antigrav.getState()==1;if bM and not ExternalAGG then antigrav.show()end end;if l()==1 and RemoteFreeze then system.freeze(1)else system.freeze(0)end;if P then GearExtended=a.control.isAnyLandingGearExtended()==1;if GearExtended then a.control.extendLandingGears()else a.control.retractLandingGears()end end;if am~=-1 or not ap and vec3(core.getVelocity()):len()<50 then BrakeIsOn=true;GearExtended=true;if P then a.control.extendLandingGears()end else BrakeIsOn=false end;r:setTargetGroundAltitude(bf)if ap and am~=-1 then b7=core.getMaxKinematicsParametersAlongAxis("ground",core.getConstructOrientationUp())[1]end;WasInAtmo=ap end;local function kA(kB,kC,kD,kE,cc,cd,kF,kG,kH,kI)local kJ={enableName=kB,disableName=kC,width=kD,height=kE,x=cc,y=cd,toggleVar=kF,toggleFunction=kG,drawCondition=kH,hovered=false}if kI then table.insert(aH,kJ)else table.insert(aG,kJ)end;return kJ end;local function kK(kL)if not bR then showHandlingVariables=false;showHudVariables=false;showPhysicsVariables=false;showHud=true;return elseif kL=="handling"then showHandlingVariables=not showHandlingVariables;showHudVariables=false;showPhysicsVariables=false elseif kL=="hud"then showHudVariables=not showHudVariables;showHandlingVariables=false;showPhysicsVariables=false elseif kL=="physics"then showPhysicsVariables=not showPhysicsVariables;showHandlingVariables=false;showHudVariables=false end;if showPhysicsVariables or showHudVariables or showHandlingVariables then bS=c4(kL)showHud=false else bS={}showHud=true end end;local function kM()bR=not bR;if bR then aF=aH;Z="Hold SHIFT to see Settings"bT=showHud else aF=aG;Z="Hold SHIFT to see Control Buttons"kK()showHud=bT end end;local function kN(d1)_G[d1]=not _G[d1]if _G[d1]then Z=d1 .." set to true"else Z=d1 .." set to false"end;if d1=="showHud"then bT=_G[d1]elseif d1=="BrakeToggleDefault"then BrakeToggleStatus=BrakeToggleDefault elseif d1=="Cockpit"then system.showScreen(0)dbHud_1.setStringValue("content","")end end;local function kO()local kP=50;local kQ=340;local cc=500;local cd=aJ/2-400;local kR=0;for d0,d1 in pairs(c4("boolean"))do if type(_G[d1])=="boolean"then kA(d1,d1,kQ,kP,cc,cd,function()return _G[d1]end,function()kN(d1)end,function()return true end,true)cd=cd+kP+20;if kR==9 then cc=cc+kQ+20;cd=aJ/2-400;kR=0 else kR=kR+1 end end end;kA("Control View","Control View",kQ,kP,10,aJ/2-500,function()return true end,kM,function()return true end,true)kA("View Handling Settings",'Hide Handling Settings',kQ,kP,10,aJ/2-(500-kP),function()return showHandlingVariables end,function()kK("handling")end,function()return true end,true)kA("View Hud Settings",'Hide Hud Settings',kQ,kP,10,aJ/2-(500-kP*2),function()return showHudVariables end,function()kK("hud")end,function()return true end,true)kA("View Physics Settings",'Hide Physics Settings',kQ,kP,10,aJ/2-(500-kP*3),function()return showPhysicsVariables end,function()kK("physics")end,function()return true end,true)end;local function kS()local function kT()if dbHud_1 then local position=bJ;local fP=planet.name..". "..#SavedLocations;if radar_1 then local dL,_=radar_1.getData():match('"constructId":"([0-9]*)","distance":([%d%.]*)')if dL~=nil and dL~=""then fP=fP.." "..radar_1.getConstructName(dL)end end;local cB={}cB={position=position,name=fP,atmosphere=planet.atmosphericDensityAboveSurface,planetname=planet.name,gravity=planet.gravity,safe=true}SavedLocations[#SavedLocations+1]=cB;table.insert(b0[0],cB)ba.UpdateAtlasLocationsList()Z="Location saved as "..fP else Z="Databank must be installed to save locations"end end;local function kU()TurnBurn=not TurnBurn end;local function kV(kW)if kW==1 then ProgradeIsOn=not ProgradeIsOn;RetrogradeIsOn=false else RetrogradeIsOn=not RetrogradeIsOn;ProgradeIsOn=false end;Autopilot=false;AltitudeHold=false;X=false;BrakeLanding=false;LockPitch=nil;Reentry=false;AutoTakeoff=false end;local function kX()kV(1)end;local function kY()local cA=-1;cA=ba.findAtlasIndex(b0[0])if cA>-1 then table.remove(b0[0],cA)end;cA=-1;cA=ba.findAtlasIndex(SavedLocations)if cA~=-1 then Z=CustomTarget.name.." saved location cleared"table.remove(SavedLocations,cA)end;ba.adjustAutopilotTargetIndex()ba.UpdateAtlasLocationsList()end;local function kZ()local fP=AutopilotTargetName;if fP==nil then local hm=co((bJ-CustomTarget.position):len())fP=CustomTarget.name.." "..hm end;if fP==nil then fP="None"end;return"Engage Autopilot: "..fP end;local function k_()local fP=AutopilotTargetName;if fP==nil then fP=CustomTarget.name end;if fP==nil then fP="None"end;return"Disable Autopilot: "..fP end;local function l0()if safeMass>0 then Z="Safe Mass set to "..x(au,2).." kg"else Z="Intruder Detection reset\nSafe Mass set to "..x(au,2).." kg"af=5;bK=0 end;safeMass=au end;local kP=50;local kQ=260;local l1=kA("Enable Brake Toggle","Disable Brake Toggle",kQ,kP,aI/2-kQ/2,aJ/2+350,function()return BrakeToggleStatus end,function()BrakeToggleStatus=not BrakeToggleStatus;if BrakeToggleStatus then Z="Brakes in Toggle Mode"else Z="Brakes in Default Mode"end end)kA("Align Prograde","Disable Prograde",kQ,kP,aI/2-kQ/2-50-l1.width,aJ/2-kP+380,function()return ProgradeIsOn end,kX)kA("Align Retrograde","Disable Retrograde",kQ,kP,aI/2-kQ/2+l1.width+50,aJ/2-kP+380,function()return RetrogradeIsOn end,kV,function()return aq==0 end)local l2=kA(kZ,k_,600,60,aI/2-600/2,aJ/2-60/2-400,function()return Autopilot end,cv)kA("Save Position","Save Position",200,l2.height,l2.x+l2.width+30,l2.y,function()return false end,kT,function()return AutopilotTargetIndex==0 or CustomTarget==nil end)kA("Update Position","Update Position",200,l2.height,l2.x+l2.width+30,l2.y,function()return false end,cy,function()return AutopilotTargetIndex>0 and CustomTarget~=nil end)kA("Clear Position","Clear Position",200,l2.height,l2.x-200-30,l2.y,function()return true end,kY,function()return AutopilotTargetIndex>0 and CustomTarget~=nil end)kP=60;kQ=300;local cc=10;local cd=aJ/2-500;kA("Show Help","Hide Help",kQ,kP,cc,cd,function()return showHelp end,function()showHelp=not showHelp end)cd=cd+kP+20;kA("View Settings","View Settings",kQ,kP,cc,cd,function()return true end,kM)local cd=aJ/2-300;kA("Enable Turn and Burn","Disable Turn and Burn",kQ,kP,cc,cd,function()return TurnBurn end,kU)kA("Horizontal Takeoff Mode","Vertical Takeoff Mode",kQ,kP,cc+kQ+20,cd,function()return VertTakeOffEngine end,function()VertTakeOffEngine=not VertTakeOffEngine;if VertTakeOffEngine then Z="Vertical Takeoff Mode"else Z="Horizontal Takeoff Mode"end end,function()return bL end)cd=cd+kP+20;kA("Show Orbit Display","Hide Orbit Display",kQ,kP,cc,cd,function()return DisplayOrbit end,function()DisplayOrbit=not DisplayOrbit;if DisplayOrbit then Z="Orbit Display Enabled"else Z="Orbit Display Disabled"end end)kA("Engage Orbiting","Cancel Orbiting",kQ,kP,cc+kQ+20,cd,function()return IntoOrbit end,cs,function()return aq==0 and unit.getClosestPlanetInfluence()>0 end)cd=cd+kP+20;kA("Glide Re-Entry","Cancel Glide Re-Entry",kQ,kP,cc,cd,function()return Reentry end,function()aj=true;kX()end,function()return planet.hasAtmosphere and not ap end)kA("Parachute Re-Entry","Cancel Parachute Re-Entry",kQ,kP,cc+kQ+20,cd,function()return Reentry end,cQ,function()return planet.hasAtmosphere and not ap end)cd=cd+kP+20;kA("Engage Follow Mode","Disable Follow Mode",kQ,kP,cc,cd,function()return X end,cu,function()return l()==1 end)kA("Enable Repair Arrows","Disable Repair Arrows",kQ,kP,cc+kQ+20,cd,function()return aR end,function()aR=not aR;if aR then Z="Repair Arrows Enabled"else Z="Repair Arrows Diabled"end end,function()return l()==1 end)cd=cd+kP+20;if not ExternalAGG then kA("Enable AGG","Disable AGG",kQ,kP,cc,cd,function()return bM end,cR,function()return antigrav~=nil end)end;kA("Reset Intruder Alert","Set Safe Mass",kQ,kP,cc+kQ+20,cd,function()return safeMass>0 end,l0,function()return IntruderAlertSystem end)cd=cd+kP+20;kA(function()return e("Switch IPH Mode - Current: %s",iphCondition)end,function()return e("IPH Mode: %s",iphCondition)end,kQ*2,kP,cc,cd,function()return false end,function()if iphCondition=="All"then iphCondition="Custom Only"elseif iphCondition=="Custom Only"then iphCondition="No Moons"else iphCondition="All"end;Z="IPH Mode: "..iphCondition end)cd=cd+kP+20;kA(function()return e("Toggle Control Scheme - Current: %s",userControlScheme)end,function()return e("Control Scheme: %s",userControlScheme)end,kQ*2,kP,cc,cd,function()return false end,function()if userControlScheme=="keyboard"then userControlScheme="mouse"elseif userControlScheme=="mouse"then userControlScheme="virtual joystick"else userControlScheme="keyboard"end;Z="New Control Scheme: "..userControlScheme end)end;SetupComplete=false;beginSetup=coroutine.create(function()r:setupCustomTargetSpeedRanges(axisCommandId.longitudinal,{1000,5000,10000,20000,30000})kj()coroutine.yield()kn()coroutine.yield()bb=iC()kz()kO()kS()aF=aG;coroutine.yield()b0=d2()b4=d3()b5=b4(d2())b6=es()b8=eX()b9=fj()ba=iu()bb=iC()coroutine.yield()unit.hide()system.showScreen(1)collectgarbage("collect")coroutine.yield()unit.setTimer("apTick",apTickRate)unit.setTimer("hudTick",hudTickRate)unit.setTimer("oneSecond",1)unit.setTimer("tenthSecond",1/10)unit.setTimer("fiveSecond",5)bZ("StartupComplete.mp3","SU")end)end;function script.onStop()_autoconf.hideCategoryPanels()if antigrav~=nil and not ExternalAGG then antigrav.hide()end;if warpdrive~=nil then warpdrive.hide()end;core.hide()a.control.switchOffHeadlights()if door and(aq>0 or aq==0 and ar<10000)then for _,d1 in pairs(door)do d1.toggle()end end;if switch then for _,d1 in pairs(switch)do d1.toggle()end end;if forcefield and(aq>0 or aq==0 and ar<10000)then for _,d1 in pairs(forcefield)do d1.toggle()end end;safeMass=au;cX()if button then button.activate()end;if SetWaypointOnExit then bb.showWayPoint(planet,bJ)end;bZ("ShutdownComplete.mp3","SU")end;function script.onTick(l3)if l3=="contact"then if not contactTimer then contactTimer=0 end;if bB>contactTimer+10 then Z="Radar Contact"bZ("RadarContact.mp3","RC")contactTimer=bB end;unit.stopTimer("contact")elseif l3=="tenthSecond"then local function l4()local l5=system.createData;local l6=system.createWidget;panelInterplanetary=system.createWidgetPanel("Interplanetary Helper")interplanetaryHeader=l6(panelInterplanetary,"value")interplanetaryHeaderText=l5('{"label": "Target Planet", "value": "N/A", "unit":""}')u(interplanetaryHeaderText,interplanetaryHeader)widgetDistance=l6(panelInterplanetary,"value")widgetDistanceText=l5('{"label": "distance", "value": "N/A", "unit":""}')u(widgetDistanceText,widgetDistance)widgetTravelTime=l6(panelInterplanetary,"value")widgetTravelTimeText=l5('{"label": "Travel Time", "value": "N/A", "unit":""}')u(widgetTravelTimeText,widgetTravelTime)widgetMaxMass=l6(panelInterplanetary,"value")widgetMaxMassText=l5('{"label": "Maximum Mass", "value": "N/A", "unit":""}')u(widgetMaxMassText,widgetMaxMass)widgetTargetOrbit=l6(panelInterplanetary,"value")widgetTargetOrbitText=l5('{"label": "Target Altitude", "value": "N/A", "unit":""}')u(widgetTargetOrbitText,widgetTargetOrbit)widgetCurBrakeDistance=l6(panelInterplanetary,"value")widgetCurBrakeDistanceText=l5('{"label": "Cur Brake distance", "value": "N/A", "unit":""}')widgetCurBrakeTime=l6(panelInterplanetary,"value")widgetCurBrakeTimeText=l5('{"label": "Cur Brake Time", "value": "N/A", "unit":""}')widgetMaxBrakeDistance=l6(panelInterplanetary,"value")widgetMaxBrakeDistanceText=l5('{"label": "Max Brake distance", "value": "N/A", "unit":""}')widgetMaxBrakeTime=l6(panelInterplanetary,"value")widgetMaxBrakeTimeText=l5('{"label": "Max Brake Time", "value": "N/A", "unit":""}')widgetTrajectoryAltitude=l6(panelInterplanetary,"value")widgetTrajectoryAltitudeText=l5('{"label": "Projected Altitude", "value": "N/A", "unit":""}')if not ap then u(widgetCurBrakeDistanceText,widgetCurBrakeDistance)u(widgetCurBrakeTimeText,widgetCurBrakeTime)u(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)u(widgetMaxBrakeTimeText,widgetMaxBrakeTime)u(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)end end;local function l7()s(panelInterplanetary)panelInterplanetary=nil end;local function l8()if not Autopilot then if CustomTarget==nil or CustomTarget.planetname~=planet.name then AutopilotDistance=(a9.center-bJ):len()else AutopilotDistance=(CustomTarget.position-bJ):len()end end;local eV=bG;local jB=unit.getThrottle()/100;if AtmoSpeedAssist then jB=F end;local l9,la=b6.computeDistanceAndTime(bG,MaxGameVelocity,au,a:maxForceForward()*jB,warmup,0)local a5,a6;if not TurnBurn then a5,a6=bb.GetAutopilotBrakeDistanceAndTime(MaxGameVelocity)else a5,a6=bb.GetAutopilotTBBrakeDistanceAndTime(MaxGameVelocity)end;local _,lb;if not TurnBurn and eV>0 then _,lb=bb.GetAutopilotBrakeDistanceAndTime(eV)else _,lb=bb.GetAutopilotTBBrakeDistanceAndTime(eV)end;local lc=0;local ld=0;if AutopilotCruising or not Autopilot and eV>5 then ld=b6.computeTravelTime(eV,0,AutopilotDistance)elseif a5+l9<AutopilotDistance then lc=AutopilotDistance-(a5+l9)ld=b6.computeTravelTime(8333.0556,0,lc)else local le=(AutopilotDistance-a5)/l9;l9=AutopilotDistance-a5;la=la*le end;if CustomTarget~=nil and CustomTarget.planetname==planet.name and not Autopilot then return ld elseif AutopilotBraking then return lb elseif AutopilotCruising then return ld+lb else return la+a6+ld end end;local function lf(ie,lg)if ie==nil then ie=core.g()end;ie=x(ie,5)if lg~=nil and lg or(aM==nil or aM~=ie)then local eY=core.getVelocity()local eV=vec3(eY):len()local lh=f(unit.getData()).maxBrake;if lh~=nil and lh>0 and ap then lh=lh/q(eV/100,0.1,1)lh=lh/aq;if aq>0.10 then if LastMaxBrakeInAtmo then LastMaxBrakeInAtmo=(LastMaxBrakeInAtmo+lh)/2 else LastMaxBrakeInAtmo=lh end end end;if lh~=nil and lh>0 then LastMaxBrake=lh end;aM=ie end end;lf(nil,true)if aq>0 and not WasInAtmo then if not bO and AtmoSpeedAssist and(AltitudeHold or Reentry)then ch(1)J=false end end;if bN~=nil then if r:getTargetSpeed(axisCommandId.longitudinal)~=bN then ck(bN,TRUE)else bN=nil end end;if AutopilotTargetName~="None"then if panelInterplanetary==nil then l4()end;if AutopilotTargetName~=nil then local li=CustomTarget~=nil;local lj=LastMaxBrakeInAtmo/a9:getGravity(a9.center+vec3(0,0,1)*a9.radius):len()t(interplanetaryHeaderText,'{"label": "Target", "value": "'..AutopilotTargetName..'", "unit":""}')travelTime=l8()if li and not Autopilot then ag=(bJ-CustomTarget.position):len()else ag=(AutopilotTargetCoords-bJ):len()end;if not TurnBurn then a5,a6=bb.GetAutopilotBrakeDistanceAndTime(bG)a7,a8=bb.GetAutopilotBrakeDistanceAndTime(MaxGameVelocity)else a5,a6=bb.GetAutopilotTBBrakeDistanceAndTime(bG)a7,a8=bb.GetAutopilotTBBrakeDistanceAndTime(MaxGameVelocity)end;local hm=co(ag)t(widgetDistanceText,'{"label": "distance", "value": "'..hm..'"}')t(widgetTravelTimeText,'{"label": "Travel Time", "value": "'..cS(travelTime)..'", "unit":""}')hm=co(a5)t(widgetCurBrakeDistanceText,'{"label": "Cur Brake distance", "value": "'..hm..'"}')t(widgetCurBrakeTimeText,'{"label": "Cur Brake Time", "value": "'..cS(a6)..'", "unit":""}')hm=co(a7)t(widgetMaxBrakeDistanceText,'{"label": "Max Brake distance", "value": "'..hm..'"}')t(widgetMaxBrakeTimeText,'{"label": "Max Brake Time", "value": "'..cS(a8)..'", "unit":""}')t(widgetMaxMassText,'{"label": "Maximum Mass", "value": "'..e("%.2f",lj/1000)..'", "unit":" Tons"}')hm=co(AutopilotTargetOrbit)t(widgetTargetOrbitText,'{"label": "Target Orbit", "value": "'..hm..'"}')if aq>0 and not WasInAtmo then system.removeDataFromWidget(widgetMaxBrakeTimeText,widgetMaxBrakeTime)system.removeDataFromWidget(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)system.removeDataFromWidget(widgetCurBrakeTimeText,widgetCurBrakeTime)system.removeDataFromWidget(widgetCurBrakeDistanceText,widgetCurBrakeDistance)system.removeDataFromWidget(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)WasInAtmo=true end;if aq==0 and WasInAtmo then if t(widgetMaxBrakeTimeText,widgetMaxBrakeTime)==1 then u(widgetMaxBrakeTimeText,widgetMaxBrakeTime)end;if t(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)==1 then u(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)end;if t(widgetCurBrakeTimeText,widgetCurBrakeTime)==1 then u(widgetCurBrakeTimeText,widgetCurBrakeTime)end;if t(widgetCurBrakeDistanceText,widgetCurBrakeDistance)==1 then u(widgetCurBrakeDistanceText,widgetCurBrakeDistance)end;if t(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)==1 then u(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)end;WasInAtmo=false end end else l7()end;if warpdrive~=nil then if f(warpdrive.getData()).destination~="Unknown"and f(warpdrive.getData()).distance>400000 then warpdrive.show()showWarpWidget=true else warpdrive.hide()showWarpWidget=false end end elseif l3=="oneSecond"then local function lk(fz)local ll=0;aD=""local lm=aQ;local ln=0;local lo=0;local lp=0;local fY=0;local fZ=""local lq=core.getElementHitPointsById;for d0 in pairs(as)do local kw=0;local lr=0;lr=h(as[d0])kw=lq(as[d0])ln=ln+kw;if kw<lr then if kw==0 then lp=lp+1 else lo=lo+1 end;if aR and#aA==0 then position=vec3(core.getElementPositionById(as[d0]))local cc=position.x-B;local cd=position.y-B;local ls=position.z-B;table.insert(aA,core.spawnArrowSticker(cc,cd,ls+1,"down"))table.insert(aA,core.spawnArrowSticker(cc,cd,ls+1,"down"))core.rotateSticker(aA[2],0,0,90)table.insert(aA,core.spawnArrowSticker(cc+1,cd,ls,"north"))table.insert(aA,core.spawnArrowSticker(cc+1,cd,ls,"north"))core.rotateSticker(aA[4],90,90,0)table.insert(aA,core.spawnArrowSticker(cc-1,cd,ls,"south"))table.insert(aA,core.spawnArrowSticker(cc-1,cd,ls,"south"))core.rotateSticker(aA[6],90,-90,0)table.insert(aA,core.spawnArrowSticker(cc,cd-1,ls,"east"))table.insert(aA,core.spawnArrowSticker(cc,cd-1,ls,"east"))core.rotateSticker(aA[8],90,0,90)table.insert(aA,core.spawnArrowSticker(cc,cd+1,ls,"west"))table.insert(aA,core.spawnArrowSticker(cc,cd+1,ls,"west"))core.rotateSticker(aA[10],-90,0,90)table.insert(aA,as[d0])end elseif aR and#aA>0 and aA[11]==as[d0]then for fR in pairs(aA)do core.deleteSticker(aA[fR])end;aA={}end end;ll=d(ln/lm*100)if ll<100 then fz[#fz+1]=cb(0,0,"","pbright txt")fY=d(ll*2.55)fZ=e("rgb(%d,%d,%d)",255-fY,fY,0)if ll<100 then fz[#fz+1]=cb("50%",1035,"Elemental Integrity: "..ll.."%","txtbig txtmid","fill:"..fZ)if lp>0 then fz[#fz+1]=cb("50%",1055,"Disabled Modules: "..lp.." Damaged Modules: "..lo,"txtbig txtmid","fill:"..fZ)elseif lo>0 then fz[#fz+1]=cb("50%",1055,"Damaged Modules: "..lo,"txtbig txtmid","fill:"..fZ)end end end end;local function lt()if weapon then if WeaponPanelID==nil and(radarPanelID~=nil or GearExtended)then _autoconf.displayCategoryPanel(weapon,weapon_size,L_TEXT("ui_lua_widget_weapon", "Weapons"),"weapon",true)WeaponPanelID=_autoconf.panels[_autoconf.panels_size]elseif WeaponPanelID~=nil and radarPanelID==nil and not GearExtended then s(WeaponPanelID)WeaponPanelID=nil end end end;local function lu()local fW=p()local ha=bG;local lv=fW-at;if ha>1.38889 then ha=ha/1000;local lw=ha*(fW-at)TotalDistanceTravelled=TotalDistanceTravelled+lw;aa=aa+lw end;ab=ab+lv;TotalFlightTime=TotalFlightTime+lv;at=fW end;local function lx()if safeMass>0 then if au>safeMass+50 then bK=d(au-safeMass)safeMass=-1 elseif au<safeMass then safeMass=au end elseif safeMass==-1 then safeMass=-2 else safeMass=-1 end end;an=false;if IntruderAlertSystem then lx()end;lu()b9.UpdateRadar()b9.UpdatePipe()lt()local fz={}b9.ExtraData(fz)if ShowOdometer then fz=b9.DrawOdometer(fz,aa,TotalDistanceTravelled,ab)end;if ShouldCheckDamage then lk(fz)end;ah=table.concat(fz,"")collectgarbage("collect")elseif l3=="fiveSecond"then if not UseSatNav then return end;ao=dbHud_1.getStringValue("SPBAutopilotTargetName")if ao~=nil and ao~=""and ao~="SatNavNotChanged"then local cK=f(dbHud_1.getStringValue("SavedLocations"))if cK~=nil then _G["SavedLocations"]=cK;local cA=-1;local cB;for d0,d1 in pairs(SavedLocations)do if d1.name and d1.name=="SatNav Location"then cA=d0;break end end;if cA~=-1 then cB=SavedLocations[cA]cA=-1;for d0,d1 in pairs(b0[0])do if d1.name and d1.name=="SatNav Location"then cA=d0;break end end;if cA>-1 then b0[0][cA]=cB end;ba.UpdateAtlasLocationsList()Z=cB.name.." position updated"end end;for i=1,#bU do if bU[i].name==ao then AutopilotTargetIndex=i;system.print("Index = "..AutopilotTargetIndex.." "..bU[i].name)ba.UpdateAutopilotTarget()dbHud_1.setStringValue("SPBAutopilotTargetName","SatNavNotChanged")break end end end elseif l3=="msgTick"then local fz={}b9.DisplayMessage(fz,"empty")Z="empty"unit.stopTimer("msgTick")af=3 elseif l3=="animateTick"then bd=true;bc=false;ad=0;ae=0;unit.stopTimer("animateTick")elseif l3=="hudTick"then local function ly(fz)local lz=d(q(ag/(aI/4)*255,0,255))fz[#fz+1]=e("<line x1='0' y1='0' x2='%fpx' y2='%fpx' style='stroke:rgb(%d,%d,%d);stroke-width:2;transform:translate(50%%, 50%%)' />",ad,ae,d(C+0.5)+lz,d(E+0.5)-lz,d(D+0.5)-lz)end;local function lA()for _,d1 in pairs(aF)do if d1.hovered then if not d1.drawCondition or d1.drawCondition()then d1.toggleFunction()end;d1.hovered=false end end end;local function lB()local function lC(lD,lE,cc,cd,kD,kE)if lD>cc and lD<cc+kD and lE>cd and lE<cd+kE then return true else return false end end;local cc=ad+aI/2;local cd=ae+aJ/2;for _,d1 in pairs(aF)do d1.hovered=lC(cc,cd,d1.x,d1.y,d1.width,d1.height)end end;local function lF(fz)local function lG(fz,lH,hover,cc,cd,eO,lI,lJ,lK,lL,lM)if type(lL)=="function"then lL=lL()end;if type(lM)=="function"then lM=lM()end;fz[#fz+1]=e("<rect x='%f' y='%f' width='%f' height='%f' fill='",cc,cd,eO,lI)if lH then fz[#fz+1]=e("%s'",lJ)else fz[#fz+1]=lK end;if hover then fz[#fz+1]=" style='stroke:white; stroke-width:2'"else fz[#fz+1]=" style='stroke:black; stroke-width:1'"end;fz[#fz+1]="></rect>"fz[#fz+1]=e("<text x='%f' y='%f' font-size='24' fill='",cc+eO/2,cd+lI/2+5)if lH then fz[#fz+1]="black"else fz[#fz+1]="white"end;fz[#fz+1]="' text-anchor='middle' font-family='Montserrat'>"if lH then fz[#fz+1]=e("%s</text>",lL)else fz[#fz+1]=e("%s</text>",lM)end end;local lN="rgb(50,50,50)'"local lO="rgb(210,200,200)"local lP=lG;for _,d1 in pairs(aF)do local kC=d1.disableName;local kB=d1.enableName;if type(kC)=="function"then kC=kC()end;if type(kB)=="function"then kB=kB()end;if not d1.drawCondition or d1.drawCondition()then lP(fz,d1.toggleVar(),d1.hovered,d1.x,d1.y,d1.width,d1.height,lO,lN,kC,kB)end end end;local fz={}b9.HUDPrologue(fz)if showHud then b9.UpdateHud(fz)else if AlwaysVSpd then b9.DrawVerticalSpeed(fz,ar)end;b9.DisplayOrbitScreen(fz)b9.DrawWarnings(fz)end;if bR and bS~={}then b9.DrawSettings(fz)end;b9.HUDEpilogue(fz)fz[#fz+1]=e([[<svg width="100%%" height="100%%" style="position:absolute;top:0;left:0"  viewBox="0 0 %d %d">]],aI,aJ)if Z~="empty"then b9.DisplayMessage(fz,Z)end;if l()==0 and userControlScheme=="virtual joystick"then if DisplayDeadZone then b9.DrawDeadZone(fz)end end;if w()==0 then if l()==1 and Y then lB()lF(fz)if not bc and not bd then local lQ=table.concat(fz,"")fz={}fz[#fz+1]=e("<style>@keyframes test { from { opacity: 0; } to { opacity: 1; } }  body { animation-name: test; animation-duration: 0.5s; }</style><body><svg width='100%%' height='100%%' position='absolute' top='0' left='0'><rect width='100%%' height='100%%' x='0' y='0' position='absolute' style='fill:rgb(6,5,26);'/></svg><svg width='50%%' height='50%%' style='position:absolute;top:30%%;left:25%%' viewbox='0 0 %d %d'>",aI,aJ)fz[#fz+1]=lQ;fz[#fz+1]="</body>"bc=true;fz[#fz+1]=[[</svg></body>]]unit.setTimer("animateTick",0.5)local content=table.concat(fz,"")system.setScreen(content)elseif bd then local lQ=table.concat(fz,"")fz={}fz[#fz+1]=e("<body style='background-color:rgb(6,5,26)'><svg width='50%%' height='50%%' style='position:absolute;top:30%%;left:25%%' viewbox='0 0 %d %d'>",aI,aJ)fz[#fz+1]=lQ;fz[#fz+1]="</body>"end;if not bc then fz[#fz+1]=e([[<g transform="translate(%d %d)"><circle class="cursor" cx="%fpx" cy="%fpx" r="5"/></g>]],K,L,ad,ae)end else lA()end else if not Y and l()==0 then lA()if ag>DeadZone then if DisplayDeadZone then ly(fz)end end else lB()lF(fz)end;fz[#fz+1]=e([[<g transform="translate(%d %d)"><circle class="cursor" cx="%fpx" cy="%fpx" r="5"/></g>]],K,L,ad,ae)end;fz[#fz+1]=[[</svg></body>]]content=table.concat(fz,"")if not DidLogOutput then system.logInfo(LastContent)DidLogOutput=true end elseif l3=="apTick"then bb.APTick()end end;function script.onFlush()local function lR(lS,jI)local lT=vec3()local lU=vec3()if lS==axisCommandId.longitudinal then lT=vec3(core.getConstructOrientationForward())lU=bD elseif lS==axisCommandId.vertical then lT=vec3(core.getConstructOrientationUp())lU=bC elseif lS==axisCommandId.lateral then lT=vec3(core.getConstructOrientationRight())lU=bE else return vec3()end;local lV=vec3(core.getWorldGravity())local lW=lV:dot(lU)local lX=vec3(core.getWorldAirFrictionAcceleration())local lY=lX:dot(lU)local lZ=vec3(core.getVelocity())local l_=lZ:dot(lT)local m0=jI*constants.kph2m;if targetSpeedPID2==nil then targetSpeedPID2=pid.new(10,0,10.0)end;targetSpeedPID2:inject(m0-l_)local m1=targetSpeedPID2:get()local m2=(m1-lY-lW)*lU;return m2 end;local function m3(lS,jI)local lT=vec3()local lU=vec3()if lS==axisCommandId.longitudinal then lT=vec3(core.getConstructOrientationForward())lU=bD elseif lS==axisCommandId.vertical then lT=vec3(core.getConstructOrientationUp())lU=bC elseif lS==axisCommandId.lateral then lT=vec3(core.getConstructOrientationRight())lU=bE else return vec3()end;local lV=vec3(core.getWorldGravity())local lW=lV:dot(lU)local lX=vec3(core.getWorldAirFrictionAcceleration())local lY=lX:dot(lU)local lZ=vec3(core.getVelocity())local l_=lZ:dot(lT)local m0=jI*constants.kph2m;if targetSpeedPID==nil then targetSpeedPID=pid.new(10,0,10.0)end;targetSpeedPID:inject(m0-l_)local m1=targetSpeedPID:get()local m2=(m1-lY-lW)*lU;return m2 end;local function m4(m5,g2,iy)local m6=m5:cross(iy):normalize_inplace()local gO=math.acos(q(m6:dot(-g2),-1,1))*constants.rad2deg;if m6:cross(-g2):dot(iy)<0 then gO=-gO end;return gO end;if antigrav and not ExternalAGG then if not bM and antigrav.getBaseAltitude()~=AntigravTargetAltitude then antigrav.setBaseAltitude(AntigravTargetAltitude)end end;bO=r:getAxisCommandType(0)==axisCommandType.byThrottle;if bO and J then ch(0)J=false elseif not bO and not J then F=0;J=true end;pitchSpeedFactor=math.max(pitchSpeedFactor,0.01)yawSpeedFactor=math.max(yawSpeedFactor,0.01)rollSpeedFactor=math.max(rollSpeedFactor,0.01)torqueFactor=math.max(torqueFactor,0.01)brakeSpeedFactor=math.max(brakeSpeedFactor,0.01)brakeFlatFactor=math.max(brakeFlatFactor,0.01)autoRollFactor=math.max(autoRollFactor,0.01)turnAssistFactor=math.max(turnAssistFactor,0.01)local m7=q(Q+R+system.getControlDeviceForwardInput(),-1,1)local m8=q(T+W+system.getControlDeviceYawInput(),-1,1)local m9=q(U+S-system.getControlDeviceLeftRightInput(),-1,1)local ma=V;bH=vec3(core.getWorldVertical())if bH==nil or bH:len()==0 then bH=(planet.center-bJ):normalize()end;bJ=vec3(core.getConstructWorldPos())bC=vec3(core.getConstructWorldOrientationUp())bD=vec3(core.getConstructWorldOrientationForward())bE=vec3(core.getConstructWorldOrientationRight())bF=vec3(core.getWorldVelocity())au=core.getConstructMass()bG=vec3(bF):len()bI=-bH:dot(bF)bQ=getRoll(bH,bD,bE)local mb=bQ/180*math.pi;local mc=math.cos(mb)local md=math.sin(mb)bP=m4(bH,bD,bE*mc+bC*md)local me=bF:normalize()local mf=c(bQ)local mg=utils.sign(bQ)local mh=vec3(core.getWorldAngularVelocity())local mi=m7*pitchSpeedFactor*bE+m8*rollSpeedFactor*bD+m9*yawSpeedFactor*bC;if be==true and bH:len()>0.01 then local mj=c(bi-bQ)if((ProgradeIsOn or Reentry or aj or AltitudeHold or IntoOrbit)and mj>0 or aq>0.0 and mj<autoRollRollThreshold and autoRollPreference)and m8==0 and c(bP)<85 then local mk=bi;local ml=autoRollFactor;if aq==0 then ml=ml/4;bi=0;mk=0 end;if rollPID==nil then rollPID=pid.new(ml*0.01,0,ml*0.1)end;rollPID:inject(mk-bQ)local mm=rollPID:get()mi=mi+mm*bD end end;if bH:len()>0.01 and aq>0.0 then local mn=20.0;if turnAssist==true and mf>mn and m7==0 and m9==0 then local mo=turnAssistFactor*0.1;local mp=turnAssistFactor*0.025;local mq=(mf-mn)/(180-mn)*180;local mr=0;if mq<90 then mr=mq/90 elseif mq<180 then mr=(180-mq)/90 end;mr=mr*mr;local ms=-mg*mp*(1.0-mr)local mt=mo*mr;mi=mi+mt*bE+ms*bC end end;local mu=1;local mv=0;local mw=1;if system.getMouseWheel()>0 then if AltIsOn then if aq>0 or Reentry then bl=q(bl+speedChangeLarge,0,AtmoSpeedLimit)elseif Autopilot then MaxGameVelocity=q(MaxGameVelocity+speedChangeLarge/3.6*100,0,8333.00)end elseif av then local mx=F;F=x(q(F+speedChangeLarge/100,-1,1),2)if F>=0 and mx<0 then F=0;av=false end end elseif system.getMouseWheel()<0 then if AltIsOn then if aq>0 or Reentry then bl=q(bl-speedChangeLarge,0,AtmoSpeedLimit)elseif Autopilot then MaxGameVelocity=q(MaxGameVelocity-speedChangeLarge/3.6*100,0,8333.00)end elseif av then local mx=F;F=x(q(F-speedChangeLarge/100,-1,1),2)if F<=0 and mx>0 then F=0;av=false end end else av=true end;G=0;if ap and AtmoSpeedAssist and bO then if throttlePID==nil then throttlePID=pid.new(0.5,0,1)end;throttlePID:inject(bl/3.6-bF:dot(bD))local my=throttlePID:get()I=q(my,-1,1)if I<F and aq>0.005 then H=true;r:setThrottleCommand(axisCommandId.longitudinal,q(I,0.01,1))else H=false;r:setThrottleCommand(axisCommandId.longitudinal,F)end;if brakePID==nil then brakePID=pid.new(1*0.01,0,1*0.1)end;brakePID:inject(bF:len()-bl/3.6)local mz=q(brakePID:get(),0,1)if aq>0 and bI<-80 or aq>0.005 then G=mz end;if G>0 then if H and I==0.01 then r:setThrottleCommand(axisCommandId.longitudinal,0)end else I=q(I,0.01,1)end;local mA=''local mB=vec3()local mC=lR(axisCommandId.vertical,ac*1000)a:setEngineForceCommand("vertical airfoil , vertical ground ",mC,mv)local mD='thrust analog longitudinal 'if ExtraLongitudeTags~="none"then mD=mD..ExtraLongitudeTags end;local mE=r:getAxisCommandType(axisCommandId.longitudinal)local mF=r:composeAxisAccelerationFromThrottle(mD,axisCommandId.longitudinal)local mG=m3(axisCommandId.lateral,LeftAmount*1000)mA=mA..' , '.."lateral airfoil , lateral ground "mB=mB+mG;if mB:len()>constants.epsilon then a:setEngineForceCommand(mA,mB,mv,'','','',mw)end;a:setEngineForceCommand(mD,mF,mu)local mH='thrust analog vertical fueled 'local mI='thrust analog lateral fueled 'if ExtraLateralTags~="none"then mI=mI..ExtraLateralTags end;if ExtraVerticalTags~="none"then mH=mH..ExtraVerticalTags end;if ac~=0 or BrakeLanding and BrakeIsOn or not GearExtended and not stablized then a:setEngineForceCommand(mH,mC,mu)else a:setEngineForceCommand(mH,vec3(),mu)end;if LeftAmount~=0 then a:setEngineForceCommand(mI,mG,mu)else a:setEngineForceCommand(mI,vec3(),mu)end;if ma==0 then ma=G end;local mJ=-ma*(brakeSpeedFactor*bF+brakeFlatFactor*me)a:setEngineForceCommand('brake',mJ)else if AtmoSpeedAssist then r:setThrottleCommand(axisCommandId.longitudinal,F)end;local jI=unit.getAxisCommandValue(0)if not bO then if brakePID==nil then brakePID=pid.new(1*0.01,0,1*0.1)end;brakePID:inject(bF:len()-jI/3.6)local mz=q(brakePID:get(),0,1)ma=q(ma+mz,0,1)end;local mJ=-ma*(brakeSpeedFactor*bF+brakeFlatFactor*me)a:setEngineForceCommand('brake',mJ)local mA=''local mB=vec3()local mK=false;local mD='thrust analog longitudinal 'if ExtraLongitudeTags~="none"then mD=mD..ExtraLongitudeTags end;local mE=r:getAxisCommandType(axisCommandId.longitudinal)if mE==axisCommandType.byThrottle then local mF=r:composeAxisAccelerationFromThrottle(mD,axisCommandId.longitudinal)a:setEngineForceCommand(mD,mF,mu)elseif mE==axisCommandType.byTargetSpeed then local mF=r:composeAxisAccelerationFromTargetSpeed(axisCommandId.longitudinal)mA=mA..' , '..mD;mB=mB+mF;if r:getTargetSpeed(axisCommandId.longitudinal)==0 or r:getCurrentToTargetDeltaSpeed(axisCommandId.longitudinal)<-r:getTargetSpeedCurrentStep(axisCommandId.longitudinal)*0.5 then mK=true end end;local mI='thrust analog lateral 'if ExtraLateralTags~="none"then mI=mI..ExtraLateralTags end;local mL=r:getAxisCommandType(axisCommandId.lateral)if mL==axisCommandType.byThrottle then local mM=r:composeAxisAccelerationFromThrottle(mI,axisCommandId.lateral)a:setEngineForceCommand(mI,mM,mu)elseif mL==axisCommandType.byTargetSpeed then local mG=r:composeAxisAccelerationFromTargetSpeed(axisCommandId.lateral)mA=mA..' , '..mI;mB=mB+mG end;local mH='thrust analog vertical 'if ExtraVerticalTags~="none"then mH=mH..ExtraVerticalTags end;local mN=r:getAxisCommandType(axisCommandId.vertical)if mN==axisCommandType.byThrottle then local mC=r:composeAxisAccelerationFromThrottle(mH,axisCommandId.vertical)if ac~=0 or BrakeLanding and BrakeIsOn then a:setEngineForceCommand(mH,mC,mu,'airfoil','ground','',mw)else a:setEngineForceCommand(mH,vec3(),mu)a:setEngineForceCommand('airfoil vertical',mC,mu,'airfoil','','',mw)a:setEngineForceCommand('ground vertical',mC,mu,'ground','','',mw)end elseif mN==axisCommandType.byTargetSpeed then if ac<0 then a:setEngineForceCommand('hover',vec3(),mu)end;local mO=r:composeAxisAccelerationFromTargetSpeed(axisCommandId.vertical)mA=mA..' , '..mH;mB=mB+mO end;if mB:len()>constants.epsilon then if V~=0 or mK or c(me:dot(bD))<0.8 then mA=mA..', brake'end;a:setEngineForceCommand(mA,mB,mv,'','','',mw)end end;local mP=torqueFactor*(mi-mh)local mQ=vec3(core.getWorldAirFrictionAngularAcceleration())mP=mP-mQ;a:setEngineTorqueCommand('torque',mP,mu,'airfoil','','',mw)a:setBoosterCommand('rocket_engine')if a4 and not VanillaRockets then local eV=vec3(core.getVelocity()):len()local mR=0.15;if not bO then local mS=r:getTargetSpeed(axisCommandId.longitudinal)if eV*3.6>mS*(1-mR)and IsRocketOn then IsRocketOn=false;a:toggleBoosters()elseif eV*3.6<mS*(1-mR)and not IsRocketOn then IsRocketOn=true;a:toggleBoosters()end else local jB=unit.getThrottle()if AtmoSpeedAssist then jB=F*100 end;local jI=jB/100;if j==0 then jI=jI*MaxGameVelocity;if eV>=jI*(1-mR)and IsRocketOn then IsRocketOn=false;a:toggleBoosters()elseif eV<jI*(1-mR)and not IsRocketOn then IsRocketOn=true;a:toggleBoosters()end else local jO=d(bl)jI=jI*jO/3.6;if eV>=jI*(1-mR)and IsRocketOn then IsRocketOn=false;a:toggleBoosters()elseif eV<jI*(1-mR)and not IsRocketOn then IsRocketOn=true;a:toggleBoosters()end end end end end;function script.onUpdate()if not SetupComplete then local _,cK=coroutine.resume(beginSetup)if cK then SetupComplete=true end else a:update()if not bc and content~=LastContent then if not Cockpit then system.setScreen(content)else dbHud_1.setStringValue("content",content)end end;LastContent=content end end;function script.onActionStart(mT)local A=1;local function mU(mV)if mV then A=-1 end;if not ExternalAGG and bM then if AntigravTargetAltitude~=nil then AntigravTargetAltitude=AntigravTargetAltitude+A*a1;if AntigravTargetAltitude<1000 then AntigravTargetAltitude=1000 end;if AltitudeHold and AntigravTargetAltitude<HoldAltitude+10 and AntigravTargetAltitude>HoldAltitude-10 then HoldAltitude=AntigravTargetAltitude end else AntigravTargetAltitude=desiredBaseAltitude+A*100 end elseif AltitudeHold or VertTakeOff or IntoOrbit then if IntoOrbit then bu=bu+A*a0;if bu<planet.noAtmosphericDensityAltitude then bu=planet.noAtmosphericDensityAltitude end else HoldAltitude=HoldAltitude+A*a0 end else r:updateTargetGroundAltitudeFromActionStart(A*1.0)end end;local function mW(mV)if mV then A=-1 end;if not Y then if AtmoSpeedAssist and not AltIsOn then F=q(F+A*speedChangeLarge/100,-1,1)else r:updateCommandFromActionStart(axisCommandId.longitudinal,A*speedChangeLarge)end else if mV then A=1 else A=nil end;ba.adjustAutopilotTargetIndex(A)end end;local function mX(mY)local d8=type(mY)if bY==nil then if d8=="table"then if Autopilot or VectorToTarget then cv()end end;if not AltitudeHold and not Autopilot and not VectorToTarget then ct()if d8~="table"then mY=mY+1 end end;bY=mY elseif d8=="table"then bY=nil end end;if mT=="gear"then GearExtended=not GearExtended;if GearExtended then VectorToTarget=false;LockPitch=nil;ch(0)if vBooster or hover then if ap and am==-1 then bZ("BrakeLandingEngaged.mp3","BL")StrongBrakes=true;Reentry=false;AutoTakeoff=false;VertTakeOff=false;AltitudeHold=false;BrakeLanding=true;be=true;GearExtended=false else bZ("LoweringLandingGear.mp3","LG")if ap then BrakeIsOn=true;a.control.extendLandingGears()r:setTargetGroundAltitude(LandingGearGroundHeight)else a.control.extendLandingGears()r:setTargetGroundAltitude(LandingGearGroundHeight)end end end;if P and not BrakeLanding and not(vBooster or hover)then bZ("LoweringLandingGear.mp3","LG")a.control.extendLandingGears()end else if P then bZ("RaisingLandingGear.mp3","LG")a.control.retractLandingGears()end;r:setTargetGroundAltitude(TargetHoverHeight)end elseif mT=="light"then if a.control.isAnyHeadlightSwitchedOn()==1 then a.control.switchOffHeadlights()else a.control.switchOnHeadlights()end elseif mT=="forward"then Q=Q-1 elseif mT=="backward"then if AltIsOn then mX(-bF*5000)else Q=Q+1 end elseif mT=="left"then if AltIsOn then mX(1)else T=T-1 end elseif mT=="right"then if AltIsOn then mX(3)else T=T+1 end elseif mT=="yawright"then U=U-1 elseif mT=="yawleft"then U=U+1 elseif mT=="straferight"then r:updateCommandFromActionStart(axisCommandId.lateral,1.0)LeftAmount=1 elseif mT=="strafeleft"then r:updateCommandFromActionStart(axisCommandId.lateral,-1.0)LeftAmount=-1 elseif mT=="up"then ac=ac+1;r:deactivateGroundEngineAltitudeStabilization()r:updateCommandFromActionStart(axisCommandId.vertical,1.0)elseif mT=="down"then ac=ac-1;r:deactivateGroundEngineAltitudeStabilization()r:updateCommandFromActionStart(axisCommandId.vertical,-1.0)elseif mT=="groundaltitudeup"then mU()elseif mT=="groundaltitudedown"then mU(true)elseif mT=="option1"then ba.adjustAutopilotTargetIndex()toggleView=false elseif mT=="option2"then ba.adjustAutopilotTargetIndex(1)toggleView=false elseif mT=="option3"then local function mZ()aE=not aE;if not aE then bZ("WidgetDisplay.mp3","DH")unit.show()core.show()if atmofueltank_size>0 then _autoconf.displayCategoryPanel(atmofueltank,atmofueltank_size,L_TEXT("ui_lua_widget_atmofuel", "Atmo Fuel"),"fuel_container")fuelPanelID=_autoconf.panels[_autoconf.panels_size]end;if spacefueltank_size>0 then _autoconf.displayCategoryPanel(spacefueltank,spacefueltank_size,L_TEXT("ui_lua_widget_spacefuel", "Space Fuel"),"fuel_container")spacefuelPanelID=_autoconf.panels[_autoconf.panels_size]end;if rocketfueltank_size>0 then _autoconf.displayCategoryPanel(rocketfueltank,rocketfueltank_size,L_TEXT("ui_lua_widget_rocketfuel", "Rocket Fuel"),"fuel_container")rocketfuelPanelID=_autoconf.panels[_autoconf.panels_size]end else bZ("HudDisplay.mp3","DH")unit.hide()core.hide()if fuelPanelID~=nil then s(fuelPanelID)fuelPanelID=nil end;if spacefuelPanelID~=nil then s(spacefuelPanelID)spacefuelPanelID=nil end;if rocketfuelPanelID~=nil then s(rocketfuelPanelID)rocketfuelPanelID=nil end end end;if hideHudOnToggleWidgets then if showHud then showHud=false else showHud=true end end;mZ()toggleView=false elseif mT=="option4"then bY=nil;cv()toggleView=false elseif mT=="option5"then local function m_()if LockPitch==nil then bZ("LockedPitchEngaged.mp3","LP")LockPitch=bP;AutoTakeoff=false;AltitudeHold=false;BrakeLanding=false else bZ("LockedPitchSecured.mp3","LP")LockPitch=nil end end;m_()toggleView=false elseif mT=="option6"then ct()toggleView=false elseif mT=="option7"then sounds=not sounds;if sounds then Z="All HUD sounds enabled"else Z="All HUD sounds disabled"end;toggleView=false elseif mT=="option8"then stablized=not stablized;if not stablized then Z="DeCoupled Mode - Ground Stabilization off"r:deactivateGroundEngineAltitudeStabilization()bZ("GroundStabilizationOff.mp3","GS")else Z="Coupled Mode - Ground Stabilization on"r:activateGroundEngineAltitudeStabilization(currentGroundAltitudeStabilization)a:setEngineForceCommand('hover',vec3(),1)bZ("GroundStabilizationOn.mp3","GS")end;toggleView=false elseif mT=="option9"then if gyro~=nil then gyro.toggle()aw=gyro.getState()==1;if aw then bZ("GyroActivated.mp3","GA")else bZ("GyroDeactivated.mp3","GA")end end;toggleView=false elseif mT=="lshift"then if w()==1 then Y=true;PrevViewLock=w()v(1)elseif l()==1 and ShiftShowsRemoteButtons then Y=true;bd=false;bc=false end elseif mT=="brake"then if BrakeToggleStatus then cD()elseif not BrakeIsOn then cD()else BrakeIsOn=true end elseif mT=="lalt"then toggleView=true;AltIsOn=true;if l()==0 and not freeLookToggle and userControlScheme=="keyboard"then v(1)end elseif mT=="booster"then if VanillaRockets then a:toggleBoosters()elseif not a4 then if not IsRocketOn then a:toggleBoosters()IsRocketOn=true end;a4=true else if IsRocketOn then a:toggleBoosters()IsRocketOn=false end;a4=false end elseif mT=="stopengines"then local function n0()if an then bZ("ClearAll.mp3","CA")an=false;AutopilotAccelerating=false;AutopilotBraking=false;AutopilotCruising=false;Autopilot=false;AutopilotRealigned=false;AutopilotStatus="Aligning"RetrogradeIsOn=false;ProgradeIsOn=false;bY=nil;AltitudeHold=false;Reentry=false;BrakeLanding=false;BrakeIsOn=false;AutoTakeoff=false;VertTakeOff=false;X=false;M=false;aj=false;ak=false;O=false;be=autoRollPreference;VectorToTarget=false;TurnBurn=false;aw=false;LockPitch=nil;IntoOrbit=false else an=true end end;r:resetCommand(axisCommandId.longitudinal)n0()F=0 elseif mT=="speedup"then mW()elseif mT=="speeddown"then mW(true)elseif mT=="antigravity"and not ExternalAGG then if antigrav~=nil then cR()end end end;function script.onActionStop(mT)local function n1()if not ExternalAGG and bM then a3=a1 end;if AltitudeHold or VertTakeOff or IntoOrbit then a2=a0 end end;if mT=="forward"then Q=0 elseif mT=="backward"then Q=0 elseif mT=="left"then if bY==2 then bY=0 else bY=nil end;T=0 elseif mT=="right"then if bY==4 then bY=0 else bY=nil end;T=0 elseif mT=="yawright"then U=0 elseif mT=="yawleft"then U=0 elseif mT=="straferight"then r:updateCommandFromActionStop(axisCommandId.lateral,-1.0)LeftAmount=0 elseif mT=="strafeleft"then r:updateCommandFromActionStop(axisCommandId.lateral,1.0)LeftAmount=0 elseif mT=="up"then ac=0;r:updateCommandFromActionStop(axisCommandId.vertical,-1.0)if stablized then r:activateGroundEngineAltitudeStabilization(currentGroundAltitudeStabilization)a:setEngineForceCommand('hover',vec3(),1)end elseif mT=="down"then ac=0;r:updateCommandFromActionStop(axisCommandId.vertical,1.0)if stablized then r:activateGroundEngineAltitudeStabilization(currentGroundAltitudeStabilization)a:setEngineForceCommand('hover',vec3(),1)end elseif mT=="groundaltitudeup"then n1()toggleView=false elseif mT=="groundaltitudedown"then n1()toggleView=false elseif mT=="lshift"then if w()==1 then Y=false;ad=0;ae=0;v(PrevViewLock)elseif l()==1 and ShiftShowsRemoteButtons then Y=false;bd=false;bc=false end elseif mT=="brake"then if not BrakeToggleStatus then if BrakeIsOn then cD()else BrakeIsOn=false end end elseif mT=="lalt"then if l()==0 and freeLookToggle then if toggleView then if w()==1 then v(0)else v(1)end else toggleView=true end elseif l()==0 and not freeLookToggle and userControlScheme=="keyboard"then v(0)end;AltIsOn=false end end;function script.onActionLoop(mT)local A=1;local function n2(mV)if mV then A=-1 end;if not ExternalAGG and bM then if AntigravTargetAltitude~=nil then AntigravTargetAltitude=AntigravTargetAltitude+A*a3;if AntigravTargetAltitude<1000 then AntigravTargetAltitude=1000 end;if AltitudeHold and AntigravTargetAltitude<HoldAltitude+10 and AntigravTargetAltitude>HoldAltitude-10 then HoldAltitude=AntigravTargetAltitude end;a3=a3*1.05;BrakeIsOn=false else AntigravTargetAltitude=desiredBaseAltitude+A*100;BrakeIsOn=false end elseif AltitudeHold or VertTakeOff or IntoOrbit then if IntoOrbit then bu=bu+A*a2;if bu<planet.noAtmosphericDensityAltitude then bu=planet.noAtmosphericDensityAltitude end else HoldAltitude=HoldAltitude+A*a2 end;a2=a2*1.05 else r:updateTargetGroundAltitudeFromActionLoop(A*1.0)end end;local function n3(mV)if mV then A=-1 end;if not Y then if AtmoSpeedAssist and not AltIsOn then F=q(F+A*speedChangeSmall/100,-1,1)else r:updateCommandFromActionLoop(axisCommandId.longitudinal,A*speedChangeSmall)end end end;if mT=="groundaltitudeup"then n2()elseif mT=="groundaltitudedown"then n2(true)elseif mT=="speedup"then n3()elseif mT=="speeddown"then n3(true)end end;function script.onInputText(ce)local function n4()for d0,d1 in pairs(c4())do dbHud_1.setStringValue(d1,g(nil))end;for d0,d1 in pairs(b)do if d1~="SavedLocations"then dbHud_1.setStringValue(d1,g(nil))end end;Z="Databank wiped except Save Locations. New variables will save after re-enter seat and exit"af=5;aK=false end;local function n5(n6,planet,eZ,gK)local function n7(eZ)local y=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local dg='::pos{'..y..','..y..','..y..','..y..','..y..'}'local dt,du,dB,dC,dD=n(eZ,dg)if dt=="0"and du=="0"then return vec3(tonumber(dB),tonumber(dC),tonumber(dD))end;dC=math.rad(dC)dB=math.rad(dB)local planet=b0[tonumber(dt)][tonumber(du)]local ep=math.cos(dB)local n8=vec3(ep*math.cos(dC),ep*math.sin(dC),math.sin(dB))return planet.center+(planet.radius+dD)*n8 end;if dbHud_1 or gK then local cB={}local position=n7(eZ)if planet.name=="Space"then cB={position=position,name=n6,atmosphere=0,planetname=planet.name,gravity=planet.gravity}else cB={position=position,name=n6,atmosphere=planet.atmosphericDensityAboveSurface,planetname=planet.name,gravity=planet.gravity}end;if not gK then SavedLocations[#SavedLocations+1]=cB else for d0,d1 in pairs(b0[0])do if d1.name and n6==d1.name then table.remove(b0[0],d0)end end end;table.insert(b0[0],cB)ba.UpdateAtlasLocationsList()else Z="Databank must be installed to save permanent locations"end end;local i;local n9,na=nil,nil;local nb="Command List:\n/commands \n/setname <newname> - Updates current selected saved position name\n/G VariableName newValue - Updates global variable to new value\n".."/G dump - shows all variables updatable by /G\n/agg <targetheight> - Manually set agg target height\n".."/addlocation SafeZoneCenter ::pos{0,0,13771471,7435803,-128971} - adds a saved location by waypoint, not as accurate as making one at location\n".."/::pos{0,0,13771471,7435803,-128971} - adds a temporary waypoint that is not saved to databank with name 0Temp\n".."/copydatabank - copies dbHud databank to a blank databank\n".."/iphWP - displays current IPH target's ::pos waypoint in lua chat"i=string.find(ce," ")n9=ce;if i~=nil then n9=string.sub(ce,0,i-1)na=string.sub(ce,i+1)end;if n9=="/help"or n9=="/commands"then for il in string.gmatch(nb,"([^\n]+)")do system.print(il)end;return elseif n9=="/setname"then if na==nil or na==""then Z="Usage: ah-setname Newname"return end;if AutopilotTargetIndex>0 and CustomTarget~=nil then cy(na)else Z="Select a saved target to rename first"end elseif n9=="/addlocation"or string.find(ce,"::pos")~=nil then local gK=false;local n6="0-Temp"if na==nil or na==""then na=n9;gK=true end;i=string.find(na,"::")if not gK then n6=string.sub(na,1,i-2)end;local eZ=string.sub(na,i)local y=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local dg='::pos{'..y..','..y..','..y..','..y..','..y..'}'local dt,du,dB,dC,dD=n(eZ,dg)local planet=b0[tonumber(dt)][tonumber(du)]n5(n6,planet,eZ,gK)Z="Added "..n6 .." to saved locations,\nplanet "..planet.name.." at "..eZ;af=5 elseif n9=="/agg"then if na==nil or na==""then Z="Usage: /agg targetheight"return end;na=tonumber(na)if na<1000 then na=1000 end;AntigravTargetAltitude=na;Z="AGG Target Height set to "..na elseif n9=="/G"then if na==nil or na==""then Z="Usage: /G VariableName variablevalue\n/G dump - shows all variables"return end;if na=="dump"then for d0,d1 in pairs(c4())do if type(_G[d1])=="boolean"then if _G[d1]==true then system.print(d1 .." true")else system.print(d1 .." false")end elseif _G[d1]==nil then system.print(d1 .." nil")else system.print(d1 .." ".._G[d1])end end;return end;i=string.find(na," ")local nc=string.sub(na,0,i-1)local nd=string.sub(na,i+1)for d0,d1 in pairs(c4())do if d1==nc then Z="Variable "..nc.." changed to "..nd;local ne=type(_G[d1])if ne=="number"then nd=tonumber(nd)elseif ne=="boolean"then if string.lower(nd)=="true"then nd=true else nd=false end end;_G[d1]=nd;return end end;Z="No such global variable: "..nc elseif n9=="/copydatabank"then if dbHud_2 then cX(true)else Z="Spare Databank required to copy databank"end elseif n9=="/iphWP"then if AutopilotTargetIndex>0 then system.print(bb.showWayPoint(a9,AutopilotTargetCoords,true))Z="::pos waypoint shown in lua chat"else Z="No target selected in IPH"end end end;function script.onEnter(dL)if radar_1 and not ap and not bV then unit.setTimer("contact",0.1)end end;script.onStart()
        
        
        -- error handling code added by wrap.lua
        end, __wrap_lua__traceback)
        if not ok then
          __wrap_lua__error(message)
          if not script then script = {} end
        end
    stop:
      lua: |
        if not __wrap_lua__stopped and script.onStop then
          local ok, message = xpcall(script.onStop,__wrap_lua__traceback,unit)
          if not ok then __wrap_lua__error(message) end
        end
    tick(timerId):
      lua: |
        if not __wrap_lua__stopped and script.onTick then
          local ok, message = xpcall(script.onTick,__wrap_lua__traceback,timerId,unit)
          if not ok then __wrap_lua__error(message) end
        end
  system:
    actionStart(action):
      lua: |
        if not __wrap_lua__stopped and script.onActionStart then
          local ok, message = xpcall(script.onActionStart,__wrap_lua__traceback,action,system)
          if not ok then __wrap_lua__error(message) end
        end
    actionStop(action):
      lua: |
        if not __wrap_lua__stopped and script.onActionStop then
          local ok, message = xpcall(script.onActionStop,__wrap_lua__traceback,action,system)
          if not ok then __wrap_lua__error(message) end
        end
    actionLoop(action):
      lua: |
        if not __wrap_lua__stopped and script.onActionLoop then
          local ok, message = xpcall(script.onActionLoop,__wrap_lua__traceback,action,system)
          if not ok then __wrap_lua__error(message) end
        end
    update:
      lua: |
        if not __wrap_lua__stopped and script.onUpdate then
          local ok, message = xpcall(script.onUpdate,__wrap_lua__traceback,system)
          if not ok then __wrap_lua__error(message) end
        end
    flush:
      lua: |
        if not __wrap_lua__stopped and script.onFlush then
          local ok, message = xpcall(script.onFlush,__wrap_lua__traceback,system)
          if not ok then __wrap_lua__error(message) end
        end
    inputText(text):
      lua: |
        if not __wrap_lua__stopped and script.onInputText then
          local ok, message = xpcall(script.onInputText,__wrap_lua__traceback,text,system)
          if not ok then __wrap_lua__error(message) end
        end
  radar_1:
    enter(id):
      lua: |
        local radar = radar_1
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_1
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_2:
    enter(id):
      lua: |
        local radar = radar_2
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_2
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_3:
    enter(id):
      lua: |
        local radar = radar_3
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_3
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_4:
    enter(id):
      lua: |
        local radar = radar_4
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_4
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_5:
    enter(id):
      lua: |
        local radar = radar_5
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_5
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_6:
    enter(id):
      lua: |
        local radar = radar_6
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_6
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_7:
    enter(id):
      lua: |
        local radar = radar_7
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_7
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_8:
    enter(id):
      lua: |
        local radar = radar_8
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_8
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_9:
    enter(id):
      lua: |
        local radar = radar_9
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_9
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_10:
    enter(id):
      lua: |
        local radar = radar_10
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_10
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
