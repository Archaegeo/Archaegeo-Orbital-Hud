name: ArchHud - Archaegeo v1.7061 (Minified)
slots:
  core:
    class: CoreUnit
  radar:
    class: RadarPVPUnit
    select: manual
  antigrav:
    class: AntiGravityGeneratorUnit
  warpdrive:
    class: WarpDriveUnit
  gyro:
    class: GyroUnit
  weapon:
    class: WeaponUnit
    select: manual
  dbHud:
    class: databank
    select: manual
  telemeter:
    class: TelemeterUnit
    select: manual
  vBooster:
    class: VerticalBooster
  hover:
    class: Hovercraft
  door:
    class: DoorUnit
    select: manual
  switch:
    class: ManualSwitchUnit
    select: manual
  forcefield:
    class: ForceFieldUnit
    select: manual
  atmofueltank:
    class: AtmoFuelContainer
    select: manual
  spacefueltank:
    class: SpaceFuelContainer
    select: manual
  rocketfueltank:
    class: RocketFuelContainer
    select: manual
  shield:
    class: ShieldGeneratorUnit
    select: manual
handlers:
  unit:
    start:
      lua: |
        __wrap_lua__stopped=false
        __wrap_lua__stopOnError=false
        __wrap_lua__rethrowErrorAlways=false
        __wrap_lua__rethrowErrorIfStopped=true
        __wrap_lua__printError=true
        __wrap_lua__showErrorOnScreens=true
        function __wrap_lua__error(a) if __wrap_lua__stopped then return end a=tostring(a):gsub('"%-%- |STDERROR%-EVENTHANDLER[^"]*"','chunk'):gsub("&","&amp;"):gsub("<","&lt;"):gsub(">","&gt;") local b=unit or self or {} if __wrap_lua__showErrorOnScreens then for _,c in pairs(b) do if type(c)=="table" and c.setCenteredText and c.setHTML then if a:match("\n") then c.setHTML([[<pre style="color: white; background-color: black; font-family: Consolas,monospace; font-size: 4vh; white-space: pre-wrap; margin: 1em">
          Error: ]]..a..[[</pre>]]) else c.setCenteredText(a) end end end end if __wrap_lua__printError and system and system.print then system.print("Error: "..a:gsub("\n","<br>")) end if __wrap_lua__stopOnError then __wrap_lua__stopped=true end if __wrap_lua__stopped and b and b.exit then b.exit() end if __wrap_lua__rethrowErrorAlways or (__wrap_lua__stopped and __wrap_lua__rethrowErrorIfStopped) then error(a) end end __wrap_lua__traceback=traceback or (debug and debug.traceback) or function(a,b)return b or a end local a,b=xpcall(function() package.preload['ArchHUD:autoconf/custom/archhud/globals']=function(...)a=false;b="virtual joystick"c="archHUD"d=true;e=true;f=false;g=false;h=false;i=false;j=false;k=false;l=false;m=false;n=true;o=false;p=true;q=false;r=true;s=true;t=true;u=true;v=false;w=false;x=true;y=true;z=true;A=true;B=true;C=true;D=true;E={userControlScheme={set=function(F)b=F end,get=function()return b end},soundFolder={set=function(F)c=F end,get=function()return c end},freeLookToggle={set=function(F)d=F end,get=function()return d end},BrakeToggleDefault={set=function(F)e=F end,get=function()return e end},RemoteFreeze={set=function(F)f=F end,get=function()return f end},brightHud={set=function(F)h=F end,get=function()return h end},RemoteHud={set=function(F)g=F end,get=function()return g end},VanillaRockets={set=function(F)i=F end,get=function()return i end},InvertMouse={set=function(F)j=F end,get=function()return j end},autoRollPreference={set=function(F)k=F end,get=function()return k end},ExternalAGG={set=function(F)l=F end,get=function()return l end},UseSatNav={set=function(F)m=F end,get=function()return m end},ShouldCheckDamage={set=function(F)n=F end,get=function()return n end},CalculateBrakeLandingSpeed={set=function(F)o=F end,get=function()return o end},AtmoSpeedAssist={set=function(F)p=F end,get=function()return p end},ForceAlignment={set=function(F)q=F end,get=function()return q end},DisplayDeadZone={set=function(F)r=F end,get=function()return r end},showHud={set=function(F)s=F end,get=function()return s end},hideHudOnToggleWidgets={set=function(F)t=F end,get=function()return t end},ShiftShowsRemoteButtons={set=function(F)u=F end,get=function()return u end},SetWaypointOnExit={set=function(F)v=F end,get=function()return v end},AlwaysVSpd={set=function(F)w=F end,get=function()return w end},BarFuelDisplay={set=function(F)x=F end,get=function()return x end},voices={set=function(F)y=F end,get=function()return y end},alerts={set=function(F)z=F end,get=function()return z end},CollisionSystem={set=function(F)A=F end,get=function()return A end},AutoShieldToggle={set=function(F)B=F end,get=function()return B end},PreventPvP={set=function(F)C=F end,get=function()return C end},DisplayOdometer={set=function(F)D=F end,get=function()return D end}}G=35;H=35;I=30;J=30;K=-30;L=0;M=5000;N=1.2;O=2000;P=1050;Q=30000;R=1000;S=50;T=0;U=100000;V=8333.00;W=1.0;X=32;Y=0;Z=0;_=0;a0=0;a1=0;a2={YawStallAngle={set=function(F)G=F end,get=function()return G end},PitchStallAngle={set=function(F)H=F end,get=function()return H end},brakeLandingRate={set=function(F)I=F end,get=function()return I end},MaxPitch={set=function(F)J=F end,get=function()return J end},ReEntryPitch={set=function(F)K=F end,get=function()return K end},LockPitchTarget={set=function(F)L=F end,get=function()return L end},AutopilotSpaceDistance={set=function(F)M=F end,get=function()return M end},TargetOrbitRadius={set=function(F)N=F end,get=function()return N end},LowOrbitHeight={set=function(F)O=F end,get=function()return O end},AtmoSpeedLimit={set=function(F)P=F end,get=function()return P end},SpaceSpeedLimit={set=function(F)Q=F end,get=function()return Q end},AutoTakeoffAltitude={set=function(F)R=F end,get=function()return R end},TargetHoverHeight={set=function(F)S=F end,get=function()return S end},LandingGearGroundHeight={set=function(F)T=F end,get=function()return T end},ReEntryHeight={set=function(F)U=F end,get=function()return U end},MaxGameVelocity={set=function(F)V=F end,get=function()return V end},AutopilotInterplanetaryThrottle={set=function(F)W=F end,get=function()return W end},warmup={set=function(F)X=F end,get=function()return X end},fuelTankHandlingAtmo={set=function(F)Y=F end,get=function()return Y end},fuelTankHandlingSpace={set=function(F)Z=F end,get=function()return Z end},fuelTankHandlingRocket={set=function(F)_=F end,get=function()return _ end},ContainerOptimization={set=function(F)a0=F end,get=function()return a0 end},FuelTankOptimization={set=function(F)a1=F end,get=function()return a1 end}}a3=1920;a4=1080;a5=400;a6=130;a7=224;a8=255;a9=255;aa=0;ab=0;ac=960;ad=540;ae=1300;af=540;ag=1525;ah=325;ai=550;aj=540;ak=30;al=700;am=1750;an=250;ao=50;ap=250;aq=0;ar=30;as=100;at={ResolutionX={set=function(F)a3=F end,get=function()return a3 end},ResolutionY={set=function(F)a4=F end,get=function()return a4 end},circleRad={set=function(F)a5=F end,get=function()return a5 end},SafeR={set=function(F)a6=F end,get=function()return a6 end},SafeG={set=function(F)a7=F end,get=function()return a7 end},SafeB={set=function(F)a8=F end,get=function()return a8 end},PvPR={set=function(F)a9=F end,get=function()return a9 end},PvPG={set=function(F)aa=F end,get=function()return aa end},PvPB={set=function(F)ab=F end,get=function()return ab end},centerX={set=function(F)ac=F end,get=function()return ac end},centerY={set=function(F)ad=F end,get=function()return ad end},throtPosX={set=function(F)ae=F end,get=function()return ae end},throtPosY={set=function(F)af=F end,get=function()return af end},vSpdMeterX={set=function(F)ag=F end,get=function()return ag end},vSpdMeterY={set=function(F)ah=F end,get=function()return ah end},altMeterX={set=function(F)ai=F end,get=function()return ai end},altMeterY={set=function(F)aj=F end,get=function()return aj end},fuelX={set=function(F)ak=F end,get=function()return ak end},fuelY={set=function(F)al=F end,get=function()return al end},shieldX={set=function(F)am=F end,get=function()return am end},shieldY={set=function(F)an=F end,get=function()return an end},DeadZone={set=function(F)ao=F end,get=function()return ao end},OrbitMapSize={set=function(F)ap=F end,get=function()return ap end},OrbitMapX={set=function(F)aq=F end,get=function()return aq end},OrbitMapY={set=function(F)ar=F end,get=function()return ar end},soundVolume={set=function(F)as=F end,get=function()return as end}}au=5;av=1;aw=0.003;ax=0.003;ay=2;az=1.5;aA=180;aB=150;aC=0.002;aD=2;aE=0.8;aF=1;aG=3;aH=1;aI=40;aJ=0.0166667;aK=0.0666667;aL="none"aM="none"aN="none"aO={speedChangeLarge={set=function(F)au=F end,get=function()return au end},speedChangeSmall={set=function(F)av=F end,get=function()return av end},MouseXSensitivity={set=function(F)aw=F end,get=function()return aw end},MouseYSensitivity={set=function(F)ax=F end,get=function()return ax end},autoRollFactor={set=function(F)ay=F end,get=function()return ay end},rollSpeedFactor={set=function(F)az=F end,get=function()return az end},autoRollRollThreshold={set=function(F)aA=F end,get=function()return aA end},minRollVelocity={set=function(F)aB=F end,get=function()return aB end},TrajectoryAlignmentStrength={set=function(F)aC=F end,get=function()return aC end},torqueFactor={set=function(F)aD=F end,get=function()return aD end},pitchSpeedFactor={set=function(F)aE=F end,get=function()return aE end},yawSpeedFactor={set=function(F)aF=F end,get=function()return aF end},brakeSpeedFactor={set=function(F)aG=F end,get=function()return aG end},brakeFlatFactor={set=function(F)aH=F end,get=function()return aH end},DampingMultiplier={set=function(F)aI=F end,get=function()return aI end},apTickRate={set=function(F)aJ=F end,get=function()return aJ end},hudTickRate={set=function(F)aK=F end,get=function()return aK end},ExtraLongitudeTags={set=function(F)aL=F end,get=function()return aL end},ExtraLateralTags={set=function(F)aM=F end,get=function()return aM end},ExtraVerticalTags={set=function(F)aN=F end,get=function()return aN end}}aP=e;aQ=false;aR=false;aS=false;aT=false;aU=false;aV=false;aW=false;aX=false;aY=false;aZ=false;a_=false;b0=1000;b1=false;b2=false;b3=false;b4=false;b5=0;b6="Aligning"b7=0;b8=1;b9="None"ba=nil;bb=0;bc=nil;bd=0.0;be=0;bf={}bg=false;bh=0;bi=0;bj=nil;bk=0;bl=1000;bm=0;bn=false;bo=0;bp=false;bq="All"br=true;bs="Off"bt=0.000;bu={}bv={VertTakeOff={set=function(F)a_=F end,get=function()return a_ end},VertTakeOffEngine={set=function(F)aQ=F end,get=function()return aQ end},SpaceTarget={set=function(F)bn=F end,get=function()return bn end},BrakeToggleStatus={set=function(F)aP=F end,get=function()return aP end},BrakeIsOn={set=function(F)aR=F end,get=function()return aR end},RetrogradeIsOn={set=function(F)aS=F end,get=function()return aS end},ProgradeIsOn={set=function(F)aT=F end,get=function()return aT end},Autopilot={set=function(F)aU=F end,get=function()return aU end},TurnBurn={set=function(F)aV=F end,get=function()return aV end},AltitudeHold={set=function(F)aW=F end,get=function()return aW end},BrakeLanding={set=function(F)aX=F end,get=function()return aX end},Reentry={set=function(F)aZ=F end,get=function()return aZ end},AutoTakeoff={set=function(F)aY=F end,get=function()return aY end},HoldAltitude={set=function(F)b0=F end,get=function()return b0 end},AutopilotAccelerating={set=function(F)b1=F end,get=function()return b1 end},AutopilotBraking={set=function(F)b3=F end,get=function()return b3 end},AutopilotCruising={set=function(F)b4=F end,get=function()return b4 end},AutopilotRealigned={set=function(F)b2=F end,get=function()return b2 end},AutopilotEndSpeed={set=function(F)b5=F end,get=function()return b5 end},AutopilotStatus={set=function(F)b6=F end,get=function()return b6 end},AutopilotPlanetGravity={set=function(F)b7=F end,get=function()return b7 end},PrevViewLock={set=function(F)b8=F end,get=function()return b8 end},AutopilotTargetName={set=function(F)b9=F end,get=function()return b9 end},AutopilotTargetCoords={set=function(F)ba=F end,get=function()return ba end},AutopilotTargetIndex={set=function(F)bb=F end,get=function()return bb end},TotalDistanceTravelled={set=function(F)bd=F end,get=function()return bd end},TotalFlightTime={set=function(F)be=F end,get=function()return be end},SavedLocations={set=function(F)bf=F end,get=function()return bf end},VectorToTarget={set=function(F)bg=F end,get=function()return bg end},LocationIndex={set=function(F)bh=F end,get=function()return bh end},LastMaxBrake={set=function(F)bi=F end,get=function()return bi end},LockPitch={set=function(F)bj=F end,get=function()return bj end},LastMaxBrakeInAtmo={set=function(F)bk=F end,get=function()return bk end},AntigravTargetAltitude={set=function(F)bl=F end,get=function()return bl end},LastStartTime={set=function(F)bm=F end,get=function()return bm end},iphCondition={set=function(F)bq=F end,get=function()return bq end},stablized={set=function(F)br=F end,get=function()return br end},UseExtra={set=function(F)bs=F end,get=function()return bs end},SelectedTab={set=function(F)bw=F end,get=function()return bw end},saveRoute={set=function(F)bu=F end,get=function()return bu end}}end;package.preload['ArchHUD:autoconf/custom/archhud/custom/customhudclass']=function(...)local bx={}return bx end;package.preload['ArchHUD:autoconf/custom/archhud/hudclass']=function(...)function by(bz,bA,bB,bC,bD,radar_1,radar_2,antigrav,hover,bE,bF,bG,bH,bI,bJ,bK,bL,bM,bN,bO,bP,bQ,bR,bS,bT,bU)local bV=9.80665;local bW={}local bX={}local bY={}local bZ={}local b_=nil;local c0=nil;local c1=nil;local c2=false;local c3="none"local c4=""local c5=vec3({13771471,7435803,-128971})local c6=18000000;local c7=500000;local c8,c9=math.huge;local ca;local function cb(cc)c8=vec3(cc):dist(c5)if c8<c6 then return true,bF(c8-c6)end;c9=vec3(cc):dist(vec3(cd.center))if c9<c7 then ca=true else ca=false end;if bF(c9-c7)<bF(c8-c6)then return ca,bF(c9-c7)else return ca,bF(c8-c6)end end;local function ce(cf)if cg==1920 then return cf else return bT(cg*cf/1920,0)end end;local function ch(cf)if ci==1080 then return cf else return bT(ci*cf/1080,0)end end;local function cj()return bR()==0 and b~="keyboard"and bL()==0 end;local function ck()local cl="TRAVEL"if not cm then cl="CRUISE"end;if aU then cl="AUTOPILOT"end;return cl end;local cn=""local co=""local cp=""local cq=1;local cr=2;local cs=3;local ct=4;local cu=5;local cv=6;local cw=""local cx=0;local cy=bG(1/aJ)*2*aK;local cz={}local cA={}local cB={}local cC={}local cD={}local cE={}local function cF(cG,cH,cI,cJ,cK,cL)local cM=cN;local cO=cN+5;if not x then cO=cO+5 end;if bL()==1 and not g then cM=cM-50;cO=cO-50 end;if cI=="ATMO"then cw="atmofueltank"elseif cI=="SPACE"then cw="spacefueltank"else cw="rocketfueltank"end;cx=_G[cw.."_size"]if#cJ>0 then for F=1,#cJ do local cP=string.sub(cJ[F][cr],1,12)local cQ=0;for cR=1,cx do if cJ[F][cr]==bI(bB[cw.."_"..cR].getData()).name then cQ=cR;break end end;local cS=bN()if cK[F]==nil or cL[F]==nil or cS-cJ[F][cv]>cy then local cT;local cU=0;if cQ~=0 then cL[F]=bI(bB[cw.."_"..cQ].getData()).percentage;cK[F]=bI(bB[cw.."_"..cQ].getData()).timeLeft;if cK[F]=="n/a"then cK[F]=0 end else cU=bK(cJ[F][cq])-cJ[F][ct]cL[F]=bG(0.5+cU*100/cJ[F][cs])cT=cJ[F][cu]if cT<=cU then cK[F]=0 else cK[F]=bG(0.5+cU/((cT-cU)/(cS-cJ[F][cv])))end;cJ[F][cu]=cU;cJ[F][cv]=cS end end;if cP==cH then cP=bH("%s %d",cI,F)end;if cQ==0 then cP=cP.." *"end;local cV;if cK[F]==0 then cV=""else cV=cW(cK[F])end;if cL[F]~=nil then local cX=bG(cL[F]*2.55)local cY=bH("rgb(%d,%d,%d)",255-cX,cX,0)local cZ=""if cV~=""and cK[F]<120 or cL[F]<5 then cZ="red "end;local c_=bH("rgb(%d,%d,%d)",bO(bG((255-cX)/2.55),50,100),bO(bG(cX/2.55),0,50),50)local d0="rgb(196,0,255)"if cI=="ATMO"then d0="rgb(0,188,255)"elseif cI=="SPACE"then d0="rgb(239,255,0)"end;local d1=false;if d2~=d0 then d1=true end;d2=d0;if x then if d1 then cM=cM-5;cO=cO-5 end;co=co..bH([[
                                        <g class="pdim">                        
                                        <rect fill=%s class="bar" stroke=%s x="%d" y="%d" width="170" height="20"></rect></g>
                                        <g class="bar txtstart">
                                        <rect fill=%s width="%d" height="18" x="%d" y="%d"></rect>
                                        <text class="txtstart" fill="white" x="%d" y="%d" style="font-family:Play;font-size:14px">%s %s%%&nbsp;&nbsp;&nbsp;&nbsp;%s</text>
                                        </g>]],c_,d0,cG,cO,cY,bG(cL[F]*1.7+0.5)-2,cG+1,cO+1,cG+5,cO+14,cP,cL[F],cV)cM=cM-22;cO=cO-22 else co=co..bU(cG,cM,cP,cZ.."pdim txtfuel")co=co..bU(cG,cO,bH("%d%% %s",cL[F],cV),"pdim txtfuel","fill:"..cY)cM=cM+30;cO=cO+30 end end end end;cN=cM end;local function d3(d4,d5)if ag==0 and ah==0 then return end;if d5<200000 and not d6 or d5 and d6 then local d7=0;if bF(d8)>1 then d7=45*math.log(bF(d8),10)if d8<0 then d7=-d7 end end;d4[#d4+1]=bH([[
                            <g class="pbright txt txtvspd" transform="translate(%d %d) scale(0.6)">
                                    <text x="55" y="-41">1000</text>
                                    <text x="10" y="-65">100</text>
                                    <text x="-45" y="-45">10</text>
                                    <text x="-73" y="3">O</text>
                                    <text x="-45" y="52">-10</text>
                                    <text x="10" y="72">-100</text>
                                    <text x="55" y="50">-1000</text>
                                    <text x="85" y="0" class="txtvspdval txtend">%d m/s</text>
                                <g class="linethick">
                                    <path d="m-41 75 2.5-4.4m17 12 1.2-4.9m20 7.5v-10m-75-34 4.4-2.5m-12-17 4.9-1.2m17 40 7-7m-32-53h10m34-75 2.5 4.4m17-12 1.2 4.9m20-7.5v10m-75 34 4.4 2.5m-12 17 4.9 1.2m17-40 7 7m-32 53h10m116 75-2.5-4.4m-17 12-1.2-4.9m40-17-7-7m-12-128-2.5 4.4m-17-12-1.2 4.9m40 17-7 7"/>
                                    <circle r="90" />
                                </g>
                                <path transform="rotate(%d)" d="m-0.094-7c-22 2.2-45 4.8-67 7 23 1.7 45 5.6 67 7 4.4-0.068 7.8-4.9 6.3-9.1-0.86-2.9-3.7-5-6.8-4.9z" />
                            </g>
                        ]],ag,ah,bG(d8),bG(d7))end;return d4 end;local function d9(da)local db=-dc;da=da-da:project_on(db)local dd=vec3(0,0,1)dd=dd-dd:project_on(db)local de=dd:cross(db)local d7=dd:angle_between(da)*constants.rad2deg;if da:dot(de)<0 then d7=360-d7 end;return d7 end;local function df(d4,ac,ad,dg,dh,di)if a5==0 then return end;local dj=a5;local dk=20;local dl=bG(dg)if di then for F=-45,45,5 do local dm=F;d4[#d4+1]=bH([[<g transform="rotate(%f,%d,%d)">]],dm,ac,ad)dn=5;if F%15==0 then dn=15 elseif F%10==0 then dn=10 end;d4[#d4+1]=bH([[<line x1=%d y1=%d x2=%d y2="%d"/></g>]],ac,ad+dj+dk-dn,ac,ad+dj+dk)end;d4[#d4+1]=bU(ac,ad+dj+dk-35,dh,"pdim txt txtmid")d4[#d4+1]=bU(ac,ad+dj+dk-25,dl.." deg","pdim txt txtmid")d4[#d4+1]=bH([[<g transform="rotate(%f,%d,%d)">]],-dg,ac,ad)d4[#d4+1]=bH([[<<polygon points="%d,%d %d,%d %d,%d"/>]],ac-5,ad+dj+dk-20,ac+5,ad+dj+dk-20,ac,ad+dj+dk-15)d4[#d4+1]="</g>"end;d4[#d4+1]=[[<g style="clip-path: url(#headingClip);">]]local dp=dl;if di then dp=d9(dq)end;local dr=20;local ds=bG(dp)local dt=0;local du=ad+dj+dk+20;local dv=ac;if dh~="YAW"then du=ch(130)dv=ce(960)end;local dw=[[<path class="txttick line" d="]]local dx=bG(ds-(dr+10)-ds%5+0.5)for F=dx+70,dx,-5 do local cG=dv-(-F*5+dp*5)if F%10==0 then dt=10;local dy=F;if dy==360 then dy=0 elseif dy>360 then dy=dy-360 elseif dy<0 then dy=dy+360 end;d4[#d4+1]=bU(cG,du+15,dy,"txtmid bright")elseif F%5==0 then dt=5 end;if dt==10 then dw=bH([[%s M %f %f v %d]],dw,cG,du-5,dt)else dw=bH([[%s M %f %f v %d]],dw,cG,du-2.5,dt)end end;d4[#d4+1]=dw..[["/>]]d4[#d4+1]=bH([[<<polygon class="bright" points="%d,%d %d,%d %d,%d"/>]],dv-5,du-20,dv+5,du-20,dv,du-10)if D then if di then dh="HDG"end;d4[#d4+1]=bU(ce(960),ch(100),ds.."°","dim txt txtmid size14","")d4[#d4+1]=bU(ce(960),ch(85),dh,"dim txt txtmid size20","")end;d4[#d4+1]=[[</g>]]end;local function dz(d4,dA,dg,ac,ad,di,dB,dC)if a5==0 then return end;local dj=a5;local dD=bG(dj*3/5)if dj>0 then local dE=bG(dA)local dn=0;local dw=bH([[<path transform="rotate(%f,%d,%d)" class="dim line" d="]],-1*dg,ac,ad)if not d6 then dw=bH([[<path transform="rotate(0,%d,%d)" class="dim line" d="]],ac,ad)end;d4[#d4+1]=bH([[<clipPath id="cut"><circle r="%f" cx="%d" cy="%d"/></clipPath>]],dj-1,ac,ad)d4[#d4+1]=[[<g class="dim txttick" clip-path="url(#cut)">]]for F=bG(dE-30-dE%5+0.5),bG(dE+30+dE%5+0.5),5 do if F%10==0 then dn=30 elseif F%5==0 then dn=20 end;local dF=ad+-F*5+dA*5;if dn==30 then dw=bH([[%s M %d %f h %d]],dw,ac-dD-dn,dF,dn)if d6 then d4[#d4+1]=bH([[<g path transform="rotate(%f,%d,%d)" class="pdim txt txtmid"><text x="%d" y="%f">%d</text></g>]],-1*dg,ac,ad,ac-dD+10,dF+4,F)d4[#d4+1]=bH([[<g path transform="rotate(%f,%d,%d)" class="pdim txt txtmid"><text x="%d" y="%f">%d</text></g>]],-1*dg,ac,ad,ac+dD-10,dF+4,F)if F==0 or F==180 or F==-180 then d4[#d4+1]=bH([[<path transform="rotate(%f,%d,%d)" d="m %d,%f %d,0" stroke-width="1" style="fill:none;stroke:#F5B800;" />]],-1*dg,ac,ad,ac-dD+20,dF,dD*2-40)end else d4[#d4+1]=bU(ac-dD+10,dF,F,"pdim txt txtmid")d4[#d4+1]=bU(ac+dD-10,dF,F,"pdim txt txtmid")end;dw=bH([[%s M %d %f h %d]],dw,ac+dD,dF,dn)else dw=bH([[%s M %d %f h %d]],dw,ac-dD-dn,dF,dn)dw=bH([[%s M %d %f h %d]],dw,ac+dD,dF,dn)end end;d4[#d4+1]=dw..[["/>]]local dG="PITCH"if not di then dG="REL PITCH"end;if dA>90 and not d6 then dA=90-(dA-90)elseif dA<-90 and not d6 then dA=-90-(dA+90)end;if dj>200 then if d6 then if dC>dH then d4[#d4+1]=bU(ac,ad-15,"Yaw","pdim txt txtmid")d4[#d4+1]=bU(ac,ad+20,dB,"pdim txt txtmid")end;d4[#d4+1]=bH([[<g transform="rotate(%f,%d,%d)">]],-dg,ac,ad)else d4[#d4+1]=bH([[<g transform="rotate(0,%d,%d)">]],ac,ad)end;d4[#d4+1]=bH([[<<polygon points="%d,%d %d,%d %d,%d"/> class="pdim txtend"><text x="%d" y="%f">%d</text>]],ac-dD+25,ad-5,ac-dD+20,ad,ac-dD+25,ad+5,ac-dD+50,ad+4,dE)d4[#d4+1]=bH([[<<polygon points="%d,%d %d,%d %d,%d"/> class="pdim txtend"><text x="%d" y="%f">%d</text>]],ac+dD-25,ad-5,ac+dD-20,ad,ac+dD-25,ad+5,ac+dD-30,ad+4,dE)d4[#d4+1]="</g>"end;local dI=bG(dj/3)d4[#d4+1]=bH([[<path d="m %d,%d %d,0" stroke-width="2" style="fill:none;stroke:#F5B800;" />]],ac-dI,ad,dj-dI)if not d6 and di then d4[#d4+1]=bH([[<path transform="rotate(%f,%d,%d)" d="m %d,%f %d,0" stroke-width="1" style="fill:none;stroke:#F5B800;" />]],-1*dg,ac,ad,ac-dD+10,ad,dD*2-20)end;d4[#d4+1]="</g>"if dj<200 then if d6 and dC>dH then d4[#d4+1]=bU(ac,ad-dj,dG,"pdim txt txtmid")d4[#d4+1]=bU(ac,ad-dj+10,dE,"pdim txt txtmid")d4[#d4+1]=bU(ac,ad-15,"Yaw","pdim txt txtmid")d4[#d4+1]=bU(ac,ad+20,dB,"pdim txt txtmid")else d4[#d4+1]=bU(ac,ad-dj,dG,"pdim txt txtmid")d4[#d4+1]=bU(ac,ad-dj+15,dE,"pdim txt txtmid")end end end end;local function dJ(d4,d5,di)local dK=ai;local dL=aj;if dK==0 and dL==0 then return end;local dM=78;local dN=19;local dO=dP;if dP~=-1 then d4[#d4+1]=bU(dK+dM,dL+dN+20,bH("AGL: %.1fm",dP),"pdim altsm txtend")end;if di and(d5<200000 and not d6 or d5 and d6)then table.insert(d4,bH([[
                            <g class="pdim">                        
                                <rect class="line" x="%d" y="%d" width="%d" height="%d"/> 
                                <clipPath id="alt"><rect class="line" x="%d" y="%d" width="%d" height="%d"/></clipPath>
                                <g clip-path="url(#alt)">]],dK-1,dL-4,dM+2,dN+6,dK+1,dL-1,dM-4,dN))local dQ=0;local dR=1;local dS=0;local dT=d5<0;local dU=d5<cd.surfaceMaxAltitude;local dV=9;if dT then dV=0 end;local d5=bF(d5)while dQ<6 do local dW=11;local dX=16;local dY=9;local dZ=14;local cZ="altsm"if dQ>2 then dX=dX+3;dW=dW+2;dZ=dZ+2;dY=dY-6;cZ="altbig"end;if dT then cZ=cZ.." red"elseif dU then cZ=cZ.." orange"end;local d_=d5/dR%10;local e0=bG(d_)local e1=bG((e0+1)%10)local e2=dS;if dQ==0 then e2=d_-e0;if dT then e2=1-e2 end end;if dT and(dQ==0 or dS~=0)then local e3=e1;e1=e0;e0=e3 end;local e4=dX*(e2-1)local e5=e4+dX;local cG=dK+dY+(6-dQ)*dW;local dF=dL+dZ;d4[#d4+1]=bU(cG,dF+e4,e1,cZ)d4[#d4+1]=bU(cG,dF+e5,e0,cZ)dQ=dQ+1;dR=dR*10;if e0==dV then dS=e2 else dS=0 end end;table.insert(d4,[[</g></g>]])end end;local function e6(e7)local e8=-math.deg(bM(e7.y,e7.z))+180;e8=e8-90;if e8<0 then e8=360+e8 end;if e8>180 then e8=-180+e8-180 end;return-e8 end;local function e9(e7)local dp=math.deg(bM(e7.y,e7.x))-90;if dp<-180 then dp=360+dp end;return dp end;local function ea(d4,e7,dC,ac,ad)if dC>5 and not d6 or dC>dH then local dj=a5;local eb=20;local ec=20;local ed=e6(e7)local ee=e9(e7)local ef=14;local eg=ef/2;local eh=-ee/ec*dj;local ei=ed/eb*dj;local cG=ac+eh;local dF=ad+ei;local ej=bS(eh^2+ei^2)local ek=[[<circle
                        cx="]]..cG..[["
                        cy="]]..dF..[["
                        r="]]..eg/ef..[["
                        style="fill:#d7fe00;stroke:none;fill-opacity:1"/>
                    <circle
                        cx="]]..cG..[["
                        cy="]]..dF..[["
                        r="]]..eg..[["
                        style="stroke:#d7fe00;stroke-opacity:1;fill:none" />
                    <path
                        d="M ]]..cG-ef..[[,]]..dF..[[ h ]]..eg..[["
                        style="stroke:#d7fe00;stroke-opacity:1" />
                    <path
                        d="M ]]..cG+eg..[[,]]..dF..[[ h ]]..eg..[["
                        style="stroke:#d7fe00;stroke-opacity:1" />
                    <path
                        d="M ]]..cG..[[,]]..dF-ef..[[ v ]]..eg..[["
                        style="stroke:#d7fe00;stroke-opacity:1" />]]if ej<dj then d4[#d4+1]=ek else local d7=bM(ei,eh)local el=4;local em=ac+dj*math.cos(d7)local en=ad+dj*math.sin(d7)d4[#d4+1]=bH('<g transform="rotate(%f %f %f)"><rect x="%f" y="%f" width="%f" height="%f" stroke="#d7fe00" fill="#d7fe00" /><path d="M %f %f l %f %f l %f %f z" fill="#d7fe00" stroke="#d7fe00"></g>',d7*180/math.pi,em,en,em-el,en-el/2,el*2,el,em+el,en-el,el,el,-el,el)end;if not d6 then local eo=vec3(e7)ed=e6(-eo)ee=e9(-eo)eh=-ee/ec*dj;ei=ed/eb*dj;cG=ac+eh;dF=ad+ei;ej=bS(eh^2+ei^2)if ej<dj then local ep=[[<circle
                                cx="]]..cG..[["
                                cy="]]..dF..[["
                                r="]]..eg..[["
                                style="stroke:#d7fe00;stroke-opacity:1;fill:none" />
                            <path
                                d="M ]]..cG..[[,]]..dF-ef..[[ v ]]..eg..[["
                                style="stroke:#d7fe00;stroke-opacity:1" id="l"/>
                            <use
                                xlink:href="#l"
                                transform="rotate(120,]]..cG..[[,]]..dF..[[)" />
                            <use
                                xlink:href="#l"
                                transform="rotate(-120,]]..cG..[[,]]..dF..[[)" />
                            <path
                                d="M ]]..cG-eg..[[,]]..dF..[[ h ]]..ef..[["
                                style="stroke-width:0.5;stroke:#d7fe00;stroke-opacity:1"
                                transform="rotate(-45,]]..cG..[[,]]..dF..[[)" id="c"/>
                            <use
                                xlink:href="#c"
                                transform="rotate(-90,]]..cG..[[,]]..dF..[[)"/>]]d4[#d4+1]=ep end end end end;local function eq(d4,cl,er,es)if ae==0 and af==0 then return end;er=bG(er+0.5)local cM=af+10;local cO=af+20;if bL()==1 and not g then cM=55;cO=65 end;local et="CRUISE"local bB="km/h"local eu=es;if cl=="TRAVEL"or cl=="AUTOPILOT"then et="THROT"bB="%"eu=er;local ev="dim"if er<0 then ev="red"end;d4[#d4+1]=bH([[<g class="%s">
                            <path class="linethick" d="M %d %d L %d %d L %d %d L %d %d"/>
                            <g transform="translate(0 %.0f)">
                                <polygon points="%d,%d %d,%d %d,%d"/>
                            </g>]],ev,ae-7,af-50,ae,af-50,ae,af+50,ae-7,af+50,1-bF(er),ae-10,af+50,ae-15,af+53,ae-15,af+47)end;d4[#d4+1]=bU(ae+10,cM,et,"pbright txtstart")d4[#d4+1]=bU(ae+10,cO,bH("%.0f %s",eu,bB),"pbright txtstart")if d6 and p and cm and ew then er=bG(ex*100+0.5)local ev="red"if er<0 then ev="red"end;d4[#d4+1]=bH([[<g class="%s">
                            <g transform="translate(0 %d)">
                                <polygon points="%d,%d %d,%d %d,%d"/>
                            </g></g>]],ev,1-bF(er),ae-10,af+50,ae-15,af+53,ae-15,af+47)d4[#d4+1]=bU(ae+10,cM+40,"LIMIT","pbright txtstart")d4[#d4+1]=bU(ae+10,cO+40,er.."%","pbright txtstart")end;if d6 and p or aZ then d4[#d4+1]=bU(ae+10,cM-40,"LIMIT: "..ey.." km/h","dim txtstart")elseif not d6 and aU then d4[#d4+1]=bU(ae+10,cM-40,"LIMIT: "..bG(V*3.6+0.5).." km/h","dim txtstart")end end;local function ez(d4,eA)if ae==0 and af==0 then return end;local eB=af-10;local eC=ae+10;d4[#d4+1]=bU(0,0,"","pdim txt txtend")if bL()==1 and not g then eB=75 end;d4[#d4+1]=bU(eC,eB,bG(eA).." km/h","pbright txtbig txtstart")end;local function eD(d4)d4[#d4+1]=bU(ce(1900),ch(1070),bH("ARCH Hud Version: %.3f",VERSION_NUMBER),"hudver")d4[#d4+1]=[[<g class="warnings">]]if bB.isMouseControlActivated()==1 then d4[#d4+1]=bU(ce(960),ch(550),"Warning: Invalid Control Scheme Detected","warnings")d4[#d4+1]=bU(ce(960),ch(600),"Keyboard Scheme must be selected","warnings")d4[#d4+1]=bU(ce(960),ch(650),"Set your preferred scheme in Lua Parameters instead","warnings")end;local eE=ce(960)local eF=ch(860)local eG=ch(880)local eH=ch(900)local eI=ch(960)local eJ=ch(200)local eK=ch(250)local eL=ch(960)if bL()==1 and not g then eF=ch(135)eG=ch(155)eH=ch(175)eJ=ch(115)eK=ch(95)end;local eM="#222222"local eN="white"local eO="dimmer"local eP="pbright"local eQ="#110000"local eR=eM;local eS=eO;if aR then d4[#d4+1]=bU(eE,eF,"Brake Engaged","warnings")eQ="#440000"eR=eN;eS=eP elseif eT>0 then d4[#d4+1]=bU(eE,eF,"Auto-Brake Engaged","warnings","opacity:"..eT)end;local eU="#110000"local eV=eM;local eW=eO;if d6 and eX and dP==-1 then if not aU and not bg and not aX and not eY and not a_ and not aY then d4[#d4+1]=bU(eE,eJ+50,"** STALL WARNING **","warnings")eU="#ff0000"eV=eN;eW=eP;eZ("stall","SW",2)end end;if e_ then d4[#d4+1]=bU(eE,eJ+90,"Flight Assist in Progress","warnings")end;if f0 then d4[#d4+1]=bU(eE,eL,"Gyro Enabled","warnings")end;local f1="#111100"local f2=eM;local f3=eO;if bc then f1="#775500"f2=eN;f3=eP;if f4 then d4[#d4+1]=bU(eE,eG,"Gear Extended","warn")else d4[#d4+1]=bU(eE,eG,"Landed (G: Takeoff)","warnings")end;local f5=f6(bz:getTargetGroundAltitude())d4[#d4+1]=bU(eE,eH,"Hover Height: "..f5,"warn")end;local f7="#000011"local f8=eM;local f9=eO;if fa then f7="#0000DD"f8=eN;f9=eP;d4[#d4+1]=bU(eE,eI+20,"ROCKET BOOST ENABLED","warn")end;local fb="#001100"local fc=eM;local fd=eO;if antigrav and not l and eY and bl~=nil then fb="#00DD00"fc=eN;fd=eP;if bF(fe-antigrav.getBaseAltitude())<501 then d4[#d4+1]=bU(eE,eJ+15,bH("Target Altitude: %d Singularity Altitude: %d",bG(bl),bG(antigrav.getBaseAltitude())),"warn")else d4[#d4+1]=bU(eE,eJ+15,bH("Target Altitude: %d Singluarity Altitude: %d",bG(bl),bG(antigrav.getBaseAltitude())),"warnings")end elseif aU and b9~="None"then d4[#d4+1]=bU(eE,eJ+20,"Autopilot "..b6,"warn")elseif bj~=nil then d4[#d4+1]=bU(eE,eJ+20,bH("LockedPitch: %d",bG(bj)),"warn")elseif ff then d4[#d4+1]=bU(eE,eJ+20,"Follow Mode Engaged","warn")elseif aZ or fg then d4[#d4+1]=bU(eE,eJ+20,"Re-entry in Progress","warn")end;if aW or a_ then local f5=f6(b0,2)if a_ then if eY then f5=f6(antigrav.getBaseAltitude(),2).." AGG singularity height"end;d4[#d4+1]=bU(eE,eJ,"VTO to "..f5,"warn")elseif aY and not bp then if fh then d4[#d4+1]=bU(eE,eJ,"Takeoff to "..b9,"warn")else d4[#d4+1]=bU(eE,eJ,"Takeoff to "..f5,"warn")end;if aR and not a_ then d4[#d4+1]=bU(eE,eJ+50,"Throttle Up and Disengage Brake For Takeoff","crit")end else d4[#d4+1]=bU(eE,eJ,"Altitude Hold: "..f5,"warn")end end;if a_ and(antigrav~=nil and antigrav)then if fi>0.1 then d4[#d4+1]=bU(eE,eJ+20,"Beginning ascent","warn")elseif fi<0.09 and fi>0.05 then d4[#d4+1]=bU(eE,eJ+20,"Aligning trajectory","warn")elseif fi<0.05 then d4[#d4+1]=bU(eE,eJ+20,"Leaving atmosphere","warn")end end;if bp then if fj~=nil then d4[#d4+1]=bU(eE,eJ,fj,"warn")end end;if aX then if fk then d4[#d4+1]=bU(eE,eJ,"Brake-Landing","warnings")else d4[#d4+1]=bU(eE,eJ,"Coast-Landing","warnings")end end;if aT then d4[#d4+1]=bU(eE,eJ,"Prograde Alignment","crit")end;if aS then d4[#d4+1]=bU(eE,eJ,"Retrograde Alignment","crit")end;local fl="#110000"local fm=eM;local fn=eO;if fo then fl="#FF0000"fm=eN;fn=eP;local type;if string.find(fo,"COLLISION")then type="warnings"else type="crit"end;d4[#d4+1]=bU(eE,eK+20,fo,type)elseif fi==0 then local fp,fq=fr.checkLOS(fs:normalize())if fq~=nil then fn=eP;fl="#FF0000"fm=eN;local f5=f6(fq)local ft=fu.computeTravelTime(fv,0,fq)local fw="Collision"if fp.noAtmosphericDensityAltitude>0 then fw="Atmosphere"end;d4[#d4+1]=bU(eE,eK+20,fp.name.." "..fw.." "..cW(ft).." In "..f5,"crit")end end;if bg and not bp then d4[#d4+1]=bU(eE,eJ+35,fx,"warn")end;local fy="#111100"local fz=eM;local fA=eO;if fB and#fB>1 then fy="#DDDD00"fz=eN;fA=eP end;local fC=ce;local fD=ch;local eO="topButton"local fE="topButtonActive"local fF=eO;if aU or bg or fh or bp then fF=fE end;local fG=eO;if aT then fG=fE end;local fH=eO;if aX or bc then fH=fE end;local fI=eO;if aW or bg then fI=fE end;local fJ=eO;if aS then fJ=fE end;local fK=eO;if bp or fL and aU then fK=fE end;if s and D then local fM=fD(30)d4[#d4+1]=bH([[ 
                            <g class="pdim txt txtmid">
                                <g class="%s">
                                <path d="M %f %f l 0 %f l %f 0 l %f %f Z"/>
                                ]],fF,fC(960),fD(54),fD(-53),fC(-120),fC(25),fD(50))d4[#d4+1]=bU(fC(910),fM,"AUTOPILOT")d4[#d4+1]=bH([[
                                </g>
            
                                <g class="%s">
                                <path d="M %f %f l %f %f l %f 0 l %f %f Z"/>
                                ]],fG,fC(865),fD(51),fC(-25),fD(-50),fC(-110),fC(25),fD(46))d4[#d4+1]=bU(fC(800),fM,"PROGRADE")d4[#d4+1]=bH([[
                                </g>
            
                                <g class="%s">
                                <path d="M %f %f l %f %f l %f 0 l %f %f Z"/>
                                ]],fH,fC(755),fD(47),fC(-25),fD(-46),fC(-98),fC(44),fD(44))d4[#d4+1]=bU(fC(700),fM,"LAND")d4[#d4+1]=bH([[
                                </g>
            
                                <g class="%s">
                                <path d="M %f %f l 0 %f l %f 0 l %f %f Z"/>
                                ]],fI,fC(960),fD(54),fD(-53),fC(120),fC(-25),fD(50))d4[#d4+1]=bU(fC(1010),fM,"ALT HOLD")d4[#d4+1]=bH([[
                                </g>
            
                                <g class="%s">
                                <path d="M %f %f l %f %f l %f 0 l %f %f Z"/>
                                ]],fJ,fC(1055),fD(51),fC(25),fD(-50),fC(110),fC(-25),fD(46))d4[#d4+1]=bU(fC(1122),fM,"RETROGRADE")d4[#d4+1]=bH([[
                                </g>
            
                                <g class="%s">
                                <path d="M %f %f l %f %f l %f 0 l %f %f Z"/>
                                ]],fK,fC(1165),fD(47),fC(25),fD(-46),fC(98),fC(-44),fD(44))d4[#d4+1]=bU(fC(1220),fM,"ORBIT")d4[#d4+1]=[[
                                </g>
                            </g>]]d4[#d4+1]="</g>"end;return d4 end;local function fN(dC)return bG(bT(dC*3.6,0)+0.5).." km/h"end;local function fO(dQ)local cP=b9;if dQ~=nil and type(dQ)=="number"then if dQ==0 then return"None"end;cP=fP[dQ].name end;if cP==nil then cP=fQ.name end;if cP==nil then cP="None"end;return cP end;local function fR(d4)local fS=fr.routeWP(true)if not fS or#fS==0 then return end;local cG=ce(750)local dF=ch(360)if aU or bg then d4[#d4+1]=bU(cG,dF,"REMAINING ROUTE","pdim txtstart size20")else d4[#d4+1]=bU(cG,dF,"LOADED ROUTE","pdim txtstart size20")end;for fT,F in pairs(fS)do dF=dF+20;d4[#d4+1]=bU(cG,dF,fT..". "..fO(fS[fT]),"pdim txtstart size20")end end;local function fU(d4)local cG=aq+10;local dF=ar+20;local fV={}local fW={"Alt-4: AutoTakeoff to Target"}local fX={"Alt-6: Altitude hold at current altitude","Alt-6-6: Altitude Hold at 11% atmosphere","Alt-Q/E: Hard Bankroll left/right till released","Alt-S: 180 deg bank turn"}local fY={"Alt-6: Orbit at current altitude","Alt-6-6: Orbit at LowOrbitHeight over atmosphere"}local fZ={"","------------------ALWAYS--------------------","Alt-1: Increment Interplanetary Helper","Alt-2: Decrement Interplanetary Helper","Alt-3: Toggle Vanilla Widget view","Alt-4: Autopilot to IPH target","Alt-5: Lock Pitch at current pitch","Alt-7: Toggle Collision System on and off","Alt-8: Toggle ground stabilization (underwater flight)","CTRL: Toggle Brakes on and off. Cancels active AP","LAlt: Tap to shift freelook on and off","Shift: Hold while not in freelook to see Buttons","Type /commands or /help in lua chat to see text commands"}table.insert(fV,"--------------DYNAMIC-----------------")if d6 then if dP~=-1 then f_(fV,fW)if g0 and cd and g0.name==cd.name then table.insert(fV,"Alt-4-4: Low Orbit Autopilot to Target")end;if antigrav or aQ then if antigrav then if eY then table.insert(fV,"Alt-6: AGG is on, will takeoff to AGG Height")else table.insert(fV,"Turn on AGG to takeoff to AGG Height")end end;if aQ then table.insert(fV,"Alt-6: Begins Vertical AutoTakeoff.")end else table.insert(fV,"Alt-6: Autotakeoff to AutoTakeoffAltitude")table.insert(fV,"Alt-6-6: Autotakeoff to 11% atmosphere")end;if bc then table.insert(fV,"G: Takeoff to hover height, raise gear")else table.insert(fV,"G: Lowergear and Land")end else f_(fV,fX)table.insert(fV,"G: Begin BrakeLanding or Land")end;if a_ then table.insert(fV,"Hit Alt-6 before exiting Atmosphere during VTO to hold in level flight")end else f_(fV,fY)if bE then table.insert(fV,"Alt-Shift-5: Toggle shield off and on")table.insert(fV,"Alt-Shift-6: Vent shields")end end;if gyro then table.insert(fV,"Alt-9: Activate Gyroscope")end;if aM~="none"or aL~="none"or aN~="none"then table.insert(fV,"Alt-Shift-9: Cycles engines with Extra tags")end;if aW then table.insert(fV,"Alt-Spacebar/C will raise/lower target height")table.insert(fV,"Alt+Shift+Spacebar/C will raise/lower target to preset values")end;if p or not d6 then table.insert(fV,"LALT+Mousewheel will lower/raise speed limit")end;f_(fV,fZ)for F=1,#fV do dF=dF+12;d4[#d4+1]=bU(cG,dF,fV[F],"pdim txtbig txtstart")end end;local function g1(d4)local g2=aq;local g3=ar;local g4=ap;local g5=4;local g6=15;local cG=0;local dF=0;local g7,g8,g9,ga;local gb;local function gc(type)local gd,ge,dC,gf,cZ,gg;if type=="Periapsis"then gd=gb.periapsis.altitude;ge=gb.timeToPeriapsis;dC=gb.periapsis.speed;cZ="txtend"gf=12;gg=math.min(cG,g2+g4-cd.radius/g9-g5*2)else gd=gb.apoapsis.altitude;ge=gb.timeToApoapsis;dC=gb.apoapsis.speed;gf=-12;cZ="txtstart"gg=cG end;if fv<1 then ge=0 end;d4[#d4+1]=bH([[<line class="pdim linethin" style="stroke:white" x1="%f" y1="%f" x2="%f" y2="%f"/>]],gg+gf,dF-5,cG,dF-5)d4[#d4+1]=bH([[<line class="pdim linethin" x1="%f" y1="%f" x2="%f" y2="%f"/>]],gg-gf*4,dF+2,cG,dF+2)d4[#d4+1]=bU(gg,dF,type,cZ)cG=gg-gf*2;dF=dF+g6;local f5=f6(gd)d4[#d4+1]=bU(cG,dF,f5,cZ)dF=dF+g6;d4[#d4+1]=bU(cG,dF,cW(ge),cZ)dF=dF+g6;d4[#d4+1]=bU(cG,dF,fN(dC),cZ)end;local gh=g4*1.5;if bw=="INFO"then gh=25*7 end;if bw~="HIDE"then d4[#d4+1]=[[<g class="pbright txtorb txtmid">]]d4[#d4+1]=bH('<rect width="%f" height="%d" rx="10" ry="10" x="%d" y="%d" class="dimfill brightstroke" style="stroke-width:3;fill-opacity:0.3;" />',g4*2,gh,g2,g3)d4[#d4+1]=bH([[<clippath id="orbitRect">
                                                    <rect width="%f" height="%d" rx="10" ry="10" x="%d" y="%d" class="dimfill brightstroke" style="stroke-width:3;fill-opacity:0.3;" />
                                                    </clippath>]],g4*2,gh,g2,g3)end;local gi=g4*1.5;local gj=g4*2;local gk=gi/2;local gl=g4;local gm=g2+gl;local gn=g3+gk;local go=g2+gj;local gp=g3+gi;if bw=="ORBIT"then g3=g3+g5;g7=g4/2;ga=0;gb={}gb.periapsis={}gb.apoapsis={}if gq~=nil then if gq.periapsis~=nil then gb.periapsis.altitude=gq.periapsis.altitude;gb.periapsis.speed=gq.periapsis.speed end;if gq.apoapsis~=nil then gb.apoapsis.altitude=gq.apoapsis.altitude;gb.apoapsis.speed=gq.apoapsis.speed end;gb.period=gq.period;gb.eccentricity=gq.eccentricity;gb.timeToApoapsis=gq.timeToApoapsis;gb.timeToPeriapsis=gq.timeToPeriapsis;gb.eccentricAnomaly=gq.eccentricAnomaly;gb.trueAnomaly=gq.trueAnomaly end;if gb.periapsis==nil then gb.periapsis={}gb.periapsis.altitude=-cd.radius;gb.periapsis.speed=V end;if gb.eccentricity==nil then gb.eccentricity=1 end;if gb.apoapsis==nil then gb.apoapsis={}gb.apoapsis.altitude=fe;gb.apoapsis.speed=0 end;if fv<1 then gb.apoapsis.altitude=fe;gb.apoapsis.speed=0 end;if gb.apoapsis.altitude then g9=(gb.apoapsis.altitude+gb.periapsis.altitude+cd.radius*2)/(g7*2)g8=(cd.radius+gb.apoapsis.altitude)/g9*(1-gb.eccentricity)ga=g7-gb.periapsis.altitude/g9-cd.radius/g9;local gr=math.pi;if gb.period~=nil and gb.period>0 and gb.timeToApoapsis~=nil then gr=gb.eccentricAnomaly;if gb.timeToPeriapsis<gb.timeToApoapsis then gr=2*math.pi-gr end end;if fv<1 or gr~=gr then gr=math.pi end;local gs=-g7*math.cos(gr)+g2+gl+g5;local gt=g8*math.sin(gr)+g3+gk+g5;local gu=""d4[#d4+1]='<g clip-path="url(#orbitRect)">'d4[#d4+1]=bH([[<ellipse class="%s line" cx="%f" cy="%f" rx="%f" ry="%f"/>]],gu,g2+g4+g5,g3+g4*1.5/2+g5,g7,g8)if g8<1 then d4[#d4+1]=bH([[<line x1="%f" y1="%f" x2="%f" y2="%f" stroke="red"/>]],g2+g4+g5-ga,g3+g4*1.5/2+g5,gs,gt)end;d4[#d4+1]=bH('<circle cx="%f" cy="%f" r="%f" stroke="white" stroke-width="1" fill="rgb(0,150,200)" opacity="0.5" />',g2+g4+g5-ga,g3+g4*1.5/2+g5,(cd.radius+cd.noAtmosphericDensityAltitude)/g9)d4[#d4+1]=bH('<clipPath id="planetClip"><circle cx="%f" cy="%f" r="%f" /></clipPath>',g2+g4+g5-ga,g3+g4*1.5/2+g5,(cd.radius+cd.noAtmosphericDensityAltitude)/g9)d4[#d4+1]=bH([[<ellipse class="%s line" cx="%f" cy="%f" rx="%f" ry="%f" clip-path="url(#planetClip)"/>]],"redout",g2+g4+g5,g3+g4*1.5/2+g5,g7,g8)d4[#d4+1]=bH('<circle cx="%f" cy="%f" r="%f" stroke="black" stroke-width="1" fill="rgb(0,100,150)" />',g2+g4+g5-ga,g3+g4*1.5/2+g5,cd.radius/g9)d4[#d4+1]='</g>'local gv=math.floor(cd.radius/g9+0.5)cG=g2+g4+g5*4+g7;dF=g3+g4*1.5/2+5+g5;if gb.apoapsis~=nil and gb.apoapsis.speed<V then gc("Apoapsis")end;dF=g3+g4*1.5/2+5+g5;cG=g2+g4-g5*2-g7;if gb.periapsis~=nil and gb.periapsis.speed<V and gb.periapsis.altitude>0 then gc("Periapsis")end;d4[#d4+1]=bU(g2+g4+g5,g3+20+g5,cd.name,"txtorbbig")d4[#d4+1]=bH('<circle cx="%f" cy="%f" r="2" stroke="black" stroke-width="1" fill="white" />',gs,gt)d4[#d4+1]=[[</g>]]return d4 else d4[#d4+1]='<g clip-path="url(#orbitRect)">'local gw=""local gx=1.2*(gy-gz)/(g4*2)local gA=1.4*(gB-gC)/(g4*1.5)for fT,cf in pairs(bD[0])do if cf.center then local cG=g2+g4+cf.center.x/gx;local dF=g3+g4*1.5/2+cf.center.y/gA;gw=gw..'<circle cx="'..cG..'" cy="'..dF..'" r="'..cf.radius/gx*30 ..'" stroke="white" stroke-width="1" fill="blue" />'if not string.match(cf.name,"Moon")and not string.match(cf.name,"Sanctuary")and not string.match(cf.name,"Space")then gw=gw.."<text x='"..cG.."' y='"..dF+cf.radius/gx*30+20 .."' font-size='12' fill="..gD.." text-anchor='middle' font-family='Montserrat'>"..cf.name.."</text>"end end end;local gE=vec3(bA.getConstructWorldPos())local cG=g2+g4+gE.x/gx;local dF=g3+g4*1.5/2+gE.y/gA;gw=gw..'<circle cx="'..cG..'" cy="'..dF..'" r="2" stroke="white" stroke-width="1" fill="red"/>'gw=gw.."<text x='"..cG.."' y='"..dF-10 .."' font-size='14' fill='darkred' text-anchor='middle' font-family='Bank' font-weight='bold'>You Are Here</text>"b_=gx;c0=gA;local gF=gE+fs*1000000;local gG=g2+g4+gF.x/gx;local cO=g3+g4*1.5/2+gF.y/gA;gw=gw..'<line x1="'..cG..'" y1="'..dF..'" x2="'..gG..'" y2="'..cO..'" stroke="purple" stroke-width="1"/>'d4[#d4+1]=gw;d4[#d4+1]='</g>'end elseif bw=="INFO"then d4=gH.DrawOdometer(d4,gI,bd,gJ)elseif bw=="HELP"then d4=fU(d4)elseif bw=="SCOPE"then d4[#d4+1]='<g clip-path="url(#orbitRect)">'local gK=gL;if fi>0 then table.sort(gM,function(gN,gO)local gP,gQ=gN.center,gO.center;return(gP.x-gR.x)^2+(gP.y-gR.y)^2+(gP.z-gR.z)^2<(gQ.x-gR.x)^2+(gQ.y-gR.y)^2+(gQ.z-gR.z)^2 end)end;local gS={}local gT={}local gU=120;local gV=nil;local gW=nil;for F,cf in ipairs(gM)do local gX=cf.center-gR;local gY=gX:len()local gZ=gX:normalize()local g_=gX:cross(dq):normalize()local h0=math.acos(g_:dot(h1))if h0~=h0 then h0=0 end;if g_:cross(h1):dot(dq)<0 then h0=-h0 end;local h2=gX:project_on_plane(dq):len()local h3=math.sin(h0)*math.asin(h2/gY)*constants.rad2deg;local h4=math.cos(h0)*math.asin(h2/gY)*constants.rad2deg;if gZ:dot(dq)<0 then h4=90*math.cos(h0)+90*math.cos(h0)-h4;h3=90*math.sin(h0)+90*math.sin(h0)-h3 end;local cG=gm+h3/gK*gi;local dF=gn+h4/gK*gi;local h5=(cG-gm)*(cG-gm)+(dF-gn)*(dF-gn)local h6=math.asin((cf.radius+cf.surfaceMaxAltitude)/gY)*constants.rad2deg;if h6~=h6 then h6=gK end;local h7=h6/gK*gi;local h8=math.asin(cf.atmosphereRadius/gY)*constants.rad2deg;if h8~=h8 then h8=h6 end;local h9=h8/gK*gi;local ej=f6(gY,1)local ha=cf.name;local hb=false;if dF>g3 then if dF>gp then if dF-h9<=gp then hb=true end else hb=true end else if dF+h9>=g3 then hb=true end end;local hc=false;local hd=cG;if cf.systemId==0 then hd=cG+gU else hd=cG-gU end;if hd+gU>g2 then if hd+gU>go then if hd-h9-gU<=go then hc=true end else hc=true end else if hd+h9+gU>=g2 then hc=true end end;local he={}he.x=cG;he.y=dF;he.planet=cf;he.atmoSize=h9;if not gV or h5<gV then gV=h5;gW=he end;if hc and hb then local hf=math.max(h9,5)if h5<hf*hf then ha=ha.." - "..ej end;he.size=h7;he.i=F;he.displayString=ha;he.distance=ej;he.visible=true;gT[#gT+1]=he else he.visible=false end end;local hg=false;table.sort(gT,function(gP,gQ)return gP.y<gQ.y end)for fT,hh in ipairs(gT)do local cf,h7,F,h9,cG,dF,ha,ej=hh.planet,hh.size,hh.i,hh.atmoSize,hh.x,hh.y,hh.displayString,hh.distance;local gg,hi,hj,hk;local hl=15;local cZ="pdim"if cf.systemId~=0 then hj=ce(string.len(ha)*5)hl=-(15+hj)hk=ch(10)cZ="pdimfill"else hj=ce(string.len(ha)*9)hk=ch(15)end;if h7*2>hj then gg=bO(cG,g2+hj/2,go-hj/2)hi=bO(dF,g3+hk,gp-5)gg=bO(gg,cG-h7+hj/2,cG+h7-hj/2)hi=bO(hi,dF-h7+hk,dF+h7)else gg=cG+hl;hi=dF end;for hm,hh in pairs(gS)do local hn=hh.textPositions;local ho=hn.y-hi;if hm~=F and bF(ho)<hn.height and hn.x+hn.width>gg and hn.x<gg+hj then if h7>hj then hi=bO(hi+hk,g3+15,gp-5)else hi=hn.y+hn.height+1 end end end;local hp=ha~=cf.name or gg<=gm and gg+hj>=gm and hi-hk<=gn and hi>=gn;hh.hovered=hp;local hq=1;if hp then hq=2;if h7*2<hj then hq=10 end;if ha==cf.name then ha=ha.." - "..ej end;cZ="pbright"if cf.systemId~=0 then hj=ce(string.len(ha)*5)hl=-(15+hj)else hj=ce(string.len(ha)*7)end;if h7*2>hj then gg=bO(cG,g2+hj/2,go-hj/2)gg=bO(gg,cG-h7+hj/2,cG+h7-hj/2)else gg=cG+hl end end;gS[F]={}gS[F].textPositions={}gS[F].textPositions.y=hi;gS[F].textPositions.x=gg;gS[F].textPositions.width=hj;gS[F].textPositions.height=hk;gS[F].output=""if h7*2>hj then cZ=cZ.." txtmid"else cZ=cZ.." txtstart"end;if h9-h7>2 then gS[F].output=bH('<circle cx="%f" cy="%f" r="%f" stroke-width="1" stroke="%s" stroke-opacity="%f" fill="url(#RadialAtmo)" />',cG,dF,h9,hr,0.1*hq)end;gS[F].output=gS[F].output..bH('<circle cx="%f" cy="%f" r="%f" stroke="%s" stroke-width="1" stroke-opacity="%f" fill="url(#RadialPlanetCenter)" />',cG,dF,h7,hr,0.2*hq)if cf.systemId==0 then gS[F].output=gS[F].output..bH([[<text x='%f' y='%f'
                                        font-size='12' fill='%s' class='%s' font-family='Montserrat'>%s</text>]],gg,hi,gD,cZ,ha)if h7*2<=hj then gS[F].output=gS[F].output..bH("<path class='linethin dimstroke' d='M %f %f L %f %f L %f %f' />",gg+hj,hi+2,gg,hi+2,cG,dF)end else gS[F].output=gS[F].output..bH([[<text x='%f' y='%f'
                                        font-size='8' fill='%s' class='%s' font-family='Montserrat'>%s</text>]],gg,hi,hr,cZ,ha)if h7*2<=hj then gS[F].output=gS[F].output..bH("<path class='linethin dimstroke' d='M %f %f L %f %f L %f %f' />",gg,hi+2,gg+hj,hi+2,cG,dF)end end end;for fT=#gM,1,-1 do if gS[fT]then d4[#d4+1]=gS[fT].output end end;if gW~=nil and gL<90 and not gW.hovered then local hs=gW.planet.atmosphereRadius/gW.atmoSize;local ht=bS(gV)*hs;local hu=f6(ht,1)local hj=ce(math.max(string.len(hu)*7,string.len(gW.planet.name)*7))local hk=ch(12)local gg=bO(gW.x+(gm-gW.x)/2,g2+hj/2,go-hj/2)local hi=bO(gW.y+(gn-gW.y)/2,g3+hk*2,gp-5)d4[#d4+1]=bH("<path class='linethin dimstroke' stroke='white' d='M %f %f L %f %f' />",gW.x,gW.y,gm,gn)d4[#d4+1]=bH([[<text x='%f' y='%f'
                                    font-size='12' fill='%s' class='txtmid' font-family='Montserrat'>%s</text>]],gg,hi,"white",hu)if not gW.visible then d4[#d4+1]=bH([[<text x='%f' y='%f'
                                        font-size='12' fill='%s' class='txtmid' font-family='Montserrat'>%s</text>]],gg,hi-hk,"white",gW.planet.name)end end;if fv>1 then local gX=fs;local gZ=gX:normalize()local h2=gX:project_on_plane(dq):len()local g_=gX:cross(dq):normalize()local h0=math.acos(g_:dot(h1))if h0~=h0 then h0=0 end;if g_:cross(h1):dot(dq)<0 then h0=-h0 end;local h3=math.sin(h0)*math.asin(h2/gX:len())*constants.rad2deg;local h4=math.cos(h0)*math.asin(h2/gX:len())*constants.rad2deg;if gZ:dot(dq)<0 then h4=90*math.cos(h0)+90*math.cos(h0)-h4;h3=90*math.sin(h0)+90*math.sin(h0)-h3 end;local cG=gm+h3/gK*gi;local dF=gn+h4/gK*gi;local ef=14;local eg=ef/2;local ek=[[<circle
                                cx="]]..cG..[["
                                cy="]]..dF..[["
                                r="]]..eg/ef..[["
                                style="fill:#d7fe00;stroke:none;fill-opacity:1"/>
                            <circle
                                cx="]]..cG..[["
                                cy="]]..dF..[["
                                r="]]..eg..[["
                                style="stroke:#d7fe00;stroke-opacity:1;fill:none" />
                            <path
                                d="M ]]..cG-ef..[[,]]..dF..[[ h ]]..eg..[["
                                style="stroke:#d7fe00;stroke-opacity:1" />
                            <path
                                d="M ]]..cG+eg..[[,]]..dF..[[ h ]]..eg..[["
                                style="stroke:#d7fe00;stroke-opacity:1" />
                            <path
                                d="M ]]..cG..[[,]]..dF-ef..[[ v ]]..eg..[["
                                style="stroke:#d7fe00;stroke-opacity:1" />]]d4[#d4+1]=ek end;d4[#d4+1]=bH("<line class='linethin dimstroke' x1='%f' y1='%f' x2='%f' y2='%f' />",gm,gn-10,gm,gn+10)d4[#d4+1]=bH("<line class='linethin dimstroke' x1='%f' y1='%f' x2='%f' y2='%f' />",gm-10,gn,gm+10,gn)d4[#d4+1]='</g>'else return d4 end end;local function hv(hw,hx)local hy;local hz=(hx-hw):normalize()local hA=(gR-hw):dot(hz)/hz:dot(hz)if hA<=0. then return(gR-hw):len()elseif hA>=(hx-hw):len()then return(gR-hx):len()end;local hB=hw+hA*hz;hy=(hB-gR):len()return hy end;local function hC()local hy;local hD=nil;local hE=nil;local hF=nil;for fT,hG in pairs(bD[0])do if hG.hasAtmosphere then local ej=hv(cd.center,hG.center)if hD==nil or ej<hD then hE=hG;hD=ej;hF=cd end;if g0 and g0.hasAtmosphere and g0.name~=cd.name then local hH=hv(g0.center,hG.center)if hH<hD then hE=hG;hD=hH;hF=g0 end end end end;local hI=ce(1770)local hJ=ch(330)if hD then local hK="txttick "local hL=500000;if hD<hE.radius+hL or hD<hF.radius+hL then if hM then hK="txttick red "else hK="txttick orange "end end;hy=f6(hD,2)c4=bU(hI,hJ,"Pipe ("..hF.name.."--"..hE.name.."): "..hy,hK.."pbright txtmid")end end;local function hN(cG,dF,hO,hP,et)local hQ={x=cG,y=dF,width=hO,height=hP,label=et}bZ[et]=hQ;return hQ end;local function hR(hS,hT,hO,hP,cG,dF,hU,hV,hW,hX,cZ)local hQ={enableName=hS,disableName=hT,width=hO,height=hP,x=cG,y=dF,toggleVar=hU,toggleFunction=hV,drawCondition=hW,hovered=false,class=cZ}if hX then table.insert(bY,hQ)else table.insert(bX,hQ)end;return hQ end;local function hY(hZ)if not c2 then h_=false;i0=false;i1=false;s=true;return elseif hZ=="handling"then h_=not h_;i0=false;i1=false elseif hZ=="hud"then i0=not i0;h_=false;i1=false elseif hZ=="physics"then i1=not i1;h_=false;i0=false end;if i1 or i0 or h_ then c3=i2(hZ)s=false else c3="none"s=true end end;local function i3()c2=not c2;if c2 then bW=bY;i4="Hold SHIFT to see Settings"i5=s else bW=bX;i4="Hold SHIFT to see Control Buttons"hY()s=i5 end end;local function i6()local function i7(cf,fT)cf.set(not cf.get())if cf.get()then i4=fT.." set to true"else i4=fT.." set to false"end;if fT=="showHud"then i5=cf.get()elseif fT=="BrakeToggleDefault"then aP=e end end;local i8=50;local i9=340;local cG=500;local dF=ci/2-400;local ia=0;for fT,cf in pairs(i2("boolean"))do if type(cf.get())=="boolean"then hR(fT,fT,i9,i8,cG,dF,function()return cf.get()end,function()i7(cf,fT)end,function()return true end,true)dF=dF+i8+20;if ia==9 then cG=cG+i9+20;dF=ci/2-400;ia=0 else ia=ia+1 end end end;hR("Control View","Control View",i9,i8,10,ci/2-500,function()return true end,i3,function()return true end,true)hR("View Handling Settings",'Hide Handling Settings',i9,i8,10,ci/2-(500-i8),function()return h_ end,function()hY("handling")end,function()return true end,true)hR("View Hud Settings",'Hide Hud Settings',i9,i8,10,ci/2-(500-i8*2),function()return i0 end,function()hY("hud")end,function()return true end,true)hR("View Physics Settings",'Hide Physics Settings',i9,i8,10,ci/2-(500-i8*3),function()return i1 end,function()hY("physics")end,function()return true end,true)end;local function ib()local function ic()local id=gR;local cP=cd.name..". "..#bf;if radar_1 then cP=ie.GetClosestName(cP)end;return ig.AddNewLocation(cP,id,false,true)end;local function ih()aV=not aV end;local function ii(ij)if ij==1 then aT=not aT;aS=false else aS=not aS;aT=false end;aU=false;aW=false;ff=false;aX=false;bj=nil;aZ=false;aY=false end;local function ik()ig.UpdatePosition()end;local function il()ig.ClearCurrentPosition()end;local function im(dQ)local fS=fr.routeWP(true)if fS and#fS>0 then return"Engage Route: "..fO(fS[1])end;return"Engage Autopilot: "..fO(dQ)end;local function io(dQ)local fS=fr.routeWP(true)if fS and#fS>0 then return"Next Route Point: "..fO(fS[1])end;return"Disable Autopilot: "..fO(dQ)end;local function ip()if bL()==1 then ff=not ff;if ff then aU=false;aS=false;aT=false;aW=false;aZ=false;aX=false;aY=false;iq=bc;bc=false;bz.control.retractLandingGears()bP:setTargetGroundAltitude(S)eZ("folOn","F")else eZ("folOff","F")aR=true;ir=k;bc=iq;if bc then bz.control.extendLandingGears()bP:setTargetGroundAltitude(T)end end else i4="Follow Mode only works with Remote controller"ff=false end end;local i8=50;local i9=260;local is=ce(30)local it=aq+ap*2+2;local iu=ar+1;hR("+","+",is,is,it,iu+is+1,function()return false end,function()gL=gL/8 end,function()return bw=="SCOPE"end,nil,"ZoomButton")hR("-","-",is,is,it,iu,function()return false end,function()gL=math.min(gL*8,90)end,function()return bw=="SCOPE"end,nil,"ZoomButton")hR("0","0",is,is,it,iu+is*2+2,function()return false end,function()gL=90 end,function()return bw=="SCOPE"and gL~=90 end,nil,"ZoomButton")local iv=hR("Enable Brake Toggle","Disable Brake Toggle",i9,i8,cg/2-i9/2,ci/2+350,function()return aP end,function()aP=not aP;if aP then i4="Brakes in Toggle Mode"else i4="Brakes in Default Mode"end end)hR("Align Prograde","Disable Prograde",i9,i8,cg/2-i9/2-50-iv.width,ci/2-i8+380,function()return aT end,function()ii(1)end)hR("Align Retrograde","Disable Retrograde",i9,i8,cg/2-i9/2+iv.width+50,ci/2-i8+380,function()return aS end,ii,function()return fi==0 end)iw=hR(im,io,600,60,cg/2-600/2,ci/2-60/2-330,function()return aU or bg or fh or bp end,function()end)local F;local function ix(iy)local fS=fr.routeWP(true)if fS and#fS>0 then return fS[1]end;local dQ=iz+iy;if dQ>#fP then dQ=dQ-#fP-1 end;if dQ<0 then dQ=#fP+dQ end;return dQ end;iA={}for F=0,10 do local iB=hR(function(gQ)local dQ=ix(gQ.apExtraIndex)if aU or bg or fh or bp then return"Redirect: "..fO(dQ)end;return im(dQ)end,function(gQ)local dQ=ix(gQ.apExtraIndex)return io(dQ)end,600,60,cg/2-600/2,ci/2-60/2-330+60*F,function(gQ)local dQ=ix(gQ.apExtraIndex)return dQ==bb and(aU or bg or fh or bp)end,function(gQ)local dQ=ix(gQ.apExtraIndex)local iC=bb==dQ;bb=dQ;ig.UpdateAutopilotTarget()fr.ToggleAutopilot()if not iC and not(aU or bg or fh or bp)then fr.ToggleAutopilot()end end,function()return iD and(#fr.routeWP(true)==0 or F==0)end)iB.apExtraIndex=F;iA[F]=iB end;hR("Save Position","Save Position",200,iw.height,iw.x+iw.width+30,iw.y,function()return false end,ic,function()return bb==0 or fQ==nil end)hR("Update Position","Update Position",200,iw.height,iw.x+iw.width+30,iw.y,function()return false end,ik,function()return bb>0 and fQ~=nil end)hR("Clear Position","Clear Position",200,iw.height,iw.x-200-30,iw.y,function()return true end,il,function()return bb>0 and fQ~=nil end)hR("Save Route","Save Route",200,iw.height,iw.x+iw.width+30,iw.y+iw.height+20,function()return false end,function()fr.routeWP(false,false,2)end,function()return#fr.routeWP(true)>0 end)hR("Load Route","Clear Route",200,iw.height,iw.x-200-30,iw.y+iw.height+20,function()return#fr.routeWP(true)>0 end,function()if#fr.routeWP(true)>0 then fr.routeWP(false,true)elseif aU or bg then i4="Disable Autopilot before loading route"return else fr.routeWP(false,false,1)end end,function()return true end)i8=60;i9=300;local cG=0;local dF=ci/2-150;hR("View Settings","View Settings",i9,i8,cG,dF,function()return true end,i3)dF=dF+i8+20;hR("Enable Turn and Burn","Disable Turn and Burn",i9,i8,cG,dF,function()return aV end,ih)cG=10;dF=ci/2-300;hR("Horizontal Takeoff Mode","Vertical Takeoff Mode",i9,i8,cG+i9+20,dF,function()return aQ end,function()aQ=not aQ;if aQ then i4="Vertical Takeoff Mode"else i4="Horizontal Takeoff Mode"end end,function()return iE end)dF=dF+i8+20;hR("Engage Orbiting","Cancel Orbiting",i9,i8,cG+i9+20,dF,function()return bp end,fr.ToggleIntoOrbit,function()return fi==0 and di end)dF=ci/2-150;hR("Glide Re-Entry","Cancel Glide Re-Entry",i9,i8,cG+i9+20,dF,function()return aZ end,function()iF=1;ii(1)end,function()return cd.hasAtmosphere and not d6 end)dF=dF+i8+20;hR("Parachute Re-Entry","Cancel Parachute Re-Entry",i9,i8,cG+i9+20,dF,function()return aZ end,fr.BeginReentry,function()return cd.hasAtmosphere and not d6 end)dF=dF+i8+20;hR("Engage Follow Mode","Disable Follow Mode",i9,i8,cG,dF,function()return ff end,ip,function()return bL()==1 end)hR("Enable Repair Arrows","Disable Repair Arrows",i9,i8,cG+i9+20,dF,function()return iG end,function()iG=not iG;if iG then i4="Repair Arrows Enabled"else i4="Repair Arrows Diabled"end end,function()return bL()==1 end)dF=dF+i8+20;if not l then hR("Enable AGG","Disable AGG",i9,i8,cG,dF,function()return eY end,fr.ToggleAntigrav,function()return antigrav~=nil end)end;hR(function()return bH("Switch IPH Mode - Current: %s",bq)end,function()return bH("IPH Mode: %s",bq)end,i9*2,i8,cG,dF,function()return false end,function()if bq=="All"then bq="Custom Only"elseif bq=="Custom Only"then bq="No Moons"else bq="All"end;i4="IPH Mode: "..bq end)dF=dF+i8+20;hR(function()return bH("Toggle Control Scheme - Current: %s",b)end,function()return bH("Control Scheme: %s",b)end,i9*2,i8,cG,dF,function()return false end,function()if b=="keyboard"then b="mouse"elseif b=="mouse"then b="virtual joystick"else b="keyboard"end;i4="New Control Scheme: "..b end)local iH=ch(20)local iB=hN(0,0,ce(70),iH,"HELP")iB=hN(iB.x+iB.width,iB.y,ce(80),iH,"INFO")iB=hN(iB.x+iB.width,iB.y,ce(70),iH,"ORBIT")iB=hN(iB.x+iB.width,iB.y,ce(70),iH,"SCOPE")hN(iB.x+iB.width,iB.y,ce(70),iH,"HIDE")end;local bx={}local iI=nil;function bx.HUDPrologue(d4)hM,iJ=cb(gR)if not hM then iK=a9;iL=aa;iM=ab;if bE and B and bE.getState()==0 then bE.toggle()end else iK=a6;iL=a7;iM=a8;if bE and B and bE.getState()==1 then bE.toggle()end end;gD=[[rgb(]]..bG(iK+0.6)..","..bG(iL+0.6)..","..bG(iM+0.6)..[[)]]hr=[[rgb(]]..bG(iK*0.8+0.5)..","..bG(iL*0.8+0.5)..","..bG(iM*0.8+0.5)..[[)]]local iN=gD;local iO=hr;local iP=[[rgb(]]..bG(iK*0.4+0.5)..","..bG(iL*0.4+0.5)..","..bG(iM*0.4+0.5)..[[)]]local iQ=gD;local iR=hr;local iS=iP;if cj()and not h then iN=[[rgb(]]..bG(iK*0.5+0.5)..","..bG(iL*0.5+0.5)..","..bG(iM*0.5+0.5)..[[)]]iO=[[rgb(]]..bG(iK*0.3+0.5)..","..bG(iL*0.3+0.5)..","..bG(iM*0.2+0.5)..[[)]]iP=[[rgb(]]..bG(iK*0.2+0.5)..","..bG(iL*0.2+0.5)..","..bG(iM*0.2+0.5)..[[)]]end;local fC=ce;local fD=ch;d4[#d4+1]=bH([[ <head> <style>body{margin: 0}svg{position:absolute;top:0;left:0;font-family:Montserrat;}.txt{font-size:10px;font-weight:bold;}.txttick{font-size:12px;font-weight:bold;}.txtbig{font-size:14px;font-weight:bold;}.altsm{font-size:16px;font-weight:normal;}.altbig{font-size:21px;font-weight:normal;}.line{stroke-width:2px;fill:none;stroke:%s}.linethick{stroke-width:3px;fill:none}.linethin{stroke-width:1px;fill:none}.warnings{font-size:26px;fill:red;text-anchor:middle;font-family:Bank;}.warn{fill:orange; font-size:24px}.crit{fill:darkred;font-size:28px}.bright{fill:%s;stroke:%s}text.bright{stroke:black; stroke-width:10px;paint-order:stroke;}.pbright{fill:%s;stroke:%s}text.pbright{stroke:black; stroke-width:10px;paint-order:stroke;}.dim{fill:%s;stroke:%s}text.dim{stroke:black; stroke-width:10px;paint-order:stroke;}.pdim{fill:%s;stroke:%s}text.pdim{stroke:black; stroke-width:10px;paint-order:stroke;}.red{fill:red;stroke:red}text.red{stroke:black; stroke-width:10px;paint-order:stroke;}.orange{fill:orange;stroke:orange}text.orange{stroke:black; stroke-width:10px;paint-order:stroke;}.redout{fill:none;stroke:red}.op30{opacity:0.3}.op10{opacity:0.1}.txtstart{text-anchor:start}.txtend{text-anchor:end}.txtmid{text-anchor:middle}.txtvspd{font-family:sans-serif;font-weight:normal}.txtvspdval{font-size:20px}.txtfuel{font-size:11px;font-weight:bold}.txtorb{font-size:12px}.txtorbbig{font-size:18px}.hudver{font-size:10px;font-weight:bold;fill:red;text-anchor:end;font-family:Bank}.msg{font-size:40px;fill:red;text-anchor:middle;font-weight:normal}.cursor{stroke:white}text{stroke:black; stroke-width:10px;paint-order:stroke;}.dimstroke{stroke:%s}.brightstroke{stroke:%s}.indicatorText{font-size:20px;fill:white}.size14{font-size:14px}.size20{font-size:20px}.topButton{fill:%s;opacity:0.5;stroke-width:2;stroke:%s}.topButtonActive{fill:url(#RadialGradientCenter);opacity:0.8;stroke-width:2;stroke:%s}.topButton text{font-size:13px; fill: %s; opacity:1; stroke-width:20px}.topButtonActive text{font-size:13px;fill:%s; stroke-width:0px; opacity:1}.indicatorFont{font-size:20px;font-family:Bank}.dimmer{stroke: %s;}.pdimfill{fill: %s;}.dimfill{fill: %s;}</style> </head> <body> <svg height="100%%" width="100%%" viewBox="0 0 %d %d"> <defs> <radialGradient id="RadialGradientCenterTop" cx="0.5" cy="0" r="1"> <stop offset="0%%" stop-color="%s" stop-opacity="0.5"/> <stop offset="100%%" stop-color="black" stop-opacity="0"/> </radialGradient> <radialGradient id="RadialGradientRightTop" cx="1" cy="0" r="1"> <stop offset="0%%" stop-color="%s" stop-opacity="0.5"/> <stop offset="200%%" stop-color="black" stop-opacity="0"/> </radialGradient> <radialGradient id="ThinRightTopGradient" cx="1" cy="0" r="1"> <stop offset="0%%" stop-color="%s" stop-opacity="0.2"/> <stop offset="200%%" stop-color="black" stop-opacity="0"/> </radialGradient> <radialGradient id="RadialGradientLeftTop" cx="0" cy="0" r="1"> <stop offset="0%%" stop-color="%s" stop-opacity="0.5"/> <stop offset="200%%" stop-color="black" stop-opacity="0"/> </radialGradient> <radialGradient id="ThinLeftTopGradient" cx="0" cy="0" r="1"> <stop offset="0%%" stop-color="%s" stop-opacity="0.2"/> <stop offset="200%%" stop-color="black" stop-opacity="0"/> </radialGradient> <radialGradient id="RadialGradientCenter" cx="0.5" cy="0.5" r="1"> <stop offset="0%%" stop-color="%s" stop-opacity="0.8"/> <stop offset="100%%" stop-color="%s" stop-opacity="0.5"/> </radialGradient> <radialGradient id="RadialPlanetCenter" cx="0.5" cy="0.5" r="0.5"> <stop offset="0%%" stop-color="%s" stop-opacity="1"/> <stop offset="100%%" stop-color="%s" stop-opacity="1"/> </radialGradient> <radialGradient id="RadialAtmo" cx="0.5" cy="0.5" r="0.5"> <stop offset="0%%" stop-color="%s" stop-opacity="1"/> <stop offset="66%%" stop-color="%s" stop-opacity="1"/> <stop offset="100%%" stop-color="%s" stop-opacity="0.1"/> </radialGradient> </defs> <g class="pdim txt txtend">]],iN,iN,iN,iQ,iQ,iO,iO,iR,iR,iO,iN,iP,iR,iN,iN,iP,iP,iS,iP,cg,ci,iO,iO,iO,iO,iO,iQ,iO,iR,iS,iR,iR,iS)if not iI then iI=bH([[<path class="linethick brightstroke" style="fill:url(#RadialGradientCenterTop);" d="M %f %f L %f %f L %f %f %f %f L %f %f"/>
                    <path class="linethick brightstroke" style="fill:url(#RadialGradientRightTop);" d="M %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f Z"/>
                    
                    <path class="linethick brightstroke" style="fill:url(#RadialGradientLeftTop);" d="M %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f Z"/>
                    
                    <clipPath id="headingClip">
                        <path class="linethick dimstroke" style="fill:black;fill-opacity:0.4;" d="M %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f Z"/>
                    </clipPath>
                    <path class="linethick dimstroke" style="fill:black;fill-opacity:0.4;" d="M %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f Z"/>]],fC(630),fD(0),fC(675),fD(45),fC(960),fD(55),fC(1245),fD(45),fC(1290),fD(0),fC(1000),fD(105),fC(1040),fD(59),fC(1250),fD(51),fC(1300),fD(0),fC(1920),fD(0),fC(1920),fD(20),fC(1400),fD(20),fC(1300),fD(105),fC(920),fD(105),fC(880),fD(59),fC(670),fD(51),fC(620),fD(0),fC(0),fD(0),fC(0),fD(20),fC(520),fD(20),fC(620),fD(105),fC(890),fD(59),fC(960),fD(62),fC(1030),fD(59),fC(985),fD(112),fC(1150),fD(112),fC(1100),fD(152),fC(820),fD(152),fC(780),fD(112),fC(935),fD(112),fC(890),fD(59),fC(960),fD(62),fC(1030),fD(59),fC(985),fD(112),fC(1150),fD(112),fC(1100),fD(152),fC(820),fD(152),fC(780),fD(112),fC(935),fD(112))end;if s and D then d4[#d4+1]=iI end;return d4 end;function bx.DrawVerticalSpeed(d4,d5)d3(d4,d5)end;function bx.UpdateHud(d4)local e8=iT;local iU=iV;local dg=iU;local dA=e8;local er=bG(bB.getThrottle())local eA=fv*3.6;local es=bB.getAxisCommandValue(0)local iW=ce(1770)local iX=ch(310)if p and cm then es=iY;er=iY*100 end;local cl=ck()local dh="ROLL"if er==nil then er=0 end;if not di then if fv>5 then e8=e6(iZ)iU=e9(iZ)else e8=0;iU=0 end;dh="YAW"end;if iJ>50000 and not d6 then local i_;i_=f6(iJ)d4[#d4+1]=bU(iW,iX,"PvP Boundary: "..i_,"pbright txtbig txtmid")end;d4[#d4+1]=j0;d4[#d4+1]=j1;d4[#d4+1]=cn;if c4~=""then d4[#d4+1]=c4 end;if co~=""then d4[#d4+1]=co end;if cp~=""then d4[#d4+1]=cp end;d3(d4,fe)if bL()==0 or g then if di then df(d4,ac,ad,dg,dh,di)else df(d4,ac,ad,iU,dh,di)end;if not cj()or h then if di then df(d4,ac,ad,dg,dh,di)dz(d4,dA,dg,ac,ad,di,bG(e9(iZ)),fv)else df(d4,ac,ad,iU,dh,di)dz(d4,e8,iU,ac,ad,di,bG(iU),fv)end;dJ(d4,fe,di)ea(d4,iZ,fv,ac,ad)end end;eq(d4,cl,er,es)ez(d4,eA)eD(d4)g1(d4)if not c2 and j2 then fR(d4)end;return d4 end;function bx.HUDEpilogue(d4)d4[#d4+1]="</svg>"return d4 end;function bx.ExtraData(d4)local j3=ce(1240)local j4=ch(55)local j5=j4+10;local j6;local fC=ce;local fD=ch;local j7=0;local cl=ck()if aQ then cl=cl.."-VERTICAL"end;if A and not aY and not aX and fv>20 then cl=cl.."-COLLISION ON"end;if bs~="Off"then cl="("..bs..")-"..cl end;if aV then cl="TB-"..cl end;if not br then cl=cl.."-DeCoupled"end;local j8=fD(99)local j9=fD(80)local ja=fD(85)local jb=fD(31)local jc=0;local jd=0;local je=jf>1000000 and bT(jf/1000000,2).."kT"or bT(jf/1000,2).."T"if d6 then j7=bk else j7=bi end;local jg,jh=fu.computeDistanceAndTime(fv,0,jf,0,0,j7)if jg<0 then jg=0 end;j7=bT(j7/(jf*bV),2).."g"local ji=bz:maxForceForward()j6=bA.g()if j6>0.1 then jd=jf*j6;jd=bT(jd/(jf*bV),2).."g"jc=0.5*ji/j6;jc=jc>1000000 and bT(jc/1000000,2).."kT"or bT(jc/1000,2).."T"end;ji=bT(ji/(jf*bV),2).."g"local jj=vec3(bA.getWorldAcceleration()):len()/9.80665;j6=bA.g()d4[#d4+1]=[[<g class="dim txt txtend size14">]]if bL()==1 and not g then j3=ce(1120)j4=ch(55)j5=j4+10 elseif d6 and D then local jk=ce(770)d4[#d4+1]=bU(fC(895),j8,"ATMO","")d4[#d4+1]=bH([[<path class="linethin dimstroke"  d="M %f %f l %f 0"/>]],fC(895),ja,fC(-80))d4[#d4+1]=bU(fC(815),j9,bH("%.1f%%",fi*100),"txtstart size20")end;if D then d4[#d4+1]=bU(fC(1025),j8,"GRAVITY","txtstart")d4[#d4+1]=bH([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],fC(1025),ja,fC(80))d4[#d4+1]=bU(fC(1105),j9,bH("%.2fg",j6/9.80665),"size20")d4[#d4+1]=bU(fC(1125),j8,"ACCEL","txtstart")d4[#d4+1]=bH([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],fC(1125),ja,fC(80))d4[#d4+1]=bU(fC(1205),j9,bH("%.2fg",jj),"size20")d4[#d4+1]=bU(fC(695),j8,"BRK TIME","")d4[#d4+1]=bH([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],fC(695),ja,fC(-80))d4[#d4+1]=bU(fC(615),j9,bH("%s",cW(jh)),"txtstart size20")d4[#d4+1]=bU(fC(635),fD(45),"TRIP","")d4[#d4+1]=bH([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],fC(635),fD(31),fC(-90))if ft then d4[#d4+1]=bU(fC(532),fD(23),bH("%s",cW(ft)),"txtstart size20")end;d4[#d4+1]=bU(fC(795),j8,"BRK DIST","")d4[#d4+1]=bH([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],fC(795),ja,fC(-80))d4[#d4+1]=bU(fC(715),j9,bH("%s",f6(jg)),"txtstart size20")d4[#d4+1]=bU(fC(1285),fD(45),"MASS","txtstart")d4[#d4+1]=bH([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],fC(1285),fD(31),fC(90))d4[#d4+1]=bU(fC(1388),fD(23),bH("%s",je),"size20")d4[#d4+1]=bU(fC(1220),j8,"THRUST","txtstart")d4[#d4+1]=bH([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],fC(1220),ja,fC(80))d4[#d4+1]=bU(fC(1300),j9,bH("%s",ji),"size20")d4[#d4+1]=bU(ce(960),ch(175),cl,"pbright txtbig txtmid size20")end;d4[#d4+1]="</g>"end;function bx.DrawOdometer(d4,gI,bd,gJ)if bw~="INFO"then return d4 end;local j6;local jc=0;local jd=0;local j7=0;local je=jf>1000000 and bT(jf/1000000,2).." kTons"or bT(jf/1000,2).." Tons"if d6 then j7=bk else j7=bi end;local jg,jh=fu.computeDistanceAndTime(fv,0,jf,0,0,j7)j7=bT(j7/(jf*bV),2).." g"local ji=bz:maxForceForward()j6=bA.g()if j6>0.1 then jd=jf*j6;jd=bT(jd/(jf*bV),2).." g"jc=0.5*ji/j6;jc=jc>1000000 and bT(jc/1000000,2).." kTons"or bT(jc/1000,2).." Tons"end;ji=bT(ji/(jf*bV),2).." g"if bL()==0 or g then local jl=ce(aq+10)local jm=ch(ar+20)local jn=ce(aq+10+ap/1.25)local hP=25;d4[#d4+1]="<g class='txtstart size14 bright'>"d4[#d4+1]=bU(jl,jm,bH("BrkTime: %s",cW(jh)))d4[#d4+1]=bU(jn,jm,bH("Trip: %.2f km",gI))d4[#d4+1]=bU(jl,jm+hP,bH("Lifetime: %.2f kSU",bd/200000))d4[#d4+1]=bU(jn,jm+hP,bH("BrkDist: %s",f6(jg)))d4[#d4+1]=bU(jl,jm+hP*2,"Trip Time: "..cW(gJ))d4[#d4+1]=bU(jn,jm+hP*2,"Total Time: "..cW(be))d4[#d4+1]=bU(jl,jm+hP*3,bH("Mass: %s",je))d4[#d4+1]=bU(jn,jm+hP*3,bH("Max Brake: %s",j7))d4[#d4+1]=bU(jl,jm+hP*4,bH("Max Thrust: %s",ji))if j6>0.1 then d4[#d4+1]=bU(jn,jm+hP*4,bH("Max Thrust Mass: %s",jc))d4[#d4+1]=bU(jl,jm+hP*5,bH("Req Thrust: %s",jd))else d4[#d4+1]=bU(jn,jm+hP*5,"Max Mass: n/a")d4[#d4+1]=bU(jl,jm+hP*6,"Req Thrust: n/a")end end;d4[#d4+1]="</g></g>"return d4 end;function bx.DrawWarnings(d4)return eD(d4)end;function bx.DisplayOrbitScreen(d4)return g1(d4)end;function bx.DisplayMessage(d4,f5)if f5~="empty"then local dF=310;for jo in string.gmatch(f5,"([^\n]+)")do dF=dF+35;d4[#d4+1]=bU("50%",dF,jo,"msg")end end;if jp~=0 then bB.setTimer("msgTick",jp)jp=0 end end;function bx.DrawDeadZone(d4)d4[#d4+1]=bH([[<circle class="dim line" style="fill:none" cx="50%%" cy="50%%" r="%d"/>]],ao)end;function bx.UpdatePipe()if d6 then c4=""return end;hC()end;function bx.DrawSettings(d4)local cG=ce(640)local dF=ch(200)d4[#d4+1]=[[<g class="pbright txtvspd txtstart">]]local jq=0;for fT,cf in pairs(c3)do jq=jq+1;d4[#d4+1]=bU(cG,dF,fT..": "..cf.get())dF=dF+20;if jq%12==0 then cG=cG+ce(350)dF=ch(200)end end;d4[#d4+1]=bU(ce(640),ch(200)+260,"To Change: In Lua Chat, enter /G VariableName Value")d4[#d4+1]="</g>"return d4 end;local jr;local js=ce(1770)local jt=ch(350)local ju=ch(15)local jv=ce(1370)local jw,jx;local jy=0;function bx.DrawRadarInfo()cn=ie.GetRadarHud(jv,ju,js,jt)end;function bx.DrawTanks()if ak~=0 and al~=0 then co=bU(ak,al,"","txtstart pdim txtfuel")cN=al;cF(ak,"Atmospheric ","ATMO",jz,cD,cE)cF(ak,"Space Fuel T","SPACE",jA,cB,cC)cF(ak,"Rocket Fuel ","ROCKET",jB,cz,cA)end end;function bx.DrawShield()local jC=bE.getState()==1 and"Shield Active"or"Shield Disabled"local jD=bA.getPvPTimer()local jE=bE.getResistances()local jF="A: "..10+jE[1]*100 .."% / E: "..10+jE[2]*100 .."% / K:"..10+jE[3]*100 .."% / T: "..10+jE[4]*100 .."%"local cG,dF=am-60,an+30;local jG=bG(0.5+bE.getShieldHitpoints()*100/bE.getMaxShieldHitpoints())local cX=bG(jG*2.55)local cY=bH("rgb(%d,%d,%d)",255-cX,cX,0)local cZ=""cp=bU(cG,dF,"","txtmid pdim txtfuel")if jG<10 and jC~="Shield Disabled"then cZ="red "end;jD=jD>0 and"   PvPTime: "..cW(jD)or""cp=cp..bH([[
                    <g class="pdim">                        
                    <rect fill=grey class="bar" x="%d" y="%d" width="200" height="13"></rect></g>
                    <g class="bar txtstart">
                    <rect fill=%s width="%d" height="13" x="%d" y="%d"></rect>
                    <text fill=black x="%d" y="%d">%s%%%s</text>
                    </g>]],cG,dF,cY,jG*2,cG,dF,cG+2,dF+10,jG,jD)cp=cp..bU(cG,dF-5,jC,cZ.."txtstart pbright txtbig")cp=cp..bU(cG,dF+30,jF,cZ.."txtstart pbright txtsmall")end;function bx.hudtick()if not cd then return end;local function jH(d4)local d0=bG(bO(ej/(cg/4)*255,0,255))d4[#d4+1]=bH("<line x1='0' y1='0' x2='%fpx' y2='%fpx' style='stroke:rgb(%d,%d,%d);stroke-width:2;transform:translate(50%%, 50%%)' />",jI,jJ,bG(iK+0.5)+d0,bG(iL+0.5)-d0,bG(iM+0.5)-d0)end;local function jK()for jL,cf in pairs(bW)do if cf.hovered then if not cf.drawCondition or cf.drawCondition(cf)then cf.toggleFunction(cf)end;cf.hovered=false end end;for jL,cf in pairs(bZ)do if cf.hovered then bw=cf.label;cf.hovered=false end end end;local function jM()local function jN(jO,jP,cG,dF,hO,hP)if jO>=cG and jO<=cG+hO and jP>=dF and jP<=dF+hP then return true else return false end end;local cG=jI+cg/2;local dF=jJ+ci/2;for jL,cf in pairs(bW)do cf.hovered=jN(cG,dF,cf.x,cf.y,cf.width,cf.height)end;for jL,cf in pairs(bZ)do cf.hovered=jN(cG,dF,cf.x,cf.y,cf.width,cf.height)end;if iD then local hp=false;for jL,gQ in ipairs(iA)do if gQ.hovered then hp=true;break end end;if iw.hovered then hp=true end;iD=hp else iD=iw.hovered;if not iD then iz=bb end end end;local function jQ(d4)if not bw or bw==""then bw="HELP"end;if s then for fT,cf in pairs(bZ)do local cZ="dim brightstroke"local jR=0.2;if bw==fT then cZ="pbright dimstroke"jR=0.6 end;local jS=""if cf.hovered then jR=0.8;jS=";stroke:white"end;d4[#d4+1]=bH([[<rect width="%f" height="%d" x="%d" y="%d" clip-path="url(#round-corner)" class="%s" style="stroke-width:1;fill-opacity:%f;%s" />]],cf.width,cf.height,cf.x,cf.y,cZ,jR,jS)d4[#d4+1]=bU(cf.x+cf.width/2,cf.y+cf.height/2+5,cf.label,"txt txtmid pdim")end end end;local function jT(d4)local function jU(d4,jV,hover,cG,dF,jW,jX,jY,jZ,j_,k0,iB)if type(j_)=="function"then j_=j_(iB)end;if type(k0)=="function"then k0=k0(iB)end;d4[#d4+1]=bH("<rect x='%f' y='%f' width='%f' height='%f' fill='",cG,dF,jW,jX)if jV then d4[#d4+1]=bH("%s'",jY)else d4[#d4+1]=jZ end;if hover then d4[#d4+1]=bH(" style='stroke:rgb(%d,%d,%d); stroke-width:2'",a6,a7,a8)else d4[#d4+1]=bH(" style='stroke:rgb(%d,%d,%d); stroke-width:1'",bT(a6*0.5,0),bT(a7*0.5,0),bT(a8*0.5,0))end;d4[#d4+1]=" rx='5'></rect>"d4[#d4+1]=bH("<text x='%f' y='%f' font-size='24' fill='",cG+jW/2,dF+jX/2+5)if jV then d4[#d4+1]="black"else d4[#d4+1]="white"end;d4[#d4+1]="' text-anchor='middle' font-family='Play' style='stroke-width:0px;'>"if jV then d4[#d4+1]=bH("%s</text>",j_)else d4[#d4+1]=bH("%s</text>",k0)end end;local k1=bH("rgb(%d,%d,%d)'",bT(a6*0.1,0),bT(a7*0.1,0),bT(a8*0.1,0))local k2=bH("rgb(%d,%d,%d)",bT(a6*0.8,0),bT(a7*0.8,0),bT(a8*0.8,0))local k3=jU;for jL,cf in pairs(bW)do local hT=cf.disableName;local hS=cf.enableName;if type(hT)=="function"then hT=hT(cf)end;if type(hS)=="function"then hS=hS(cf)end;if not cf.drawCondition or cf.drawCondition(cf)then k3(d4,cf.toggleVar(cf),cf.hovered,cf.x,cf.y,cf.width,cf.height,k2,k1,hT,hS,cf)end end end;local k4=bT(cg/2,0)local k5=bT(ci/2,0)local d4={}gH.HUDPrologue(d4)if s then gH.UpdateHud(d4)else if w then gH.DrawVerticalSpeed(d4,fe)end;gH.DrawWarnings(d4)end;if c2 and c3~="none"then gH.DrawSettings(d4)end;if radar_1 then gH.DrawRadarInfo()end;gH.HUDEpilogue(d4)d4[#d4+1]=bH([[<svg width="100%%" height="100%%" style="position:absolute;top:0;left:0"  viewBox="0 0 %d %d">]],cg,ci)if i4~="empty"then gH.DisplayMessage(d4,i4)end;if bL()==0 and b=="virtual joystick"then if r then gH.DrawDeadZone(d4)end end;jQ(d4)if bR()==0 then if bL()==1 and j2 then if not k6 then jM()jT(d4)end;if not k7 and not k8 then local k9=table.concat(d4,"")d4={}d4[#d4+1]=bH("<style>@keyframes test { from { opacity: 0; } to { opacity: 1; } }  body { animation-name: test; animation-duration: 0.5s; }</style><body><svg width='100%%' height='100%%' position='absolute' top='0' left='0'><rect width='100%%' height='100%%' x='0' y='0' position='absolute' style='fill:rgb(6,5,26);'/></svg><svg width='50%%' height='50%%' style='position:absolute;top:30%%;left:25%%' viewbox='0 0 %d %d'>",cg,ci)d4[#d4+1]=k9;d4[#d4+1]="</body>"k7=true;d4[#d4+1]=[[</svg></body>]]bB.setTimer("animateTick",0.5)local ka=table.concat(d4,"")bC.setScreen(ka)elseif k8 then local k9=table.concat(d4,"")d4={}d4[#d4+1]=bH("<body style='background-color:rgb(6,5,26)'><svg width='50%%' height='50%%' style='position:absolute;top:30%%;left:25%%' viewbox='0 0 %d %d'>",cg,ci)d4[#d4+1]=k9;d4[#d4+1]="</body>"end;if not k7 then d4[#d4+1]=bH([[<g transform="translate(%d %d)"><circle class="cursor" cx="%fpx" cy="%fpx" r="5"/></g>]],k4,k5,jI,jJ)end else jK()end else if not j2 and bL()==0 then jK()if ej>ao then if r then jH(d4)end end elseif j2 and(not k6 or not d)then jM()jT(d4)end;d4[#d4+1]=bH([[<g transform="translate(%d %d)"><circle class="cursor" cx="%fpx" cy="%fpx" r="5"/></g>]],k4,k5,jI,jJ)end;d4[#d4+1]=[[</svg></body>]]ka=table.concat(d4,"")end;function bx.TenthTick()gH.DrawTanks()if bE then gH.DrawShield()end end;function bx.OneSecond(d4)local function kb()local cS=bN()local eA=fv;local kc=cS-kd;if eA>1.38889 then eA=eA/1000;local ke=eA*(cS-kd)bd=bd+ke;gI=gI+ke end;gJ=gJ+kc;be=be+kc;kd=cS end;kb()gH.UpdatePipe()gH.ExtraData(d4)end;function bx.ButtonSetup()i6()ib()bW=bX end;return bx end end;package.preload['ArchHUD:autoconf/custom/archhud/custom/customapclass']=function(...)local kf={}return kf end;package.preload['ArchHUD:autoconf/custom/archhud/apclass']=function(...)function kg(bz,bA,bB,bC,bD,vBooster,hover,kh,antigrav,bF,bG,bJ,bL,bM,bN,bO,bP,ki,bR,bS,bT)local kf={}local function kj(dC)local kk=b5;if not aU then kk=0 end;if not d6 then return fu.computeDistanceAndTime(dC,kk,jf,0,0,bi-b7*jf)else if bk and bk>0 then return fu.computeDistanceAndTime(dC,kk,jf,0,0,bk-b7*jf)else return 0,0 end end end;local function kl(dC)local kk=b5;if not aU then kk=0 end;return fu.computeDistanceAndTime(dC,kk,jf,bz:maxForceForward(),X,bi-b7*jf)end;local km=false;local kn=0;local ko=0;local kp=0;local kq=bN()local kr=0;local ks=0;local kt=0;local ku=0;local kv=false;local kw=false;local kx=false;local ky=nil;local kz=0;local kA={}function kf.GetAutopilotBrakeDistanceAndTime(dC)return kj(dC)end;function kf.GetAutopilotTBBrakeDistanceAndTime(dC)return kl(dC)end;local function kB(kC,kD,kE)kD=kD:project_on_plane(kC)kE=kE:project_on_plane(kC)return bM(kD:cross(kE):dot(kC),kD:dot(kE))end;local function kF()local function kG()local kH=-1;local kI=-1;if vBooster then kH=vBooster.getDistance()end;if hover then kI=hover.getDistance()end;if kH~=-1 and kI~=-1 then if kH<kI then return kH else return kI end elseif kH~=-1 then return kH elseif kI~=-1 then return kI else return-1 end end;local kJ=kG()local kK=-1;if kh then kK=kh.getDistance()end;if kJ~=-1 and kK~=-1 then if kJ<kK then return kJ else return kK end elseif kJ~=-1 then return kJ else return kK end end;local function kL(cd,kM,kN)local function kO(kP,kQ)local kR=vec3(kQ)if kP.id==0 then return setmetatable({latitude=kR.x,longitude=kR.y,altitude=kR.z,id=0,systemId=kP.systemId},kS)end;local kT=kR-kP.center;local ej=kT:len()local d5=ej-kP.radius;local kU=0;local kV=0;if not kW(ej,0)then local kX=bM(kT.y,kT.x)kV=kX>=0 and kX or 2*math.pi+kX;kU=math.pi/2-math.acos(kT.z/ej)end;return setmetatable({latitude=math.deg(kU),longitude=math.deg(kV),altitude=d5,id=kP.id,systemId=kP.systemId},kS)end;local kY=kO(cd,kM)kY="::pos{"..kY.systemId..","..kY.id..","..kY.latitude..","..kY.longitude..","..kY.altitude.."}"if kN then return kY else bC.setWaypoint(kY)return true end end;local kZ=false;function kf.showWayPoint(cd,kM,kN)return kL(cd,kM,kN)end;function kf.APTick()local function k_()if l0 and not aX then local l1=l0[1]local l2,l3=l0[2],l0[3]local l4=math.min(l2,l3 or l2)local l5=l4/fv;local l6=aY and(fv<42 or dP~=-1)local l7=aW or bg or bj or aU;if l7 and not l6 and(l8*1.5>l4 or l5<1)then aR=true;kA={}fr.cmdThrottle(0)if aW then fr.ToggleAltitudeHold()end;if bj then l9()end;i4="Autopilot Cancelled due to possible collision"if bg or aU then fr.ToggleAutopilot()end;fk=true;aX=true;ir=true end;if l5<11 then fo=l1.name.." COLLISION "..cW(l5).." / "..f6(l4,2)else fo=l1.name.." collision "..cW(l5)end;if l5<6 then eZ("alarm","AL",2)end else fo=false end end;local function la(lb,lc,ld)local function le(lb,lf)lb=vec3(lb)lf=vec3(lf):normalize()local lg=lb*lf;return lg.x+lg.y+lg.z end;local lh=0.001;local li=1;if not d6 or not eX or dP~=-1 or fv<dH then if ld==nil then ld=aI end;if lc==nil then lc=lh end;lb=vec3(lb):normalize()local lj=vec3()-lb;local lk=-le(lj,bA.getConstructWorldOrientationRight())*li;local ll=-le(lj,bA.getConstructWorldOrientationUp())*li;if ko==0 then ko=lk/2 end;if kp==0 then kp=ll/2 end;if bF(lk)<0.1 then lm=lm-lk*2 else lm=lm-(lk+(lk-ko)*ld)end;if bF(ll)<0.1 then ln=ln+ll*2 else ln=ln+ll+(ll-kp)*ld end;ko=lk;kp=ll;if bF(lk)<lc and bF(ll)<lc then return true end;return false elseif eX and dP==-1 then lb=fs;if ld==nil then ld=aI end;if lc==nil then lc=lh end;lb=vec3(lb):normalize()local lj=dq-lb;local lk=-le(lj,bA.getConstructWorldOrientationRight())*li;local ll=-le(lj,bA.getConstructWorldOrientationUp())*li;if ko==0 then ko=lk/2 end;if kp==0 then kp=ll/2 end;if bF(lk)<0.1 then lm=lm-lk*5 else lm=lm-(lk+(lk-ko)*ld)end;if bF(ll)<0.1 then ln=ln+ll*5 else ln=ln+ll+(ll-kp)*ld end;ko=lk;kp=ll;if bF(lk)<lc and bF(ll)<lc then return true end;return false end end;d6=bJ()>0;fi=bJ()fe=bA.getAltitude()dP=kF()ge=bN()kq=ge;if A then k_()end;if antigrav then eY=antigrav.getState()==1 end;local lo=1;local lp=1;local lq=ge-kq;local lr=-math.deg(kB(ls,fs,dq))local lt=math.deg(kB(h1,fs,dq))local db=dc*-1;eX=d6 and lr<-G or lr>G or lt<-H or lt>H;local lu=bC.getMouseDeltaX()local lv=bC.getMouseDeltaY()if j and not j2 then lv=-lv end;lm=0;lw=0;ln=0;lx=ly[0]cd=lx:closestBody(bA.getConstructWorldPos())lz=lA(cd)gq=lz:orbitalParameters(bA.getConstructWorldPos(),fs)if fe==0 then fe=(gR-cd.center):len()-cd.radius end;di=bB.getClosestPlanetInfluence()>0 or fe>0 and fe<200000;local j6=cd:getGravity(bA.getConstructWorldPos()):len()*jf;lB=0;lC=bA.getMaxKinematicsParametersAlongAxis("ground",bA.getConstructOrientationUp())[1]if bR()==0 then if bL()==1 and j2 then if not k7 then jI=bO(jI+lu,-cg/2,cg/2)jJ=bO(jJ+lv,-ci/2,ci/2)end else jI=0;jJ=0 end else jI=bO(jI+lu,-cg/2,cg/2)jJ=bO(jJ+lv,-ci/2,ci/2)ej=bS(jI*jI+jJ*jJ)if not j2 and bL()==0 then local eh,ei=1,1;if bw=="SCOPE"then eh,ei=gL/90,gL/90 end;if b=="virtual joystick"then if jI>0 and jI>ao then lm=lm-(jI-ao)*aw*eh elseif jI<0 and jI<ao*-1 then lm=lm-(jI+ao)*aw*eh else lm=0 end;if jJ>0 and jJ>ao then ln=ln-(jJ-ao)*ax*ei elseif jJ<0 and jJ<ao*-1 then ln=ln-(jJ+ao)*ax*ei else ln=0 end else jI=0;jJ=0;if b=="mouse"then ln=(-utils.smoothstep(lv,-100,100)+0.5)*2*lo;lm=(-utils.smoothstep(lu,-100,100)+0.5)*2*lp end end end end;local lD=fv>8334;if fv>Q/3.6 and not d6 and not aU and not lD then i4="Space Speed Engine Shutoff reached"fr.cmdThrottle(0)end;if not lD and lE then if not aR then fr.BrakeToggle()end;if aU then fr.ToggleAutopilot()end end;lE=lD;if d6 and fi>0.09 then if fv>ey/3.6 and not p and not km then aR=true;km=true elseif not p and km then if fv<ey/3.6 then aR=false;km=false end end end;if aR then lF=1 else lF=0 end;if aT then if iF then aR=false;local lG=false;if fQ and iF~=1 then lG=la(fQ.position-gR,0.1)else lG=la(vec3(fs),0.01)end;ir=true;if lG then fr.cmdCruise(bG(ey))if(bF(iV)<2 or bF(iT)>85)and fv>=ey/3.6-1 then aR=false;aT=false;lH=true;if iF~=1 then fg=true end;iF=false;aU=false;fr.BeginReentry()end elseif d6 and p then fr.cmdThrottle(1)end elseif fv>dH then la(vec3(fs),0.01)end end;if aS then if d6 then aS=false elseif fv>dH then la(-vec3(fs))end end;if not aT and iF and not bp then if fi==0 then lH=true;fr.BeginReentry()iF=false;fg=true else iF=false;fr.ToggleAutopilot()end end;if fg and fQ and(fe<b0+250 and fe>b0-250)and fv*3.6>ey-250 and bF(d8)<25 and fi>=0.1 and(fQ.position-gR):len()>2000+fe then fr.ToggleAutopilot()fg=false end;if a_ then ir=true;local lI=b0;if d8<-30 then i4="Unable to achieve lift. Safety Landing."lJ=0;ir=k;a_=false;aX=true elseif not l and eY or b0<cd.spaceEngineMinAltitude then if eY then lI=antigrav.getBaseAltitude()end;if fe<lI-100 then lK=0;lJ=15;aR=false elseif d8>0 then aR=true;lJ=0 elseif d8<-30 then aR=true;lJ=15 elseif fe>=lI then if eY then if aU or bg then fr.ToggleVerticalTakeoff()else aR=true;a_=false end;i4="Takeoff complete. Singularity engaged"eZ("aggLk","AG")else aR=false;i4="VTO complete. Engaging Horizontal Flight"eZ("vtoc","VT")fr.ToggleVerticalTakeoff()end;lJ=0 end else if fi>0.08 then lK=0;aR=false;lJ=20 elseif fi<0.08 and fi>0 then aR=false;if lL then lK=0;lJ=20 else lJ=0;lK=36;fr.cmdCruise(3500)end else ir=k;bp=true;fL=false;lM=false;kv=false;kt=nil;ku=nil;if ky==nil then ky=cd end;lN=lI;kx=true;a_=false end end;if lK~=nil then if lO==nil then lO=pid.new(2*0.01,0,2*0.1)end;local lP=bO(lK-iT,-H*0.80,H*0.80)lO:inject(lP)local lQ=bO(lO:get(),-1,1)ln=lQ end end;if bp then local lj;local lR=false;local lS=f6(lN)if ky==nil then ky=cd;if bg then ky=g0 end end;if not kx then lN=bG(ky.radius+ky.surfaceMaxAltitude+O)if ky.hasAtmosphere then lN=bG(ky.radius+ky.noAtmosphericDensityAltitude+O)end;kx=true end;if lT.VectorToTarget and fQ then lj=fQ.position-gR end;local lU,lV=lA(ky):escapeAndOrbitalSpeed((gR-ky.center):len()-ky.radius)local lW=iV;if not kv then local lX=false;local lY=false;fr.cmdThrottle(0)ku=0;fj="Aligning to orbital path - OrbitHeight: "..lS;if lT.VectorToTarget then la(lj:normalize():project_on_plane(dc))lR=dq:dot(lj:project_on_plane(ls):normalize())>0.95 else la(fs)lR=lr<0.5;if fv<150 then lR=true end end;ln=0;kt=0;if iT<=kt+1 and iT>=kt-1 then lX=true else lX=false end;if lW<=ku+1 and lW>=ku-1 then lY=true else lY=false end;if lX and lY and lR then kt=nil;ku=nil;kv=true end else if lT.VectorToTarget then la(lj:normalize():project_on_plane(dc))elseif fv>150 then la(fs)end;ln=0;if lT.VectorToTarget and fQ then local l8,jL=fu.computeDistanceAndTime(fv,ey/3.6,jf,0,0,bi)if fL and lj:len()>15000+l8+fe then fj="Orbiting to Target"if fe-100<=ky.noAtmosphericDensityAltitude or ft>gq.timeToPeriapsis and gq.periapsis.altitude<ky.noAtmosphericDensityAltitude then fL=false end elseif fL or lj:len()<15000+l8+fe then i4="Orbit complete, proceeding with reentry"eZ("orCom","OB")ba=fQ.position;lH=true;fg=true;lT.VectorToTarget,lT.AutopilotAlign=false,false;fr.ToggleIntoOrbit()fr.BeginReentry()return end end;if gq.periapsis~=nil and gq.apoapsis~=nil and gq.eccentricity<1 and fe>lN*0.9 and fe<lN*1.4 then if gq.apoapsis~=nil then if gq.periapsis.altitude>=lN*0.99 and gq.apoapsis.altitude>=lN*0.99 and gq.periapsis.altitude<gq.apoapsis.altitude and gq.periapsis.altitude*1.05>=gq.apoapsis.altitude or fL then if fL then aR=false;fr.cmdThrottle(0)kt=0;if not lT.VectorToTarget then i4="Orbit complete"eZ("orCom","OB")fr.ToggleIntoOrbit()end else kz=kz+1;if kz>=2 then fL=true end end else fj="Adjusting Orbit - OrbitHeight: "..lS;kw=true;fr.cmdCruise(lV*3.6+1)local lZ=lN-fe;if l_==nil then l_=pid.new(0.1,0,1*0.1)end;l_:inject(lZ-d8*bO(utils.smoothstep(2000-lZ,-2000,2000)^6*10,1,10))kt=bO(l_:get(),-60,60)end end else local m0=2.75;local m1=bF(bT(lU*m0))local m2=m1%50;if m2>0 then m1=m1-m2+50 end;aR=false;if fe<lN*0.8 then fj="Escaping planet gravity - OrbitHeight: "..lS;kt=utils.map(d8,200,0,-15,80)elseif fe>=lN*0.8 and fe<lN*1.15 then fj="Approaching orbital corridor - OrbitHeight: "..lS;m1=m1*0.75;kt=utils.map(d8,100,-100,-15,65)elseif fe>=lN*1.15 and fe<lN*1.5 then fj="Approaching orbital corridor - OrbitHeight: "..lS;m1=m1*0.75;if d8<0 or kw then kt=utils.map(fe,lN*1.5,lN*1.01,-30,0)else kt=utils.map(fe,lN*0.99,lN*1.5,0,30)end elseif fe>lN*1.5 then fj="Reentering orbital corridor - OrbitHeight: "..lS;kt=-65;local m3=utils.map(d8,-150,-400,1,0.55)m1=m1*m3 end;fr.cmdCruise(bG(m1))end end;if kt~=nil then if m4==nil then m4=pid.new(1*0.01,0,5*0.1)end;local m5=kt-iT;m4:inject(m5)local m6=bO(m4:get(),-0.5,0.5)ln=m6 end end;if aU and fi==0 and not iF then local function m7(jw,gq)bC.print(jw)aR=false;b3=false;aU=false;m8=false;b6="Aligning"fr.cmdThrottle(0)m9=false;i4=jw;eZ("apCom","AP")if gq or iF then if gq and ma~=nil and not iF then if not fe or fe==0 then return end;lN=fe;kx=true end;fr.ToggleIntoOrbit()end end;local mb,mc=ba,false;if fQ and fQ.planetname~="Space"then b2=true;if not m8 then local md=(fQ.position-g0.center):normalize()local me=md:project_on_plane((g0.center-gR):normalize()):normalize()local mf=g0.center+me*(g0.radius+ma)local mg=fQ.position+(fQ.position-g0.center):normalize()*(ma-g0:getAltitude(fQ.position))if(gR-mf):len()<(gR-mg):len()then mb=mf else mb=mg;b5=0 end;ba=mb;fr.showWayPoint(g0,ba)mc=true;m8=true end;b7=0 elseif fQ and fQ.planetname=="Space"then if not m8 then b7=0;mc=true;b2=true;m8=true;mb=fQ.position+(gR-fQ.position):normalize()*M;ba=mb end elseif fQ==nil then b7=0;if not m8 then local md=(gR+fs*100000-g0.center):normalize()local me=md:project_on_plane((g0.center-gR):normalize()):normalize()if me:len()<1 then md=(gR+dq*100000-g0.center):normalize()me=md:project_on_plane((g0.center-gR):normalize()):normalize()end;mb=g0.center+me*(g0.radius+ma)ba=mb;m8=true;mc=true;b2=true;fr.showWayPoint(g0,ba)end end;mh=(vec3(mb)-gR):len()local fp,mi,mj=ly:getPlanetarySystem(0):castIntersections(gR,fs:normalize(),function(l1)if l1.noAtmosphericDensityAltitude>0 then return l1.radius+l1.noAtmosphericDensityAltitude else return l1.radius+l1.surfaceMaxAltitude*1.5 end end)local fq=mi;if mj~=nil and mi~=nil then fq=math.min(mj,mi)end;if fq~=nil and fq<mh and fp.name==g0.name then mh=fq end;local lG=true;local mk=(g0.center-(gR+vec3(fs):normalize()*mh)):len()-g0.radius;local f5=f6(mk)ki(ml,'{"label": "Projected Altitude", "value": "'..f5 ..'"}')local l8,mm;if not aV then l8,mm=kj(fv)else l8,mm=kl(fv)end;if fv>50 and b1 then local lj=vec3(mb)-gR;local mn=bO(math.deg(kB(ls,fs:normalize(),lj:normalize()))*fv/500,-90,90)local mo=bO(math.deg(kB(h1,fs:normalize(),lj:normalize()))*fv/500,-90,90)if bF(mn)<20 and bF(mo)<20 then mn=mn*2;mo=mo*2 end;if bF(mn)<2 and bF(mo)<2 then mn=mn*2;mo=mo*2 end;local lr=-math.deg(kB(ls,dq,fs:normalize()))local lt=-math.deg(kB(h1,dq,fs:normalize()))if mp==nil then mp=pid.new(2*0.01,0,2*0.1)end;mp:inject(mo-lt)local mq=bO(mp:get(),-1,1)ln=ln+mq;if mr==nil then mr=pid.new(2*0.01,0,2*0.1)end;mr:inject(mn-lr)local ms=bO(mr:get(),-1,1)lm=lm+ms;mc=true;if bF(mn)>2 or bF(mo)>2 then if b6~="Adjusting Trajectory"then b6="Adjusting Trajectory"eZ("apAdj","AP")end else if b6~="Accelerating"then b6="Accelerating"eZ("apAcc","AP")end end elseif b1 and fv<=50 then la((mb-gR):normalize())end;if mk<ma*1.5 then if fQ and fQ.planetname=="Space"then b5=0 elseif fQ==nil then jL,b5=lA(g0):escapeAndOrbitalSpeed(mk)end end;if aU and not b1 and not b4 and not b3 then local fp,fq=fr.checkLOS((ba-gR):normalize())if g0.name~=cd.name then if fp~=nil and g0.name~=fp.name and fq<mh then i4="Collision with "..fp.name.." in "..f6(fq).."\nClear LOS to continue."jp=5;kZ=true else kZ=false;i4=""end end end;if not kZ then if not b4 and not b3 and not mc then lG=la((mb-gR):normalize())elseif aV and(b3 or b4)then lG=la(-vec3(fs):normalize())end end;if b1 then if not m9 then aR=false;fr.cmdThrottle(W)iY=bT(W,2)m9=true end;local mt=bB.getThrottle()if p then mt=iY end;local mu=99999;local jj=-vec3(bA.getWorldAcceleration()):dot(fs:normalize())local mv=bO(fs:dot((mb-gR):normalize()),0,fv)if mv>0 or jj>0 then mu=fu.computeTravelTime(mv,jj,mh-l8)end;if iZ:len()>=V or mt==0 and m9 or X/4>mu then b1=false;if b6~="Cruising"then eZ("apCru","AP")b6="Cruising"end;b4=true;fr.cmdThrottle(0)end;local mw=mh;if mw<=l8 or C and iJ<=l8+10000 and hM then if C and iJ<=l8+10000 and hM then if iJ<kn and iJ>2000 then fr.ToggleAutopilot()i4="Autopilot cancelled to prevent crossing PvP Line"aR=true;kn=iJ else kn=iJ;return end end;b1=false;if b6~="Braking"then eZ("apBrk","AP")b6="Braking"end;b3=true;fr.cmdThrottle(0)m9=false end elseif b3 then if b6~="Orbiting to Target"then aR=true;lF=1 end;if aV then fr.cmdThrottle(1,true)end;local jL,lV=lA(g0):escapeAndOrbitalSpeed((gR-cd.center):len()-cd.radius)local lj;if fQ then lj=fQ.position-gR end;if fQ and fQ.planetname=="Space"and fv<50 then if#kA>0 then aR=false;fr.ToggleAutopilot()fr.ToggleAutopilot()return end;m7("Autopilot complete, arrived at space location")aR=true;lF=1 elseif fQ and fQ.planetname~="Space"and fv<=lV and(gq.apoapsis==nil or gq.periapsis==nil or gq.apoapsis.altitude<=0 or gq.periapsis.altitude<=0)then m7("Autopilot complete, commencing reentry")ba=fQ.position;iF=true;fr.showWayPoint(g0,ba)elseif(fQ and fQ.planetname~="Space"or fQ==nil)and gq.periapsis~=nil and gq.periapsis.altitude>0 and gq.eccentricity<1 or b6=="Circularizing"then if b6~="Circularizing"then eZ("apCir","AP")b6="Circularizing"end;if fv<=lV then if fQ then if fs:normalize():dot(lj:normalize())>0.4 then if b6~="Orbiting to Target"then eZ("apOrb","OB")b6="Orbiting to Target"end;if not mx then aR=false;fr.showWayPoint(g0,fQ.position)mx=true end else m7("Autopilot complete, proceeding with reentry")ba=fQ.position;iF=true;fr.showWayPoint(g0,fQ.position)mx=false end else m7("Autopilot completed, setting orbit",true)lF=0 end end elseif b6=="Circularizing"then m7("Autopilot complete, fixing Orbit",true)end elseif b4 then local mw=mh;if mw<=l8 or C and iJ<=l8+10000 and hM then if C and iJ<=l8+10000 and hM then if iJ<kn and iJ>2000 then fr.ToggleAutopilot()i4="Autopilot cancelled to prevent crossing PvP Line"aR=true;kn=iJ else kn=iJ;return end end;b1=false;if b6~="Braking"then eZ("apBrk","AP")b6="Braking"end;b3=true end;local mt=bB.getThrottle()if p then mt=iY end;if mt>0 then b1=true;if b6~="Accelerating"then b6="Accelerating"eZ("apAcc","AP")end;b4=false end else if lG then if not b2 and fQ==nil or not b2 and fQ and fQ.planetname~="Space"then if not iF then ba=vec3(g0.center)+(ma+g0.radius)*h1;my=ls;mz=h1 end;b2=true elseif lG and not kZ then b1=true;if b6~="Accelerating"then b6="Accelerating"eZ("apAcc","AP")end;if not m9 then fr.cmdThrottle(W,true)iY=bT(W,2)m9=true;aR=false end end end end elseif aU and(fQ~=nil and fQ.planetname~="Space"and fi>0)then i4="Autopilot complete, starting reentry"eZ("apCom","AP")ba=fQ.position;aR=false;b3=false;aU=false;m8=false;b6="Aligning"lF=0;fr.cmdThrottle(0)m9=false;aT=true;iF=true;fr.showWayPoint(g0,fQ.position)end;if ff then ir=true;local mo=0;local gE=gR+vec3(bB.getMasterPlayerRelativePosition())local mA=gE-gR;local mB=vec3(mA):project_on(dq):len()local mC=vec3(mA):project_on(h1):len()local ej=bS(mB*mB+mC*mC)la(mA:normalize())local gY=40;local mD=ej<gY;local mE=100;local mF=bO((ej-gY)/2,10,mE)ln=0;local lG=bF(lm)<0.1;if lG and fv<mF and not mD then aR=false;mo=-20 else aR=true;mo=0 end;local mG=0;if bF(mo-iT)>mG then if mH==nil then mH=pid.new(2*0.01,0,2*0.1)end;mH:inject(mo-iT)local mq=mH:get()ln=mq end end;if aW or aX or aZ or bg or bj~=nil then local mI=bk;if mI then mI=mI*bO(fv/100,0.1,1)*fi else mI=bi end;if fi<0.01 then mI=bi end;local mJ=dq:project_on_plane(dc):normalize():dot(fs)local mK=vec3(bA.getWorldAirFrictionAcceleration())local mL=mK:len()*jf;if mJ>100 then l8,mm=fu.computeDistanceAndTime(mJ,100,jf,0,0,mI)local mM,mN=fu.computeDistanceAndTime(100,0,jf,0,0,mI*0.55)l8=l8+mM else l8,mm=fu.computeDistanceAndTime(mJ,0,jf,0,0,mI*0.55)end;local lZ=b0-fe-d8;local mO=200+fv;if aZ or iF then mP=2000+fv end;local mQ=1;if aY then mQ=bO(fv/100,0.1,1)end;local mo=(utils.smoothstep(lZ,-mO,mO)-0.5)*2*J*mQ;if not aZ and not iF and not bg and dq:dot(fs:normalize())<0.99 then mo=(utils.smoothstep(lZ,-mO*bO(20-19*fi*10,1,20),mO*bO(20-19*fi*10,1,20))-0.5)*2*J*bO(2-fi*10,1,2)*mQ end;if not aW then mo=0 end;if bj~=nil then if di and not bp then mo=bj else bj=nil end end;ir=true;local mR=ln;if aZ then local mS=bG(ey)local mT,mU=fu.computeDistanceAndTime(fv,mS/3.6,jf,0,0,bi-cd.gravity*9.8*jf)mT=mT==-1 and 5000 or mT;local mV=fe-(cd.noAtmosphericDensityAltitude+mT)local mW=fe>cd.noAtmosphericDensityAltitude+mT*1.35;if mW then mo=K;if fv<=mS/3.6 and fv>mS/3.6-10 and bF(fs:normalize():dot(dq))>0.9 and not cm then mX=false;fr.cmdThrottle(1)end elseif cm and not mW and not d6 then fr.cmdCruise(mS,true)end;if cm then if fv>mS/3.6 and not mW then aR=true else aR=false end else aR=false end;if d8>0 then aR=true end;if not lH then mo=-80;if fi>0.02 then i4="PARACHUTE DEPLOYED"aZ=false;aX=true;mo=0;ir=k end elseif cd.noAtmosphericDensityAltitude>0 and mW then ir=true elseif not mW then if not d6 and(cm or bP:getTargetSpeed(axisCommandId.longitudinal)~=mS)then fr.cmdCruise(mS)end;if fv<mS/3.6+1 then aR=false;lH=false;aZ=false;ir=true end end end;if fv>dH and not fh and not bg and not aX and q then la(vec3(fs))end;if e_ or(bg or fh)and bb>0 and fi>0.01 then local lj;if e_ then if type(e_)=="table"then lj=e_ elseif e_<3 and e_>0 then lj=-dc:cross(fs)*5000 elseif e_>=3 then lj=dc:cross(fs)*5000 elseif e_<0 then lj=fs*25000 end elseif fQ~=nil then lj=fQ.position-gR else lj=g0.center-gR end;local mn=math.deg(kB(dc:normalize(),fs,lj))*2;local h0=math.rad(bF(iV))if fv>aB and fi>0.01 then local mY=1000+fv;local mZ=(utils.smoothstep(lZ-d8*10,-mY,mY)-0.5)*2*J;local m_=bO(90-mZ,0,180)lB=bO(mn*2,-m_,m_)local n0=mn;mn=bO(bO(mn,-G*0.80,G*0.80)*math.cos(h0)+4*(iT-mo)*math.sin(math.rad(iV)),-G*0.80,G*0.80)local n1=1;if lB~=0 then n1=bF(h0/lB)end;n1=(90-bO(bF(lB-iV),0,90))/90;local n2=mo;if bF(iV)>90 then n2=-n2 end;mo=n1*bO(bO(n2*math.cos(h0),-H*0.8,H*0.8)+bF(bO(bF(n0)*math.sin(h0),-H*0.80,H*0.80)),-H*0.80,H*0.80)else lB=0;mn=bO(mn,-G*0.80,G*0.80)end;local n3=lr-mn;if e_ and bF(n3)<=0.0001 and(type(e_)=="table"or type(e_)~="table"and e_<0 and bF(iV)<1)then if e_==-2 then fr.ToggleAltitudeHold()end;e_=nil;eZ("180Off","BR")return end;if not eX and fv>aB and fi>0.01 then if n4==nil then n4=pid.new(2*0.01,0,2*0.1)end;n4:inject(n3)local ms=bO(n4:get(),-1,1)lm=lm+ms elseif d6 and dP>-1 or fv<aB then la(lj)elseif eX and fi>0.01 then if(lr<-G or lr>G)and fi>0.01 then la(fs)end;if(lt<-H or lt>H)and fi>0.01 then mo=bO(iT-lt,iT-H*0.80,iT+H*0.80)end end;if fQ~=nil and not fh then local lI=cd:getAltitude(fQ.position)local mV=lj:project_on_plane(dc):len()fk=true;if not fh and not aZ and mV<=l8 and(fs:project_on_plane(dc):normalize():dot(lj:project_on_plane(dc):normalize())>0.99 or fx=="Finalizing Approach")then fx="Finalizing Approach"if#kA>0 then fr.ToggleAutopilot()fr.ToggleAutopilot()return end;fr.cmdThrottle(0)if aW then fr.ToggleAltitudeHold()bg=true end;aR=true elseif not aY then aR=false end;if fx=="Finalizing Approach"and(mJ<0.1 or mV<0.1 or n5~=nil and n5<mV)then if not eY then eZ("bklOn","BL")aX=true end;bg=false;fx="Proceeding to Waypoint"fo=false end;n5=mV end elseif bg and fi==0 and b0>cd.noAtmosphericDensityAltitude and not(fh or aZ)then if fQ~=nil and g0.name==cd.name then local lj=fQ.position-gR;local lI=cd:getAltitude(fQ.position)local mV=bS(lj:len()^2-(fe-lI)^2)local mI=bk;if mI then l8,mm=fu.computeDistanceAndTime(fv,0,jf,0,0,mI/2)fk=true;if mV<=l8+fv*lq/2 and fs:project_on_plane(dc):normalize():dot(lj:project_on_plane(dc):normalize())>0.99 then if cd.hasAtmosphere then aR=false;aT=false;lH=true;iF=false;fg=true;aU=false;fr.BeginReentry()end end;n5=mV end end end;if fi==0 and(aW and b0>cd.noAtmosphericDensityAltitude)and not(fh or bp or aZ)then if not fL and not bp then lN=b0;kx=true;if bg then lT.VectorToTarget=true end;fr.ToggleIntoOrbit()bg=false;kv=true end end;if eX and fi>0.01 and dP==-1 and fv>aB and fx~="Finalizing Approach"then la(fs)mo=bO(iT-lt,iT-H*0.80,iT+H*0.80)end;ln=mR;local kK=-1;if aX then mo=0;local n6=false;local n7=30;if lC~=nil and lC>0 then local n8=bO(fi,0.4,2)local mI=bk*bO(fv/100,0.1,1)*n8;local n9=lC*n8+mI-j6;local na=mI/2-j6;local nb=fv-bS(bF(na/2)*20/(0.5*jf))*utils.sign(na)if nb<0 then nb=0 end;local nc;if fv>100 then local nd,jL=fu.computeDistanceAndTime(fv,100,jf,0,0,mI)local ne,jL=fu.computeDistanceAndTime(100,0,jf,0,0,bS(mI))nc=nd+ne else nc=fu.computeDistanceAndTime(fv,0,jf,0,0,bS(mI))end;if nc<20 then aR=false else local nf=0;if nb>100 then local ng,jL=fu.computeDistanceAndTime(nb,100,jf,0,0,n9)local nh,jL=fu.computeDistanceAndTime(100,0,jf,0,0,lC*n8+bS(mI)-j6)nf=ng+nh else nf,jL=fu.computeDistanceAndTime(nb,0,jf,0,0,lC*n8+bS(mI)-j6)end;nf=(nf+15+fv*lq)*1.1;local ni=fQ~=nil and cd:getAltitude(fQ.position)>0 and fQ.safe;if ni then local lI=cd:getAltitude(fQ.position)local nj=fe-lI-100;local lj=fQ.position-gR;local nk=bS(lj:len()^2-(fe-lI)^2)if nk>100 then ni=false elseif nj<=nf or nf==-1 then aR=true;n6=true else aR=false;n6=true end end;if not ni and o then if nf>=n7 then aR=true else aR=false end;n6=true end end end;if not cm then fr.cmdThrottle(0)end;bP:setTargetGroundAltitude(500)bP:activateGroundEngineAltitudeStabilization(500)br=true;kK=dP;if kK>-1 then ir=k;if fv<1 or fs:normalize():dot(dc)<0 then aX=false;aW=false;bc=true;if f4 then bz.control.extendLandingGears()eZ("grOut","LG",1)end;bP:setTargetGroundAltitude(T)lJ=0;aR=true else aR=true end elseif fk and fs:normalize():dot(-db)<0.999 then aR=true elseif d8<-I and not n6 then aR=true elseif not n6 then aR=false end end;if aY or fh then local fp,mj,mi;if ba~=nil then fp,mj,mi=ly:getPlanetarySystem(0):castIntersections(gR,(ba-gR):normalize(),function(l1)return l1.radius+l1.noAtmosphericDensityAltitude end)end;if eY then if fe>=b0-50 then aY=false;if not aU and not bg then aR=true;fr.cmdThrottle(0)end else b0=antigrav.getBaseAltitude()end elseif bF(mo)<15 and fe/b0>0.75 then aY=false;if not fh then if cm and not p then bz.control.cancelCurrentControlMasterMode()end elseif fh and fv<dH then aU=true;fh=false;aW=false;aY=false;fr.cmdThrottle(0)elseif fh then fr.cmdThrottle(0)aR=true end elseif fh and fi==0 and g0~=nil and(fp==nil or fp.name==g0.name)then aU=true;fh=false;aW=false;aY=false;if not cm then fr.cmdThrottle(0)end;b1=true end end;local nl=dP>-1;local nm=iT;if(bg or fh or e_)and not nl and fv>aB and fi>0.01 then local h0=math.rad(bF(iV))nm=iT*bF(math.cos(h0))+lt*math.sin(h0)end;local nn=bO(mo-nm,-H*0.80,H*0.80)if fi<0.01 and bg then nn=bO(mo-nm,-85,J)elseif fi<0.01 then nn=bO(mo-nm,-J,J)end;if bF(iV)<5 or bg or e_ or aX or nl or aW then if mH==nil then mH=pid.new(5*0.01,0,5*0.1)end;mH:inject(nn)local mq=mH:get()ln=ln+mq end end;if antigrav~=nil and(antigrav and not l and fe<200000)then if bl==nil or bl<1000 then bl=1000 end;if no~=bl then no=bl;antigrav.setBaseAltitude(no)end end end;function kf.ToggleIntoOrbit()fL=false;kt=nil;ku=nil;kz=0;if fi==0 then if bp then eZ("orOff","AP")bp=false;kv=false;ky=nil;ir=k;if aW then aW=false;aY=false end;lT.VectorToTarget=false;lT.AutopilotAlign=false;kx=false elseif di then eZ("orOn","AP")bp=true;ir=true;if ky==nil then ky=cd end;if aW then aW=false;aY=false end else i4="Unable to engage auto-orbit, not near a planet"end else bp=false;kv=false;ky=nil;ir=k;if aW then aW=false end;lT.VectorToTarget=false;lT.AutopilotAlign=false;kx=false end end;function kf.ToggleVerticalTakeoff()aW=false;if a_ then fk=true;aZ=false;aY=false;aX=true;ir=true;lJ=0;if d6 and dP==-1 then aX=false;aW=true;lJ=0;bz:setEngineForceCommand('thrust analog vertical fueled ',vec3(),1)fr.cmdCruise(bG(ey))end else fL=false;bc=false;bz.control.retractLandingGears()bP:setTargetGroundAltitude(S)aR=true end;a_=not a_ end;function kf.checkLOS(lb)local fp,mi,mj=ly:getPlanetarySystem(0):castIntersections(gR,lb,function(l1)if l1.noAtmosphericDensityAltitude>0 then return l1.radius+l1.noAtmosphericDensityAltitude else return l1.radius+l1.surfaceMaxAltitude*1.5 end end)local fq=mi;if mj~=nil and mi~=nil then fq=math.min(mj,mi)end;if fq~=nil then return fp,fq else return nil,nil end end;function kf.ToggleAutopilot()local function np(bn)fo=false;bg=not bg;if bg then aV=false;if not aW and not bn then fr.ToggleAltitudeHold()end end;fx="Proceeding to Waypoint"end;local nq=false;if ge-ks<1.5 and fi>0 then if not nr then i4="No space engines detected, Orbital Hop not supported"return end;if cd.hasAtmosphere then if fi>0 then b0=cd.noAtmosphericDensityAltitude+O;eZ("orH","OH")end;ks=-1;if aU or bg or bp then return end end else ks=ge end;m8=false;if(bb>0 or#kA>0)and not aU and not bg and not fh and not bp then if 0.5*bz:maxForceForward()/bA.g()<jf then i4="WARNING: Heavy Loads may affect autopilot performance."jp=5 end;if#kA>0 and not fg then bb=kA[1]ig.UpdateAutopilotTarget()table.remove(kA,1)i4="Route Autopilot in Progress"local lj=fQ.position-gR;local mV=lj:project_on_plane(dc):len()if mV>50000 and fQ.planetname==cd.name then nq=true end end;ig.UpdateAutopilotTarget()fr.showWayPoint(g0,ba)if fQ~=nil then bj=nil;bn=fQ.planetname=="Space"if bn then eZ("apSpc","AP")if fi~=0 then fh=true;fr.ToggleAltitudeHold()else aU=true end elseif cd.name==fQ.planetname then fk=true;if fi>0 then if not bg then eZ("vtt","AP")np(bn)if nq then b0=cd.noAtmosphericDensityAltitude+O end end else eZ("apOn","AP")if not(g0.name==cd.name and fe<ma*1.5)then fL=false;aU=true elseif not d6 then if bp then fr.ToggleIntoOrbit()end;lN=cd.noAtmosphericDensityAltitude+O;kx=true;lT.AutopilotAlign=true;lT.VectorToTarget=true;kv=false;if not bp then fr.ToggleIntoOrbit()end end end else eZ("apP","AP")aS=false;aT=false;if fi~=0 then fh=true;fr.ToggleAltitudeHold()else aU=true end end elseif fi==0 then if fQ==nil and(g0.name==cd.name and di)and not bp then mx=false;fL=false;kv=false;fr.ToggleIntoOrbit()else eZ("apP","AP")aU=true;aS=false;aT=false;b2=false;ff=false;aW=false;aX=false;aZ=false;aY=false;m9=false;bj=nil;mx=false end else eZ("apP","AP")fh=true;fr.ToggleAltitudeHold()end else eZ("apOff","AP")fr.ResetAutopilots(1)end end;function kf.routeWP(ns,nt,nu)if nu then if nu==1 then kA={}kA=f_(kA,bu)if#kA>0 then i4="Route Loaded"else i4="No Saved Route found on Databank"end;return kA else bu={}bu=f_(bu,kA)i4="Route Saved"nv()return end end;if ns then return kA end;if nt then kA={}i4="Current Route Cleared"else kA[#kA+1]=bb;i4="Added "..fQ.name.." to route. "nw("Added "..fQ.name.." to route. Total Route: "..json.encode(kA))end;return kA end;function kf.cmdThrottle(eu,nx)if bP:getAxisCommandType(0)~=axisCommandType.byThrottle and not nx then bz.control.cancelCurrentControlMasterMode()end;bP:setThrottleCommand(axisCommandId.longitudinal,eu)iY=bO(bT(eu*100,0)/100,-1,1)ny=nil end;function kf.cmdCruise(eu,nx)if bP:getAxisCommandType(0)~=axisCommandType.byTargetSpeed and not nx then bz.control.cancelCurrentControlMasterMode()end;bP:setTargetSpeedCommand(axisCommandId.longitudinal,eu)ny=eu end;function kf.ToggleLockPitch()if bj==nil then eZ("lkPOn","LP")if not j2 then bj=iT else bj=L end;aY=false;aW=false;aX=false else eZ("lkPOff","LP")bj=nil end end;function kf.ToggleAltitudeHold()if ge-kr<1.5 then if cd.hasAtmosphere then if fi>0 then b0=cd.spaceEngineMinAltitude-0.01*cd.noAtmosphericDensityAltitude;eZ("11","EP")else if di then b0=cd.noAtmosphericDensityAltitude+O;lN=b0;kx=true;if not bp then fr.ToggleIntoOrbit()end;kv=true end end;kr=-1;if aW or bp or a_ then return end end else kr=ge end;if di and fi==0 then lN=fe;kx=true;kv=true;fr.ToggleIntoOrbit()if bp then kr=ge else kr=0 end;return end;aW=not aW;aX=false;aZ=false;if aW then aU=false;aT=false;aS=false;ff=false;ir=true;bj=nil;fL=false;if dP~=-1 and fv<20 then eZ("lfs","LS")aY=true;if kr>-1 then b0=fe+R end;bc=false;bz.control.retractLandingGears()aR=true;bP:setTargetGroundAltitude(S)if aQ and iE then fr.ToggleVerticalTakeoff()end else eZ("altOn","AH")aY=false;if kr>-1 then if di then b0=fe end end;if a_ then fr.ToggleVerticalTakeoff()end end;if fh then b0=100000 end else eZ("altOff","AH")if bp then fr.ToggleIntoOrbit()end;if a_ then fr.ToggleVerticalTakeoff()end;ir=k;aY=false;bg=false;kr=0 end end;function kf.ResetAutopilots(kf)if kf then fh=false;aU=false;b2=false;m9=false;b0=fe;m8=false end;bg=false;aY=false;aZ=false;aT=false;aX=false;nz=false;e_=nil;if not eY then aW=false;bj=nil end;if a_ then fr.ToggleVerticalTakeoff()end;if bp then fr.ToggleIntoOrbit()end;ir=k;iF=false;fg=false;lJ=0 end;function kf.BrakeToggle()aR=not aR;if aX then aX=false;ir=k end;if aR then eZ("bkOn","B",1)fr.ResetAutopilots()else eZ("bkOff","B",1)end end;function kf.BeginReentry()if aZ then i4="Re-Entry cancelled"eZ("reOff","RE")aZ=false;ir=k;aW=false elseif not cd.hasAtmosphere then i4="Re-Entry requirements not met: you must start out of atmosphere\n and within a planets gravity well over a planet with atmosphere"jp=5 elseif not lH then aZ=true;if bP:getAxisCommandType(0)~=nA.cruise then bz.control.cancelCurrentControlMasterMode()end;ir=true;aR=false;i4="Beginning Parachute Re-Entry - Strap In.  Target speed: "..ey;eZ("par","RE")else aZ=true;aW=true;ir=true;aR=false;b0=cd.surfaceMaxAltitude+U;if b0>cd.spaceEngineMinAltitude then b0=cd.spaceEngineMinAltitude-0.01*cd.noAtmosphericDensityAltitude end;local nB=f6(b0)i4="Beginning Re-entry.  Target speed: "..ey.." Target Altitude: "..nB;eZ("glide","RE")fr.cmdCruise(bG(ey))end;aY=false end;function kf.ToggleAntigrav()if antigrav and not l then if eY then eZ("aggOff","AG")antigrav.deactivate()antigrav.hide()else if bl==nil then bl=fe end;if bl<1000 then bl=1000 end;eZ("aggOn","AG")antigrav.activate()antigrav.show()end end end;function kf.changeSpd(nC)local nD=1;if nC then nD=-1 end;if not j2 then if p and not k6 and nE then local nF=iY;iY=bT(bO(iY+nD*au/100,-1,1),2)if iY>=0 and nF<0 then iY=0;nE=false end elseif k6 then if fi>0 or aZ then ey=bO(ey+nD*au,0,P)elseif aU then V=bO(V+nD*au/3.6*100,0,8333.00)end else bP:updateCommandFromActionStart(axisCommandId.longitudinal,nD*au)end else if aU or bg or fh or bp then iz=iz+1*nD*-1;if iz>#fP then iz=1 end;if iz<1 then iz=#fP end else if not nC then nD=1 else nD=nil end;ig.adjustAutopilotTargetIndex(nD)end end end;dP=kF()return kf end end;package.preload['ArchHUD:autoconf/custom/archhud/custom/customradarclass']=function(...)local nG={}return nG end;package.preload['ArchHUD:autoconf/custom/archhud/radarclass']=function(...)function nH(bA,bC,library,radar_1,radar_2,bF,bQ,bS,bU,nI,nJ)local nG={}local nK={}local nL={XS=13,S=27,M=55,L=110,XL=221}local nM={}local nN;local gX;local gS;local nO;local nP;local nQ={}local nR="Atmo"local nS;local function nT()local function nU(nV,nW,nX,nY,nZ,n_,o0,o1)nW,nY,n_,o1=vec3(nW),vec3(nY),vec3(n_),vec3(o1)local o2,o3,o4=nV*nV,nX*nX,nZ*nZ;local o5=nY-nW;local o6=o5:normalize()local o7=o5:len()local o8=n_-nW;local o9=(o8-o8:project_on(o6)):normalize()local oa,ob=o8:dot(o6),o8:dot(o9)local oc=oa*oa+ob*ob;local od=o6:cross(o9)local cG=(o2-o3+o7*o7)/(2*o7)local dF=(o2-o4+oc-2*oa*cG)/(2*ob)local oe=o2-cG^2-dF^2;local of=bS(oe)local og=nW+o6*cG+o9*dF+od*of;local oh=nW+o6*cG+o9*dF-od*of;if bF((o1-og):len()-o0)<bF((o1-oh):len()-o0)then return og else return oh end end;local function oi()local function oj()local ok=bA.getConstructWorldOrientationRight()local o5=bA.getConstructWorldOrientationForward()local o8=bA.getConstructWorldOrientationUp()local ol=library.systemResolution3(ok,o5,o8,{1,0,0})local om=library.systemResolution3(ok,o5,o8,{0,1,0})local on=library.systemResolution3(ok,o5,o8,{0,0,1})return function(oo)return library.systemResolution3(ol,om,on,oo)end end;local op=oj()local oq=bA.getConstructWorldPos()local gE=bA.getElementPositionById(1)local os={gE[1],gE[2],gE[3]}local ot=op(os)local ou={oq[1]-ot[1],oq[2]-ot[2],oq[3]-ot[3]}return ou end;local function ov(ow,hh,ox)local oy=ow.pts;local dQ=#oy;local oz=ow.ref;if dQ>3 then local oA,oB,oC,oD=oy[dQ],oy[dQ-1],oy[dQ-2],oy[dQ-3]ow.ref=ox;local gE=nU(oA[1],oA[2],oB[1],oB[2],oC[1],oC[2],oD[1],oD[2])local cG,dF,of=gE.x,gE.y,gE.z;if cG==cG and dF==dF and of==of then cG=cG+oz[1]dF=dF+oz[2]of=of+oz[3]local oE=vec3(cG,dF,of)if not ow.lastPos then ow.center=oE elseif(ow.lastPos-oE):len()<2 then ow.center=oE;ow.skipCalc=true end;ow.lastPos=oE end;ow.pts={}else local oF={ox[1]-oz[1],ox[2]-oz[2],ox[3]-oz[3]}oy[dQ+1]={hh,oF}end end;if radar_1 or radar_2 then ie.assignRadar()end;if nQ[1]then nN=#nQ[1].getConstructIds()local oG=nQ[1].getData()local oH=oG:gmatch('{"constructId[^}]*}[^}]*}')if nN>0 then local ox=oi()local jq,oI=0,0;nP,nO=0,0;for cf in oH do local oJ,ej,h7=cf:match([[{"constructId":"([%d%.]*)","distance":([%d%.]*).-"size":"(%a+)"]])local oK=nL[h7]ej=nI(ej)if nQ[1].hasMatchingTransponder(oJ)==1 then table.insert(nK,oJ)end;local oL=nQ[1].getConstructType(oJ)if A then if oK>27 or oL=="static"or oL=="space"then nP=nP+1;local cP=nQ[1].getConstructName(oJ)local ow=oM[oJ]if ow==nil then oK=oK+nJ;oM[oJ]={pts={},ref=ox,name=cP,i=0,radius=oK,skipCalc=false}ow=oM[oJ]end;if not ow.skipCalc then ov(ow,ej,ox)oI=oI+1 end;if ow.center then table.insert(nM,ow)end end;jq=jq+1;if di and jq>700 or oI>70 or(not di and jq>300 or oI>30)then coroutine.yield()jq,oI=0,0 end end end;nO=#nM;if nO>0 and fv>20 then local l1,l2,l3,oN;local oO=0;local oP=ly:getPlanetarySystem(0)oN=fs:normalize()while oO<nO do coroutine.yield()local oQ={table.unpack(nM,oO,math.min(oO+75,nO))}l1,l2,l3=oP:castIntersections(gR,oN,nil,nil,oQ,true)if l1 and l3 then l0={l1,l2,l3}break end;oO=oO+75 end;if not l1 then l0=nil end else l0=nil end;nM={}gX=oG:find('identifiedConstructs":%[%]')else gS=oG:find('worksInEnvironment":false')end end end;local function oR()if nQ[1]then nR="Atmo"if nQ[1].getData():find('worksInAtmosphere":false')then nR="Space"end end end;function nG.pickType()oR()end;function nG.assignRadar()if radar_1 and nQ[1]==radar_1 and radar_1.isOperational()~=1 then if radar_2 and radar_2.isOperational()==1 then nQ[1]=radar_2 end;if nQ[1]==radar_2 then oR()end elseif radar_2 and nQ[1]==radar_2 and radar_2.isOperational()~=1 then if radar_1 and radar_1.isOperational()==1 then nQ[1]=radar_1 end;if nQ[1]==radar_1 then oR()end end end;function nG.UpdateRadar()local oS=coroutine.status(nS)if oS=="suspended"then local eu,oT=coroutine.resume(nS)if oT then bC.print("ERROR UPDATE RADAR: "..oT)end elseif oS=="dead"then nS=coroutine.create(nT)local eu,oT=coroutine.resume(nS)end end;function nG.GetRadarHud(jv,ju,js,jt)local oU=nK;local cn,jw;nK={}local dy=nO or 0;if nN>0 then if A then jw=dy.."/"..nP.." Plotted : "..nN-nP.." Ignored"else jw="Radar Contacts: "..nN end;cn=bU(js,jt,jw,"pbright txtbig txtmid")if#nK>0 then cn=cn..bU(jv,ju,"Friendlies In Range","pbright txtbig txtmid")for fT,cf in pairs(nK)do ju=ju+20;cn=cn..bU(jv,ju,nQ[1].getConstructName(cf),"pdim txtmid")end end;if gX==nil and jr==nil then jy=1;ie.ToggleRadarPanel()end;if gX~=nil and jr~=nil then ie.ToggleRadarPanel()end;if oV==nil then ie.ToggleRadarPanel()end else if gS then cn=bU(js,jt,nR.." Radar: Jammed","pbright txtbig txtmid")else cn=bU(js,jt,"Radar: No "..nR.." Contacts","pbright txtbig txtmid")end;if oV~=nil then jy=0;ie.ToggleRadarPanel()end end;return cn end;function nG.GetClosestName(cP)if nQ[1]then local oJ,jL=nQ[1].getData():match('"constructId":"([0-9]*)","distance":([%d%.]*)')if oJ~=nil and oJ~=""then cP=cP.." "..nQ[1].getConstructName(oJ)end end;return cP end;function nG.ToggleRadarPanel()if oV~=nil and jy==0 then bQ(oV)oV=nil;if jr~=nil then bQ(jr)jr=nil end else if jy==1 then bQ(oV)oV=nil;_autoconf.displayCategoryPanel(nQ,1,"Periscope","periscope")jr=_autoconf.panels[_autoconf.panels_size]end;if oV==nil then _autoconf.displayCategoryPanel(nQ,1,"Radar","radar")oV=_autoconf.panels[_autoconf.panels_size]end;jy=0 end end;nQ[1]=nil;if radar_1 then nQ[1]=radar_1;oR()end;nS=coroutine.create(nT)return nG end end;package.preload['ArchHUD:autoconf/custom/archhud/custom/customcontrolclass']=function(...)local oW={}return oW end;package.preload['ArchHUD:autoconf/custom/archhud/controlclass']=function(...)function oX(bz,bA,bB,bC,bD,vBooster,hover,antigrav,bE,dbHud_2,bL,bP,bR,oY,bQ,bT,oZ,nI,bO)local oW={}local o_=true;local p0=5;local p1=5;local p2=p0;local p3=p1;function oW.startControl(p4)local function p5(nC)local nD=1;local function p6(p7,nC)local p8={cd.surfaceMaxAltitude+100,cd.spaceEngineMinAltitude-0.01*cd.noAtmosphericDensityAltitude,cd.noAtmosphericDensityAltitude+O,cd.radius*(N-1)+cd.noAtmosphericDensityAltitude}local p9=p7;for jL,cf in ipairs(p8)do if nC and p9>cf then p7=cf elseif p7<cf and not nC then p7=cf;break end end;return p7 end;if nC then nD=-1 end;if not l and eY then if j2 and nC then bl=1000 elseif bl~=nil then bl=bl+nD*p1;if bl<1000 then bl=1000 end;if aW and bl<b0+10 and bl>b0-10 then b0=bl end else bl=no+nD*100 end elseif aW or a_ or bp then if bp then if j2 then lN=p6(lN,nC)else lN=lN+nD*p0 end;if lN<cd.noAtmosphericDensityAltitude then lN=cd.noAtmosphericDensityAltitude end else if j2 and d6 then b0=p6(b0,nC)else b0=b0+nD*p0 end end else bP:updateTargetGroundAltitudeFromActionStart(nD*1.0)end end;local function pa(pb)if not d6 then i4="Flight Assist in Atmo only"return end;local pc=type(pb)if e_==nil then if pc=="table"then if aU or bg then fr.ToggleAutopilot()end;eZ("180On","BR")elseif pb==1 then eZ("bnkLft","BR")else eZ("bnkRht","BR")end;if not aW and not aU and not bg then fr.ToggleAltitudeHold()if pc~="table"then pb=pb+1 end end;e_=pb else eZ("180Off","BR")e_=nil end end;if p4=="gear"then bc=not bc;if bc then bg=false;bj=nil;fr.cmdThrottle(0)if vBooster or hover then if d6 and dP==-1 then eZ("bklOn","BL")fk=true;aZ=false;aY=false;a_=false;aW=false;aX=true;ir=true;bc=false else if f4 then eZ("grOut","LG",1)bz.control.extendLandingGears()end;bP:setTargetGroundAltitude(T)if d6 then aR=true end end end;if f4 and not aX and not(vBooster or hover)then eZ("grOut","LG",1)bz.control.extendLandingGears()end else if f4 then eZ("grIn","LG",1)bz.control.retractLandingGears()end;bP:setTargetGroundAltitude(S)end elseif p4=="light"then if bz.control.isAnyHeadlightSwitchedOn()==1 then bz.control.switchOffHeadlights()else bz.control.switchOnHeadlights()end elseif p4=="forward"then pd=pd-1 elseif p4=="backward"then if k6 then pa(-fs*5000)else pd=pd+1 end elseif p4=="left"then if k6 then pa(1)else pe=pe-1 end elseif p4=="right"then if k6 then pa(3)else pe=pe+1 end elseif p4=="yawright"then pf=pf-1 elseif p4=="yawleft"then pf=pf+1 elseif p4=="straferight"then bP:updateCommandFromActionStart(axisCommandId.lateral,1.0)bo=1 elseif p4=="strafeleft"then bP:updateCommandFromActionStart(axisCommandId.lateral,-1.0)bo=-1 elseif p4=="up"then lJ=lJ+1;bP:deactivateGroundEngineAltitudeStabilization()bP:updateCommandFromActionStart(axisCommandId.vertical,1.0)elseif p4=="down"then lJ=lJ-1;bP:deactivateGroundEngineAltitudeStabilization()bP:updateCommandFromActionStart(axisCommandId.vertical,-1.0)elseif p4=="groundaltitudeup"then p5()elseif p4=="groundaltitudedown"then p5(true)elseif p4=="option1"then pg=false;if k6 and j2 then local ph=""for F=1,#fB do ph=ph.."| Name: "..bC.getPlayerName(fB[F]).." Mass: "..bT(bA.getBoardedPlayerMass(fB[F])/1000,1).."t "end;bC.print("Onboard: "..ph)return end;ig.adjustAutopilotTargetIndex()elseif p4=="option2"then pg=false;if k6 and j2 then for F=1,#fB do bA.forceDeboard(fB[F])end;i4="Deboarded All Passengers"return end;ig.adjustAutopilotTargetIndex(1)elseif p4=="option3"then local function pi()o_=not o_;if not o_ then eZ("wid","DH")bB.show()bA.show()if atmofueltank_size>0 then _autoconf.displayCategoryPanel(pj,atmofueltank_size,"Atmo Fuel","fuel_container")pk=_autoconf.panels[_autoconf.panels_size]end;if spacefueltank_size>0 then _autoconf.displayCategoryPanel(pl,spacefueltank_size,"Space Fuel","fuel_container")pm=_autoconf.panels[_autoconf.panels_size]end;if rocketfueltank_size>0 then _autoconf.displayCategoryPanel(pn,rocketfueltank_size,"Rocket Fuel","fuel_container")po=_autoconf.panels[_autoconf.panels_size]end;pp=bC.createWidgetPanel("Docking")pq=bC.createWidget(pp,"parenting")bC.addDataToWidget(bB.getDataId(),pq)pr=bC.createWidgetPanel("Core combat stress")ps=bC.createWidget(pr,"core_stress")bC.addDataToWidget(bA.getDataId(),ps)if bE~=nil then bE.show()end else eZ("hud","DH")bB.hide()bA.hide()if pk~=nil then bQ(pk)pk=nil end;if pp~=nil then bQ(pp)pp=nil end;if pr~=nil then bQ(pr)pr=nil end;if pm~=nil then bQ(pm)pm=nil end;if po~=nil then bQ(po)po=nil end;if bE~=nil then bE.hide()end end end;pg=false;if k6 and j2 then local ph=""for F=1,#pt do ph=ph.."| ID: "..pt[F].." Mass: "..bT(bA.getDockedConstructMass(pt[F])/1000,1).."t "end;bC.print("Docked Ships: "..ph)return end;if t then if s then s=false else s=true end end;pi()elseif p4=="option4"then pg=false;if k6 and j2 then for F=1,#pt do bA.forceUndock(pt[F])end;i4="Undocked all ships"return end;e_=nil;fr.ToggleAutopilot()elseif p4=="option5"then pg=false;fr.ToggleLockPitch()elseif p4=="option6"then pg=false;if k6 and j2 then if bE then local pu=bE.getVentingCooldown()if pu>0 then i4="Cannot vent again for "..pu.." seconds"return end;if bE.getShieldHitpoints()<bE.getMaxShieldHitpoints()then bE.startVenting()i4="Shields Venting Enabled - NO SHIELDS WHILE VENTING"else i4="Shields already at max hitpoints"end;return else i4="No shield found"return end end;fr.ToggleAltitudeHold()elseif p4=="option7"then pg=false;if k6 and j2 then if bE then bE.toggle()return else i4="No shield found"return end end;A=not A;if A then i4="Collision System Enabled"else i4="Collision System Secured"end elseif p4=="option8"then pg=false;if k6 and j2 then if bb>0 and fQ~=nil then fr.routeWP()else i4="Select a saved wp on IPH to add to or remove from route"end;return end;br=not br;if not br then i4="DeCoupled Mode - Ground Stabilization off"bP:deactivateGroundEngineAltitudeStabilization()eZ("gsOff","GS")else i4="Coupled Mode - Ground Stabilization on"bP:activateGroundEngineAltitudeStabilization(pv)bz:setEngineForceCommand('hover',vec3(),1)eZ("gsOn","GS")end elseif p4=="option9"then pg=false;if k6 and j2 then bP:resetCommand(axisCommandId.longitudinal)bP:resetCommand(axisCommandId.lateral)bP:resetCommand(axisCommandId.vertical)fr.cmdThrottle(0)bB.setTimer("tagTick",0.1)elseif gyro~=nil then gyro.toggle()f0=gyro.getState()==1;if f0 then eZ("gyOn","GA")else eZ("gyOff","GA")end else i4="No gyro found"end elseif p4=="lshift"then iD=false;if k6 then j2=true end;if bR()==1 then j2=true;b8=bR()oY(1)elseif bL()==1 and u then j2=true;k8=false;k7=false end elseif p4=="brake"then if aP or k6 then fr.BrakeToggle()elseif not aR then fr.BrakeToggle()else aR=true end elseif p4=="lalt"then pg=true;k6=true;if bL()==0 and not d and b=="keyboard"then oY(1)end elseif p4=="booster"then if i then bz:toggleBoosters()elseif not fa then if not pw then bz:toggleBoosters()pw=true end;fa=true else if pw then bz:toggleBoosters()pw=false end;fa=false end elseif p4=="stopengines"then local function px()if ge-py<1.5 then eZ("clear","CA")b1=false;b3=false;b4=false;aU=false;b2=false;b6="Aligning"aS=false;aT=false;e_=nil;aW=false;aZ=false;aX=false;aR=false;aY=false;a_=false;ff=false;m9=false;iF=false;fh=false;lH=false;ir=k;bg=false;aV=false;f0=false;bj=nil;bp=false end end;px()py=ge;if bP:getAxisCommandType(0)~=axisCommandType.byTargetSpeed then if iY~=0 then bP:resetCommand(axisCommandId.longitudinal)fr.cmdThrottle(0)else fr.cmdThrottle(100)end else if bP:getTargetSpeed(axisCommandId.longitudinal)~=0 then bP:resetCommand(axisCommandId.longitudinal)else if d6 then fr.cmdCruise(P)else fr.cmdCruise(V*3.6)end end end elseif p4=="speedup"then fr.changeSpd()elseif p4=="speeddown"then fr.changeSpd(true)elseif p4=="antigravity"and not l then if antigrav~=nil then fr.ToggleAntigrav()else i4="No antigrav found"end end end;function oW.stopControl(p4)local function pz()if not l and eY then p3=p1 end;if aW or a_ or bp then p2=p0 end end;if p4=="forward"then pd=0 elseif p4=="backward"then pd=0 elseif p4=="left"then if e_ then if e_==2 then e_=-2 else e_=-1 end end;pe=0 elseif p4=="right"then if e_ then if e_==4 then e_=-2 else e_=-1 end end;pe=0 elseif p4=="yawright"then pf=0 elseif p4=="yawleft"then pf=0 elseif p4=="straferight"then bP:updateCommandFromActionStop(axisCommandId.lateral,-1.0)bo=0 elseif p4=="strafeleft"then bP:updateCommandFromActionStop(axisCommandId.lateral,1.0)bo=0 elseif p4=="up"then lJ=0;bP:updateCommandFromActionStop(axisCommandId.vertical,-1.0)if br then bP:activateGroundEngineAltitudeStabilization(pv)bz:setEngineForceCommand('hover',vec3(),1)end elseif p4=="down"then lJ=0;bP:updateCommandFromActionStop(axisCommandId.vertical,1.0)if br then bP:activateGroundEngineAltitudeStabilization(pv)bz:setEngineForceCommand('hover',vec3(),1)end elseif p4=="groundaltitudeup"then pz()pg=false elseif p4=="groundaltitudedown"then pz()pg=false elseif p4=="lshift"then if bR()==1 then jI=0;jJ=0;oY(b8)elseif bL()==1 and u then k8=false;k7=false end;j2=false elseif p4=="brake"then if not aP and not k6 then if aR then fr.BrakeToggle()else aR=false end end elseif p4=="lalt"then if bL()==0 and d then if pg then if bR()==1 then oY(0)else oY(1)end else pg=true end elseif bL()==0 and not d and b=="keyboard"then oY(0)end;k6=false end end;function oW.loopControl(p4)local function pA(nC)local nD=1;if nC then nD=-1 end;if not l and eY then if bl~=nil then bl=bl+nD*p3;if bl<1000 then bl=1000 end;if aW and bl<b0+10 and bl>b0-10 then b0=bl end;p3=bO(p3*1.05,p1,50)aR=false else bl=no+nD*100;aR=false end elseif aW or a_ or bp then if bp then lN=lN+nD*p2;if lN<cd.noAtmosphericDensityAltitude then lN=cd.noAtmosphericDensityAltitude end else b0=b0+nD*p2 end;p2=bO(p2*1.05,p0,50)else bP:updateTargetGroundAltitudeFromActionLoop(nD*1.0)end end;local function pB(nC)local nD=1;if nC then nD=-1 end;if not j2 then if p and not k6 then iY=bO(iY+nD*av/100,-1,1)else bP:updateCommandFromActionLoop(axisCommandId.longitudinal,nD*av)end end end;if p4=="groundaltitudeup"then if not j2 then pA()end elseif p4=="groundaltitudedown"then if not j2 then pA(true)end elseif p4=="speedup"then pB()elseif p4=="speeddown"then pB(true)end end;function oW.inputTextControl(nB)local function pC(pD,gE,e3)local function pE(gE)local dy=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local pF='::pos{'..dy..','..dy..','..dy..','..dy..','..dy..'}'local pG,oJ,kU,kV,d5=oZ(gE,pF)if pG=="0"and oJ=="0"then return vec3(nI(kU),nI(kV),nI(d5))end;kV=math.rad(kV)kU=math.rad(kU)local cd=bD[nI(pG)][nI(oJ)]local pH=math.cos(kU)local pI=vec3(pH*math.cos(kV),pH*math.sin(kV),math.sin(kU))return cd.center+(cd.radius+d5)*pI end;local id=pE(gE)return ig.AddNewLocation(pD,id,e3)end;local F;local pJ,pK=nil,nil;local pL="Command List:\n/commands \n/setname <newname> - Updates current selected saved position name\n/G VariableName newValue - Updates global variable to new value\n".."/G dump - shows all variables updatable by /G\n/agg <targetheight> - Manually set agg target height\n".."/addlocation SafeZoneCenter ::pos{0,0,13771471,7435803,-128971} - adds a saved location by waypoint, not as accurate as making one at location\n".."/::pos{0,0,13771471,7435803,-128971} - adds a temporary waypoint that is not saved to databank with name 0Temp\n".."/copydatabank - copies dbHud databank to a blank databank\n".."/iphWP - displays current IPH target's ::pos waypoint in lua chat\n".."/resist 0.15, 0.15, 0.15, 0.15 - Sets shield resistance distribution of the floating 60% extra available, usable once per minute\n".."/deletewp - Deletes current selected custom wp"F=string.find(nB," ")pJ=nB;if F~=nil then pJ=string.sub(nB,0,F-1)pK=string.sub(nB,F+1)end;if pJ=="/help"or pJ=="/commands"then for jo in string.gmatch(pL,"([^\n]+)")do bC.print(jo)end;return elseif pJ=="/setname"then if pK==nil or pK==""then i4="Usage: ah-setname Newname"return end;if bb>0 and fQ~=nil then ig.UpdatePosition(pK)else i4="Select a saved target to rename first"end elseif bE and pJ=="/resist"then if not bE then i4="No shield found"return elseif pK==nil or bE.getResistancesCooldown()>0 then i4="Usable once per min.  Usage: /resist 0.15, 0.15, 0.15, 0.15"return end;local dy=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local pF=dy..', '..dy..', '..dy..', '..dy;local pM,pN,pO,pP=oZ(pK,pF)if pP==nil or pM+pN+pO+pP>0.6 then i4="Improperly formatted or total exceeds 0.6"return end;if bE.setResistances(pM,pN,pO,pP)==1 then i4="Shield Resistances set"else i4="Resistance setting failed."end elseif pJ=="/addlocation"or string.find(nB,"::pos")~=nil then local e3=false;local pD="0-Temp"if pK==nil or pK==""then pK=pJ;e3=true end;F=string.find(pK,"::")if not e3 then pD=string.sub(pK,1,F-2)end;local gE=string.sub(pK,F)pC(pD,gE,e3)elseif pJ=="/agg"then if pK==nil or pK==""then i4="Usage: /agg targetheight"return end;pK=nI(pK)if pK<1000 then pK=1000 end;bl=pK;i4="AGG Target Height set to "..pK elseif pJ=="/G"then if pK==nil or pK==""then i4="Usage: /G VariableName variablevalue\n/G dump - shows all variables"return end;if pK=="dump"then for fT,cf in pairs(i2())do if type(cf.get())=="boolean"then if cf.get()==true then bC.print(fT.." true")else bC.print(fT.." false")end elseif cf.get()==nil then bC.print(fT.." nil")else bC.print(fT.." "..cf.get())end end;return end;F=string.find(pK," ")local pQ=string.sub(pK,0,F-1)local pR=string.sub(pK,F+1)for fT,cf in pairs(i2())do if fT==pQ then i4="Variable "..pQ.." changed to "..pR;local pS=type(cf.get())if pS=="number"then pR=nI(pR)if fT=="AtmoSpeedLimit"then ey=pR end elseif pS=="boolean"then if string.lower(pR)=="true"then pR=true else pR=false end end;cf.set(pR)return end end;i4="No such global variable: "..pQ elseif pJ=="/deletewp"then if bb>0 and fQ~=nil then ig.ClearCurrentPosition()else i4="Select a custom wp to delete first in IPH"end elseif pJ=="/copydatabank"then if dbHud_2 then nv(true)else i4="Spare Databank required to copy databank"end elseif pJ=="/iphWP"then if bb>0 then bC.print(fr.showWayPoint(g0,ba,true))i4="::pos waypoint shown in lua chat"else i4="No target selected in IPH"end end end;return oW end end;require('ArchHUD:autoconf/custom/archhud/globals')local bC=system;local bA=core;local bB=unit;local bz=Navigator.new(bC,bA,bB)local bD=require("atlas")require('ArchHUD:autoconf/custom/archhud/hudclass')require('ArchHUD:autoconf/custom/archhud/apclass')require('ArchHUD:autoconf/custom/archhud/radarclass')require('ArchHUD:autoconf/custom/archhud/controlclass')script={}VERSION_NUMBER=1.7061;local bF=math.abs;local bG=math.floor;local bH=string.format;local bI=json.decode;local pT=json.encode;local pU=bA.getElementMaxHitPointsById;local bJ=bB.getAtmosphereDensity;local bK=bA.getElementMassById;local bL=bz.control.isRemoteControlled;local bM=math.atan;local oZ=string.match;local bN=bC.getTime;local bO=utils.clamp;local bP=bz.axisCommandManager;local bQ=bC.destroyWidgetPanel;local ki=bC.updateData;local pV=bC.addDataToWidget;local oY=bC.lockView;local bR=bC.isViewLocked;local bS=math.sqrt;local nI=tonumber;local function bT(dy,pW)local nD=10^(pW or 0)return bG(dy*nD+0.5)/nD end;ge=bN()py=bN()local nJ=13;iK=a6;iM=a8;iL=a7;iY=0;eT=0;ew=false;ex=0;mX=false;m9=false;dH=55;lH=false;f4=false;pd=0;ln=0;lm=0;pe=0;pf=0;lF=0;lw=0;ff=false;j2=false;i4="empty"fa=false;l8=0;mm=0;local pX=0;local pY=0;g0=nil;gI=0;gJ=0;lJ=0;jI=0;jJ=0;jp=3;ej=0;j0=""iF=false;fh=false;fg=false;dP=-1;local pZ=""d6=bJ()>0;fi=bJ()fe=bA.getAltitude()local p_=bA.getElementIdList()kd=bN()jf=bA.getConstructMass()nE=false;f0=nil;gD=[[rgb(]]..bG(iK+0.5)..","..bG(iL+0.5)..","..bG(iM+0.5)..[[)]]hr=[[rgb(]]..bG(iK*0.9+0.5)..","..bG(iL*0.9+0.5)..","..bG(iM*0.9+0.5)..[[)]]local q0={}j1=""cg=a3;ci=a4;jz={}jA={}jB={}local q1=0;iG=false;local q2=nil;ly=nil;fu=nil;lC=nil;lA=nil;gH=nil;ig=nil;fr=nil;ie=nil;q3=nil;k7=false;k8=false;ir=k;local q4=T;eX=false;lB=0;ey=P;lK=0;fj=nil;lT={VectorToTarget=false}lN=0;fL=false;local q5=false;lL=false;nr=false;ls=vec3(bA.getConstructWorldOrientationUp())dq=vec3(bA.getConstructWorldOrientationForward())h1=vec3(bA.getConstructWorldOrientationRight())iZ=vec3(bA.getVelocity())fs=vec3(bA.getWorldVelocity())fv=vec3(fs):len()dc=vec3(bA.getWorldVertical())d8=-dc:dot(fs)gR=vec3(bA.getConstructWorldPos())iE=false;eY=false;ny=nil;cm=true;iT=0;iV=0;fP={}hM=false;iJ=50000;e_=nil;oM={}di=bB.getClosestPlanetInfluence()>0 or fe>0 and fe<200000;fo=false;l0=nil;iD=false;iz=0;fB=nil;pt=nil;gM={}gL=90;i5=s;function nw(jw)bC.print(ge..": "..jw)end;function eZ(q6,q7,type)if type==nil and not y or type~=nil and not z or c=="archHUD"then return end;if type~=nil then if type==2 then bC.logInfo("sound_loop|audiopacks/"..c.."/"..q6 .."|"..q7 .."|"..as)else bC.logInfo("sound_notification|audiopacks/"..c.."/"..q6 .."|"..q7 .."|"..as)end else bC.logInfo("sound_q|audiopacks/"..c.."/"..q6 .."|"..q7 .."|"..as)end end;function f_(q8,q9)for fT,cf in pairs(q9)do if type(fT)=="string"then q8[fT]=cf else q8[#q8+1]=q9[fT]end end;return q8 end;function i2(qa)local qb={}if not qa then f_(qb,E)f_(qb,a2)f_(qb,at)f_(qb,aO)return qb elseif qa=="boolean"then return E elseif qa=="handling"then return a2 elseif qa=="hud"then return at elseif qa=="physics"then return aO end end;local function bU(cG,dF,nB,cZ,qc)if cZ==nil then cZ=""end;if qc==nil then qc=""end;return bH([[<text class="%s" x=%s y=%s style="%s">%s</text>]],cZ,cG,dF,qc,nB)end;function kW(gP,gQ)if gP==0 then return bF(gQ)<1e-09 end;if gQ==0 then return bF(gP)<1e-09 end;return bF(gP-gQ)<math.max(bF(gP),bF(gQ))*qd end;function f6(ej,qe)local qf=ej>100000;if qe==nil then qe=1 end;if qf then return bT(ej/1000/200,qe).."SU"elseif ej<1000 then return bT(ej,qe).."M"else return bT(ej/1000,qe).."KM"end end;function cW(qg)local qh=0;local qi=0;local qj=0;if qg<60 then qg=bG(qg)elseif qg<3600 then qh=bG(qg/60)qg=bG(qg%60)elseif qg<86400 then qi=bG(qg/3600)qh=bG(qg%3600/60)else qj=bG(qg/86400)qi=bG(qg%86400/3600)end;if qj>0 then return qj.."d "..qi.."h "elseif qi>0 then return qi.."h "..qh.."m "elseif qh>0 then return qh.."m "..qg.."s"elseif qg>0 then return qg.."s"else return"0s"end end;function nv(qk)local function ql(qm)for fT,cf in pairs(qm)do dbHud_1.setStringValue(fT,pT(cf.get()))if qk and dbHud_2 then dbHud_2.setStringValue(fT,pT(cf.get()))end end end;if dbHud_1 then ql(bv)ql(i2())bC.print("Saved Variables to Datacore")if qk and dbHud_2 then i4="Databank copied.  Remove copy when ready."end end end;local function qn()local function qo(qp)return type(qp)=='number'end;local function qq(qp)return type(nI(qp))=='number'end;local function qr(pc)return type(pc)=='table'end;local function qs(bC)return type(bC)=='string'end;local function qt(cf)return qr(cf)and qo(cf.x and cf.y and cf.z)end;local function qu(oe)return qr(oe)and qo(oe.latitude and oe.longitude and oe.altitude and oe.id and oe.systemId)end;local qv=math.pi/180;local qw=180/math.pi;local qd=1e-10;local dy=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local pF='::pos{'..dy..','..dy..','..dy..','..dy..','..dy..'}'local utils=require('cpml.utils')local vec3=require('cpml.vec3')local function qx(qp)local lg=string.gsub(string.reverse(bH('%.4f',qp)),'^0*%.?','')return lg==''and'0'or string.reverse(lg)end;local function qy(qz)if qt(qz)then return bH('{x=%.3f,y=%.3f,z=%.3f}',qz.x,qz.y,qz.z)end;if qr(qz)and not getmetatable(qz)then local qA={}local qB=next(qz)if type(qB)=='nil'or qB==1 then qA=qz else for fT,cf in pairs(qz)do local eu=qy(cf)if type(fT)=='number'then table.insert(qA,bH('[%s]=%s',fT,eu))else table.insert(qA,bH('%s=%s',fT,eu))end end end;return bH('{%s}',table.concat(qA,','))end;if qs(qz)then return bH("'%s'",qz:gsub("'",[[\']]))end;return tostring(qz)end;local qC={}qC.__index=qC;qC.__tostring=function(qz,qD)local qE={}for fT in pairs(qz)do table.insert(qE,fT)end;table.sort(qE)local qA={}for jL,fT in ipairs(qE)do local eu=qy(qz[fT])if type(fT)=='number'then table.insert(qA,bH('[%s]=%s',fT,eu))else table.insert(qA,bH('%s=%s',fT,eu))end end;if qD then return bH('%s%s',qD,table.concat(qA,',\n'..qD))end;return bH('{%s}',table.concat(qA,','))end;qC.__eq=function(qF,qG)return qF.systemId==qG.systemId and qF.id==qG.id and kW(qF.radius,qG.radius)and kW(qF.center.x,qG.center.x)and kW(qF.center.y,qG.center.y)and kW(qF.center.z,qG.center.z)and kW(qF.GM,qG.GM)end;local function qH(pG,oJ,qI,kQ,qJ)assert(qq(pG),'Argument 1 (systemId) must be a number:'..type(pG))assert(qq(oJ),'Argument 2 (id) must be a number:'..type(oJ))assert(qq(qI),'Argument 3 (radius) must be a number:'..type(qI))assert(qr(kQ),'Argument 4 (worldCoordinates) must be a array or vec3.'..type(kQ))assert(qq(qJ),'Argument 5 (GM) must be a number:'..type(qJ))return setmetatable({systemId=nI(pG),id=nI(oJ),radius=nI(qI),center=vec3(kQ),GM=nI(qJ)},qC)end;local kS={}kS.__index=kS;kS.__tostring=function(nw)return bH('::pos{%d,%d,%s,%s,%s}',nw.systemId,nw.id,qx(nw.latitude*qw),qx(nw.longitude*qw),qx(nw.altitude))end;kS.__eq=function(qF,qG)return qF.id==qG.id and qF.systemId==qG.systemId and kW(qF.latitude,qG.latitude)and kW(qF.altitude,qG.altitude)and(kW(qF.longitude,qG.longitude)or kW(qF.latitude,math.pi/2)or kW(qF.latitude,-math.pi/2))end;local function qK(qL,oJ,kU,kV,d5)local pG=qL;if qs(qL)and not kV and not d5 and not oJ and not kU then pG,oJ,kU,kV,d5=oZ(qL,pF)assert(pG,'Argument 1 (position string) is malformed.')else assert(qq(pG),'Argument 1 (systemId) must be a number:'..type(pG))assert(qq(oJ),'Argument 2 (id) must be a number:'..type(oJ))assert(qq(kU),'Argument 3 (latitude) must be in degrees:'..type(kU))assert(qq(kV),'Argument 4 (longitude) must be in degrees:'..type(kV))assert(qq(d5),'Argument 5 (altitude) must be in meters:'..type(d5))end;pG=nI(pG)oJ=nI(oJ)kU=nI(kU)kV=nI(kV)d5=nI(d5)if oJ==0 then return setmetatable({latitude=kU,longitude=kV,altitude=d5,id=oJ,systemId=pG},kS)end;return setmetatable({latitude=qv*bO(kU,-90,90),longitude=qv*(kV%360),altitude=d5,id=oJ,systemId=pG},kS)end;local qM={}qM.__index=qM;qM.__tostring=function(qz,qD)local qN=qD and qD..'  'local qO={}local qE={}for fT in pairs(qz)do table.insert(qE,fT)end;table.sort(qE)for jL,qP in ipairs(qE)do qQ=qz[qP]local qR=qC.__tostring(qQ,qN)if qD then table.insert(qO,bH('[%s]={\n%s\n%s}',qP,qR,qD))else table.insert(qO,bH('  [%s]=%s',qP,qR))end end;if qD then return bH('\n%s%s%s',qD,table.concat(qO,',\n'..qD),qD)end;return bH('{\n%s\n}',table.concat(qO,',\n'))end;local function qS(qT)local bD={}local pid;for jL,cf in pairs(qT)do local oJ=cf.planetarySystemId;if type(oJ)~='number'then error('Invalid planetary s ID: '..tostring(oJ))elseif pid and oJ~=pid then error('Mistringmatch planetary s IDs: '..oJ..' and '..pid)end;local qU=cf.bodyId;if type(qU)~='number'then error('Invalid body ID: '..tostring(qU))elseif bD[qU]then error('Duplicate body ID: '..tostring(qU))end;setmetatable(cf.center,getmetatable(vec3.unit_x))bD[qU]=setmetatable(cf,qC)pid=oJ end;return setmetatable(bD,qM)end;q2={}local function qV(qT)return setmetatable({galaxyAtlas=qT or{}},q2)end;q2.__index=function(pc,F)if type(F)=='number'then local bC=pc.galaxyAtlas[F]return qS(bC)end;return rawget(q2,F)end;q2.__pairs=function(qz)return function(pc,fT)local qW,qX=next(pc,fT)return qW,qX and qS(qX)end,qz.galaxyAtlas,nil end;q2.__tostring=function(qz)local qY={}for jL,qZ in pairs(qz or{})do local q_=qZ:getPlanetarySystemId()local r0=qM.__tostring(qZ,'    ')table.insert(qY,bH('  [%s]={%s\n  }',q_,r0))end;return bH('{\n%s\n}\n',table.concat(qY,',\n'))end;q2.BodyParameters=qH;q2.MapPosition=qK;q2.PlanetarySystem=qS;function q2.createBodyParameters(pG,oJ,r1,r2,r3,r4,r5)assert(qq(pG),'Argument 1 (systemId) must be a number:'..type(pG))assert(qq(oJ),'Argument 2 (id) must be a number:'..type(oJ))assert(qq(r1),'Argument 3 (surfaceArea) must be a number:'..type(r1))assert(qr(r2),'Argument 4 (aPosition) must be an array or vec3:'..type(r2))assert(qr(r3),'Argument 5 (verticalAtPosition) must be an array or vec3:'..type(r3))assert(qq(r4),'Argument 6 (altitude) must be in meters:'..type(r4))assert(qq(r5),'Argument 7 (gravityAtPosition) must be number:'..type(r5))local qI=bS(r1/4/math.pi)local ej=qI+r4;local r6=vec3(r2)+ej*vec3(r3)local qJ=r5*ej*ej;return qH(pG,oJ,qI,r6,qJ)end;q2.isMapPosition=qu;function q2:getPlanetarySystem(qL)if F==nil then F=0 end;if qX==nil then qX=0 end;local pG=qL;if qu(qL)then pG=qL.systemId end;if type(pG)=='number'then local bC=self.galaxyAtlas[F]if bC then if getmetatable(qX)~=qM then bC=qS(bC)end;return bC end end end;function qM:sizeCalculator(l1)return 1.05*l1.radius end;function qM:castIntersections(r7,lf,r8,r9,ra,rb)local rc={}if ra then for jL,l1 in pairs(ra)do table.insert(rc,l1)end else rc=gM end;if not rb then table.sort(rc,function(gN,gO)local gP=gN.center;local gQ=gO.center;return(gP.x-r7.x)^2+(gP.y-r7.y)^2+(gP.z-r7.z)^2<(gQ.x-r7.x)^2+(gQ.y-r7.y)^2+(gQ.z-r7.z)^2 end)end;local rd=lf:normalize()for jL,l1 in ipairs(rc)do local re=l1.center-r7;local qI=self:sizeCalculator(l1)local rf=re:dot(rd)local rg=rf^2-(re:len2()-qI^2)if rg>=0 then local rh=bS(rg)local mi=rf+rh;local mj=rf-rh;if mj>0 then return l1,mi,mj elseif mi>0 then return l1,mi,nil end end end;return nil,nil,nil end;function qM:closestBody(kM)assert(type(kM)=='table','Invalid coordinates.')local ri,l1;local rj=vec3(kM)for jL,rk in pairs(self)do local hH=(rk.center-rj):len2()if(not l1 or hH<ri)and rk.name~="Space"then l1=rk;ri=hH end end;return l1 end;function qM:convertToBodyIdAndWorldCoordinates(qL)local rl=qL;if qs(qL)then rl=qK(qL)end;if rl.id==0 then return 0,vec3(rl.latitude,rl.longitude,rl.altitude)end;local rk=self:getBodyParameters(rl)if rk then return rl.id,rk:convertToWorldCoordinates(rl)end end;function qM:getBodyParameters(qL)local oJ=qL;if qu(qL)then oJ=qL.id end;assert(qq(oJ),'Argument 1 (id) must be a number:'..type(oJ))return self[oJ]end;function qM:getPlanetarySystemId()local jL,cf=next(self)return cf and cf.systemId end;function qC:convertToMapPosition(kQ)assert(qr(kQ),'Argument 1 (worldCoordinates) must be an array or vec3:'..type(kQ))local kR=vec3(kQ)if self.id==0 then return setmetatable({latitude=kR.x,longitude=kR.y,altitude=kR.z,id=0,systemId=self.systemId},kS)end;local kT=kR-self.center;local ej=kT:len()local d5=ej-self.radius;local kU=0;local kV=0;if not kW(ej,0)then local kX=bM(kT.y,kT.x)kV=kX>=0 and kX or 2*math.pi+kX;kU=math.pi/2-math.acos(kT.z/ej)end;return setmetatable({latitude=kU,longitude=kV,altitude=d5,id=self.id,systemId=self.systemId},kS)end;function qC:convertToWorldCoordinates(qL)local rl=qs(qL)and qK(qL)or qL;if rl.id==0 then return vec3(rl.latitude,rl.longitude,rl.altitude)end;assert(qu(rl),'Argument 1 (mapPosition) is not an instance of "MapPosition".')assert(rl.systemId==self.systemId,'Argument 1 (mapPosition) has a different planetary s ID.')assert(rl.id==self.id,'Argument 1 (mapPosition) has a different planetary body ID.')local pH=math.cos(rl.latitude)return self.center+(self.radius+rl.altitude)*vec3(pH*math.cos(rl.longitude),pH*math.sin(rl.longitude),math.sin(rl.latitude))end;function qC:getAltitude(kQ)return(vec3(kQ)-self.center):len()-self.radius end;function qC:getDistance(kQ)return(vec3(kQ)-self.center):len()end;function qC:getGravity(kQ)local rm=self.center-vec3(kQ)local rn=rm:len2()return self.GM/rn*rm/bS(rn)end;return setmetatable(q2,{__call=function(jL,...)return qV(...)end})end;local function ro()local fu={}local rp=30000000/3600;local rq=rp*rp;local rr=100;function fu.computeAccelerationTime(rs,rt,ru)local rv=rp*math.asin(rs/rp)return(rp*math.asin(ru/rp)-rv)/rt end;function fu.computeDistanceAndTime(rs,ru,rw,rx,ry,rz)ry=ry or 0;rz=rz or 0;local rA=rs<=ru;local rB=rx*(rA and 1 or-1)/rw;local rC=-rz/rw;local rD=rB+rC;if rA and rD<=0 or not rA and rD>=0 then return-1,-1 end;local rE,rF=0,0;if rB~=0 and ry>0 then local rv=math.asin(rs/rp)local rG=math.pi*(rB/2+rC)local rH=rB*ry;local rI=rp*math.pi;local cf=function(pc)local jW=(rG*pc-rH*math.sin(math.pi*pc/2/ry)+rI*rv)/rI;local rJ=math.tan(jW)return rp*rJ/bS(rJ*rJ+1)end;local rK=rA and function(bC)return bC>=ru end or function(bC)return bC<=ru end;rF=2*ry;if rK(cf(rF))then local rL=0;while bF(rF-rL)>0.5 do local pc=(rF+rL)/2;if rK(cf(pc))then rF=pc else rL=pc end end end;local rM=rs;local rN=rF/rr;for rO=1,rr do local dC=cf(rO*rN)rE=rE+(dC+rM)*rN/2;rM=dC end;if rF<2*ry then return rE,rF end;rs=rM end;local rv=rp*math.asin(rs/rp)local ge=(rp*math.asin(ru/rp)-rv)/rD;local rP=rq*math.cos(rv/rp)/rD;local ej=rP-rq*math.cos((rD*ge+rv)/rp)/rD;return ej+rE,ge+rF end;function fu.computeTravelTime(rs,rt,ej)if ej==0 then return 0 end;if rt>0 then local rv=rp*math.asin(rs/rp)local rP=rq*math.cos(rv/rp)/rt;return(rp*math.acos(rt*(rP-ej)/rq)-rv)/rt end;if rs==0 then return-1 end;assert(rs>0,'Acceleration and initial speed are both zero.')return ej/rs end;return fu end;local function rQ()local vec3=require('cpml.vec3')local qn=qn()local function qs(bC)return type(bC)=='string'end;local function qr(pc)return type(pc)=='table'end;rR={}rR.__index=rR;function rR:escapeAndOrbitalSpeed(d5)assert(self.body)local ej=d5+self.body.radius;if not kW(ej,0)then local gq=bS(self.body.GM/ej)return bS(2)*gq,gq end;return nil,nil end;function rR:orbitalParameters(qL,e7)assert(self.body)assert(qr(qL)or qs(qL))assert(qr(e7))local gE=(qs(qL)or qn.isMapPosition(qL))and self.body:convertToWorldCoordinates(qL)or vec3(qL)local cf=vec3(e7)local hA=gE-self.body.center;local o5=cf:len2()local hh=hA:len()local rS=self.body.GM;local rT=((o5-rS/hh)*hA-hA:dot(cf)*cf)/rS;local gP=rS/(2*rS/hh-o5)local rU=rT:len()local rd=rT:normalize()local rV=gP*(1-rU)local rW=gP*(1+rU)local rX=rV*rd+self.body.center;local rY=rU<=1 and-rW*rd+self.body.center or nil;local rZ=bS(gP*rS*(1-rU*rU))local r_=rY and 2*math.pi*bS(gP^3/rS)local s0=math.acos(rT:dot(hA)/(rU*hh))if hA:dot(cf)<0 then s0=-(s0-2*math.pi)end;local s1=math.acos((math.cos(s0)+rU)/(1+rU*math.cos(s0)))local s2=s1;if s2<0 then s2=s2+2*math.pi end;local s3=s2-rU*math.sin(s2)local s4=0;local s5=0;local s6=0;if r_~=nil then s4=s3/(2*math.pi/r_)s5=r_-s4;s6=s5+r_/2;if s0-math.pi>0 then s5=s4;s6=s5+r_/2 end;if s6>r_ then s6=s6-r_ end end;return{periapsis={position=rX,speed=rZ/rV,circularOrbitSpeed=bS(rS/rV),altitude=rV-self.body.radius},apoapsis=rY and{position=rY,speed=rZ/rW,circularOrbitSpeed=bS(rS/rW),altitude=rW-self.body.radius},currentVelocity=cf,currentPosition=gE,eccentricity=rU,period=r_,eccentricAnomaly=s1,meanAnomaly=s3,timeToPeriapsis=s5,timeToApoapsis=s6,trueAnomaly=s0}end;local function s7(s8)local rk=qn.BodyParameters(s8.systemId,s8.id,s8.radius,s8.center,s8.GM)return setmetatable({body=rk},rR)end;return setmetatable(rR,{__call=function(jL,...)return s7(...)end})end;local function s9()local function sa(id)local nw=lx:closestBody(id)if(id-nw.center):len()>nw.radius+nw.noAtmosphericDensityAltitude then nw=bD[0][0]end;return nw end;local function sb()local function sc(sd,se)return sd.name<se.name end;fP={}for fT,cf in pairs(bD[0])do fP[#fP+1]={name=cf.name,index=fT}end;table.sort(fP,sc)end;local function sf(sg)for fT,cf in pairs(sg)do if cf.name and cf.name==fQ.name then return fT end end;return-1 end;local function sh()iz=bb;if bb==0 then b9="None"g0=nil;fQ=nil;return true end;local si=fP[bb].index;local sj=bD[0][si]if sj.center then b9=sj.name;g0=ly[0][si]if fQ~=nil then if fi==0 then if ki(sk,sl)~=1 then pV(sk,sl)end;if ki(sm,sn)~=1 then pV(sm,sn)end;if ki(so,sp)~=1 then pV(so,sp)end;if ki(sq,sr)~=1 then pV(sq,sr)end;if ki(ml,ss)~=1 then pV(ml,ss)end end;if ki(st,su)~=1 then pV(st,su)end;if ki(sv,sw)~=1 then pV(sv,sw)end;if ki(sx,sy)~=1 then pV(sx,sy)end end;fQ=nil else fQ=sj;for jL,cf in pairs(ly[0])do if cf.name==fQ.planetname then g0=cf;b9=fQ.name;break end end;if ki(st,su)~=1 then pV(st,su)end;if ki(sv,sw)~=1 then pV(sv,sw)end end;if fQ==nil then ba=vec3(g0.center)else ba=fQ.position end;if g0.planetname~="Space"then if g0.hasAtmosphere then ma=bG(g0.radius*(N-1)+g0.noAtmosphericDensityAltitude)else ma=bG(g0.radius*(N-1)+g0.surfaceMaxAltitude)end else ma=M end;if fQ~=nil and fQ.planetname=="Space"then b5=0 else jL,b5=lA(g0):escapeAndOrbitalSpeed(ma)end;b7=0;b1=false;b3=false;b4=false;aU=false;b2=false;b6="Aligning"return true end;local function sz(db)if not aU and not bg and not fh and not bp and not aZ and not fg then if db==nil then bb=bb+1;if bb>#fP then bb=0 end else bb=bb-1;if bb<0 then bb=#fP end end;if bb==0 then sh()else local si=fP[bb].index;local sj=bD[0][si]if sj~=nil and sj.name=="Space"or bq=="Custom Only"and sj.center or bq=="No Moons"and string.find(sj.name,"Moon")~=nil then if db==nil then sz()else sz(1)end else sh()end end else i4="Disengage autopilot before changing Interplanetary Helper"eZ("iph","AP")end end;local function il()local dQ=-1;dQ=sf(bD[0])if dQ>-1 then table.remove(bD[0],dQ)end;dQ=-1;dQ=sf(bf)if dQ~=-1 then i4=fQ.name.." saved location cleared"table.remove(bf,dQ)end;sz()sb()end;local function ic(cP,id,e3,sA)if dbHud_1 or e3 then local nw=sa(id)local j6=nw.gravity;if sA then j6=bB.getClosestPlanetInfluence()end;local sB={position=id,name=cP,planetname=nw.name,gravity=j6,safe=sA}if not e3 then bf[#bf+1]=sB else for fT,cf in pairs(bD[0])do if cf.name and cP==cf.name then table.remove(bD[0],fT)end end end;table.insert(bD[0],sB)sb()sh()i4="Location saved as "..cP.."("..nw.name..")"else i4="Databank must be installed to save permanent locations"end end;local sC={}function sC.UpdateAtlasLocationsList()sb()end;function sC.UpdateAutopilotTarget()sh()end;function sC.adjustAutopilotTargetIndex(db)sz(db)end;function sC.findAtlasIndex(sg)sf(sg)end;function sC.UpdatePosition(sD)local dQ=sf(bf)if dQ~=-1 then if sD~=nil then bf[dQ].name=sD;bb=bb-1;sz()else local sE=bf[dQ]sE.gravity=bB.getClosestPlanetInfluence()sE.position=gR;sE.safe=true end;i4=bf[dQ].name.." position updated ("..bf[dQ].planetname..")"else i4="Name Not Found"end end;function sC.AddNewLocation(cP,id,e3,sA)ic(cP,id,e3,sA)end;function sC.ClearCurrentPosition()il()end;for fT,cf in pairs(bf)do table.insert(bD[0],cf)end;sb()if bb>#fP then bb=0 end;sC.UpdateAutopilotTarget()return sC end;function script.onStart()local sF=false;local function sG()local function sH(sI)local sJ=dbHud_1.hasKey;for fT,cf in pairs(sI)do if sJ(fT)then local lg=bI(dbHud_1.getStringValue(fT))if lg~=nil then cf.set(lg)sF=true end end end end;if dbHud_1 then if not a then sH(i2())coroutine.yield()sH(bv)else sH(bv)i4="Updated user preferences used.  Will be saved when you exit seat.\nToggle off useTheseSettings to use saved values"jp=5;sF=false end;coroutine.yield()if sF then i4="Loaded Saved Variables"cg=a3;ci=a4;aP=e;b=string.lower(b)ir=k;ey=P;gD=[[rgb(]]..bG(iK+0.5)..","..bG(iL+0.5)..","..bG(iM+0.5)..[[)]]hr=[[rgb(]]..bG(iK*0.9+0.5)..","..bG(iL*0.9+0.5)..","..bG(iM*0.9+0.5)..[[)]]elseif not a then i4="No Saved Variables Found - Exit HUD to save settings"end;if bt<1.500 then if O<2000 then i4="Updating LowOrbitHeight to new minimum default of 2000."O=2000 end end;bt=VERSION_NUMBER else i4="No databank found. Attach one to control u and rerun \nthe autoconfigure to save preferences and locations"end;if bm+180<ge then bk=0 end;bm=ge;b=string.lower(b)if string.find("keyboard virtual joystick mouse",b)==nil then i4="Invalid User Control Scheme selected.\nChange userControlScheme in Lua Parameters to keyboard, mouse, or virtual joystick\nOr use shift and button in screen"jp=7 end;if antigrav and not l then if bl==nil then bl=fe end;antigrav.setBaseAltitude(bl)end;fx="Proceeding to Waypoint"end;local function sK()local function sL(sM,sN)if sM>sN then sN=sM end;local sO,sP=0,0;if a0>0 then sO=a0*0.05 end;if a1>0 then sP=a1*0.05 end;sN=sN*(1-(sO+sP))return sN end;local sQ=bA.getElementNameById;local sR=ak~=0 and al~=0;for fT in pairs(p_)do local type=bA.getElementTypeById(p_[fT])if oZ(type,'^.*Atmospheric Engine$')then if oZ(tostring(bA.getElementTagsById(p_[fT])),'^.*vertical.*$')and bA.getElementForwardById(p_[fT])[3]>0 then iE=true end end;if oZ(type,'^.*Space Engine$')then nr=true;if oZ(tostring(bA.getElementTagsById(p_[fT])),'^.*vertical.*$')then local sS=bA.getElementForwardById(p_[fT])if sS[3]<0 then q5=true else lL=true end end end;if type=="Landing Gear"then f4=true end;if type=="Dynamic Core Unit"then local sT=pU(p_[fT])if sT>10000 then nJ=110 elseif sT>1000 then nJ=55 elseif sT>150 then nJ=27 end end;q1=q1+pU(p_[fT])if sR and(type=="Atmospheric Fuel Tank"or type=="Space Fuel Tank"or type=="Rocket Fuel Tank")then local sT=pU(p_[fT])local je=bK(p_[fT])local sM=0;local cS=bN()if type=="Atmospheric Fuel Tank"then local sN=400;local sU=35.03;if sT>10000 then sN=51200;sU=5480 elseif sT>1300 then sN=6400;sU=988.67 elseif sT>150 then sN=1600;sU=182.67 end;sM=je-sU;if Y>0 then sN=sN+sN*Y*0.2 end;sN=sL(sM,sN)jz[#jz+1]={p_[fT],sQ(p_[fT]),sN,sU,sM,cS}end;if type=="Rocket Fuel Tank"then local sN=320;local sU=173.42;if sT>65000 then sN=40000;sU=25740 elseif sT>6000 then sN=5120;sU=4720 elseif sT>700 then sN=640;sU=886.72 end;sM=je-sU;if _>0 then sN=sN+sN*_*0.1 end;sN=sL(sM,sN)jB[#jB+1]={p_[fT],sQ(p_[fT]),sN,sU,sM,cS}end;if type=="Space Fuel Tank"then local sN=600;local sU=35.03;if sT>10000 then sN=76800;sU=5480 elseif sT>1300 then sN=9600;sU=988.67 elseif sT>150 then sN=2400;sU=182.67 end;sM=je-sU;if Z>0 then sN=sN+sN*Z*0.2 end;sN=sL(sM,sN)jA[#jA+1]={p_[fT],sQ(p_[fT]),sN,sU,sM,cS}end end end;if not iE then a_,aQ=false,false end end;local function sV()if gyro~=nil then f0=gyro.getState()==1 end;if not br then bP:deactivateGroundEngineAltitudeStabilization()end;if b~="keyboard"then oY(1)else oY(0)end;if door and(d6 or not d6 and fe<10000)then for jL,cf in pairs(door)do cf.toggle()end end;if switch then for jL,cf in pairs(switch)do cf.toggle()end end;if forcefield and(d6 or not d6==0 and fe<10000)then for jL,cf in pairs(forcefield)do cf.toggle()end end;if antigrav then eY=antigrav.getState()==1;if eY and not l then antigrav.show()end end;if bL()==1 and f then bC.freeze(1)else bC.freeze(0)end;if f4 then bc=bz.control.isAnyLandingGearExtended()==1;if bc then bz.control.extendLandingGears()else bz.control.retractLandingGears()end end;if dP~=-1 or not d6 and iZ:len()<50 then aR=true;bc=true;if f4 then bz.control.extendLandingGears()end else aR=false end;bP:setTargetGroundAltitude(q4)if d6 and dP~=-1 then lC=bA.getMaxKinematicsParametersAlongAxis("ground",bA.getConstructOrientationUp())[1]end;sW=d6 end;local function sX()local sY={}local function sZ()return{id=0,name={"Space","Space","Space"},type={},biosphere={},classification={},habitability={},description={},iconPath="",hasAtmosphere=false,isSanctuary=false,isInSafeZone=true,systemId=0,positionInSystem=0,satellites={},center={0,0,0},gravity=0,radius=0,atmosphereThickness=0,atmosphereRadius=0,surfaceArea=0,surfaceAverageAltitude=0,surfaceMaxAltitude=0,surfaceMinAltitude=0,GM=0,ores={},territories=0,noAtmosphericDensityAltitude=0,spaceEngineMinAltitude=0}end;local s_={[1]=4480,[6]=4480,[7]=6270}for t0,t1 in pairs(bD)do bD[t0][0]=sZ()bD[t0][0].systemId=t0;sY[t0]={}for t2,cd in pairs(bD[t0])do cd.gravity=cd.gravity/9.8;cd.center=vec3(cd.center)cd.name=cd.name[1]cd.noAtmosphericDensityAltitude=cd.atmosphereThickness or cd.atmosphereRadius-cd.radius;cd.spaceEngineMinAltitude=s_[cd.id]or 0.68377*(cd.atmosphereThickness or cd.atmosphereRadius-cd.radius)cd.planetarySystemId=t0;cd.bodyId=cd.id;sY[t0][t2]=cd;if gz==nil or cd.center.x<gz then gz=cd.center.x end;if gy==nil or cd.center.x>gy then gy=cd.center.x end;if gC==nil or cd.center.y<gC then gC=cd.center.y end;if gB==nil or cd.center.y>gB then gB=cd.center.y end;if cd.center and cd.name~="Space"then gM[#gM+1]=cd end end end;q2=qn()ly=q2(sY)fu=ro()lA=rQ()ig=s9()end;t3=false;t4=coroutine.create(function()bP:setupCustomTargetSpeedRanges(axisCommandId.longitudinal,{1000,5000,10000,20000,30000})sG()coroutine.yield()sK()coroutine.yield()fr=kg(bz,bA,bB,bC,bD,vBooster,hover,kh,antigrav,bF,bG,bJ,bL,bM,bN,bO,bP,ki,bR,bS,bT)sV()coroutine.yield()sX()ie=nH(bA,bC,library,radar_1,radar_2,bF,bQ,bS,bU,nI,nJ)gH=by(bz,bA,bB,bC,bD,radar_1,radar_2,antigrav,hover,bE,bF,bG,bH,bI,bJ,bK,bL,bM,bN,bO,bP,bQ,bR,bS,bT,bU)gH.ButtonSetup()q3=oX(bz,bA,bB,bC,bD,vBooster,hover,antigrav,bE,dbHud_2,bL,bP,bR,oY,bQ,bT,oZ,nI,bO)coroutine.yield()bB.hide()bC.showScreen(1)bC.showHelper(0)collectgarbage("collect")coroutine.yield()bB.setTimer("apTick",aJ)bB.setTimer("radarTick",aJ)bB.setTimer("hudTick",aK)bB.setTimer("oneSecond",1)bB.setTimer("tenthSecond",1/10)bB.setTimer("fiveSecond",5)eZ("start","SU")end)coroutine.resume(t4)end;function script.onStop()_autoconf.hideCategoryPanels()if antigrav~=nil and not l then antigrav.hide()end;if warpdrive~=nil then warpdrive.hide()end;bA.hide()bz.control.switchOffHeadlights()if door and(fi>0 or fi==0 and fe<10000)then for jL,cf in pairs(door)do cf.toggle()end end;if switch then for jL,cf in pairs(switch)do cf.toggle()end end;if forcefield and(fi>0 or fi==0 and fe<10000)then for jL,cf in pairs(forcefield)do cf.toggle()end end;s=i5;nv()if iB then iB.activate()end;if v then fr.showWayPoint(cd,gR)end;eZ("stop","SU")end;function script.onTick(t5)local t6=nil;if t5=="contact"then if not t7 then t7=0 end;if ge>t7+10 then i4="Radar Contact"eZ("rdrCon","RC")t7=ge end;bB.stopTimer("contact")elseif t5=="tenthSecond"then local function t8()local t9=bC.createData;local ta=bC.createWidget;tb=bC.createWidgetPanel("Interplanetary Helper")tc=ta(tb,"value")td=t9('{"label": "Target Planet", "value": "N/A", "unit":""}')pV(td,tc)te=ta(tb,"value")tf=t9('{"label": "distance", "value": "N/A", "unit":""}')pV(tf,te)sw=ta(tb,"value")sv=t9('{"label": "Travel Time", "value": "N/A", "unit":""}')pV(sv,sw)su=ta(tb,"value")st=t9('{"label": "Maximum Mass", "value": "N/A", "unit":""}')pV(st,su)sy=ta(tb,"value")sx=t9('{"label": "Target Altitude", "value": "N/A", "unit":""}')pV(sx,sy)sr=ta(tb,"value")sq=t9('{"label": "Cur Brake distance", "value": "N/A", "unit":""}')sp=ta(tb,"value")so=t9('{"label": "Cur Brake Time", "value": "N/A", "unit":""}')sn=ta(tb,"value")sm=t9('{"label": "Max Brake distance", "value": "N/A", "unit":""}')sl=ta(tb,"value")sk=t9('{"label": "Max Brake Time", "value": "N/A", "unit":""}')ss=ta(tb,"value")ml=t9('{"label": "Projected Altitude", "value": "N/A", "unit":""}')if not d6 then pV(sq,sr)pV(so,sp)pV(sm,sn)pV(sk,sl)pV(ml,ss)end end;local function tg()bQ(tb)tb=nil end;local function th()if not aU then if fQ==nil or fQ.planetname~=cd.name then mh=(g0.center-gR):len()else mh=(fQ.position-gR):len()end end;local dC=fv;local mt=bB.getThrottle()/100;if p then mt=iY end;local ti,tj=fu.computeDistanceAndTime(fv,V,jf,bz:maxForceForward()*mt,X,0)local l8,mm;if not aV then l8,mm=fr.GetAutopilotBrakeDistanceAndTime(V)else l8,mm=fr.GetAutopilotTBBrakeDistanceAndTime(V)end;local jL,tk;if not aV and dC>0 then jL,tk=fr.GetAutopilotBrakeDistanceAndTime(dC)else jL,tk=fr.GetAutopilotTBBrakeDistanceAndTime(dC)end;local tl=0;local tm=0;if b4 or not aU and dC>5 then tm=fu.computeTravelTime(dC,0,mh)elseif l8+ti<mh then tl=mh-(l8+ti)tm=fu.computeTravelTime(8333.0556,0,tl)else local tn=(mh-l8)/ti;ti=mh-l8;tj=tj*tn end;if fQ~=nil and fQ.planetname==cd.name and not aU then return tm elseif b3 then return tk elseif b4 then return tm+tk else return tj+mm+tm end end;local function to(j6,tp)if j6==nil then j6=bA.g()end;j6=bT(j6,5)if tp~=nil and tp or(t6==nil or t6~=j6)then local dC=iZ:len()local tq=bI(bB.getData()).maxBrake;if tq~=nil and tq>0 and d6 then tq=tq/bO(dC/100,0.1,1)tq=tq/fi;if fi>0.10 then if bk then bk=(bk+tq)/2 else bk=tq end end end;if tq~=nil and tq>0 then bi=tq end;t6=j6 end end;to(nil,true)if ny~=nil then if bP:getAxisCommandType(0)~=axisCommandType.byTargetSpeed or bP:getTargetSpeed(axisCommandId.longitudinal)~=ny then fr.cmdCruise(ny)else ny=nil end end;if b9~="None"then if tb==nil then t8()end;if b9~=nil then local tr=fQ~=nil;local ts=0.5*bk/g0:getGravity(g0.center+vec3(0,0,1)*g0.radius):len()ts=ts>1000000 and bT(ts/1000000,2).." kTons"or bT(ts/1000,2).." Tons"ki(td,'{"label": "Target", "value": "'..b9 ..'", "unit":""}')ft=th()if tr and not aU then ej=(gR-fQ.position):len()else ej=(ba-gR):len()end;if not aV then l8,mm=fr.GetAutopilotBrakeDistanceAndTime(fv)pX,pY=fr.GetAutopilotBrakeDistanceAndTime(V)else l8,mm=fr.GetAutopilotTBBrakeDistanceAndTime(fv)pX,pY=fr.GetAutopilotTBBrakeDistanceAndTime(V)end;local f5=f6(ej)ki(tf,'{"label": "distance", "value": "'..f5 ..'"}')ki(sv,'{"label": "Travel Time", "value": "'..cW(ft)..'", "unit":""}')f5=f6(l8)ki(sq,'{"label": "Cur Brake distance", "value": "'..f5 ..'"}')ki(so,'{"label": "Cur Brake Time", "value": "'..cW(mm)..'", "unit":""}')f5=f6(pX)ki(sm,'{"label": "Max Brake distance", "value": "'..f5 ..'"}')ki(sk,'{"label": "Max Brake Time", "value": "'..cW(pY)..'", "unit":""}')ki(st,'{"label": "Max Brake Mass", "value": "'..bH("%s",ts)..'", "unit":""}')f5=f6(ma)ki(sx,'{"label": "Target Orbit", "value": "'..f5 ..'"}')if fi>0 and not sW then bC.removeDataFromWidget(sk,sl)bC.removeDataFromWidget(sm,sn)bC.removeDataFromWidget(so,sp)bC.removeDataFromWidget(sq,sr)bC.removeDataFromWidget(ml,ss)sW=true;if not cm and p and(aW or aZ or fg)then fr.cmdThrottle(1)aR=false;mX=false end end;if fi==0 and sW then if ki(sk,sl)==1 then pV(sk,sl)end;if ki(sm,sn)==1 then pV(sm,sn)end;if ki(so,sp)==1 then pV(so,sp)end;if ki(sq,sr)==1 then pV(sq,sr)end;if ki(ml,ss)==1 then pV(ml,ss)end;sW=false end end else tg()end;if warpdrive~=nil then if bI(warpdrive.getData()).destination~="Unknown"and bI(warpdrive.getData()).distance>400000 then warpdrive.show()tt=true else warpdrive.hide()tt=false end end;gH.TenthTick()elseif t5=="oneSecond"then local function tu(d4)local tv=0;j1=""local tw=q1;local tx=0;local ty=0;local tz=0;local cX=0;local cY=""local tA=bA.getElementHitPointsById;for fT in pairs(p_)do local sT=0;local tB=0;tB=pU(p_[fT])sT=tA(p_[fT])tx=tx+sT;if sT<tB then if sT==0 then tz=tz+1 else ty=ty+1 end;if iG and#q0==0 then id=vec3(bA.getElementPositionById(p_[fT]))local cG=id.x;local dF=id.y;local of=id.z;table.insert(q0,bA.spawnArrowSticker(cG,dF,of+1,"down"))table.insert(q0,bA.spawnArrowSticker(cG,dF,of+1,"down"))bA.rotateSticker(q0[2],0,0,90)table.insert(q0,bA.spawnArrowSticker(cG+1,dF,of,"north"))table.insert(q0,bA.spawnArrowSticker(cG+1,dF,of,"north"))bA.rotateSticker(q0[4],90,90,0)table.insert(q0,bA.spawnArrowSticker(cG-1,dF,of,"south"))table.insert(q0,bA.spawnArrowSticker(cG-1,dF,of,"south"))bA.rotateSticker(q0[6],90,-90,0)table.insert(q0,bA.spawnArrowSticker(cG,dF-1,of,"east"))table.insert(q0,bA.spawnArrowSticker(cG,dF-1,of,"east"))bA.rotateSticker(q0[8],90,0,90)table.insert(q0,bA.spawnArrowSticker(cG,dF+1,of,"west"))table.insert(q0,bA.spawnArrowSticker(cG,dF+1,of,"west"))bA.rotateSticker(q0[10],-90,0,90)table.insert(q0,p_[fT])end elseif iG and#q0>0 and q0[11]==p_[fT]then for cR in pairs(q0)do bA.deleteSticker(q0[cR])end;q0={}end end;tv=bG(tx/tw*100)if tv<100 then d4[#d4+1]=bU(0,0,"","pbright txt")cX=bG(tv*2.55)cY=bH("rgb(%d,%d,%d)",255-cX,cX,0)if tv<100 then d4[#d4+1]=bU("50%",1035,"Elemental Integrity: "..tv.."%","txtbig txtmid","fill:"..cY)if tz>0 then d4[#d4+1]=bU("50%",1055,"Disabled Modules: "..tz.." Damaged Modules: "..ty,"txtbig txtmid","fill:"..cY)elseif ty>0 then d4[#d4+1]=bU("50%",1055,"Damaged Modules: "..ty,"txtbig txtmid","fill:"..cY)end end end end;local function tC()if tD then if tE==nil and(oV~=nil or bc)then _autoconf.displayCategoryPanel(tD,weapon_size,"Weapons","weapon",true)tE=_autoconf.panels[_autoconf.panels_size]elseif tE~=nil and oV==nil and not bc then bQ(tE)tE=nil end end end;local function kb()local cS=bN()local eA=fv;local kc=cS-kd;if eA>1.38889 then eA=eA/1000;local ke=eA*(cS-kd)bd=bd+ke;gI=gI+ke end;gJ=gJ+kc;be=be+kc;kd=cS end;kb()fB=bA.getPlayersOnBoard()pt=bA.getDockedConstructs()tC()local d4={}gH.OneSecond(d4)if n then tu(d4)end;j0=table.concat(d4,"")collectgarbage("collect")elseif t5=="fiveSecond"then if not m then return end;pZ=dbHud_1.getStringValue("SPBAutopilotTargetName")if pZ~=nil and pZ~=""and pZ~="SatNavNotChanged"then local lg=bI(dbHud_1.getStringValue("SavedLocations"))if lg~=nil then bf=lg;local dQ=-1;local sB;for fT,cf in pairs(bf)do if cf.name and cf.name=="SatNav Location"then dQ=fT;break end end;if dQ~=-1 then sB=bf[dQ]dQ=-1;for fT,cf in pairs(bD[0])do if cf.name and cf.name=="SatNav Location"then dQ=fT;break end end;if dQ>-1 then bD[0][dQ]=sB end;ig.UpdateAtlasLocationsList()i4=sB.name.." position updated"end end;for F=1,#fP do if fP[F].name==pZ then bb=F;bC.print("Index = "..bb.." "..fP[F].name)ig.UpdateAutopilotTarget()dbHud_1.setStringValue("SPBAutopilotTargetName","SatNavNotChanged")break end end end elseif t5=="msgTick"then local d4={}gH.DisplayMessage(d4,"empty")i4="empty"bB.stopTimer("msgTick")jp=3 elseif t5=="animateTick"then k8=true;k7=false;jI=0;jJ=0;bB.stopTimer("animateTick")elseif t5=="hudTick"then gH.hudtick()elseif t5=="apTick"then fr.APTick()elseif t5=="radarTick"then ie.UpdateRadar()elseif t5=="tagTick"then if bs=="Off"then bs="All"elseif bs=="All"then bs="Longitude"elseif bs=="Longitude"then bs="Lateral"elseif bs=="Lateral"then bs="Vertical"else bs="Off"end;i4="Extra Engine Tags: "..bs;bB.stopTimer("tagTick")end end;function script.onFlush()local function tF(tG,mF)local tH=vec3()local tI=vec3()if tG==axisCommandId.longitudinal then tH=vec3(bA.getConstructOrientationForward())tI=dq elseif tG==axisCommandId.vertical then tH=vec3(bA.getConstructOrientationUp())tI=ls elseif tG==axisCommandId.lateral then tH=vec3(bA.getConstructOrientationRight())tI=h1 else return vec3()end;local tJ=vec3(bA.getWorldGravity())local tK=tJ:dot(tI)local tL=vec3(bA.getWorldAirFrictionAcceleration())local tM=tL:dot(tI)local tN=iZ:dot(tH)local tO=mF*constants.kph2m;if tP==nil then tP=pid.new(10,0,10.0)end;tP:inject(tO-tN)local tQ=tP:get()local tR=(tQ-tM-tK)*tI;return tR end;local function tS(tG,mF)local tH=vec3()local tI=vec3()if tG==axisCommandId.longitudinal then tH=vec3(bA.getConstructOrientationForward())tI=dq elseif tG==axisCommandId.vertical then tH=vec3(bA.getConstructOrientationUp())tI=ls elseif tG==axisCommandId.lateral then tH=vec3(bA.getConstructOrientationRight())tI=h1 else return vec3()end;local tJ=vec3(bA.getWorldGravity())local tK=tJ:dot(tI)local tL=vec3(bA.getWorldAirFrictionAcceleration())local tM=tL:dot(tI)local tN=iZ:dot(tH)local tO=mF*constants.kph2m;if tT==nil then tT=pid.new(10,0,10.0)end;tT:inject(tO-tN)local tQ=tT:get()local tR=(tQ-tM-tK)*tI;return tR end;local function tU(tV,da,se)local tW=tV:cross(se):normalize_inplace()local e8=math.acos(bO(tW:dot(-da),-1,1))*constants.rad2deg;if tW:cross(-da):dot(se)<0 then e8=-e8 end;return e8 end;if antigrav and not l then if not eY and antigrav.getBaseAltitude()~=bl then antigrav.setBaseAltitude(bl)end end;cm=bP:getAxisCommandType(0)==axisCommandType.byThrottle;if cm and mX then fr.cmdThrottle(0)mX=false elseif not cm and not mX then iY=0;mX=true end;aE=math.max(aE,0.01)aF=math.max(aF,0.01)az=math.max(az,0.01)aD=math.max(aD,0.01)aG=math.max(aG,0.01)aH=math.max(aH,0.01)ay=math.max(ay,0.01)local tX=bO(pd+ln+bC.getControlDeviceForwardInput(),-1,1)local tY=bO(pe+lw+bC.getControlDeviceYawInput(),-1,1)local tZ=bO(pf+lm-bC.getControlDeviceLeftRightInput(),-1,1)local t_=lF;dc=vec3(bA.getWorldVertical())if dc==nil or dc:len()==0 then dc=(cd.center-gR):normalize()end;ls=vec3(bA.getConstructWorldOrientationUp())dq=vec3(bA.getConstructWorldOrientationForward())h1=vec3(bA.getConstructWorldOrientationRight())fs=vec3(bA.getWorldVelocity())iZ=vec3(bA.getVelocity())gR=vec3(bA.getConstructWorldPos())jf=bA.getConstructMass()fv=vec3(fs):len()d8=-dc:dot(fs)iV=getRoll(dc,dq,h1)local u0=iV/180*math.pi;local u1=math.cos(u0)local u2=math.sin(u0)iT=tU(dc,dq,h1*u1+ls*u2)local u3=fs:normalize()local u4=bF(iV)local u5=utils.sign(iV)local u6=vec3(bA.getWorldAngularVelocity())local u7=tX*aE*h1+tY*az*dq+tZ*aF*ls;if ir==true and dc:len()>0.01 then local u8=bF(lB-iV)if((aT or aZ or aX or iF or aW or bp)and u8>0 or fi>0.0 and u8<aA and k)and tY==0 and bF(iT)<85 then local u9=lB;local ua=ay;if fi==0 then ua=ua/4;lB=0;u9=0 end;if ub==nil then ub=pid.new(ua*0.01,0,ua*0.1)end;ub:inject(u9-iV)local uc=ub:get()u7=u7+uc*dq end end;local ud=1;local ue=0;local uf=1;local ug=bC.getMouseWheel()if ug>0 then fr.changeSpd()elseif ug<0 then fr.changeSpd(true)else nE=true end;eT=0;if d6 and p and cm then if uh==nil then uh=pid.new(0.5,0,1)end;uh:inject(ey/3.6-fs:dot(dq))local ui=uh:get()ex=bO(ui,-1,1)if ex<iY and fi>0.005 then ew=true;bP:setThrottleCommand(axisCommandId.longitudinal,bO(ex,0.01,1))else ew=false;bP:setThrottleCommand(axisCommandId.longitudinal,iY)end;if uj==nil then uj=pid.new(1*0.01,0,1*0.1)end;uj:inject(fs:len()-ey/3.6)local uk=bO(uj:get(),0,1)if fi>0 and d8<-80 or fi>0.005 then eT=uk end;if eT>0 then if ew and ex==0.01 then bP:setThrottleCommand(axisCommandId.longitudinal,0)end else ex=bO(ex,0.01,1)end;local ul=''local um=vec3()local un=tF(axisCommandId.vertical,lJ*1000)bz:setEngineForceCommand("vertical airfoil , vertical ground ",un,ue)local uo='thrust analog longitudinal 'if bs=="All"or bs=="Longitude"then uo=uo..aL end;local up=bP:getAxisCommandType(axisCommandId.longitudinal)local uq=bP:composeAxisAccelerationFromThrottle(uo,axisCommandId.longitudinal)local ur=tS(axisCommandId.lateral,bo*1000)ul=ul..' , '.."lateral airfoil , lateral ground "um=um+ur;if um:len()>constants.epsilon then bz:setEngineForceCommand(ul,um,ue,'','','',uf)end;bz:setEngineForceCommand(uo,uq,ud)local us='thrust analog vertical fueled 'local ut='thrust analog lateral fueled 'if bs=="All"or bs=="Lateral"then ut=ut..aM end;if bs=="All"or bs=="Vertical"then us=us..aN end;if lJ~=0 or aX and aR or not bc and not br then bz:setEngineForceCommand(us,un,ud)else bz:setEngineForceCommand(us,vec3(),ud)end;if bo~=0 then bz:setEngineForceCommand(ut,ur,ud)else bz:setEngineForceCommand(ut,vec3(),ud)end;if t_==0 then t_=eT end;local uu=-t_*(aG*fs+aH*u3)bz:setEngineForceCommand('brake',uu)else if p then bP:setThrottleCommand(axisCommandId.longitudinal,iY)end;local mF=bB.getAxisCommandValue(0)if not cm then if uj==nil then uj=pid.new(1*0.01,0,1*0.1)end;uj:inject(fs:len()-mF/3.6)local uk=bO(uj:get(),0,1)t_=bO(t_+uk,0,1)end;local uu=-t_*(aG*fs+aH*u3)bz:setEngineForceCommand('brake',uu)local ul=''local um=vec3()local uv=false;local uo='thrust analog longitudinal 'if bs=="All"or bs=="Longitude"then uo=uo..aL end;local up=bP:getAxisCommandType(axisCommandId.longitudinal)if up==axisCommandType.byThrottle then local uq=bP:composeAxisAccelerationFromThrottle(uo,axisCommandId.longitudinal)bz:setEngineForceCommand(uo,uq,ud)elseif up==axisCommandType.byTargetSpeed then local uq=bP:composeAxisAccelerationFromTargetSpeed(axisCommandId.longitudinal)ul=ul..' , '..uo;um=um+uq;if bP:getTargetSpeed(axisCommandId.longitudinal)==0 or bP:getCurrentToTargetDeltaSpeed(axisCommandId.longitudinal)<-bP:getTargetSpeedCurrentStep(axisCommandId.longitudinal)*0.5 then uv=true end end;local ut='thrust analog lateral 'if bs=="All"or bs=="Lateral"then ut=ut..aM end;local uw=bP:getAxisCommandType(axisCommandId.lateral)if uw==axisCommandType.byThrottle then local ux=bP:composeAxisAccelerationFromThrottle(ut,axisCommandId.lateral)bz:setEngineForceCommand(ut,ux,ud)elseif uw==axisCommandType.byTargetSpeed then local ur=bP:composeAxisAccelerationFromTargetSpeed(axisCommandId.lateral)ul=ul..' , '..ut;um=um+ur end;local us='thrust analog vertical 'if bs=="All"or bs=="Vertical"then us=us..aN end;local uy=bP:getAxisCommandType(axisCommandId.vertical)if uy==axisCommandType.byThrottle then local un=bP:composeAxisAccelerationFromThrottle(us,axisCommandId.vertical)if lJ~=0 or aX and aR then bz:setEngineForceCommand(us,un,ud,'airfoil','ground','',uf)else bz:setEngineForceCommand(us,vec3(),ud)bz:setEngineForceCommand('airfoil vertical',un,ud,'airfoil','','',uf)bz:setEngineForceCommand('ground vertical',un,ud,'ground','','',uf)end elseif uy==axisCommandType.byTargetSpeed then if lJ<0 then bz:setEngineForceCommand('hover',vec3(),ud)end;local uz=bP:composeAxisAccelerationFromTargetSpeed(axisCommandId.vertical)ul=ul..' , '..us;um=um+uz end;if um:len()>constants.epsilon then if lF~=0 or uv or bF(u3:dot(dq))<0.5 then ul=ul..', brake'end;bz:setEngineForceCommand(ul,um,ue,'','','',uf)end end;local uA=aD*(u7-u6)local uB=vec3(bA.getWorldAirFrictionAngularAcceleration())uA=uA-uB;bz:setEngineTorqueCommand('torque',uA,ud,'airfoil','','',uf)bz:setBoosterCommand('rocket_engine')if fa and not i then local dC=iZ:len()local uC=0.15;if not cm then local uD=bP:getTargetSpeed(axisCommandId.longitudinal)if dC*3.6>uD*(1-uC)and pw then pw=false;bz:toggleBoosters()elseif dC*3.6<uD*(1-uC)and not pw then pw=true;bz:toggleBoosters()end else local mt=bB.getThrottle()if p then mt=iY*100 end;local mF=mt/100;if bJ==0 then mF=mF*V;if dC>=mF*(1-uC)and pw then pw=false;bz:toggleBoosters()elseif dC<mF*(1-uC)and not pw then pw=true;bz:toggleBoosters()end else local mS=bG(ey)mF=mF*mS/3.6;if dC>=mF*(1-uC)and pw then pw=false;bz:toggleBoosters()elseif dC<mF*(1-uC)and not pw then pw=true;bz:toggleBoosters()end end end end end;function script.onUpdate()if not t3 then local oS=coroutine.status(t4)if oS=="suspended"then local eu,oT=coroutine.resume(t4)if oT then bC.print("ERROR STARTUP: "..oT)end elseif oS=="dead"then t3=true end end;if t3 then bz:update()if not k7 and ka~=uE then bC.setScreen(ka)end;uE=ka end end;function script.onActionStart(p4)q3.startControl(p4)end;function script.onActionStop(p4)q3.stopControl(p4)end;function script.onActionLoop(p4)q3.loopControl(p4)end;function script.onInputText(nB)q3.inputTextControl(nB)end;function script.onEnter(oJ)if radar_1 and not d6 and not hM then bB.setTimer("contact",0.1)end end;function script.onLeave(oJ)if radar_1 and A then if#oM>650 then oJ=tostring(oJ)oM[oJ]=nil end end end;script.onStart()
         end,__wrap_lua__traceback) if not a then __wrap_lua__error(b) if not script then script = {} end end 
    stop:
      lua:       if not __wrap_lua__stopped and script.onStop then local a,b=xpcall(script.onStop,__wrap_lua__traceback,unit) if not a then __wrap_lua__error(b) end end
    tick(timerId):
      lua:       if not __wrap_lua__stopped and script.onTick then local a,b=xpcall(script.onTick,__wrap_lua__traceback,timerId,unit) if not a then __wrap_lua__error(b) end end
  system:
    actionStart(action):
      lua:       if not __wrap_lua__stopped and script.onActionStart then local a,b=xpcall(script.onActionStart,__wrap_lua__traceback,action,system) if not a then __wrap_lua__error(b) end end
    actionStop(action):
      lua:       if not __wrap_lua__stopped and script.onActionStop then local a,b=xpcall(script.onActionStop,__wrap_lua__traceback,action,system) if not a then __wrap_lua__error(b) end end
    actionLoop(action):
      lua:       if not __wrap_lua__stopped and script.onActionLoop then local a,b=xpcall(script.onActionLoop,__wrap_lua__traceback,action,system) if not a then __wrap_lua__error(b) end end
    update:
      lua:       if not __wrap_lua__stopped and script.onUpdate then local a,b=xpcall(script.onUpdate,__wrap_lua__traceback,system) if not a then __wrap_lua__error(b) end end
    flush:
      lua:       if not __wrap_lua__stopped and script.onFlush then local a,b=xpcall(script.onFlush,__wrap_lua__traceback,system) if not a then __wrap_lua__error(b) end end
    inputText(text):
      lua:       if not __wrap_lua__stopped and script.onInputText then local a,b=xpcall(script.onInputText,__wrap_lua__traceback,text,system) if not a then __wrap_lua__error(b) end end
  radar_1:
    enter(id):
      lua: |
        local radar = radar_1
              if not __wrap_lua__stopped and script.onEnter then local a,b=xpcall(script.onEnter,__wrap_lua__traceback,id,radar) if not a then __wrap_lua__error(b) end end
    leave(id):
      lua: |
        local radar = radar_1
              if not __wrap_lua__stopped and script.onLeave then local a,b=xpcall(script.onLeave,__wrap_lua__traceback,id,radar) if not a then __wrap_lua__error(b) end end
  radar_2:
    enter(id):
      lua: |
        local radar = radar_2
              if not __wrap_lua__stopped and script.onEnter then local a,b=xpcall(script.onEnter,__wrap_lua__traceback,id,radar) if not a then __wrap_lua__error(b) end end
    leave(id):
      lua: |
        local radar = radar_2
              if not __wrap_lua__stopped and script.onLeave then local a,b=xpcall(script.onLeave,__wrap_lua__traceback,id,radar) if not a then __wrap_lua__error(b) end end
