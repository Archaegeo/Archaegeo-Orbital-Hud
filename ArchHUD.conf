name: ArchHud - Archaegeo v1.5204 (Minified)
slots:
  core:
    class: CoreUnit
  radar:
    class: RadarPVPUnit
    select: manual
  antigrav:
    class: AntiGravityGeneratorUnit
  warpdrive:
    class: WarpDriveUnit
  gyro:
    class: GyroUnit
  weapon:
    class: WeaponUnit
    select: manual
  dbHud:
    class: databank
    select: manual
  telemeter:
    class: TelemeterUnit
    select: manual
  vBooster:
    class: VerticalBooster
  hover:
    class: Hovercraft
  door:
    class: DoorUnit
    select: manual
  switch:
    class: ManualSwitchUnit
    select: manual
  forcefield:
    class: ForceFieldUnit
    select: manual
  atmofueltank:
    class: AtmoFuelContainer
    select: manual
  spacefueltank:
    class: SpaceFuelContainer
    select: manual
  rocketfueltank:
    class: RocketFuelContainer
    select: manual
  shield:
    class: ShieldGeneratorUnit
    select: manual
handlers:
  unit:
    start:
      lua: |
        -- error handling code added by wrap.lua
        __wrap_lua__stopped = false
        __wrap_lua__stopOnError = false
        __wrap_lua__rethrowErrorAlways = false
        __wrap_lua__rethrowErrorIfStopped = true
        __wrap_lua__printError = true
        __wrap_lua__showErrorOnScreens = true
        
        function __wrap_lua__error (message)
          if __wrap_lua__stopped then return end
        
          -- make the traceback more readable and escape HTML syntax characters
          message = tostring(message):gsub('"%-%- |STDERROR%-EVENTHANDLER[^"]*"', 'chunk'):gsub("&", "&amp;"):gsub("<", "&lt;"):gsub(">", "&gt;")
        
          local unit = unit or self or {}
        
          if __wrap_lua__showErrorOnScreens then
            for _, value in pairs(unit) do
              if type(value) == "table" and value.setCenteredText and value.setHTML then -- value is a screen
                if message:match("\n") then
                  value.setHTML([[
        <pre style="color: white; background-color: black; font-family: Consolas,monospace; font-size: 4vh; white-space: pre-wrap; margin: 1em">
        Error: ]] .. message .. [[
        </pre>]])
                else
                  value.setCenteredText(message)
                end
              end
            end
          end
        
          if __wrap_lua__printError and system and system.print then
            system.print("Error: " .. message:gsub("\n", "<br>"))
          end
        
          if __wrap_lua__stopOnError then
            __wrap_lua__stopped = true
          end
        
          if __wrap_lua__stopped and unit and unit.exit then
            unit.exit()
          end
        
          if __wrap_lua__rethrowErrorAlways or (__wrap_lua__stopped and __wrap_lua__rethrowErrorIfStopped) then
            error(message)
          end
        end
        
        -- in case traceback is removed or renamed
        __wrap_lua__traceback = traceback or (debug and debug.traceback) or function (arg1, arg2) return arg2 or arg1 end
        
        local ok, message = xpcall(function ()
        
        -- script code
        
        local a=Navigator.new(system,core,unit)local b=require("atlas")script={}VERSION_NUMBER=1.5204;useTheseSettings=false;userControlScheme="virtual joystick"soundFolder="archHUD"freeLookToggle=true;BrakeToggleDefault=true;RemoteFreeze=false;RemoteHud=true;brightHud=false;VanillaRockets=false;InvertMouse=false;autoRollPreference=false;ExternalAGG=false;UseSatNav=false;ShouldCheckDamage=true;CalculateBrakeLandingSpeed=false;AtmoSpeedAssist=true;ForceAlignment=false;DisplayDeadZone=true;showHud=true;hideHudOnToggleWidgets=true;ShiftShowsRemoteButtons=true;SetWaypointOnExit=false;AlwaysVSpd=false;BarFuelDisplay=true;voices=true;alerts=true;CollisionSystem=true;AutoShieldToggle=true;PreventPvP=true;DisplayOdometer=true;YawStallAngle=35;PitchStallAngle=35;brakeLandingRate=30;MaxPitch=30;ReEntryPitch=-30;LockPitchTarget=0;AutopilotSpaceDistance=5000;TargetOrbitRadius=1.2;LowOrbitHeight=2000;AtmoSpeedLimit=1050;SpaceSpeedLimit=30000;AutoTakeoffAltitude=1000;TargetHoverHeight=50;LandingGearGroundHeight=0;ReEntryHeight=100000;MaxGameVelocity=8333.00;AutopilotInterplanetaryThrottle=1.0;warmup=32;fuelTankHandlingAtmo=0;fuelTankHandlingSpace=0;fuelTankHandlingRocket=0;ContainerOptimization=0;FuelTankOptimization=0;ResolutionX=1920;ResolutionY=1080;circleRad=400;SafeR=130;SafeG=224;SafeB=255;PvPR=255;PvPG=0;PvPB=0;centerX=960;centerY=540;throtPosX=1300;throtPosY=540;vSpdMeterX=1525;vSpdMeterY=325;altMeterX=550;altMeterY=540;fuelX=30;fuelY=700;shieldX=1750;shieldY=250;DeadZone=50;OrbitMapSize=250;OrbitMapX=0;OrbitMapY=25;soundVolume=100;speedChangeLarge=5;speedChangeSmall=1;MouseXSensitivity=0.003;MouseYSensitivity=0.003;autoRollFactor=2;rollSpeedFactor=1.5;autoRollRollThreshold=180;minRollVelocity=150;TrajectoryAlignmentStrength=0.002;torqueFactor=2;pitchSpeedFactor=0.8;yawSpeedFactor=1;brakeSpeedFactor=3;brakeFlatFactor=1;DampingMultiplier=40;apTickRate=0.0166667;hudTickRate=0.0666667;ExtraLongitudeTags="none"ExtraLateralTags="none"ExtraVerticalTags="none"BrakeToggleStatus=BrakeToggleDefault;VertTakeOffEngine=false;BrakeIsOn=false;RetrogradeIsOn=false;ProgradeIsOn=false;Autopilot=false;TurnBurn=false;AltitudeHold=false;BrakeLanding=false;AutoTakeoff=false;Reentry=false;VertTakeOff=false;HoldAltitude=1000;AutopilotAccelerating=false;AutopilotRealigned=false;AutopilotBraking=false;AutopilotCruising=false;AutopilotEndSpeed=0;AutopilotStatus="Aligning"AutopilotPlanetGravity=0;PrevViewLock=1;AutopilotTargetName="None"AutopilotTargetCoords=nil;AutopilotTargetIndex=0;GearExtended=nil;TotalDistanceTravelled=0.0;TotalFlightTime=0;SavedLocations={}VectorToTarget=false;LocationIndex=0;LastMaxBrake=0;LockPitch=nil;LastMaxBrakeInAtmo=0;AntigravTargetAltitude=1000;LastStartTime=0;SpaceTarget=false;LeftAmount=0;IntoOrbit=false;iphCondition="All"stablized=true;UseExtra="Off"LastVersionUpdate=0.000;saveRoute={}local c={"VertTakeOff","VertTakeOffEngine","SpaceTarget","BrakeToggleStatus","BrakeIsOn","RetrogradeIsOn","ProgradeIsOn","Autopilot","TurnBurn","AltitudeHold","BrakeLanding","Reentry","AutoTakeoff","HoldAltitude","AutopilotAccelerating","AutopilotBraking","AutopilotCruising","AutopilotRealigned","AutopilotEndSpeed","AutopilotStatus","AutopilotPlanetGravity","PrevViewLock","AutopilotTargetName","AutopilotTargetCoords","AutopilotTargetIndex","TotalDistanceTravelled","TotalFlightTime","SavedLocations","VectorToTarget","LocationIndex","LastMaxBrake","LockPitch","LastMaxBrakeInAtmo","AntigravTargetAltitude","LastStartTime","iphCondition","stablized","UseExtra","SelectedTab","saveRoute"}local d=math.abs;local e=math.floor;local f=string.format;local g=json.decode;local h=json.encode;local j=core.getElementMaxHitPointsById;local k=unit.getAtmosphereDensity;local l=core.getElementMassById;local m=a.control.isRemoteControlled;local n=math.atan;local o=string.match;local q=system.getTime;local vec3=vec3;local r=utils.clamp;local s=a.axisCommandManager;local t=system.destroyWidgetPanel;local u=system.updateData;local v=system.addDataToWidget;local w=system.lockView;local x=system.isViewLocked;local y=math.sqrt;local z=tonumber;local core=core;local function A(B,C)local D=10^(C or 0)return e(B*D+0.5)/D end;local E=q()local F=q()local G=13;local H=SafeR;local I=SafeB;local J=SafeG;local K=0;local L=0;local M=false;local N=0;local O=false;local P=false;local Q=55;local R=false;local S=false;local T=0;local U=0;local V=0;local W=0;local X=0;local Y=0;local Z=0;local a0=false;local a1=false;local a2="empty"local a3=false;local a4=0;local a5=0;local a6=0;local a7=0;local a8=nil;local a9=0;local aa=0;local ab=0;local ac=0;local ad=0;local ae=3;local af=0;local ag=""local ah=false;local ai=false;local aj=false;local ak=-1;local al=""local am=k()>0;local an=k()local ao=core.getAltitude()local ap=core.getElementIdList()local aq=q()local ar=core.getConstructMass()local as=false;local at=nil;local au=[[rgb(]]..e(H+0.5)..","..e(J+0.5)..","..e(I+0.5)..[[)]]local av=[[rgb(]]..e(H*0.9+0.5)..","..e(J*0.9+0.5)..","..e(I*0.9+0.5)..[[)]]local aw={}local ax=""local ay=ResolutionX;local az=ResolutionY;local aA={}local aB={}local aC={}local aD=0;local aE=false;local aF=nil;local aG=nil;local aH=nil;local aI=nil;local aJ=nil;local aK=nil;local aL=nil;local aM=nil;local aN=nil;local aO=nil;local aP=false;local aQ=false;local aR=autoRollPreference;local aS=LandingGearGroundHeight;local aT=false;local aU=0;local aV=AtmoSpeedLimit;local aW=0;local aX=nil;local aY={VectorToTarget=false}local aZ=0;local a_=false;local b0=false;local b1=false;local b2=false;local b3=vec3(core.getConstructWorldOrientationUp())local b4=vec3(core.getConstructWorldOrientationForward())local b5=vec3(core.getConstructWorldOrientationRight())local b6=vec3(core.getVelocity())local b7=vec3(core.getWorldVelocity())local b8=vec3(b7):len()local b9=vec3(core.getWorldVertical())local ba=-b9:dot(b7)local bb=vec3(core.getConstructWorldPos())local bc=false;local bd=false;local be=nil;local bf=true;local bg=0;local bh=0;local bi={}local bj=false;local bk=50000;local bl=nil;local bm={}local bn=unit.getClosestPlanetInfluence()>0 or ao>0 and ao<200000;local bo=false;local bp=nil;local bq=false;local br=0;local bs={}local bt=nil;local bu=nil;local bv={}local bw=90;local bx=showHud;function p(by)system.print(E..": "..by)end;local function bz(bA)local D=1;if bA then D=-1 end;if not a1 then if AtmoSpeedAssist and not AltIsOn and as then local bB=K;K=A(r(K+D*speedChangeLarge/100,-1,1),2)if K>=0 and bB<0 then K=0;as=false end elseif AltIsOn then if an>0 or Reentry then aV=r(aV+D*speedChangeLarge,0,AtmoSpeedLimit)elseif Autopilot then MaxGameVelocity=r(MaxGameVelocity+D*speedChangeLarge/3.6*100,0,8333.00)end else s:updateCommandFromActionStart(axisCommandId.longitudinal,D*speedChangeLarge)end else if Autopilot or VectorToTarget or ai or IntoOrbit then br=br+1*D*-1;if br>#bi then br=1 end;if br<1 then br=#bi end else if not bA then D=1 else D=nil end;aL.adjustAutopilotTargetIndex(D)end end end;local function bC(bD,bE,type)if type==nil and not voices or type~=nil and not alerts or soundFolder=="archHUD"then return end;if type~=nil then if type==2 then system.logInfo("sound_loop|audiopacks/"..soundFolder.."/"..bD.."|"..bE.."|"..soundVolume)else system.logInfo("sound_notification|audiopacks/"..soundFolder.."/"..bD.."|"..bE.."|"..soundVolume)end else system.logInfo("sound_q|audiopacks/"..soundFolder.."/"..bD.."|"..bE.."|"..soundVolume)end end;local function bF(bG,bH)for i=1,#bH do bG[#bG+1]=bH[i]end;return bG end;local function bI(bJ)local bK={}local bL={"userControlScheme","soundFolder","freeLookToggle","BrakeToggleDefault","RemoteFreeze","brightHud","RemoteHud","VanillaRockets","InvertMouse","autoRollPreference","ExternalAGG","UseSatNav","ShouldCheckDamage","CalculateBrakeLandingSpeed","AtmoSpeedAssist","ForceAlignment","DisplayDeadZone","showHud","hideHudOnToggleWidgets","ShiftShowsRemoteButtons","SetWaypointOnExit","AlwaysVSpd","BarFuelDisplay","voices","alerts","CollisionSystem","AutoShieldToggle","PreventPvP","DisplayOdometer"}local bM={"YawStallAngle","PitchStallAngle","brakeLandingRate","MaxPitch","ReEntryPitch","LockPitchTarget","AutopilotSpaceDistance","TargetOrbitRadius","LowOrbitHeight","AtmoSpeedLimit","SpaceSpeedLimit","AutoTakeoffAltitude","TargetHoverHeight","LandingGearGroundHeight","ReEntryHeight","MaxGameVelocity","AutopilotInterplanetaryThrottle","warmup","fuelTankHandlingAtmo","fuelTankHandlingSpace","fuelTankHandlingRocket","ContainerOptimization","FuelTankOptimization"}local bN={"ResolutionX","ResolutionY","circleRad","SafeR","SafeG","SafeB","PvPR","PvPG","PvPB","centerX","centerY","throtPosX","throtPosY","vSpdMeterX","vSpdMeterY","altMeterX","altMeterY","fuelX","fuelY","shieldX","shieldY","DeadZone","OrbitMapSize","OrbitMapX","OrbitMapY","soundVolume"}local bO={"speedChangeLarge","speedChangeSmall","MouseXSensitivity","MouseYSensitivity","autoRollFactor","rollSpeedFactor","autoRollRollThreshold","minRollVelocity","TrajectoryAlignmentStrength","torqueFactor","pitchSpeedFactor","yawSpeedFactor","brakeSpeedFactor","brakeFlatFactor","DampingMultiplier","apTickRate","hudTickRate","ExtraLongitudeTags","ExtraLateralTags","ExtraVerticalTags"}if not bJ then bF(bK,bL)bF(bK,bM)bF(bK,bN)bF(bK,bO)return bK elseif bJ=="boolean"then return bL elseif bJ=="handling"then return bM elseif bJ=="hud"then return bN elseif bJ=="physics"then return bO end end;local function bP(bQ,bR,bS,bT,bU)if bT==nil then bT=""end;if bU==nil then bU=""end;return f([[<text class="%s" x=%s y=%s style="%s">%s</text>]],bT,bQ,bR,bU,bS)end;local function bV(bW,bX)if bW==0 then return d(bX)<1e-09 end;if bX==0 then return d(bW)<1e-09 end;return d(bW-bX)<math.max(d(bW),d(bX))*epsilon end;local function bY(af,bZ)local b_=af>100000;if bZ==nil then bZ=1 end;if b_ then return A(af/1000/200,bZ).."SU"elseif af<1000 then return A(af,bZ).."M"else return A(af/1000,bZ).."KM"end end;local function c0(c1)local c2=0;local c3=0;local c4=0;if c1<60 then c1=e(c1)elseif c1<3600 then c2=e(c1/60)c1=e(c1%60)elseif c1<86400 then c3=e(c1/3600)c2=e(c1%3600/60)else c4=e(c1/86400)c3=e(c1%86400/3600)end;if c4>0 then return c4 .."d "..c3 .."h "elseif c3>0 then return c3 .."h "..c2 .."m "elseif c2>0 then return c2 .."m "..c1 .."s"elseif c1>0 then return c1 .."s"else return"0s"end end;local function c5(c6)local function c7(c8)for c9,ca in pairs(c8)do dbHud_1.setStringValue(ca,h(_G[ca]))if c6 and dbHud_2 then dbHud_2.setStringValue(ca,h(_G[ca]))end end end;if dbHud_1 then c7(c)c7(bI())system.print("Saved Variables to Datacore")if c6 and dbHud_2 then a2="Databank copied.  Remove copy when ready."end end end;local function cb()local function cc(cd)return type(cd)=='number'end;local function ce(cd)return type(z(cd))=='number'end;local function cf(cg)return type(cg)=='table'end;local function ch(ci)return type(ci)=='string'end;local function cj(ca)return cf(ca)and cc(ca.x and ca.y and ca.z)end;local function ck(cl)return cf(cl)and cc(cl.latitude and cl.longitude and cl.altitude and cl.id and cl.systemId)end;local cm=math.pi/180;local cn=180/math.pi;local epsilon=1e-10;local B=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local co='::pos{'..B..','..B..','..B..','..B..','..B..'}'local utils=require('cpml.utils')local vec3=require('cpml.vec3')local function cp(cd)local cq=string.gsub(string.reverse(f('%.4f',cd)),'^0*%.?','')return cq==''and'0'or string.reverse(cq)end;local function cr(cs)if cj(cs)then return f('{x=%.3f,y=%.3f,z=%.3f}',cs.x,cs.y,cs.z)end;if cf(cs)and not getmetatable(cs)then local ct={}local cu=next(cs)if type(cu)=='nil'or cu==1 then ct=cs else for c9,ca in pairs(cs)do local cv=cr(ca)if type(c9)=='number'then table.insert(ct,f('[%s]=%s',c9,cv))else table.insert(ct,f('%s=%s',c9,cv))end end end;return f('{%s}',table.concat(ct,','))end;if ch(cs)then return f("'%s'",cs:gsub("'",[[\']]))end;return tostring(cs)end;local cw={}cw.__index=cw;cw.__tostring=function(cs,cx)local cy={}for c9 in pairs(cs)do table.insert(cy,c9)end;table.sort(cy)local ct={}for _,c9 in ipairs(cy)do local cv=cr(cs[c9])if type(c9)=='number'then table.insert(ct,f('[%s]=%s',c9,cv))else table.insert(ct,f('%s=%s',c9,cv))end end;if cx then return f('%s%s',cx,table.concat(ct,',\n'..cx))end;return f('{%s}',table.concat(ct,','))end;cw.__eq=function(cz,cA)return cz.systemId==cA.systemId and cz.id==cA.id and bV(cz.radius,cA.radius)and bV(cz.center.x,cA.center.x)and bV(cz.center.y,cA.center.y)and bV(cz.center.z,cA.center.z)and bV(cz.GM,cA.GM)end;local function cB(cC,cD,cE,cF,cG)assert(ce(cC),'Argument 1 (systemId) must be a number:'..type(cC))assert(ce(cD),'Argument 2 (id) must be a number:'..type(cD))assert(ce(cE),'Argument 3 (radius) must be a number:'..type(cE))assert(cf(cF),'Argument 4 (worldCoordinates) must be a array or vec3.'..type(cF))assert(ce(cG),'Argument 5 (GM) must be a number:'..type(cG))return setmetatable({systemId=z(cC),id=z(cD),radius=z(cE),center=vec3(cF),GM=z(cG)},cw)end;local MapPosition={}MapPosition.__index=MapPosition;MapPosition.__tostring=function(p)return f('::pos{%d,%d,%s,%s,%s}',p.systemId,p.id,cp(p.latitude*cn),cp(p.longitude*cn),cp(p.altitude))end;MapPosition.__eq=function(cz,cA)return cz.id==cA.id and cz.systemId==cA.systemId and bV(cz.latitude,cA.latitude)and bV(cz.altitude,cA.altitude)and(bV(cz.longitude,cA.longitude)or bV(cz.latitude,math.pi/2)or bV(cz.latitude,-math.pi/2))end;local function cH(cI,cD,cJ,cK,cL)local cC=cI;if ch(cI)and not cK and not cL and not cD and not cJ then cC,cD,cJ,cK,cL=o(cI,co)assert(cC,'Argument 1 (position string) is malformed.')else assert(ce(cC),'Argument 1 (systemId) must be a number:'..type(cC))assert(ce(cD),'Argument 2 (id) must be a number:'..type(cD))assert(ce(cJ),'Argument 3 (latitude) must be in degrees:'..type(cJ))assert(ce(cK),'Argument 4 (longitude) must be in degrees:'..type(cK))assert(ce(cL),'Argument 5 (altitude) must be in meters:'..type(cL))end;cC=z(cC)cD=z(cD)cJ=z(cJ)cK=z(cK)cL=z(cL)if cD==0 then return setmetatable({latitude=cJ,longitude=cK,altitude=cL,id=cD,systemId=cC},MapPosition)end;return setmetatable({latitude=cm*r(cJ,-90,90),longitude=cm*(cK%360),altitude=cL,id=cD,systemId=cC},MapPosition)end;local cM={}cM.__index=cM;cM.__tostring=function(cs,cx)local cN=cx and cx..'  'local cO={}local cy={}for c9 in pairs(cs)do table.insert(cy,c9)end;table.sort(cy)for _,cP in ipairs(cy)do bdy=cs[cP]local cQ=cw.__tostring(bdy,cN)if cx then table.insert(cO,f('[%s]={\n%s\n%s}',cP,cQ,cx))else table.insert(cO,f('  [%s]=%s',cP,cQ))end end;if cx then return f('\n%s%s%s',cx,table.concat(cO,',\n'..cx),cx)end;return f('{\n%s\n}',table.concat(cO,',\n'))end;local function cR(cS)local b={}local pid;for _,ca in pairs(cS)do local cD=ca.planetarySystemId;if type(cD)~='number'then error('Invalid planetary system ID: '..tostring(cD))elseif pid and cD~=pid then error('Mistringmatch planetary system IDs: '..cD..' and '..pid)end;local cT=ca.bodyId;if type(cT)~='number'then error('Invalid body ID: '..tostring(cT))elseif b[cT]then error('Duplicate body ID: '..tostring(cT))end;setmetatable(ca.center,getmetatable(vec3.unit_x))b[cT]=setmetatable(ca,cw)pid=cD end;return setmetatable(b,cM)end;aF={}local function cU(cS)return setmetatable({galaxyAtlas=cS or{}},aF)end;aF.__index=function(cg,i)if type(i)=='number'then local system=cg.galaxyAtlas[i]return cR(system)end;return rawget(aF,i)end;aF.__pairs=function(cs)return function(cg,c9)local cV,nv=next(cg,c9)return cV,nv and cR(nv)end,cs.galaxyAtlas,nil end;aF.__tostring=function(cs)local cW={}for _,cX in pairs(cs or{})do local cY=cX:getPlanetarySystemId()local cZ=cM.__tostring(cX,'    ')table.insert(cW,f('  [%s]={%s\n  }',cY,cZ))end;return f('{\n%s\n}\n',table.concat(cW,',\n'))end;aF.BodyParameters=cB;aF.MapPosition=cH;aF.PlanetarySystem=cR;function aF.createBodyParameters(cC,cD,c_,d0,d1,d2,d3)assert(ce(cC),'Argument 1 (systemId) must be a number:'..type(cC))assert(ce(cD),'Argument 2 (id) must be a number:'..type(cD))assert(ce(c_),'Argument 3 (surfaceArea) must be a number:'..type(c_))assert(cf(d0),'Argument 4 (aPosition) must be an array or vec3:'..type(d0))assert(cf(d1),'Argument 5 (verticalAtPosition) must be an array or vec3:'..type(d1))assert(ce(d2),'Argument 6 (altitude) must be in meters:'..type(d2))assert(ce(d3),'Argument 7 (gravityAtPosition) must be number:'..type(d3))local cE=y(c_/4/math.pi)local af=cE+d2;local d4=vec3(d0)+af*vec3(d1)local cG=d3*af*af;return cB(cC,cD,cE,d4,cG)end;aF.isMapPosition=ck;function aF:getPlanetarySystem(cI)if i==nil then i=0 end;if nv==nil then nv=0 end;local cC=cI;if ck(cI)then cC=cI.systemId end;if type(cC)=='number'then local system=self.galaxyAtlas[i]if system then if getmetatable(nv)~=cM then system=cR(system)end;return system end end end;function cM:sizeCalculator(d5)return 1.05*d5.radius end;function cM:castIntersections(d6,d7,d8,d9,da,db)local dc={}if da then for _,d5 in pairs(da)do table.insert(dc,d5)end else dc=bv end;if not db then table.sort(dc,function(dd,de)local bW=dd.center;local bX=de.center;return(bW.x-d6.x)^2+(bW.y-d6.y)^2+(bW.z-d6.z)^2<(bX.x-d6.x)^2+(bX.y-d6.y)^2+(bX.z-d6.z)^2 end)end;local df=d7:normalize()for _,d5 in ipairs(dc)do local dg=d5.center-d6;local cE=self:sizeCalculator(d5)local dh=dg:dot(df)local di=dh^2-(dg:len2()-cE^2)if di>=0 then local dj=y(di)local dk=dh+dj;local dl=dh-dj;if dl>0 then return d5,dk,dl elseif dk>0 then return d5,dk,nil end end end;return nil,nil,nil end;function cM:closestBody(dm)assert(type(dm)=='table','Invalid coordinates.')local dn,d5;local dp=vec3(dm)for _,dq in pairs(self)do local dr=(dq.center-dp):len2()if(not d5 or dr<dn)and dq.name~="Space"then d5=dq;dn=dr end end;return d5 end;function cM:convertToBodyIdAndWorldCoordinates(cI)local ds=cI;if ch(cI)then ds=cH(cI)end;if ds.id==0 then return 0,vec3(ds.latitude,ds.longitude,ds.altitude)end;local dq=self:getBodyParameters(ds)if dq then return ds.id,dq:convertToWorldCoordinates(ds)end end;function cM:getBodyParameters(cI)local cD=cI;if ck(cI)then cD=cI.id end;assert(ce(cD),'Argument 1 (id) must be a number:'..type(cD))return self[cD]end;function cM:getPlanetarySystemId()local _,ca=next(self)return ca and ca.systemId end;function cw:convertToMapPosition(cF)assert(cf(cF),'Argument 1 (worldCoordinates) must be an array or vec3:'..type(cF))local dt=vec3(cF)if self.id==0 then return setmetatable({latitude=dt.x,longitude=dt.y,altitude=dt.z,id=0,systemId=self.systemId},MapPosition)end;local du=dt-self.center;local af=du:len()local cL=af-self.radius;local cJ=0;local cK=0;if not bV(af,0)then local dv=n(du.y,du.x)cK=dv>=0 and dv or 2*math.pi+dv;cJ=math.pi/2-math.acos(du.z/af)end;return setmetatable({latitude=cJ,longitude=cK,altitude=cL,id=self.id,systemId=self.systemId},MapPosition)end;function cw:convertToWorldCoordinates(cI)local ds=ch(cI)and cH(cI)or cI;if ds.id==0 then return vec3(ds.latitude,ds.longitude,ds.altitude)end;assert(ck(ds),'Argument 1 (mapPosition) is not an instance of "MapPosition".')assert(ds.systemId==self.systemId,'Argument 1 (mapPosition) has a different planetary system ID.')assert(ds.id==self.id,'Argument 1 (mapPosition) has a different planetary body ID.')local dw=math.cos(ds.latitude)return self.center+(self.radius+ds.altitude)*vec3(dw*math.cos(ds.longitude),dw*math.sin(ds.longitude),math.sin(ds.latitude))end;function cw:getAltitude(cF)return(vec3(cF)-self.center):len()-self.radius end;function cw:getDistance(cF)return(vec3(cF)-self.center):len()end;function cw:getGravity(cF)local dx=self.center-vec3(cF)local dy=dx:len2()return self.GM/dy*dx/y(dy)end;return setmetatable(aF,{__call=function(_,...)return cU(...)end})end;local function dz()local aH={}local dA=30000000/3600;local dB=dA*dA;local dC=100;function aH.computeAccelerationTime(dD,dE,dF)local dG=dA*math.asin(dD/dA)return(dA*math.asin(dF/dA)-dG)/dE end;function aH.computeDistanceAndTime(dD,dF,dH,dI,dJ,dK)dJ=dJ or 0;dK=dK or 0;local dL=dD<=dF;local dM=dI*(dL and 1 or-1)/dH;local dN=-dK/dH;local dO=dM+dN;if dL and dO<=0 or not dL and dO>=0 then return-1,-1 end;local dP,dQ=0,0;if dM~=0 and dJ>0 then local dG=math.asin(dD/dA)local dR=math.pi*(dM/2+dN)local dS=dM*dJ;local dT=dA*math.pi;local ca=function(cg)local dU=(dR*cg-dS*math.sin(math.pi*cg/2/dJ)+dT*dG)/dT;local dV=math.tan(dU)return dA*dV/y(dV*dV+1)end;local dW=dL and function(ci)return ci>=dF end or function(ci)return ci<=dF end;dQ=2*dJ;if dW(ca(dQ))then local dX=0;while d(dQ-dX)>0.5 do local cg=(dQ+dX)/2;if dW(ca(cg))then dQ=cg else dX=cg end end end;local dY=dD;local dZ=dQ/dC;for d_=1,dC do local e0=ca(d_*dZ)dP=dP+(e0+dY)*dZ/2;dY=e0 end;if dQ<2*dJ then return dP,dQ end;dD=dY end;local dG=dA*math.asin(dD/dA)local E=(dA*math.asin(dF/dA)-dG)/dO;local e1=dB*math.cos(dG/dA)/dO;local af=e1-dB*math.cos((dO*E+dG)/dA)/dO;return af+dP,E+dQ end;function aH.computeTravelTime(dD,dE,af)if af==0 then return 0 end;if dE>0 then local dG=dA*math.asin(dD/dA)local e1=dB*math.cos(dG/dA)/dE;return(dA*math.acos(dE*(e1-af)/dB)-dG)/dE end;if dD==0 then return-1 end;assert(dD>0,'Acceleration and initial speed are both zero.')return af/dD end;return aH end;local function e2()local vec3=require('cpml.vec3')local cb=cb()local function ch(ci)return type(ci)=='string'end;local function cf(cg)return type(cg)=='table'end;Kepler={}Kepler.__index=Kepler;function Kepler:escapeAndOrbitalSpeed(cL)assert(self.body)local af=cL+self.body.radius;if not bV(af,0)then local orbit=y(self.body.GM/af)return y(2)*orbit,orbit end;return nil,nil end;function Kepler:orbitalParameters(cI,e3)assert(self.body)assert(cf(cI)or ch(cI))assert(cf(e3))local e4=(ch(cI)or cb.isMapPosition(cI))and self.body:convertToWorldCoordinates(cI)or vec3(cI)local ca=vec3(e3)local e5=e4-self.body.center;local e6=ca:len2()local e7=e5:len()local e8=self.body.GM;local e9=((e6-e8/e7)*e5-e5:dot(ca)*ca)/e8;local bW=e8/(2*e8/e7-e6)local ea=e9:len()local df=e9:normalize()local eb=bW*(1-ea)local ec=bW*(1+ea)local ed=eb*df+self.body.center;local ee=ea<=1 and-ec*df+self.body.center or nil;local ef=y(bW*e8*(1-ea*ea))local eg=ee and 2*math.pi*y(bW^3/e8)local eh=math.acos(e9:dot(e5)/(ea*e7))if e5:dot(ca)<0 then eh=-(eh-2*math.pi)end;local ei=math.acos((math.cos(eh)+ea)/(1+ea*math.cos(eh)))local ej=ei;if ej<0 then ej=ej+2*math.pi end;local ek=ej-ea*math.sin(ej)local el=0;local em=0;local en=0;if eg~=nil then el=ek/(2*math.pi/eg)em=eg-el;en=em+eg/2;if eh-math.pi>0 then em=el;en=em+eg/2 end;if en>eg then en=en-eg end end;return{periapsis={position=ed,speed=ef/eb,circularOrbitSpeed=y(e8/eb),altitude=eb-self.body.radius},apoapsis=ee and{position=ee,speed=ef/ec,circularOrbitSpeed=y(e8/ec),altitude=ec-self.body.radius},currentVelocity=ca,currentPosition=e4,eccentricity=ea,period=eg,eccentricAnomaly=ei,meanAnomaly=ek,timeToPeriapsis=em,timeToApoapsis=en,trueAnomaly=eh}end;local function eo(ep)local dq=cb.BodyParameters(ep.systemId,ep.id,ep.radius,ep.center,ep.GM)return setmetatable({body=dq},Kepler)end;return setmetatable(Kepler,{__call=function(_,...)return eo(...)end})end;local function eq()local er={}local es={}local et={XS=13,S=27,M=55,L=110,XL=221}local eu={}local ev;local ew;local ex;local ey;local ez;local eA={}local eB="Atmo"local eC;local function eD()local function eE(eF,eG,eH,eI,eJ,eK,eL,eM)eG,eI,eK,eM=vec3(eG),vec3(eI),vec3(eK),vec3(eM)local eN,eO,eP=eF*eF,eH*eH,eJ*eJ;local e6=eI-eG;local eQ=e6:normalize()local eR=e6:len()local eS=eK-eG;local eT=(eS-eS:project_on(eQ)):normalize()local eU,eV=eS:dot(eQ),eS:dot(eT)local eW=eU*eU+eV*eV;local eX=eQ:cross(eT)local bQ=(eN-eO+eR*eR)/(2*eR)local bR=(eN-eP+eW-2*eU*bQ)/(2*eV)local cl=eN-bQ^2-bR^2;local eY=y(cl)local eZ=eG+eQ*bQ+eT*bR+eX*eY;local e_=eG+eQ*bQ+eT*bR-eX*eY;if d((eM-eZ):len()-eL)<d((eM-e_):len()-eL)then return eZ else return e_ end end;local function f0()local function f1()local f2=core.getConstructWorldOrientationRight()local e6=core.getConstructWorldOrientationForward()local eS=core.getConstructWorldOrientationUp()local f3=library.systemResolution3(f2,e6,eS,{1,0,0})local f4=library.systemResolution3(f2,e6,eS,{0,1,0})local f5=library.systemResolution3(f2,e6,eS,{0,0,1})return function(f6)return library.systemResolution3(f3,f4,f5,f6)end end;local f7=f1()local f8=core.getConstructWorldPos()local e4=core.getElementPositionById(1)local f9={e4[1],e4[2],e4[3]}local fa=f7(f9)local fb={f8[1]-fa[1],f8[2]-fa[2],f8[3]-fa[3]}return fb end;local function fc(fd,e7,fe)local ff=fd.pts;local fg=#ff;local fh=fd.ref;if fg>3 then local fi,fj,fk,fl=ff[fg],ff[fg-1],ff[fg-2],ff[fg-3]fd.ref=fe;local e4=eE(fi[1],fi[2],fj[1],fj[2],fk[1],fk[2],fl[1],fl[2])local bQ,bR,eY=e4.x,e4.y,e4.z;if bQ==bQ and bR==bR and eY==eY then bQ=bQ+fh[1]bR=bR+fh[2]eY=eY+fh[3]local fm=vec3(bQ,bR,eY)if not fd.lastPos then fd.center=fm elseif(fd.lastPos-fm):len()<2 then fd.center=fm;fd.skipCalc=true end;fd.lastPos=fm end;fd.pts={}else local fn={fe[1]-fh[1],fe[2]-fh[2],fe[3]-fh[3]}ff[fg+1]={e7,fn}end end;if radar_1 or radar_2 then aN.assignRadar()end;if eA[1]then ev=#eA[1].getConstructIds()local fo=eA[1].getData()local fp=fo:gmatch('{"constructId[^}]*}[^}]*}')if ev>0 then local fe=f0()local fq,fr=0,0;ez,ey=0,0;for ca in fp do local cD,af,fs=ca:match([[{"constructId":"([%d%.]*)","distance":([%d%.]*).-"size":"(%a+)"]])local ft=et[fs]af=z(af)if eA[1].hasMatchingTransponder(cD)==1 then table.insert(es,cD)end;local fu=eA[1].getConstructType(cD)if CollisionSystem then if ft>27 or fu=="static"or fu=="space"then ez=ez+1;local fv=eA[1].getConstructName(cD)local fd=bm[cD]if fd==nil then ft=ft+G;bm[cD]={pts={},ref=fe,name=fv,i=0,radius=ft,skipCalc=false}fd=bm[cD]end;if not fd.skipCalc then fc(fd,af,fe)fr=fr+1 end;if fd.center then table.insert(eu,fd)end end;fq=fq+1;if bn and fq>700 or fr>70 or(not bn and fq>300 or fr>30)then coroutine.yield()fq,fr=0,0 end end end;ey=#eu;if ey>0 and b8>20 then local d5,fw,fx,fy;local fz=0;local fA=aG:getPlanetarySystem(0)fy=b7:normalize()while fz<ey do coroutine.yield()local fB={table.unpack(eu,fz,math.min(fz+75,ey))}d5,fw,fx=fA:castIntersections(bb,fy,nil,nil,fB,true)if d5 and fx then bp={d5,fw,fx}break end;fz=fz+75 end;if not d5 then bp=nil end else bp=nil end;eu={}ew=fo:find('identifiedConstructs":%[%]')else ex=fo:find('worksInEnvironment":false')end end end;local function fC()if eA[1]then eB="Atmo"if eA[1].getData():find('worksInAtmosphere":false')then eB="Space"end end end;function er.pickType()fC()end;function er.assignRadar()if radar_1 and eA[1]==radar_1 and radar_1.isOperational()~=1 then if radar_2 and radar_2.isOperational()==1 then eA[1]=radar_2 end;if eA[1]==radar_2 then fC()end elseif radar_2 and eA[1]==radar_2 and radar_2.isOperational()~=1 then if radar_1 and radar_1.isOperational()==1 then eA[1]=radar_1 end;if eA[1]==radar_1 then fC()end end end;function er.UpdateRadar()local fD=coroutine.status(eC)if fD=="suspended"then local cv,fE=coroutine.resume(eC)if fE then system.print("ERROR UPDATE RADAR: "..fE)end elseif fD=="dead"then eC=coroutine.create(eD)local cv,fE=coroutine.resume(eC)end end;function er.GetRadarHud(fF,fG,fH,fI)local fJ=es;local fK,by;es={}local B=ey or 0;if ev>0 then if CollisionSystem then by=B.."/"..ez.." Plotted : "..ev-ez.." Ignored"else by="Radar Contacts: "..ev end;fK=bP(fH,fI,by,"pbright txtbig txtmid")if#es>0 then fK=fK..bP(fF,fG,"Friendlies In Range","pbright txtbig txtmid")for c9,ca in pairs(es)do fG=fG+20;fK=fK..bP(fF,fG,eA[1].getConstructName(ca),"pdim txtmid")end end;if ew==nil and perisPanelID==nil then peris=1;aN.ToggleRadarPanel()end;if ew~=nil and perisPanelID~=nil then aN.ToggleRadarPanel()end;if radarPanelID==nil then aN.ToggleRadarPanel()end else if ex then fK=bP(fH,fI,eB.." Radar: Jammed","pbright txtbig txtmid")else fK=bP(fH,fI,"Radar: No "..eB.." Contacts","pbright txtbig txtmid")end;if radarPanelID~=nil then peris=0;aN.ToggleRadarPanel()end end;return fK end;function er.GetClosestName(fv)if eA[1]then local cD,_=eA[1].getData():match('"constructId":"([0-9]*)","distance":([%d%.]*)')if cD~=nil and cD~=""then fv=fv.." "..eA[1].getConstructName(cD)end end;return fv end;function er.ToggleRadarPanel()if radarPanelID~=nil and peris==0 then t(radarPanelID)radarPanelID=nil;if perisPanelID~=nil then t(perisPanelID)perisPanelID=nil end else if peris==1 then t(radarPanelID)radarPanelID=nil;_autoconf.displayCategoryPanel(eA,1,"Periscope","periscope")perisPanelID=_autoconf.panels[_autoconf.panels_size]end;if radarPanelID==nil then _autoconf.displayCategoryPanel(eA,1,"Radar","radar")radarPanelID=_autoconf.panels[_autoconf.panels_size]end;peris=0 end end;eA[1]=nil;if radar_1 then eA[1]=radar_1;fC()end;eC=coroutine.create(eD)return er end;local function fL()local fM=9.80665;local fN={}local fO={}local fP={}local bs={}local fQ=nil;local fR=nil;local fS=nil;local fT=false;local fU={}local fV=""local fW=vec3({13771471,7435803,-128971})local fX=18000000;local fY=500000;local fZ,f_=math.huge;local g0;local function g1(g2)fZ=vec3(g2):dist(fW)if fZ<fX then return true,d(fZ-fX)end;f_=vec3(g2):dist(vec3(planet.center))if f_<fY then g0=true else g0=false end;if d(f_-fY)<d(fZ-fX)then return g0,d(f_-fY)else return g0,d(fZ-fX)end end;local function g3(ca)if ay==1920 then return ca else return A(ay*ca/1920,0)end end;local function g4(ca)if az==1080 then return ca else return A(az*ca/1080,0)end end;local function g5()return x()==0 and userControlScheme~="keyboard"and m()==0 end;local function g6()local g7="TRAVEL"if not bf then g7="CRUISE"end;if Autopilot then g7="AUTOPILOT"end;return g7 end;local g8={Generic_Moon="assets.prod.novaquark.com/20368/f410e727-9d4d-4eab-98bf-22994b3fbdcf.png",Sun="assets.prod.novaquark.com/20368/0936494e-9b3d-4d60-9ea0-d93a3f3e29cd.png",Alioth="assets.prod.novaquark.com/20368/954f3adb-3369-4ea9-854d-a14606334152.png",Alioth_bis="assets.prod.novaquark.com/20368/b83225ed-fb96-404c-8c91-86ac15dfbbec.png",Sanctuary="assets.prod.novaquark.com/20368/1a70dbff-24bc-44cb-905c-6d375d9613b8.png",Feli="assets.prod.novaquark.com/20368/da91066c-b3fd-41f4-8c01-26131b0a7841.png",Ion="assets.prod.novaquark.com/20368/91d10712-dc51-4b73-9fc0-6f07d96605a6.png",Madis="assets.prod.novaquark.com/20368/46d57ef4-40ee-46ca-8cc5-5aee1504bbfe.png",Jago="assets.prod.novaquark.com/20368/7fca8389-6b70-4198-a9c3-4875d15edb38.png",Lacobus="assets.prod.novaquark.com/20368/cb67a6a4-933c-4688-a637-898c89eb5b94.png",Sicari="assets.prod.novaquark.com/20368/f6e2f801-075f-4ccd-ab94-46d060517e8f.png",Sinnen="assets.prod.novaquark.com/20368/54a99084-7c2b-461b-ab1f-ae4229b3b821.png",Symeon="assets.prod.novaquark.com/20368/97940324-f194-4e03-808d-d71733ad545a.png",Talemai="assets.prod.novaquark.com/20368/f68628d9-3245-4d76-968e-ad9c63a19c19.png",Teoma="assets.prod.novaquark.com/20368/5a01dd8c-3cf8-4151-99a2-83b22f1e7249.png",Thades="assets.prod.novaquark.com/20368/59f997a2-bcca-45cf-aa35-26e0e41ed5c1.png"}local fK=""local g9=""local ga=""local gb=1;local gc=2;local gd=3;local ge=4;local gf=5;local gg=6;local gh=""local gi=0;local gj=e(1/apTickRate)*2*hudTickRate;local gk={}local gl={}local gm={}local gn={}local go={}local gp={}local function gq(bQ,gr,gs,gt,gu,gv)local gw=tankY;local gx=tankY+5;if not BarFuelDisplay then gx=gx+5 end;if m()==1 and not RemoteHud then gw=gw-50;gx=gx-50 end;if gs=="ATMO"then gh="atmofueltank"elseif gs=="SPACE"then gh="spacefueltank"else gh="rocketfueltank"end;gi=_G[gh.."_size"]if#gt>0 then for i=1,#gt do local fv=string.sub(gt[i][gc],1,12)local gy=0;for gz=1,gi do if gt[i][gc]==g(unit[gh.."_"..gz].getData()).name then gy=gz;break end end;local gA=q()if gu[i]==nil or gv[i]==nil or gA-gt[i][gg]>gj then local gB;local gC=0;if gy~=0 then gv[i]=g(unit[gh.."_"..gy].getData()).percentage;gu[i]=g(unit[gh.."_"..gy].getData()).timeLeft;if gu[i]=="n/a"then gu[i]=0 end else gC=l(gt[i][gb])-gt[i][ge]gv[i]=e(0.5+gC*100/gt[i][gd])gB=gt[i][gf]if gB<=gC then gu[i]=0 else gu[i]=e(0.5+gC/((gB-gC)/(gA-gt[i][gg])))end;gt[i][gf]=gC;gt[i][gg]=gA end end;if fv==gr then fv=f("%s %d",gs,i)end;if gy==0 then fv=fv.." *"end;local gD;if gu[i]==0 then gD=""else gD=c0(gu[i])end;if gv[i]~=nil then local gE=e(gv[i]*2.55)local gF=f("rgb(%d,%d,%d)",255-gE,gE,0)local bT=""if gD~=""and gu[i]<120 or gv[i]<5 then bT="red "end;local gG=f("rgb(%d,%d,%d)",r(e((255-gE)/2.55),50,100),r(e(gE/2.55),0,50),50)local gH="rgb(196,0,255)"if gs=="ATMO"then gH="rgb(0,188,255)"elseif gs=="SPACE"then gH="rgb(239,255,0)"end;local gI=false;if previous~=gH then gI=true end;previous=gH;if BarFuelDisplay then if gI then gw=gw-5;gx=gx-5 end;g9=g9 ..f([[
                                            <g class="pdim">                        
                                            <rect fill=%s class="bar" stroke=%s x="%d" y="%d" width="170" height="20"></rect></g>
                                            <g class="bar txtstart">
                                            <rect fill=%s width="%d" height="18" x="%d" y="%d"></rect>
                                            <text class="txtstart" fill="white" x="%d" y="%d" style="font-family:Play;font-size:14px">%s %s%%&nbsp;&nbsp;&nbsp;&nbsp;%s</text>
                                            </g>]],gG,gH,bQ,gx,gF,e(gv[i]*1.7+0.5)-2,bQ+1,gx+1,bQ+5,gx+14,fv,gv[i],gD)gw=gw-22;gx=gx-22 else g9=g9 ..bP(bQ,gw,fv,bT.."pdim txtfuel")g9=g9 ..bP(bQ,gx,f("%d%% %s",gv[i],gD),"pdim txtfuel","fill:"..gF)gw=gw+30;gx=gx+30 end end end end;tankY=gw end;local function gJ(gK,cL)if vSpdMeterX==0 and vSpdMeterY==0 then return end;if cL<200000 and not am or cL and am then local gL=0;if d(ba)>1 then gL=45*math.log(d(ba),10)if ba<0 then gL=-gL end end;gK[#gK+1]=f([[
                                <g class="pbright txt txtvspd" transform="translate(%d %d) scale(0.6)">
                                        <text x="55" y="-41">1000</text>
                                        <text x="10" y="-65">100</text>
                                        <text x="-45" y="-45">10</text>
                                        <text x="-73" y="3">O</text>
                                        <text x="-45" y="52">-10</text>
                                        <text x="10" y="72">-100</text>
                                        <text x="55" y="50">-1000</text>
                                        <text x="85" y="0" class="txtvspdval txtend">%d m/s</text>
                                    <g class="linethick">
                                        <path d="m-41 75 2.5-4.4m17 12 1.2-4.9m20 7.5v-10m-75-34 4.4-2.5m-12-17 4.9-1.2m17 40 7-7m-32-53h10m34-75 2.5 4.4m17-12 1.2 4.9m20-7.5v10m-75 34 4.4 2.5m-12 17 4.9 1.2m17-40 7 7m-32 53h10m116 75-2.5-4.4m-17 12-1.2-4.9m40-17-7-7m-12-128-2.5 4.4m-17-12-1.2 4.9m40 17-7 7"/>
                                        <circle r="90" />
                                    </g>
                                    <path transform="rotate(%d)" d="m-0.094-7c-22 2.2-45 4.8-67 7 23 1.7 45 5.6 67 7 4.4-0.068 7.8-4.9 6.3-9.1-0.86-2.9-3.7-5-6.8-4.9z" />
                                </g>
                            ]],vSpdMeterX,vSpdMeterY,e(ba),e(gL))end;return gK end;local function gM(gN)local gO=-b9;gN=gN-gN:project_on(gO)local gP=vec3(0,0,1)gP=gP-gP:project_on(gO)local gQ=gP:cross(gO)local gL=gP:angle_between(gN)*constants.rad2deg;if gN:dot(gQ)<0 then gL=360-gL end;return gL end;local function gR(gK,centerX,centerY,gS,gT,bn)if circleRad==0 then return end;local gU=circleRad;local gV=20;local gW=e(gS)if bn then for i=-45,45,5 do local gX=i;gK[#gK+1]=f([[<g transform="rotate(%f,%d,%d)">]],gX,centerX,centerY)len=5;if i%15==0 then len=15 elseif i%10==0 then len=10 end;gK[#gK+1]=f([[<line x1=%d y1=%d x2=%d y2="%d"/></g>]],centerX,centerY+gU+gV-len,centerX,centerY+gU+gV)end;gK[#gK+1]=bP(centerX,centerY+gU+gV-35,gT,"pdim txt txtmid")gK[#gK+1]=bP(centerX,centerY+gU+gV-25,gW.." deg","pdim txt txtmid")gK[#gK+1]=f([[<g transform="rotate(%f,%d,%d)">]],-gS,centerX,centerY)gK[#gK+1]=f([[<<polygon points="%d,%d %d,%d %d,%d"/>]],centerX-5,centerY+gU+gV-20,centerX+5,centerY+gU+gV-20,centerX,centerY+gU+gV-15)gK[#gK+1]="</g>"end;gK[#gK+1]=[[<g style="clip-path: url(#headingClip);">]]local gY=gW;if bn then gY=gM(b4)end;local gZ=20;local g_=e(gY)local h0=0;local h1=centerY+gU+gV+20;local h2=centerX;if gT~="YAW"then h1=g4(130)h2=g3(960)end;local h3=[[<path class="txttick line" d="]]local h4=e(g_-(gZ+10)-g_%5+0.5)for i=h4+70,h4,-5 do local bQ=h2-(-i*5+gY*5)if i%10==0 then h0=10;local B=i;if B==360 then B=0 elseif B>360 then B=B-360 elseif B<0 then B=B+360 end;gK[#gK+1]=bP(bQ,h1+15,B,"txtmid bright")elseif i%5==0 then h0=5 end;if h0==10 then h3=f([[%s M %f %f v %d]],h3,bQ,h1-5,h0)else h3=f([[%s M %f %f v %d]],h3,bQ,h1-2.5,h0)end end;gK[#gK+1]=h3 ..[["/>]]gK[#gK+1]=f([[<<polygon class="bright" points="%d,%d %d,%d %d,%d"/>]],h2-5,h1-20,h2+5,h1-20,h2,h1-10)if DisplayOdometer then if bn then gT="HDG"end;gK[#gK+1]=bP(g3(960),g4(100),g_.."°","dim txt txtmid size14","")gK[#gK+1]=bP(g3(960),g4(85),gT,"dim txt txtmid size20","")end;gK[#gK+1]=[[</g>]]end;local function h5(gK,h6,gS,centerX,centerY,bn,h7,e0)if circleRad==0 then return end;local gU=circleRad;local h8=e(gU*3/5)if gU>0 then local h9=e(h6)local len=0;local h3=f([[<path transform="rotate(%f,%d,%d)" class="dim line" d="]],-1*gS,centerX,centerY)if not am then h3=f([[<path transform="rotate(0,%d,%d)" class="dim line" d="]],centerX,centerY)end;gK[#gK+1]=f([[<clipPath id="cut"><circle r="%f" cx="%d" cy="%d"/></clipPath>]],gU-1,centerX,centerY)gK[#gK+1]=[[<g class="dim txttick" clip-path="url(#cut)">]]for i=e(h9-30-h9%5+0.5),e(h9+30+h9%5+0.5),5 do if i%10==0 then len=30 elseif i%5==0 then len=20 end;local bR=centerY+-i*5+h6*5;if len==30 then h3=f([[%s M %d %f h %d]],h3,centerX-h8-len,bR,len)if am then gK[#gK+1]=f([[<g path transform="rotate(%f,%d,%d)" class="pdim txt txtmid"><text x="%d" y="%f">%d</text></g>]],-1*gS,centerX,centerY,centerX-h8+10,bR+4,i)gK[#gK+1]=f([[<g path transform="rotate(%f,%d,%d)" class="pdim txt txtmid"><text x="%d" y="%f">%d</text></g>]],-1*gS,centerX,centerY,centerX+h8-10,bR+4,i)if i==0 or i==180 or i==-180 then gK[#gK+1]=f([[<path transform="rotate(%f,%d,%d)" d="m %d,%f %d,0" stroke-width="1" style="fill:none;stroke:#F5B800;" />]],-1*gS,centerX,centerY,centerX-h8+20,bR,h8*2-40)end else gK[#gK+1]=bP(centerX-h8+10,bR,i,"pdim txt txtmid")gK[#gK+1]=bP(centerX+h8-10,bR,i,"pdim txt txtmid")end;h3=f([[%s M %d %f h %d]],h3,centerX+h8,bR,len)else h3=f([[%s M %d %f h %d]],h3,centerX-h8-len,bR,len)h3=f([[%s M %d %f h %d]],h3,centerX+h8,bR,len)end end;gK[#gK+1]=h3 ..[["/>]]local ha="PITCH"if not bn then ha="REL PITCH"end;if h6>90 and not am then h6=90-(h6-90)elseif h6<-90 and not am then h6=-90-(h6+90)end;if gU>200 then if am then if e0>Q then gK[#gK+1]=bP(centerX,centerY-15,"Yaw","pdim txt txtmid")gK[#gK+1]=bP(centerX,centerY+20,h7,"pdim txt txtmid")end;gK[#gK+1]=f([[<g transform="rotate(%f,%d,%d)">]],-gS,centerX,centerY)else gK[#gK+1]=f([[<g transform="rotate(0,%d,%d)">]],centerX,centerY)end;gK[#gK+1]=f([[<<polygon points="%d,%d %d,%d %d,%d"/> class="pdim txtend"><text x="%d" y="%f">%d</text>]],centerX-h8+25,centerY-5,centerX-h8+20,centerY,centerX-h8+25,centerY+5,centerX-h8+50,centerY+4,h9)gK[#gK+1]=f([[<<polygon points="%d,%d %d,%d %d,%d"/> class="pdim txtend"><text x="%d" y="%f">%d</text>]],centerX+h8-25,centerY-5,centerX+h8-20,centerY,centerX+h8-25,centerY+5,centerX+h8-30,centerY+4,h9)gK[#gK+1]="</g>"end;local hb=e(gU/3)gK[#gK+1]=f([[<path d="m %d,%d %d,0" stroke-width="2" style="fill:none;stroke:#F5B800;" />]],centerX-hb,centerY,gU-hb)if not am and bn then gK[#gK+1]=f([[<path transform="rotate(%f,%d,%d)" d="m %d,%f %d,0" stroke-width="1" style="fill:none;stroke:#F5B800;" />]],-1*gS,centerX,centerY,centerX-h8+10,centerY,h8*2-20)end;gK[#gK+1]="</g>"if gU<200 then if am and e0>Q then gK[#gK+1]=bP(centerX,centerY-gU,ha,"pdim txt txtmid")gK[#gK+1]=bP(centerX,centerY-gU+10,h9,"pdim txt txtmid")gK[#gK+1]=bP(centerX,centerY-15,"Yaw","pdim txt txtmid")gK[#gK+1]=bP(centerX,centerY+20,h7,"pdim txt txtmid")else gK[#gK+1]=bP(centerX,centerY-gU,ha,"pdim txt txtmid")gK[#gK+1]=bP(centerX,centerY-gU+15,h9,"pdim txt txtmid")end end end end;local function hc(gK,cL,bn)local hd=altMeterX;local he=altMeterY;if hd==0 and he==0 then return end;local hf=78;local hg=19;local hh=ak;if ak~=-1 then gK[#gK+1]=bP(hd+hf,he+hg+20,f("AGL: %.1fm",ak),"pdim altsm txtend")end;if bn and(cL<200000 and not am or cL and am)then table.insert(gK,f([[
                                <g class="pdim">                        
                                    <rect class="line" x="%d" y="%d" width="%d" height="%d"/> 
                                    <clipPath id="alt"><rect class="line" x="%d" y="%d" width="%d" height="%d"/></clipPath>
                                    <g clip-path="url(#alt)">]],hd-1,he-4,hf+2,hg+6,hd+1,he-1,hf-4,hg))local fg=0;local hi=1;local hj=0;local hk=cL<0;local hl=cL<planet.surfaceMaxAltitude;local hm=9;if hk then hm=0 end;local cL=d(cL)while fg<6 do local hn=11;local ho=16;local hp=9;local hq=14;local bT="altsm"if fg>2 then ho=ho+3;hn=hn+2;hq=hq+2;hp=hp-6;bT="altbig"end;if hk then bT=bT.." red"elseif hl then bT=bT.." orange"end;local hr=cL/hi%10;local hs=e(hr)local ht=e((hs+1)%10)local hu=hj;if fg==0 then hu=hr-hs;if hk then hu=1-hu end end;if hk and(fg==0 or hj~=0)then local hv=ht;ht=hs;hs=hv end;local hw=ho*(hu-1)local hx=hw+ho;local bQ=hd+hp+(6-fg)*hn;local bR=he+hq;gK[#gK+1]=bP(bQ,bR+hw,ht,bT)gK[#gK+1]=bP(bQ,bR+hx,hs,bT)fg=fg+1;hi=hi*10;if hs==hm then hj=hu else hj=0 end end;table.insert(gK,[[</g></g>]])end end;local function hy(e3)local hz=-math.deg(n(e3.y,e3.z))+180;hz=hz-90;if hz<0 then hz=360+hz end;if hz>180 then hz=-180+hz-180 end;return-hz end;local function hA(e3)local gY=math.deg(n(e3.y,e3.x))-90;if gY<-180 then gY=360+gY end;return gY end;local function hB(gK,e3,e0,centerX,centerY)if e0>5 and not am or e0>Q then local gU=circleRad;local hC=20;local hD=20;local hE=hy(e3)local hF=hA(e3)local hG=14;local hH=hG/2;local hI=-hF/hD*gU;local hJ=hE/hC*gU;local bQ=centerX+hI;local bR=centerY+hJ;local af=y(hI^2+hJ^2)local hK=[[<circle
                            cx="]]..bQ..[["
                            cy="]]..bR..[["
                            r="]]..hH/hG..[["
                            style="fill:#d7fe00;stroke:none;fill-opacity:1"/>
                        <circle
                            cx="]]..bQ..[["
                            cy="]]..bR..[["
                            r="]]..hH..[["
                            style="stroke:#d7fe00;stroke-opacity:1;fill:none" />
                        <path
                            d="M ]]..bQ-hG..[[,]]..bR..[[ h ]]..hH..[["
                            style="stroke:#d7fe00;stroke-opacity:1" />
                        <path
                            d="M ]]..bQ+hH..[[,]]..bR..[[ h ]]..hH..[["
                            style="stroke:#d7fe00;stroke-opacity:1" />
                        <path
                            d="M ]]..bQ..[[,]]..bR-hG..[[ v ]]..hH..[["
                            style="stroke:#d7fe00;stroke-opacity:1" />]]if af<gU then gK[#gK+1]=hK else local gL=n(hJ,hI)local hL=4;local hM=centerX+gU*math.cos(gL)local hN=centerY+gU*math.sin(gL)gK[#gK+1]=f('<g transform="rotate(%f %f %f)"><rect x="%f" y="%f" width="%f" height="%f" stroke="#d7fe00" fill="#d7fe00" /><path d="M %f %f l %f %f l %f %f z" fill="#d7fe00" stroke="#d7fe00"></g>',gL*180/math.pi,hM,hN,hM-hL,hN-hL/2,hL*2,hL,hM+hL,hN-hL,hL,hL,-hL,hL)end;if not am then local hO=vec3(e3)hE=hy(-hO)hF=hA(-hO)hI=-hF/hD*gU;hJ=hE/hC*gU;bQ=centerX+hI;bR=centerY+hJ;af=y(hI^2+hJ^2)if af<gU then local hP=[[<circle
                                    cx="]]..bQ..[["
                                    cy="]]..bR..[["
                                    r="]]..hH..[["
                                    style="stroke:#d7fe00;stroke-opacity:1;fill:none" />
                                <path
                                    d="M ]]..bQ..[[,]]..bR-hG..[[ v ]]..hH..[["
                                    style="stroke:#d7fe00;stroke-opacity:1" id="l"/>
                                <use
                                    xlink:href="#l"
                                    transform="rotate(120,]]..bQ..[[,]]..bR..[[)" />
                                <use
                                    xlink:href="#l"
                                    transform="rotate(-120,]]..bQ..[[,]]..bR..[[)" />
                                <path
                                    d="M ]]..bQ-hH..[[,]]..bR..[[ h ]]..hG..[["
                                    style="stroke-width:0.5;stroke:#d7fe00;stroke-opacity:1"
                                    transform="rotate(-45,]]..bQ..[[,]]..bR..[[)" id="c"/>
                                <use
                                    xlink:href="#c"
                                    transform="rotate(-90,]]..bQ..[[,]]..bR..[[)"/>]]gK[#gK+1]=hP end end end end;local function hQ(gK,g7,hR,hS)if throtPosX==0 and throtPosY==0 then return end;hR=e(hR+0.5)local gw=throtPosY+10;local gx=throtPosY+20;if m()==1 and not RemoteHud then gw=55;gx=65 end;local hT="CRUISE"local unit="km/h"local cv=hS;if g7=="TRAVEL"or g7=="AUTOPILOT"then hT="THROT"unit="%"cv=hR;local hU="dim"if hR<0 then hU="red"end;gK[#gK+1]=f([[<g class="%s">
                                <path class="linethick" d="M %d %d L %d %d L %d %d L %d %d"/>
                                <g transform="translate(0 %.0f)">
                                    <polygon points="%d,%d %d,%d %d,%d"/>
                                </g>]],hU,throtPosX-7,throtPosY-50,throtPosX,throtPosY-50,throtPosX,throtPosY+50,throtPosX-7,throtPosY+50,1-d(hR),throtPosX-10,throtPosY+50,throtPosX-15,throtPosY+53,throtPosX-15,throtPosY+47)end;gK[#gK+1]=bP(throtPosX+10,gw,hT,"pbright txtstart")gK[#gK+1]=bP(throtPosX+10,gx,f("%.0f %s",cv,unit),"pbright txtstart")if am and AtmoSpeedAssist and bf and M then hR=e(N*100+0.5)local hU="red"if hR<0 then hU="red"end;gK[#gK+1]=f([[<g class="%s">
                                <g transform="translate(0 %d)">
                                    <polygon points="%d,%d %d,%d %d,%d"/>
                                </g></g>]],hU,1-d(hR),throtPosX-10,throtPosY+50,throtPosX-15,throtPosY+53,throtPosX-15,throtPosY+47)gK[#gK+1]=bP(throtPosX+10,gw+40,"LIMIT","pbright txtstart")gK[#gK+1]=bP(throtPosX+10,gx+40,hR.."%","pbright txtstart")end;if am and AtmoSpeedAssist or Reentry then gK[#gK+1]=bP(throtPosX+10,gw-40,"LIMIT: "..aV.." km/h","dim txtstart")elseif not am and Autopilot then gK[#gK+1]=bP(throtPosX+10,gw-40,"LIMIT: "..e(MaxGameVelocity*3.6+0.5).." km/h","dim txtstart")end end;local function hV(gK,hW)if throtPosX==0 and throtPosY==0 then return end;local hX=throtPosY-10;local hY=throtPosX+10;gK[#gK+1]=bP(0,0,"","pdim txt txtend")if m()==1 and not RemoteHud then hX=75 end;gK[#gK+1]=bP(hY,hX,e(hW).." km/h","pbright txtbig txtstart")end;local function hZ(gK)gK[#gK+1]=bP(g3(1900),g4(1070),f("ARCH Hud Version: %.3f",VERSION_NUMBER),"hudver")gK[#gK+1]=[[<g class="warnings">]]if unit.isMouseControlActivated()==1 then gK[#gK+1]=bP(g3(960),g4(550),"Warning: Invalid Control Scheme Detected","warnings")gK[#gK+1]=bP(g3(960),g4(600),"Keyboard Scheme must be selected","warnings")gK[#gK+1]=bP(g3(960),g4(650),"Set your preferred scheme in Lua Parameters instead","warnings")end;local h_=g3(960)local i0=g4(860)local i1=g4(880)local i2=g4(900)local i3=g4(960)local i4=g4(200)local i5=g4(250)local i6=g4(960)if m()==1 and not RemoteHud then i0=g4(135)i1=g4(155)i2=g4(175)i4=g4(115)i5=g4(95)end;local i7="#222222"local i8="white"local i9="dimmer"local ia="pbright"local ib="#110000"local ic=i7;local id=i9;if BrakeIsOn then gK[#gK+1]=bP(h_,i0,"Brake Engaged","warnings")ib="#440000"ic=i8;id=ia elseif L>0 then gK[#gK+1]=bP(h_,i0,"Auto-Brake Engaged","warnings","opacity:"..L)end;local ie="#110000"local ig=i7;local ih=i9;if am and aT and ak==-1 then if not Autopilot and not VectorToTarget and not BrakeLanding and not bd and not VertTakeOff and not AutoTakeoff then gK[#gK+1]=bP(h_,i4+50,"** STALL WARNING **","warnings")ie="#ff0000"ig=i8;ih=ia;bC("stall","SW",2)end end;if bl then gK[#gK+1]=bP(h_,i4+90,"Flight Assist in Progress","warnings")end;if at then gK[#gK+1]=bP(h_,i6,"Gyro Enabled","warnings")end;local ii="#111100"local ij=i7;local ik=i9;if GearExtended then ii="#775500"ij=i8;ik=ia;if S then gK[#gK+1]=bP(h_,i1,"Gear Extended","warn")else gK[#gK+1]=bP(h_,i1,"Landed (G: Takeoff)","warnings")end;local il=bY(a:getTargetGroundAltitude())gK[#gK+1]=bP(h_,i2,"Hover Height: "..il,"warn")end;local im="#000011"local io=i7;local ip=i9;if a3 then im="#0000DD"io=i8;ip=ia;gK[#gK+1]=bP(h_,i3+20,"ROCKET BOOST ENABLED","warn")end;local iq="#001100"local ir=i7;local is=i9;if antigrav and not ExternalAGG and bd and AntigravTargetAltitude~=nil then iq="#00DD00"ir=i8;is=ia;if d(ao-antigrav.getBaseAltitude())<501 then gK[#gK+1]=bP(h_,i4+15,f("Target Altitude: %d Singularity Altitude: %d",e(AntigravTargetAltitude),e(antigrav.getBaseAltitude())),"warn")else gK[#gK+1]=bP(h_,i4+15,f("Target Altitude: %d Singluarity Altitude: %d",e(AntigravTargetAltitude),e(antigrav.getBaseAltitude())),"warnings")end elseif Autopilot and AutopilotTargetName~="None"then gK[#gK+1]=bP(h_,i4+20,"Autopilot "..AutopilotStatus,"warn")elseif LockPitch~=nil then gK[#gK+1]=bP(h_,i4+20,f("LockedPitch: %d",e(LockPitch)),"warn")elseif a0 then gK[#gK+1]=bP(h_,i4+20,"Follow Mode Engaged","warn")elseif Reentry or aj then gK[#gK+1]=bP(h_,i4+20,"Re-entry in Progress","warn")end;if AltitudeHold or VertTakeOff then local il=bY(HoldAltitude,2)if VertTakeOff then if bd then il=bY(antigrav.getBaseAltitude(),2).." AGG singularity height"end;gK[#gK+1]=bP(h_,i4,"VTO to "..il,"warn")elseif AutoTakeoff and not IntoOrbit then if ai then gK[#gK+1]=bP(h_,i4,"Takeoff to "..AutopilotTargetName,"warn")else gK[#gK+1]=bP(h_,i4,"Takeoff to "..il,"warn")end;if BrakeIsOn and not VertTakeOff then gK[#gK+1]=bP(h_,i4+50,"Throttle Up and Disengage Brake For Takeoff","crit")end else gK[#gK+1]=bP(h_,i4,"Altitude Hold: "..il,"warn")end end;if VertTakeOff and(antigrav~=nil and antigrav)then if an>0.1 then gK[#gK+1]=bP(h_,i4+20,"Beginning ascent","warn")elseif an<0.09 and an>0.05 then gK[#gK+1]=bP(h_,i4+20,"Aligning trajectory","warn")elseif an<0.05 then gK[#gK+1]=bP(h_,i4+20,"Leaving atmosphere","warn")end end;if IntoOrbit then if aX~=nil then gK[#gK+1]=bP(h_,i4,aX,"warn")end end;if BrakeLanding then if StrongBrakes then gK[#gK+1]=bP(h_,i4,"Brake-Landing","warnings")else gK[#gK+1]=bP(h_,i4,"Coast-Landing","warnings")end end;if ProgradeIsOn then gK[#gK+1]=bP(h_,i4,"Prograde Alignment","crit")end;if RetrogradeIsOn then gK[#gK+1]=bP(h_,i4,"Retrograde Alignment","crit")end;local it="#110000"local iu=i7;local iv=i9;if bo then it="#FF0000"iu=i8;iv=ia;local type;if string.find(bo,"COLLISION")then type="warnings"else type="crit"end;gK[#gK+1]=bP(h_,i5+20,bo,type)elseif an==0 then local iw,ix=aM.checkLOS(b7:normalize())if ix~=nil then iv=ia;it="#FF0000"iu=i8;local il=bY(ix)local travelTime=aH.computeTravelTime(b8,0,ix)local iy="Collision"if iw.noAtmosphericDensityAltitude>0 then iy="Atmosphere"end;gK[#gK+1]=bP(h_,i5+20,iw.name.." "..iy.." "..c0(travelTime).." In "..il,"crit")end end;if VectorToTarget and not IntoOrbit then gK[#gK+1]=bP(h_,i4+35,VectorStatus,"warn")end;local iz="#111100"local iA=i7;local iB=i9;if bt and#bt>1 then iz="#DDDD00"iA=i8;iB=ia end;local iC=g3;local iD=g4;local i9="topButton"local iE="topButtonActive"local iF=i9;if Autopilot or VectorToTarget or ai or IntoOrbit then iF=iE end;local iG=i9;if ProgradeIsOn then iG=iE end;local iH=i9;if BrakeLanding or GearExtended then iH=iE end;local iI=i9;if AltitudeHold or VectorToTarget then iI=iE end;local iJ=i9;if RetrogradeIsOn then iJ=iE end;local iK=i9;if IntoOrbit or a_ and Autopilot then iK=iE end;if showHud and DisplayOdometer then local iL=iD(30)gK[#gK+1]=f([[ 
                                <g class="pdim txt txtmid">
                                    <g class="%s">
                                    <path d="M %f %f l 0 %f l %f 0 l %f %f Z"/>
                                    ]],iF,iC(960),iD(54),iD(-53),iC(-120),iC(25),iD(50))gK[#gK+1]=bP(iC(910),iL,"AUTOPILOT")gK[#gK+1]=f([[
                                    </g>
                
                                    <g class="%s">
                                    <path d="M %f %f l %f %f l %f 0 l %f %f Z"/>
                                    ]],iG,iC(865),iD(51),iC(-25),iD(-50),iC(-110),iC(25),iD(46))gK[#gK+1]=bP(iC(800),iL,"PROGRADE")gK[#gK+1]=f([[
                                    </g>
                
                                    <g class="%s">
                                    <path d="M %f %f l %f %f l %f 0 l %f %f Z"/>
                                    ]],iH,iC(755),iD(47),iC(-25),iD(-46),iC(-98),iC(44),iD(44))gK[#gK+1]=bP(iC(700),iL,"LAND")gK[#gK+1]=f([[
                                    </g>
                
                                    <g class="%s">
                                    <path d="M %f %f l 0 %f l %f 0 l %f %f Z"/>
                                    ]],iI,iC(960),iD(54),iD(-53),iC(120),iC(-25),iD(50))gK[#gK+1]=bP(iC(1010),iL,"ALT HOLD")gK[#gK+1]=f([[
                                    </g>
                
                                    <g class="%s">
                                    <path d="M %f %f l %f %f l %f 0 l %f %f Z"/>
                                    ]],iJ,iC(1055),iD(51),iC(25),iD(-50),iC(110),iC(-25),iD(46))gK[#gK+1]=bP(iC(1122),iL,"RETROGRADE")gK[#gK+1]=f([[
                                    </g>
                
                                    <g class="%s">
                                    <path d="M %f %f l %f %f l %f 0 l %f %f Z"/>
                                    ]],iK,iC(1165),iD(47),iC(25),iD(-46),iC(98),iC(-44),iD(44))gK[#gK+1]=bP(iC(1220),iL,"ORBIT")gK[#gK+1]=[[
                                    </g>
                                </g>]]gK[#gK+1]="</g>"end;return gK end;local function iM(e0)return e(A(e0*3.6,0)+0.5).." km/h"end;local function iN(gK)local bQ=OrbitMapX+10;local bR=OrbitMapY+20;local iO={}local iP={"Alt-4: AutoTakeoff to Target"}local iQ={"Alt-6: Altitude hold at current altitude","Alt-6-6: Altitude Hold at 11% atmosphere","Alt-Q/E: Hard Bankroll left/right till released","Alt-S: 180 deg bank turn"}local iR={"Alt-6: Orbit at current altitude","Alt-6-6: Orbit at LowOrbitHeight over atmosphere"}local iS={"","------------------ALWAYS--------------------","Alt-1: Increment Interplanetary Helper","Alt-2: Decrement Interplanetary Helper","Alt-3: Toggle Vanilla Widget view","Alt-4: Autopilot to IPH target","Alt-5: Lock Pitch at current pitch","Alt-7: Toggle Collision System on and off","Alt-8: Toggle ground stabilization (underwater flight)","CTRL: Toggle Brakes on and off. Cancels active AP","LAlt: Tap to shift freelook on and off","Shift: Hold while not in freelook to see Buttons","Type /commands or /help in lua chat to see text commands"}table.insert(iO,"--------------DYNAMIC-----------------")if am then if ak~=-1 then bF(iO,iP)if a8 and planet and a8.name==planet.name then table.insert(iO,"Alt-4-4: Low Orbit Autopilot to Target")end;if antigrav or VertTakeOffEngine then if antigrav then if bd then table.insert(iO,"Alt-6: AGG is on, will takeoff to AGG Height")else table.insert(iO,"Turn on AGG to takeoff to AGG Height")end end;if VertTakeOffEngine then table.insert(iO,"Alt-6: Begins Vertical AutoTakeoff.")end else table.insert(iO,"Alt-6: Autotakeoff to AutoTakeoffAltitude")table.insert(iO,"Alt-6-6: Autotakeoff to 11% atmosphere")end;if GearExtended then table.insert(iO,"G: Takeoff to hover height, raise gear")else table.insert(iO,"G: Lowergear and Land")end else bF(iO,iQ)table.insert(iO,"G: Begin BrakeLanding or Land")end;if VertTakeOff then table.insert(iO,"Hit Alt-6 before exiting Atmosphere during VTO to hold in level flight")end else bF(iO,iR)if shield_1 then table.insert(iO,"Alt-Shift-5: Toggle shield off and on")table.insert(iO,"Alt-Shift-6: Vent shields")end end;if gyro then table.insert(iO,"Alt-9: Activate Gyroscope")end;if ExtraLateralTags~="none"or ExtraLongitudeTags~="none"or ExtraVerticalTags~="none"then table.insert(iO,"Alt-Shift-9: Cycles engines with Extra tags")end;if AltitudeHold then table.insert(iO,"Alt-Spacebar/C will raise/lower target height")table.insert(iO,"Alt+Shift+Spacebar/C will raise/lower target to preset values")end;if AtmoSpeedAssist or not am then table.insert(iO,"LALT+Mousewheel will lower/raise speed limit")end;bF(iO,iS)for i=1,#iO do bR=bR+12;gK[#gK+1]=bP(bQ,bR,iO[i],"pdim txtbig txtstart")end end;local function iT(gK)local iU=OrbitMapX;local iV=OrbitMapY;local iW=OrbitMapSize;local iX=4;local iY=15;local bQ=0;local bR=0;local iZ,i_,j0,j1;local j2;local function j3(type)local j4,E,e0,j5,bT,j6;if type=="Periapsis"then j4=j2.periapsis.altitude;E=j2.timeToPeriapsis;e0=j2.periapsis.speed;bT="txtend"j5=12;j6=math.min(bQ,iU+iW-planet.radius/j0-iX*2)else j4=j2.apoapsis.altitude;E=j2.timeToApoapsis;e0=j2.apoapsis.speed;j5=-12;bT="txtstart"j6=bQ end;if b8<1 then E=0 end;gK[#gK+1]=f([[<line class="pdim linethin" style="stroke:white" x1="%f" y1="%f" x2="%f" y2="%f"/>]],j6+j5,bR-5,bQ,bR-5)gK[#gK+1]=f([[<line class="pdim linethin" x1="%f" y1="%f" x2="%f" y2="%f"/>]],j6-j5*4,bR+2,bQ,bR+2)gK[#gK+1]=bP(j6,bR,type,bT)bQ=j6-j5*2;bR=bR+iY;local il=bY(j4)gK[#gK+1]=bP(bQ,bR,il,bT)bR=bR+iY;gK[#gK+1]=bP(bQ,bR,c0(E),bT)bR=bR+iY;gK[#gK+1]=bP(bQ,bR,iM(e0),bT)end;local j7=iW*1.5;if SelectedTab=="INFO"then j7=25*7 end;if SelectedTab~="HIDE"then gK[#gK+1]=[[<g class="pbright txtorb txtmid">]]gK[#gK+1]=f('<rect width="%f" height="%d" rx="10" ry="10" x="%d" y="%d" class="dimfill brightstroke" style="stroke-width:3;fill-opacity:0.3;" />',iW*2,j7,iU,iV)gK[#gK+1]=f([[<clippath id="orbitRect">
                                                        <rect width="%f" height="%d" rx="10" ry="10" x="%d" y="%d" class="dimfill brightstroke" style="stroke-width:3;fill-opacity:0.3;" />
                                                        </clippath>]],iW*2,j7,iU,iV)end;local j8=iW*1.5;local j9=iW*2;local ja=j8/2;local jb=iW;local jc=iU+jb;local jd=iV+ja;local je=iU+j9;local jf=iV+j8;if SelectedTab=="ORBIT"then iV=iV+iX;iZ=iW/2;j1=0;j2={}j2.periapsis={}j2.apoapsis={}if orbit~=nil then if orbit.periapsis~=nil then j2.periapsis.altitude=orbit.periapsis.altitude;j2.periapsis.speed=orbit.periapsis.speed end;if orbit.apoapsis~=nil then j2.apoapsis.altitude=orbit.apoapsis.altitude;j2.apoapsis.speed=orbit.apoapsis.speed end;j2.period=orbit.period;j2.eccentricity=orbit.eccentricity;j2.timeToApoapsis=orbit.timeToApoapsis;j2.timeToPeriapsis=orbit.timeToPeriapsis;j2.eccentricAnomaly=orbit.eccentricAnomaly;j2.trueAnomaly=orbit.trueAnomaly end;if j2.periapsis==nil then j2.periapsis={}j2.periapsis.altitude=-planet.radius;j2.periapsis.speed=MaxGameVelocity end;if j2.eccentricity==nil then j2.eccentricity=1 end;if j2.apoapsis==nil then j2.apoapsis={}j2.apoapsis.altitude=ao;j2.apoapsis.speed=0 end;if b8<1 then j2.apoapsis.altitude=ao;j2.apoapsis.speed=0 end;if j2.apoapsis.altitude then j0=(j2.apoapsis.altitude+j2.periapsis.altitude+planet.radius*2)/(iZ*2)i_=(planet.radius+j2.apoapsis.altitude)/j0*(1-j2.eccentricity)j1=iZ-j2.periapsis.altitude/j0-planet.radius/j0;local jg=math.pi;if j2.period~=nil and j2.period>0 and j2.timeToApoapsis~=nil then jg=j2.eccentricAnomaly;if j2.timeToPeriapsis<j2.timeToApoapsis then jg=2*math.pi-jg end end;if b8<1 or jg~=jg then jg=math.pi end;local jh=-iZ*math.cos(jg)+iU+jb+iX;local ji=i_*math.sin(jg)+iV+ja+iX;local jj=""gK[#gK+1]='<g clip-path="url(#orbitRect)">'gK[#gK+1]=f([[<ellipse class="%s line" cx="%f" cy="%f" rx="%f" ry="%f"/>]],jj,iU+iW+iX,iV+iW*1.5/2+iX,iZ,i_)if i_<1 then gK[#gK+1]=f([[<line x1="%f" y1="%f" x2="%f" y2="%f" stroke="red"/>]],iU+iW+iX-j1,iV+iW*1.5/2+iX,jh,ji)end;gK[#gK+1]=f('<circle cx="%f" cy="%f" r="%f" stroke="white" stroke-width="1" fill="rgb(0,150,200)" opacity="0.5" />',iU+iW+iX-j1,iV+iW*1.5/2+iX,(planet.radius+planet.noAtmosphericDensityAltitude)/j0)gK[#gK+1]=f('<clipPath id="planetClip"><circle cx="%f" cy="%f" r="%f" /></clipPath>',iU+iW+iX-j1,iV+iW*1.5/2+iX,(planet.radius+planet.noAtmosphericDensityAltitude)/j0)gK[#gK+1]=f([[<ellipse class="%s line" cx="%f" cy="%f" rx="%f" ry="%f" clip-path="url(#planetClip)"/>]],"redout",iU+iW+iX,iV+iW*1.5/2+iX,iZ,i_)gK[#gK+1]=f('<circle cx="%f" cy="%f" r="%f" stroke="black" stroke-width="1" fill="rgb(0,100,150)" />',iU+iW+iX-j1,iV+iW*1.5/2+iX,planet.radius/j0)gK[#gK+1]='</g>'local jk=math.floor(planet.radius/j0+0.5)local jl=g8.Generic_Moon;if g8[planet.name]then jl=g8[planet.name]end;bQ=iU+iW+iX*4+iZ;bR=iV+iW*1.5/2+5+iX;if j2.apoapsis~=nil and j2.apoapsis.speed<MaxGameVelocity then j3("Apoapsis")end;bR=iV+iW*1.5/2+5+iX;bQ=iU+iW-iX*2-iZ;if j2.periapsis~=nil and j2.periapsis.speed<MaxGameVelocity and j2.periapsis.altitude>0 then j3("Periapsis")end;gK[#gK+1]=bP(iU+iW+iX,iV+20+iX,planet.name,"txtorbbig")gK[#gK+1]=f('<circle cx="%f" cy="%f" r="2" stroke="black" stroke-width="1" fill="white" />',jh,ji)gK[#gK+1]=[[</g>]]return gK else gK[#gK+1]='<g clip-path="url(#orbitRect)">'local jm=""local jn=1.2*(maxAtlasX-minAtlasX)/(iW*2)local jo=1.4*(maxAtlasY-minAtlasY)/(iW*1.5)for c9,ca in pairs(b[0])do if ca.center then local bQ=iU+iW+ca.center.x/jn;local bR=iV+iW*1.5/2+ca.center.y/jo;jm=jm..'<circle cx="'..bQ..'" cy="'..bR..'" r="'..ca.radius/jn*30 ..'" stroke="white" stroke-width="1" fill="blue" />'if not string.match(ca.name,"Moon")and not string.match(ca.name,"Sanctuary")and not string.match(ca.name,"Space")then jm=jm.."<text x='"..bQ.."' y='"..bR+ca.radius/jn*30+20 .."' font-size='12' fill="..au.." text-anchor='middle' font-family='Montserrat'>"..ca.name.."</text>"end end end;local e4=vec3(core.getConstructWorldPos())local bQ=iU+iW+e4.x/jn;local bR=iV+iW*1.5/2+e4.y/jo;jm=jm..'<circle cx="'..bQ..'" cy="'..bR..'" r="2" stroke="white" stroke-width="1" fill="red"/>'jm=jm.."<text x='"..bQ.."' y='"..bR-10 .."' font-size='14' fill='darkred' text-anchor='middle' font-family='Bank' font-weight='bold'>You Are Here</text>"fQ=jn;fR=jo;local jp=e4+b7*1000000;local jq=iU+iW+jp.x/jn;local gx=iV+iW*1.5/2+jp.y/jo;jm=jm..'<line x1="'..bQ..'" y1="'..bR..'" x2="'..jq..'" y2="'..gx..'" stroke="purple" stroke-width="1"/>'gK[#gK+1]=jm;gK[#gK+1]='</g>'end elseif SelectedTab=="INFO"then gK=aK.DrawOdometer(gK,a9,TotalDistanceTravelled,aa)elseif SelectedTab=="HELP"then gK=iN(gK)elseif SelectedTab=="SCOPE"then gK[#gK+1]='<g clip-path="url(#orbitRect)">'local jr=bw;if an>0 then table.sort(bv,function(dd,de)local bW,bX=dd.center,de.center;return(bW.x-bb.x)^2+(bW.y-bb.y)^2+(bW.z-bb.z)^2<(bX.x-bb.x)^2+(bX.y-bb.y)^2+(bX.z-bb.z)^2 end)end;local ex={}local js={}local jt=120;local ju=nil;local jv=nil;for i,ca in ipairs(bv)do local ew=ca.center-bb;local jw=ew:len()local jx=ew:normalize()local jy=ew:cross(b4):normalize()local jz=math.acos(jy:dot(b5))if jz~=jz then jz=0 end;if jy:cross(b5):dot(b4)<0 then jz=-jz end;local jA=ew:project_on_plane(b4):len()local jB=math.sin(jz)*math.asin(jA/jw)*constants.rad2deg;local jC=math.cos(jz)*math.asin(jA/jw)*constants.rad2deg;if jx:dot(b4)<0 then jC=90*math.cos(jz)+90*math.cos(jz)-jC;jB=90*math.sin(jz)+90*math.sin(jz)-jB end;local bQ=jc+jB/jr*j8;local bR=jd+jC/jr*j8;local jD=(bQ-jc)*(bQ-jc)+(bR-jd)*(bR-jd)local jE=math.asin((ca.radius+ca.surfaceMaxAltitude)/jw)*constants.rad2deg;if jE~=jE then jE=jr end;local fs=jE/jr*j8;local jF=math.asin(ca.atmosphereRadius/jw)*constants.rad2deg;if jF~=jF then jF=jE end;local jG=jF/jr*j8;local af=bY(jw,1)local jH=ca.name;local jI=false;if bR>iV then if bR>jf then if bR-jG<=jf then jI=true end else jI=true end else if bR+jG>=iV then jI=true end end;local jJ=false;local jK=bQ;if ca.systemId==0 then jK=bQ+jt else jK=bQ-jt end;if jK+jt>iU then if jK+jt>je then if jK-jG-jt<=je then jJ=true end else jJ=true end else if jK+jG+jt>=iU then jJ=true end end;local jL={}jL.x=bQ;jL.y=bR;jL.planet=ca;jL.atmoSize=jG;if not ju or jD<ju then ju=jD;jv=jL end;if jJ and jI then local jM=math.max(jG,5)if jD<jM*jM then jH=jH.." - "..af end;jL.size=fs;jL.i=i;jL.displayString=jH;jL.distance=af;jL.visible=true;js[#js+1]=jL else jL.visible=false end end;local jN=false;table.sort(js,function(bW,bX)return bW.y<bX.y end)for c9,e7 in ipairs(js)do local ca,fs,i,jG,bQ,bR,jH,af=e7.planet,e7.size,e7.i,e7.atmoSize,e7.x,e7.y,e7.displayString,e7.distance;local j6,jO,jP,jQ;local jR=15;local bT="pdim"if ca.systemId~=0 then jP=g3(string.len(jH)*5)jR=-(15+jP)jQ=g4(10)bT="pdimfill"else jP=g3(string.len(jH)*9)jQ=g4(15)end;if fs*2>jP then j6=r(bQ,iU+jP/2,je-jP/2)jO=r(bR,iV+jQ,jf-5)j6=r(j6,bQ-fs+jP/2,bQ+fs-jP/2)jO=r(jO,bR-fs+jQ,bR+fs)else j6=bQ+jR;jO=bR end;for jS,e7 in pairs(ex)do local jT=e7.textPositions;local jU=jT.y-jO;if jS~=i and d(jU)<jT.height and jT.x+jT.width>j6 and jT.x<j6+jP then if fs>jP then jO=r(jO+jQ,iV+15,jf-5)else jO=jT.y+jT.height+1 end end end;local jV=jH~=ca.name or j6<=jc and j6+jP>=jc and jO-jQ<=jd and jO>=jd;e7.hovered=jV;local jW=1;if jV then jW=2;if fs*2<jP then jW=10 end;if jH==ca.name then jH=jH.." - "..af end;bT="pbright"if ca.systemId~=0 then jP=g3(string.len(jH)*5)jR=-(15+jP)else jP=g3(string.len(jH)*7)end;if fs*2>jP then j6=r(bQ,iU+jP/2,je-jP/2)j6=r(j6,bQ-fs+jP/2,bQ+fs-jP/2)else j6=bQ+jR end end;ex[i]={}ex[i].textPositions={}ex[i].textPositions.y=jO;ex[i].textPositions.x=j6;ex[i].textPositions.width=jP;ex[i].textPositions.height=jQ;ex[i].output=""if fs*2>jP then bT=bT.." txtmid"else bT=bT.." txtstart"end;if jG-fs>2 then ex[i].output=f('<circle cx="%f" cy="%f" r="%f" stroke-width="1" stroke="%s" stroke-opacity="%f" fill="url(#RadialAtmo)" />',bQ,bR,jG,av,0.1*jW)end;ex[i].output=ex[i].output..f('<circle cx="%f" cy="%f" r="%f" stroke="%s" stroke-width="1" stroke-opacity="%f" fill="url(#RadialPlanetCenter)" />',bQ,bR,fs,av,0.2*jW)if ca.systemId==0 then ex[i].output=ex[i].output..f([[<text x='%f' y='%f'
                                            font-size='12' fill='%s' class='%s' font-family='Montserrat'>%s</text>]],j6,jO,au,bT,jH)if fs*2<=jP then ex[i].output=ex[i].output..f("<path class='linethin dimstroke' d='M %f %f L %f %f L %f %f' />",j6+jP,jO+2,j6,jO+2,bQ,bR)end else ex[i].output=ex[i].output..f([[<text x='%f' y='%f'
                                            font-size='8' fill='%s' class='%s' font-family='Montserrat'>%s</text>]],j6,jO,av,bT,jH)if fs*2<=jP then ex[i].output=ex[i].output..f("<path class='linethin dimstroke' d='M %f %f L %f %f L %f %f' />",j6,jO+2,j6+jP,jO+2,bQ,bR)end end end;for c9=#bv,1,-1 do if ex[c9]then gK[#gK+1]=ex[c9].output end end;if jv~=nil and bw<90 and not jv.hovered then local jX=jv.planet.atmosphereRadius/jv.atmoSize;local jY=y(ju)*jX;local jZ=bY(jY,1)local jP=g3(math.max(string.len(jZ)*7,string.len(jv.planet.name)*7))local jQ=g4(12)local j6=r(jv.x+(jc-jv.x)/2,iU+jP/2,je-jP/2)local jO=r(jv.y+(jd-jv.y)/2,iV+jQ*2,jf-5)gK[#gK+1]=f("<path class='linethin dimstroke' stroke='white' d='M %f %f L %f %f' />",jv.x,jv.y,jc,jd)gK[#gK+1]=f([[<text x='%f' y='%f'
                                        font-size='12' fill='%s' class='txtmid' font-family='Montserrat'>%s</text>]],j6,jO,"white",jZ)if not jv.visible then gK[#gK+1]=f([[<text x='%f' y='%f'
                                            font-size='12' fill='%s' class='txtmid' font-family='Montserrat'>%s</text>]],j6,jO-jQ,"white",jv.planet.name)end end;if b8>1 then local ew=b7;local jx=ew:normalize()local jA=ew:project_on_plane(b4):len()local jy=ew:cross(b4):normalize()local jz=math.acos(jy:dot(b5))if jz~=jz then jz=0 end;if jy:cross(b5):dot(b4)<0 then jz=-jz end;local jB=math.sin(jz)*math.asin(jA/ew:len())*constants.rad2deg;local jC=math.cos(jz)*math.asin(jA/ew:len())*constants.rad2deg;if jx:dot(b4)<0 then jC=90*math.cos(jz)+90*math.cos(jz)-jC;jB=90*math.sin(jz)+90*math.sin(jz)-jB end;local bQ=jc+jB/jr*j8;local bR=jd+jC/jr*j8;local hG=14;local hH=hG/2;local hK=[[<circle
                                    cx="]]..bQ..[["
                                    cy="]]..bR..[["
                                    r="]]..hH/hG..[["
                                    style="fill:#d7fe00;stroke:none;fill-opacity:1"/>
                                <circle
                                    cx="]]..bQ..[["
                                    cy="]]..bR..[["
                                    r="]]..hH..[["
                                    style="stroke:#d7fe00;stroke-opacity:1;fill:none" />
                                <path
                                    d="M ]]..bQ-hG..[[,]]..bR..[[ h ]]..hH..[["
                                    style="stroke:#d7fe00;stroke-opacity:1" />
                                <path
                                    d="M ]]..bQ+hH..[[,]]..bR..[[ h ]]..hH..[["
                                    style="stroke:#d7fe00;stroke-opacity:1" />
                                <path
                                    d="M ]]..bQ..[[,]]..bR-hG..[[ v ]]..hH..[["
                                    style="stroke:#d7fe00;stroke-opacity:1" />]]gK[#gK+1]=hK end;gK[#gK+1]=f("<line class='linethin dimstroke' x1='%f' y1='%f' x2='%f' y2='%f' />",jc,jd-10,jc,jd+10)gK[#gK+1]=f("<line class='linethin dimstroke' x1='%f' y1='%f' x2='%f' y2='%f' />",jc-10,jd,jc+10,jd)gK[#gK+1]='</g>'else return gK end end;local function j_(k0,k1)local k2;local k3=(k1-k0):normalize()local e5=(bb-k0):dot(k3)/k3:dot(k3)if e5<=0.then return(bb-k0):len()elseif e5>=(k1-k0):len()then return(bb-k1):len()end;local k4=k0+e5*k3;k2=(k4-bb):len()return k2 end;local function k5()local k2;local k6=nil;local k7=nil;local k8=nil;for c9,k9 in pairs(b[0])do if k9.hasAtmosphere then local af=j_(planet.center,k9.center)if k6==nil or af<k6 then k7=k9;k6=af;k8=planet end;if a8 and a8.hasAtmosphere and a8.name~=planet.name then local dr=j_(a8.center,k9.center)if dr<k6 then k7=k9;k6=dr;k8=a8 end end end end;local ka=g3(1770)local kb=g4(330)if k6 then local kc="txttick "local kd=500000;if k6<k7.radius+kd or k6<k8.radius+kd then if bj then kc="txttick red "else kc="txttick orange "end end;k2=bY(k6,2)fV=bP(ka,kb,"Pipe ("..k8.name.."--"..k7.name.."): "..k2,kc.."pbright txtmid")end end;local function ke(bQ,bR,kf,kg,hT)local kh={x=bQ,y=bR,width=kf,height=kg,label=hT}bs[hT]=kh;return kh end;local function ki(kj,kk,kf,kg,bQ,bR,kl,km,kn,ko,bT)local kh={enableName=kj,disableName=kk,width=kf,height=kg,x=bQ,y=bR,toggleVar=kl,toggleFunction=km,drawCondition=kn,hovered=false,class=bT}if ko then table.insert(fP,kh)else table.insert(fO,kh)end;return kh end;local function kp(kq)if not fT then showHandlingVariables=false;showHudVariables=false;showPhysicsVariables=false;showHud=true;return elseif kq=="handling"then showHandlingVariables=not showHandlingVariables;showHudVariables=false;showPhysicsVariables=false elseif kq=="hud"then showHudVariables=not showHudVariables;showHandlingVariables=false;showPhysicsVariables=false elseif kq=="physics"then showPhysicsVariables=not showPhysicsVariables;showHandlingVariables=false;showHudVariables=false end;if showPhysicsVariables or showHudVariables or showHandlingVariables then fU=bI(kq)showHud=false else fU={}showHud=true end end;local function kr()fT=not fT;if fT then fN=fP;a2="Hold SHIFT to see Settings"bx=showHud else fN=fO;a2="Hold SHIFT to see Control Buttons"kp()showHud=bx end end;local function ks()local function kt(ca)_G[ca]=not _G[ca]if _G[ca]then a2=ca.." set to true"else a2=ca.." set to false"end;if ca=="showHud"then bx=_G[ca]elseif ca=="BrakeToggleDefault"then BrakeToggleStatus=BrakeToggleDefault end end;local ku=50;local kv=340;local bQ=500;local bR=az/2-400;local kw=0;for c9,ca in pairs(bI("boolean"))do if type(_G[ca])=="boolean"then ki(ca,ca,kv,ku,bQ,bR,function()return _G[ca]end,function()kt(ca)end,function()return true end,true)bR=bR+ku+20;if kw==9 then bQ=bQ+kv+20;bR=az/2-400;kw=0 else kw=kw+1 end end end;ki("Control View","Control View",kv,ku,10,az/2-500,function()return true end,kr,function()return true end,true)ki("View Handling Settings",'Hide Handling Settings',kv,ku,10,az/2-(500-ku),function()return showHandlingVariables end,function()kp("handling")end,function()return true end,true)ki("View Hud Settings",'Hide Hud Settings',kv,ku,10,az/2-(500-ku*2),function()return showHudVariables end,function()kp("hud")end,function()return true end,true)ki("View Physics Settings",'Hide Physics Settings',kv,ku,10,az/2-(500-ku*3),function()return showPhysicsVariables end,function()kp("physics")end,function()return true end,true)end;local function kx()local function ky()local position=bb;local fv=planet.name..". "..#SavedLocations;if radar_1 then fv=aN.GetClosestName(fv)end;return aL.AddNewLocation(fv,position,false,true)end;local function kz()TurnBurn=not TurnBurn end;local function kA(kB)if kB==1 then ProgradeIsOn=not ProgradeIsOn;RetrogradeIsOn=false else RetrogradeIsOn=not RetrogradeIsOn;ProgradeIsOn=false end;Autopilot=false;AltitudeHold=false;a0=false;BrakeLanding=false;LockPitch=nil;Reentry=false;AutoTakeoff=false end;local function kC()aL.UpdatePosition()end;local function kD()aL.ClearCurrentPosition()end;local function kE(fg)local fv=AutopilotTargetName;if fg~=nil and type(fg)=="number"then if fg==0 then return"None"end;fv=bi[fg].name end;if fv==nil then fv=CustomTarget.name end;if fv==nil then fv="None"end;return fv end;local function kF(fg)local kG=aM.routeWP(true)if#kG>0 then return"Engage Route: "..kE(kG[1])end;return"Engage Autopilot: "..kE(fg)end;local function kH(fg)return"Disable Autopilot: "..kE(fg)end;local function kI()if m()==1 then a0=not a0;if a0 then Autopilot=false;RetrogradeIsOn=false;ProgradeIsOn=false;AltitudeHold=false;Reentry=false;BrakeLanding=false;AutoTakeoff=false;OldGearExtended=GearExtended;GearExtended=false;a.control.retractLandingGears()s:setTargetGroundAltitude(TargetHoverHeight)bC("folOn","F")else bC("folOff","F")BrakeIsOn=true;aR=autoRollPreference;GearExtended=OldGearExtended;if GearExtended then a.control.extendLandingGears()s:setTargetGroundAltitude(LandingGearGroundHeight)end end else a2="Follow Mode only works with Remote controller"a0=false end end;local ku=50;local kv=260;local kJ=g3(30)local kK=OrbitMapX+OrbitMapSize*2+2;local kL=OrbitMapY+1;ki("+","+",kJ,kJ,kK,kL+kJ+1,function()return false end,function()bw=bw/8 end,function()return SelectedTab=="SCOPE"end,nil,"ZoomButton")ki("-","-",kJ,kJ,kK,kL,function()return false end,function()bw=math.min(bw*8,90)end,function()return SelectedTab=="SCOPE"end,nil,"ZoomButton")ki("0","0",kJ,kJ,kK,kL+kJ*2+2,function()return false end,function()bw=90 end,function()return SelectedTab=="SCOPE"and bw~=90 end,nil,"ZoomButton")local kM=ki("Enable Brake Toggle","Disable Brake Toggle",kv,ku,ay/2-kv/2,az/2+350,function()return BrakeToggleStatus end,function()BrakeToggleStatus=not BrakeToggleStatus;if BrakeToggleStatus then a2="Brakes in Toggle Mode"else a2="Brakes in Default Mode"end end)ki("Align Prograde","Disable Prograde",kv,ku,ay/2-kv/2-50-kM.width,az/2-ku+380,function()return ProgradeIsOn end,function()kA(1)end)ki("Align Retrograde","Disable Retrograde",kv,ku,ay/2-kv/2+kM.width+50,az/2-ku+380,function()return RetrogradeIsOn end,kA,function()return an==0 end)apbutton=ki(kF,kH,600,60,ay/2-600/2,az/2-60/2-330,function()return Autopilot or VectorToTarget or ai or IntoOrbit end,function()end)local i;local function kN(kO)local fg=br+kO;if fg>#bi then fg=fg-#bi-1 end;if fg<0 then fg=#bi+fg end;return fg end;apExtraButtons={}for i=0,10 do local button=ki(function(bX)local fg=kN(bX.apExtraIndex)if Autopilot or VectorToTarget or ai or IntoOrbit then return"Redirect: "..kE(fg)end;return kF(fg)end,function(bX)local fg=kN(bX.apExtraIndex)return kH(fg)end,600,60,ay/2-600/2,az/2-60/2-330+60*i,function(bX)local fg=kN(bX.apExtraIndex)return fg==AutopilotTargetIndex and(Autopilot or VectorToTarget or ai or IntoOrbit)end,function(bX)local fg=kN(bX.apExtraIndex)local kP=AutopilotTargetIndex==fg;AutopilotTargetIndex=fg;aL.UpdateAutopilotTarget()aM.ToggleAutopilot()if not kP and not(Autopilot or VectorToTarget or ai or IntoOrbit)then aM.ToggleAutopilot()end end,function()return bq and#aM.routeWP(true)==0 end)button.apExtraIndex=i;apExtraButtons[i]=button end;ki("Save Position","Save Position",200,apbutton.height,apbutton.x+apbutton.width+30,apbutton.y,function()return false end,ky,function()return AutopilotTargetIndex==0 or CustomTarget==nil end)ki("Update Position","Update Position",200,apbutton.height,apbutton.x+apbutton.width+30,apbutton.y,function()return false end,kC,function()return AutopilotTargetIndex>0 and CustomTarget~=nil end)ki("Clear Position","Clear Position",200,apbutton.height,apbutton.x-200-30,apbutton.y,function()return true end,kD,function()return AutopilotTargetIndex>0 and CustomTarget~=nil end)ki("Save Route","Save Route",200,apbutton.height,apbutton.x+apbutton.width+30,apbutton.y+apbutton.height+20,function()return false end,function()aM.routeWP(false,false,2)end,function()return#aM.routeWP(true)>0 end)ki("Load Route","Clear Route",200,apbutton.height,apbutton.x-200-30,apbutton.y+apbutton.height+20,function()return#aM.routeWP(true)>0 end,function()if#aM.routeWP(true)>0 then aM.routeWP(false,true)a2="Route Cleared"elseif Autopilot or VectorToTarget then a2="Disable Autopilot before loading route"return else aM.routeWP(false,false,1)end end,function()return true end)ku=60;kv=300;local bQ=0;local bR=az/2-150;ki("View Settings","View Settings",kv,ku,bQ,bR,function()return true end,kr)bR=bR+ku+20;ki("Enable Turn and Burn","Disable Turn and Burn",kv,ku,bQ,bR,function()return TurnBurn end,kz)bQ=10;bR=az/2-300;ki("Horizontal Takeoff Mode","Vertical Takeoff Mode",kv,ku,bQ+kv+20,bR,function()return VertTakeOffEngine end,function()VertTakeOffEngine=not VertTakeOffEngine;if VertTakeOffEngine then a2="Vertical Takeoff Mode"else a2="Horizontal Takeoff Mode"end end,function()return bc end)bR=bR+ku+20;ki("Engage Orbiting","Cancel Orbiting",kv,ku,bQ+kv+20,bR,function()return IntoOrbit end,aM.ToggleIntoOrbit,function()return an==0 and bn end)bR=az/2-150;ki("Glide Re-Entry","Cancel Glide Re-Entry",kv,ku,bQ+kv+20,bR,function()return Reentry end,function()ah=1;kA(1)end,function()return planet.hasAtmosphere and not am end)bR=bR+ku+20;ki("Parachute Re-Entry","Cancel Parachute Re-Entry",kv,ku,bQ+kv+20,bR,function()return Reentry end,aM.BeginReentry,function()return planet.hasAtmosphere and not am end)bR=bR+ku+20;ki("Engage Follow Mode","Disable Follow Mode",kv,ku,bQ,bR,function()return a0 end,kI,function()return m()==1 end)ki("Enable Repair Arrows","Disable Repair Arrows",kv,ku,bQ+kv+20,bR,function()return aE end,function()aE=not aE;if aE then a2="Repair Arrows Enabled"else a2="Repair Arrows Diabled"end end,function()return m()==1 end)bR=bR+ku+20;if not ExternalAGG then ki("Enable AGG","Disable AGG",kv,ku,bQ,bR,function()return bd end,aM.ToggleAntigrav,function()return antigrav~=nil end)end;ki(function()return f("Switch IPH Mode - Current: %s",iphCondition)end,function()return f("IPH Mode: %s",iphCondition)end,kv*2,ku,bQ,bR,function()return false end,function()if iphCondition=="All"then iphCondition="Custom Only"elseif iphCondition=="Custom Only"then iphCondition="No Moons"else iphCondition="All"end;a2="IPH Mode: "..iphCondition end)bR=bR+ku+20;ki(function()return f("Toggle Control Scheme - Current: %s",userControlScheme)end,function()return f("Control Scheme: %s",userControlScheme)end,kv*2,ku,bQ,bR,function()return false end,function()if userControlScheme=="keyboard"then userControlScheme="mouse"elseif userControlScheme=="mouse"then userControlScheme="virtual joystick"else userControlScheme="keyboard"end;a2="New Control Scheme: "..userControlScheme end)local kQ=g4(20)local button=ke(0,0,g3(70),kQ,"HELP")button=ke(button.x+button.width,button.y,g3(80),kQ,"INFO")button=ke(button.x+button.width,button.y,g3(70),kQ,"ORBIT")button=ke(button.x+button.width,button.y,g3(70),kQ,"SCOPE")ke(button.x+button.width,button.y,g3(70),kQ,"HIDE")end;local kR={}local kS=nil;function kR.HUDPrologue(gK)bj,bk=g1(bb)if not bj then H=PvPR;J=PvPG;I=PvPB;if shield_1 and AutoShieldToggle and shield_1.getState()==0 then shield_1.toggle()end else H=SafeR;J=SafeG;I=SafeB;if shield_1 and AutoShieldToggle and shield_1.getState()==1 then shield_1.toggle()end end;au=[[rgb(]]..e(H+0.6)..","..e(J+0.6)..","..e(I+0.6)..[[)]]av=[[rgb(]]..e(H*0.8+0.5)..","..e(J*0.8+0.5)..","..e(I*0.8+0.5)..[[)]]local kT=au;local kU=av;local kV=[[rgb(]]..e(H*0.4+0.5)..","..e(J*0.4+0.5)..","..e(I*0.4+0.5)..[[)]]local kW=au;local kX=av;local kY=kV;if g5()and not brightHud then kT=[[rgb(]]..e(H*0.5+0.5)..","..e(J*0.5+0.5)..","..e(I*0.5+0.5)..[[)]]kU=[[rgb(]]..e(H*0.3+0.5)..","..e(J*0.3+0.5)..","..e(I*0.2+0.5)..[[)]]kV=[[rgb(]]..e(H*0.2+0.5)..","..e(J*0.2+0.5)..","..e(I*0.2+0.5)..[[)]]end;local iC=g3;local iD=g4;gK[#gK+1]=f([[
                        <head>
                            <style>
                                body {margin: 0}
                                svg {position:absolute;top:0;left:0;font-family:Montserrat;} 
                                .txt {font-size:10px;font-weight:bold;}
                                .txttick {font-size:12px;font-weight:bold;}
                                .txtbig {font-size:14px;font-weight:bold;}
                                .altsm {font-size:16px;font-weight:normal;}
                                .altbig {font-size:21px;font-weight:normal;}
                                .line {stroke-width:2px;fill:none;stroke:%s}
                                .linethick {stroke-width:3px;fill:none}
                                .linethin {stroke-width:1px;fill:none}
                                .warnings {font-size:26px;fill:red;text-anchor:middle;font-family:Bank;}
                                .warn {fill:orange; font-size:24px}
                                .crit {fill:darkred;font-size:28px}
                                .bright {fill:%s;stroke:%s}
                                text.bright {stroke:black; stroke-width:10px;paint-order:stroke;}
                                .pbright {fill:%s;stroke:%s}
                                text.pbright {stroke:black; stroke-width:10px;paint-order:stroke;}
                                .dim {fill:%s;stroke:%s}
                                text.dim {stroke:black; stroke-width:10px;paint-order:stroke;}
                                .pdim {fill:%s;stroke:%s}
                                text.pdim {stroke:black; stroke-width:10px;paint-order:stroke;}
                                .red {fill:red;stroke:red}
                                text.red {stroke:black; stroke-width:10px;paint-order:stroke;}
                                .orange {fill:orange;stroke:orange}
                                text.orange {stroke:black; stroke-width:10px;paint-order:stroke;}
                                .redout {fill:none;stroke:red}
                                .op30 {opacity:0.3}
                                .op10 {opacity:0.1}
                                .txtstart {text-anchor:start}
                                .txtend {text-anchor:end}
                                .txtmid {text-anchor:middle}
                                .txtvspd {font-family:sans-serif;font-weight:normal}
                                .txtvspdval {font-size:20px}
                                .txtfuel {font-size:11px;font-weight:bold}
                                .txtorb {font-size:12px}
                                .txtorbbig {font-size:18px}
                                .hudver {font-size:10px;font-weight:bold;fill:red;text-anchor:end;font-family:Bank}
                                .msg {font-size:40px;fill:red;text-anchor:middle;font-weight:normal}
                                .cursor {stroke:white}
                                text { stroke:black; stroke-width:10px;paint-order:stroke;}
                                .dimstroke {stroke:%s}
                                .brightstroke {stroke:%s}
                                .indicatorText {font-size:20px;fill:white}
                                .size14 {font-size:14px}
                                .size20 {font-size:20px}
                                .topButton {fill:%s;opacity:0.5;stroke-width:2;stroke:%s}
                                .topButtonActive {fill:url(#RadialGradientCenter);opacity:0.8;stroke-width:2;stroke:%s}
                                .topButton text {font-size:13px; fill: %s; opacity:1; stroke-width:20px}
                                .topButtonActive text {font-size:13px;fill:%s; stroke-width:0px; opacity:1}
                                .indicatorFont {font-size:20px;font-family:Bank}
                                .dimmer {stroke: %s;}
                                .pdimfill {fill: %s;}
                                .dimfill {fill: %s;}
                            </style>
                        </head>
                        <body>
                            <svg height="100%%" width="100%%" viewBox="0 0 %d %d">
                                <defs>
                                    <radialGradient id="RadialGradientCenterTop" cx="0.5" cy="0" r="1">
                                        <stop offset="0%%" stop-color="%s" stop-opacity="0.5"/>
                                        <stop offset="100%%" stop-color="black" stop-opacity="0"/>
                                    </radialGradient>
                                    <radialGradient id="RadialGradientRightTop" cx="1" cy="0" r="1">
                                        <stop offset="0%%" stop-color="%s" stop-opacity="0.5"/>
                                        <stop offset="200%%" stop-color="black" stop-opacity="0"/>
                                    </radialGradient>
                                    <radialGradient id="ThinRightTopGradient" cx="1" cy="0" r="1">
                                        <stop offset="0%%" stop-color="%s" stop-opacity="0.2"/>
                                        <stop offset="200%%" stop-color="black" stop-opacity="0"/>
                                    </radialGradient>
                                    <radialGradient id="RadialGradientLeftTop" cx="0" cy="0" r="1">
                                        <stop offset="0%%" stop-color="%s" stop-opacity="0.5"/>
                                        <stop offset="200%%" stop-color="black" stop-opacity="0"/>
                                    </radialGradient>
                                    <radialGradient id="ThinLeftTopGradient" cx="0" cy="0" r="1">
                                        <stop offset="0%%" stop-color="%s" stop-opacity="0.2"/>
                                        <stop offset="200%%" stop-color="black" stop-opacity="0"/>
                                    </radialGradient>
                                    <radialGradient id="RadialGradientCenter" cx="0.5" cy="0.5" r="1">
                                        <stop offset="0%%" stop-color="%s" stop-opacity="0.8"/>
                                        <stop offset="100%%" stop-color="%s" stop-opacity="0.5"/>
                                    </radialGradient>
                                    <radialGradient id="RadialPlanetCenter" cx="0.5" cy="0.5" r="0.5">
                                        <stop offset="0%%" stop-color="%s" stop-opacity="1"/>
                                        <stop offset="100%%" stop-color="%s" stop-opacity="1"/>
                                    </radialGradient>
                                    <radialGradient id="RadialAtmo" cx="0.5" cy="0.5" r="0.5">
                                        <stop offset="0%%" stop-color="%s" stop-opacity="1"/>
                                        <stop offset="66%%" stop-color="%s" stop-opacity="1"/>
                                        <stop offset="100%%" stop-color="%s" stop-opacity="0.1"/>
                                    </radialGradient>                            
                                </defs>
                                <g class="pdim txt txtend">
                                
                            ]],kT,kT,kT,kW,kW,kU,kU,kX,kX,kU,kT,kV,kX,kT,kT,kV,kV,kY,kV,ay,az,kU,kU,kU,kU,kU,kW,kU,kX,kY,kX,kX,kY)if not kS then kS=f([[<path class="linethick brightstroke" style="fill:url(#RadialGradientCenterTop);" d="M %f %f L %f %f L %f %f %f %f L %f %f"/>
                        <path class="linethick brightstroke" style="fill:url(#RadialGradientRightTop);" d="M %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f Z"/>
                        
                        <path class="linethick brightstroke" style="fill:url(#RadialGradientLeftTop);" d="M %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f Z"/>
                        
                        <clipPath id="headingClip">
                            <path class="linethick dimstroke" style="fill:black;fill-opacity:0.4;" d="M %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f Z"/>
                        </clipPath>
                        <path class="linethick dimstroke" style="fill:black;fill-opacity:0.4;" d="M %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f Z"/>]],iC(630),iD(0),iC(675),iD(45),iC(960),iD(55),iC(1245),iD(45),iC(1290),iD(0),iC(1000),iD(105),iC(1040),iD(59),iC(1250),iD(51),iC(1300),iD(0),iC(1920),iD(0),iC(1920),iD(20),iC(1400),iD(20),iC(1300),iD(105),iC(920),iD(105),iC(880),iD(59),iC(670),iD(51),iC(620),iD(0),iC(0),iD(0),iC(0),iD(20),iC(520),iD(20),iC(620),iD(105),iC(890),iD(59),iC(960),iD(62),iC(1030),iD(59),iC(985),iD(112),iC(1150),iD(112),iC(1100),iD(152),iC(820),iD(152),iC(780),iD(112),iC(935),iD(112),iC(890),iD(59),iC(960),iD(62),iC(1030),iD(59),iC(985),iD(112),iC(1150),iD(112),iC(1100),iD(152),iC(820),iD(152),iC(780),iD(112),iC(935),iD(112))end;if showHud and DisplayOdometer then gK[#gK+1]=kS end;return gK end;function kR.DrawVerticalSpeed(gK,cL)gJ(gK,cL)end;function kR.UpdateHud(gK)local hz=bg;local kZ=bh;local gS=kZ;local h6=hz;local hR=e(unit.getThrottle())local hW=b8*3.6;local hS=unit.getAxisCommandValue(0)local k_=g3(1770)local l0=g4(310)if AtmoSpeedAssist and bf then hS=K;hR=K*100 end;local g7=g6()local gT="ROLL"if hR==nil then hR=0 end;if not bn then if b8>5 then hz=hy(b6)kZ=hA(b6)else hz=0;kZ=0 end;gT="YAW"end;if bk>50000 and not am then local l1;l1=bY(bk)gK[#gK+1]=bP(k_,l0,"PvP Boundary: "..l1,"pbright txtbig txtmid")end;gK[#gK+1]=ag;gK[#gK+1]=ax;gK[#gK+1]=fK;if fV~=""then gK[#gK+1]=fV end;if g9~=""then gK[#gK+1]=g9 end;if ga~=""then gK[#gK+1]=ga end;gJ(gK,ao)if m()==0 or RemoteHud then if bn then gR(gK,centerX,centerY,gS,gT,bn)else gR(gK,centerX,centerY,kZ,gT,bn)end;if not g5()or brightHud then if bn then gR(gK,centerX,centerY,gS,gT,bn)h5(gK,h6,gS,centerX,centerY,bn,e(hA(b6)),b8)else gR(gK,centerX,centerY,kZ,gT,bn)h5(gK,hz,kZ,centerX,centerY,bn,e(kZ),b8)end;hc(gK,ao,bn)hB(gK,b6,b8,centerX,centerY)end end;hQ(gK,g7,hR,hS)hV(gK,hW)hZ(gK)iT(gK)return gK end;function kR.HUDEpilogue(gK)gK[#gK+1]="</svg>"return gK end;function kR.ExtraData(gK)local l2=g3(1240)local l3=g4(55)local l4=l3+10;local l5;local iC=g3;local iD=g4;local l6=0;local g7=g6()if VertTakeOffEngine then g7=g7 .."-VERTICAL"end;if CollisionSystem and not AutoTakeoff and not BrakeLanding and b8>20 then g7=g7 .."-COLLISION ON"end;if UseExtra~="Off"then g7="("..UseExtra..")-"..g7 end;if TurnBurn then g7="TB-"..g7 end;if not stablized then g7=g7 .."-DeCoupled"end;local l7=iD(99)local l8=iD(80)local l9=iD(85)local la=iD(31)local lb=0;local lc=0;local ld=ar>1000000 and A(ar/1000000,2).."kT"or A(ar/1000,2).."T"if am then l6=LastMaxBrakeInAtmo else l6=LastMaxBrake end;local le,lf=aH.computeDistanceAndTime(b8,0,ar,0,0,l6)if le<0 then le=0 end;l6=A(l6/(ar*fM),2).."g"local lg=a:maxForceForward()l5=core.g()if l5>0.1 then lc=ar*l5;lc=A(lc/(ar*fM),2).."g"lb=0.5*lg/l5;lb=lb>1000000 and A(lb/1000000,2).."kT"or A(lb/1000,2).."T"end;lg=A(lg/(ar*fM),2).."g"local lh=vec3(core.getWorldAcceleration()):len()/9.80665;l5=core.g()gK[#gK+1]=[[<g class="dim txt txtend size14">]]if m()==1 and not RemoteHud then l2=g3(1120)l3=g4(55)l4=l3+10 elseif am and DisplayOdometer then local li=g3(770)gK[#gK+1]=bP(iC(895),l7,"ATMO","")gK[#gK+1]=f([[<path class="linethin dimstroke"  d="M %f %f l %f 0"/>]],iC(895),l9,iC(-80))gK[#gK+1]=bP(iC(815),l8,f("%.1f%%",an*100),"txtstart size20")end;if DisplayOdometer then gK[#gK+1]=bP(iC(1025),l7,"GRAVITY","txtstart")gK[#gK+1]=f([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],iC(1025),l9,iC(80))gK[#gK+1]=bP(iC(1105),l8,f("%.2fg",l5/9.80665),"size20")gK[#gK+1]=bP(iC(1125),l7,"ACCEL","txtstart")gK[#gK+1]=f([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],iC(1125),l9,iC(80))gK[#gK+1]=bP(iC(1205),l8,f("%.2fg",lh),"size20")gK[#gK+1]=bP(iC(695),l7,"BRK TIME","")gK[#gK+1]=f([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],iC(695),l9,iC(-80))gK[#gK+1]=bP(iC(615),l8,f("%s",c0(lf)),"txtstart size20")gK[#gK+1]=bP(iC(635),iD(45),"TRIP","")gK[#gK+1]=f([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],iC(635),iD(31),iC(-90))if travelTime then gK[#gK+1]=bP(iC(532),iD(23),f("%s",c0(travelTime)),"txtstart size20")end;gK[#gK+1]=bP(iC(795),l7,"BRK DIST","")gK[#gK+1]=f([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],iC(795),l9,iC(-80))gK[#gK+1]=bP(iC(715),l8,f("%s",bY(le)),"txtstart size20")gK[#gK+1]=bP(iC(1285),iD(45),"MASS","txtstart")gK[#gK+1]=f([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],iC(1285),iD(31),iC(90))gK[#gK+1]=bP(iC(1388),iD(23),f("%s",ld),"size20")gK[#gK+1]=bP(iC(1220),l7,"THRUST","txtstart")gK[#gK+1]=f([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],iC(1220),l9,iC(80))gK[#gK+1]=bP(iC(1300),l8,f("%s",lg),"size20")gK[#gK+1]=bP(g3(960),g4(175),g7,"pbright txtbig txtmid size20")end;gK[#gK+1]="</g>"end;function kR.DrawOdometer(gK,a9,TotalDistanceTravelled,aa)if SelectedTab~="INFO"then return gK end;local l5;local lb=0;local lc=0;local l6=0;local ld=ar>1000000 and A(ar/1000000,2).." kTons"or A(ar/1000,2).." Tons"if am then l6=LastMaxBrakeInAtmo else l6=LastMaxBrake end;local le,lf=aH.computeDistanceAndTime(b8,0,ar,0,0,l6)l6=A(l6/(ar*fM),2).." g"local lg=a:maxForceForward()l5=core.g()if l5>0.1 then lc=ar*l5;lc=A(lc/(ar*fM),2).." g"lb=0.5*lg/l5;lb=lb>1000000 and A(lb/1000000,2).." kTons"or A(lb/1000,2).." Tons"end;lg=A(lg/(ar*fM),2).." g"if m()==0 or RemoteHud then local lj=g3(OrbitMapX+10)local lk=g4(OrbitMapY+20)local ll=g3(OrbitMapX+10+OrbitMapSize/1.25)local kg=25;gK[#gK+1]="<g class='txtstart size14 bright'>"gK[#gK+1]=bP(lj,lk,f("BrkTime: %s",c0(lf)))gK[#gK+1]=bP(ll,lk,f("Trip: %.2f km",a9))gK[#gK+1]=bP(lj,lk+kg,f("Lifetime: %.2f kSU",TotalDistanceTravelled/200000))gK[#gK+1]=bP(ll,lk+kg,f("BrkDist: %s",bY(le)))gK[#gK+1]=bP(lj,lk+kg*2,"Trip Time: "..c0(aa))gK[#gK+1]=bP(ll,lk+kg*2,"Total Time: "..c0(TotalFlightTime))gK[#gK+1]=bP(lj,lk+kg*3,f("Mass: %s",ld))gK[#gK+1]=bP(ll,lk+kg*3,f("Max Brake: %s",l6))gK[#gK+1]=bP(lj,lk+kg*4,f("Max Thrust: %s",lg))if l5>0.1 then gK[#gK+1]=bP(ll,lk+kg*4,f("Max Thrust Mass: %s",lb))gK[#gK+1]=bP(lj,lk+kg*5,f("Req Thrust: %s",lc))else gK[#gK+1]=bP(ll,lk+kg*5,"Max Mass: n/a")gK[#gK+1]=bP(lj,lk+kg*6,"Req Thrust: n/a")end end;gK[#gK+1]="</g></g>"return gK end;function kR.DrawWarnings(gK)return hZ(gK)end;function kR.DisplayOrbitScreen(gK)return iT(gK)end;function kR.DisplayMessage(gK,il)if il~="empty"then local bR=310;for lm in string.gmatch(il,"([^\n]+)")do bR=bR+35;gK[#gK+1]=bP("50%",bR,lm,"msg")end end;if ae~=0 then unit.setTimer("msgTick",ae)ae=0 end end;function kR.DrawDeadZone(gK)gK[#gK+1]=f([[<circle class="dim line" style="fill:none" cx="50%%" cy="50%%" r="%d"/>]],DeadZone)end;function kR.UpdatePipe()if am then fV=""return end;k5()end;function kR.DrawSettings(gK)if#fU>0 then local bQ=g3(640)local bR=g4(200)gK[#gK+1]=[[<g class="pbright txtvspd txtstart">]]for c9,ca in pairs(fU)do gK[#gK+1]=bP(bQ,bR,ca..": ".._G[ca])bR=bR+20;if c9%12==0 then bQ=bQ+g3(350)bR=g4(200)end end;gK[#gK+1]=bP(g3(640),g4(200)+260,"To Change: In Lua Chat, enter /G VariableName Value")gK[#gK+1]="</g>"end;return gK end;local perisPanelID;local fH=g3(1770)local fI=g4(350)local fG=g4(15)local fF=g3(1370)local by,ln;local peris=0;function kR.DrawRadarInfo()fK=aN.GetRadarHud(fF,fG,fH,fI)end;function kR.DrawTanks()if fuelX~=0 and fuelY~=0 then g9=bP(fuelX,fuelY,"","txtstart pdim txtfuel")tankY=fuelY;gq(fuelX,"Atmospheric ","ATMO",aA,go,gp)gq(fuelX,"Space Fuel T","SPACE",aB,gm,gn)gq(fuelX,"Rocket Fuel ","ROCKET",aC,gk,gl)end end;function kR.DrawShield()local lo=shield_1.getState()==1 and"Shield Active"or"Shield Disabled"local lp=core.getPvPTimer()local lq=shield_1.getResistances()local lr="A: "..10+lq[1]*100 .."% / E: "..10+lq[2]*100 .."% / K:"..10+lq[3]*100 .."% / T: "..10+lq[4]*100 .."%"local bQ,bR=shieldX-60,shieldY+30;local ls=e(0.5+shield_1.getShieldHitpoints()*100/shield_1.getMaxShieldHitpoints())local gE=e(ls*2.55)local gF=f("rgb(%d,%d,%d)",255-gE,gE,0)local bT=""ga=bP(bQ,bR,"","txtmid pdim txtfuel")if ls<10 and lo~="Shield Disabled"then bT="red "end;lp=lp>0 and"   PvPTime: "..c0(lp)or""ga=ga..f([[
                        <g class="pdim">                        
                        <rect fill=grey class="bar" x="%d" y="%d" width="200" height="13"></rect></g>
                        <g class="bar txtstart">
                        <rect fill=%s width="%d" height="13" x="%d" y="%d"></rect>
                        <text fill=black x="%d" y="%d">%s%%%s</text>
                        </g>]],bQ,bR,gF,ls*2,bQ,bR,bQ+2,bR+10,ls,lp)ga=ga..bP(bQ,bR-5,lo,bT.."txtstart pbright txtbig")ga=ga..bP(bQ,bR+30,lr,bT.."txtstart pbright txtsmall")end;function kR.hudtick()if not planet then return end;local function lt(gK)local gH=e(r(af/(ay/4)*255,0,255))gK[#gK+1]=f("<line x1='0' y1='0' x2='%fpx' y2='%fpx' style='stroke:rgb(%d,%d,%d);stroke-width:2;transform:translate(50%%, 50%%)' />",ac,ad,e(H+0.5)+gH,e(J+0.5)-gH,e(I+0.5)-gH)end;local function lu()for _,ca in pairs(fN)do if ca.hovered then if not ca.drawCondition or ca.drawCondition(ca)then ca.toggleFunction(ca)end;ca.hovered=false end end;for _,ca in pairs(bs)do if ca.hovered then SelectedTab=ca.label;ca.hovered=false end end end;local function lv()local function lw(lx,ly,bQ,bR,kf,kg)if lx>=bQ and lx<=bQ+kf and ly>=bR and ly<=bR+kg then return true else return false end end;local bQ=ac+ay/2;local bR=ad+az/2;for _,ca in pairs(fN)do ca.hovered=lw(bQ,bR,ca.x,ca.y,ca.width,ca.height)end;for _,ca in pairs(bs)do ca.hovered=lw(bQ,bR,ca.x,ca.y,ca.width,ca.height)end;if bq then local jV=false;for _,bX in ipairs(apExtraButtons)do if bX.hovered then jV=true;break end end;if apbutton.hovered then jV=true end;bq=jV else bq=apbutton.hovered;if not bq then br=AutopilotTargetIndex end end end;local function lz(gK)if not SelectedTab or SelectedTab==""then SelectedTab="HELP"end;if showHud then for c9,ca in pairs(bs)do local bT="dim brightstroke"local lA=0.2;if SelectedTab==c9 then bT="pbright dimstroke"lA=0.6 end;local lB=""if ca.hovered then lA=0.8;lB=";stroke:white"end;gK[#gK+1]=f([[<rect width="%f" height="%d" x="%d" y="%d" clip-path="url(#round-corner)" class="%s" style="stroke-width:1;fill-opacity:%f;%s" />]],ca.width,ca.height,ca.x,ca.y,bT,lA,lB)gK[#gK+1]=bP(ca.x+ca.width/2,ca.y+ca.height/2+5,ca.label,"txt txtmid pdim")end end end;local function lC(gK)local function lD(gK,lE,hover,bQ,bR,dU,lF,lG,lH,lI,lJ,button)if type(lI)=="function"then lI=lI(button)end;if type(lJ)=="function"then lJ=lJ(button)end;gK[#gK+1]=f("<rect x='%f' y='%f' width='%f' height='%f' fill='",bQ,bR,dU,lF)if lE then gK[#gK+1]=f("%s'",lG)else gK[#gK+1]=lH end;if hover then gK[#gK+1]=f(" style='stroke:rgb(%d,%d,%d); stroke-width:2'",SafeR,SafeG,SafeB)else gK[#gK+1]=f(" style='stroke:rgb(%d,%d,%d); stroke-width:1'",A(SafeR*0.5,0),A(SafeG*0.5,0),A(SafeB*0.5,0))end;gK[#gK+1]=" rx='5'></rect>"gK[#gK+1]=f("<text x='%f' y='%f' font-size='24' fill='",bQ+dU/2,bR+lF/2+5)if lE then gK[#gK+1]="black"else gK[#gK+1]="white"end;gK[#gK+1]="' text-anchor='middle' font-family='Play' style='stroke-width:0px;'>"if lE then gK[#gK+1]=f("%s</text>",lI)else gK[#gK+1]=f("%s</text>",lJ)end end;local lK=f("rgb(%d,%d,%d)'",A(SafeR*0.1,0),A(SafeG*0.1,0),A(SafeB*0.1,0))local lL=f("rgb(%d,%d,%d)",A(SafeR*0.8,0),A(SafeG*0.8,0),A(SafeB*0.8,0))local lM=lD;for _,ca in pairs(fN)do local kk=ca.disableName;local kj=ca.enableName;if type(kk)=="function"then kk=kk(ca)end;if type(kj)=="function"then kj=kj(ca)end;if not ca.drawCondition or ca.drawCondition(ca)then lM(gK,ca.toggleVar(ca),ca.hovered,ca.x,ca.y,ca.width,ca.height,lL,lK,kk,kj,ca)end end end;local lN=A(ay/2,0)local lO=A(az/2,0)local gK={}aK.HUDPrologue(gK)if showHud then aK.UpdateHud(gK)else if AlwaysVSpd then aK.DrawVerticalSpeed(gK,ao)end;aK.DrawWarnings(gK)end;if fT and fU~={}then aK.DrawSettings(gK)end;if radar_1 then aK.DrawRadarInfo()end;aK.HUDEpilogue(gK)gK[#gK+1]=f([[<svg width="100%%" height="100%%" style="position:absolute;top:0;left:0"  viewBox="0 0 %d %d">]],ay,az)if a2~="empty"then aK.DisplayMessage(gK,a2)end;if m()==0 and userControlScheme=="virtual joystick"then if DisplayDeadZone then aK.DrawDeadZone(gK)end end;lz(gK)if x()==0 then if m()==1 and a1 then if not AltIsOn then lv()lC(gK)end;if not aP and not aQ then local lP=table.concat(gK,"")gK={}gK[#gK+1]=f("<style>@keyframes test { from { opacity: 0; } to { opacity: 1; } }  body { animation-name: test; animation-duration: 0.5s; }</style><body><svg width='100%%' height='100%%' position='absolute' top='0' left='0'><rect width='100%%' height='100%%' x='0' y='0' position='absolute' style='fill:rgb(6,5,26);'/></svg><svg width='50%%' height='50%%' style='position:absolute;top:30%%;left:25%%' viewbox='0 0 %d %d'>",ay,az)gK[#gK+1]=lP;gK[#gK+1]="</body>"aP=true;gK[#gK+1]=[[</svg></body>]]unit.setTimer("animateTick",0.5)local content=table.concat(gK,"")system.setScreen(content)elseif aQ then local lP=table.concat(gK,"")gK={}gK[#gK+1]=f("<body style='background-color:rgb(6,5,26)'><svg width='50%%' height='50%%' style='position:absolute;top:30%%;left:25%%' viewbox='0 0 %d %d'>",ay,az)gK[#gK+1]=lP;gK[#gK+1]="</body>"end;if not aP then gK[#gK+1]=f([[<g transform="translate(%d %d)"><circle class="cursor" cx="%fpx" cy="%fpx" r="5"/></g>]],lN,lO,ac,ad)end else lu()end else if not a1 and m()==0 then lu()if af>DeadZone then if DisplayDeadZone then lt(gK)end end elseif a1 and(not AltIsOn or not freeLookToggle)then lv()lC(gK)end;gK[#gK+1]=f([[<g transform="translate(%d %d)"><circle class="cursor" cx="%fpx" cy="%fpx" r="5"/></g>]],lN,lO,ac,ad)end;gK[#gK+1]=[[</svg></body>]]content=table.concat(gK,"")end;function kR.TenthTick()aK.DrawTanks()if shield_1 then aK.DrawShield()end end;function kR.OneSecond(gK)local function lQ()local gA=q()local hW=b8;local lR=gA-aq;if hW>1.38889 then hW=hW/1000;local lS=hW*(gA-aq)TotalDistanceTravelled=TotalDistanceTravelled+lS;a9=a9+lS end;aa=aa+lR;TotalFlightTime=TotalFlightTime+lR;aq=gA end;lQ()aK.UpdatePipe()aK.ExtraData(gK)end;function kR.ButtonSetup()ks()kx()fN=fO end;return kR end;local function lT()local function lU(position)local p=sys:closestBody(position)if(position-p.center):len()>p.radius+p.noAtmosphericDensityAltitude then p=b[0][0]end;return p end;local function lV()local function lW(lX,lY)return lX.name<lY.name end;bi={}for c9,ca in pairs(b[0])do bi[#bi+1]={name=ca.name,index=c9}end;table.sort(bi,lW)end;local function lZ(l_)for c9,ca in pairs(l_)do if ca.name and ca.name==CustomTarget.name then return c9 end end;return-1 end;local function m0()br=AutopilotTargetIndex;if AutopilotTargetIndex==0 then AutopilotTargetName="None"a8=nil;CustomTarget=nil;return true end;local m1=bi[AutopilotTargetIndex].index;local m2=b[0][m1]if m2.center then AutopilotTargetName=m2.name;a8=aG[0][m1]if CustomTarget~=nil then if an==0 then if u(widgetMaxBrakeTimeText,widgetMaxBrakeTime)~=1 then v(widgetMaxBrakeTimeText,widgetMaxBrakeTime)end;if u(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)~=1 then v(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)end;if u(widgetCurBrakeTimeText,widgetCurBrakeTime)~=1 then v(widgetCurBrakeTimeText,widgetCurBrakeTime)end;if u(widgetCurBrakeDistanceText,widgetCurBrakeDistance)~=1 then v(widgetCurBrakeDistanceText,widgetCurBrakeDistance)end;if u(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)~=1 then v(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)end end;if u(widgetMaxMassText,widgetMaxMass)~=1 then v(widgetMaxMassText,widgetMaxMass)end;if u(widgetTravelTimeText,widgetTravelTime)~=1 then v(widgetTravelTimeText,widgetTravelTime)end;if u(widgetTargetOrbitText,widgetTargetOrbit)~=1 then v(widgetTargetOrbitText,widgetTargetOrbit)end end;CustomTarget=nil else CustomTarget=m2;for _,ca in pairs(aG[0])do if ca.name==CustomTarget.planetname then a8=ca;AutopilotTargetName=CustomTarget.name;break end end;if u(widgetMaxMassText,widgetMaxMass)~=1 then v(widgetMaxMassText,widgetMaxMass)end;if u(widgetTravelTimeText,widgetTravelTime)~=1 then v(widgetTravelTimeText,widgetTravelTime)end end;if CustomTarget==nil then AutopilotTargetCoords=vec3(a8.center)else AutopilotTargetCoords=CustomTarget.position end;if a8.planetname~="Space"then if a8.hasAtmosphere then AutopilotTargetOrbit=e(a8.radius*(TargetOrbitRadius-1)+a8.noAtmosphericDensityAltitude)else AutopilotTargetOrbit=e(a8.radius*(TargetOrbitRadius-1)+a8.surfaceMaxAltitude)end else AutopilotTargetOrbit=AutopilotSpaceDistance end;if CustomTarget~=nil and CustomTarget.planetname=="Space"then AutopilotEndSpeed=0 else _,AutopilotEndSpeed=aJ(a8):escapeAndOrbitalSpeed(AutopilotTargetOrbit)end;AutopilotPlanetGravity=0;AutopilotAccelerating=false;AutopilotBraking=false;AutopilotCruising=false;Autopilot=false;AutopilotRealigned=false;AutopilotStatus="Aligning"return true end;local function m3(gO)if not Autopilot and not VectorToTarget and not ai and not IntoOrbit and not Reentry and not aj then if gO==nil then AutopilotTargetIndex=AutopilotTargetIndex+1;if AutopilotTargetIndex>#bi then AutopilotTargetIndex=0 end else AutopilotTargetIndex=AutopilotTargetIndex-1;if AutopilotTargetIndex<0 then AutopilotTargetIndex=#bi end end;if AutopilotTargetIndex==0 then m0()else local m1=bi[AutopilotTargetIndex].index;local m2=b[0][m1]if m2~=nil and m2.name=="Space"or iphCondition=="Custom Only"and m2.center or iphCondition=="No Moons"and string.find(m2.name,"Moon")~=nil then if gO==nil then m3()else m3(1)end else m0()end end else a2="Disengage autopilot before changing Interplanetary Helper"bC("iph","AP")end end;local function kD()local fg=-1;fg=lZ(b[0])if fg>-1 then table.remove(b[0],fg)end;fg=-1;fg=lZ(SavedLocations)if fg~=-1 then a2=CustomTarget.name.." saved location cleared"table.remove(SavedLocations,fg)end;m3()lV()end;local function ky(fv,position,hv,m4)if dbHud_1 or hv then local p=lU(position)local l5=p.gravity;if m4 then l5=unit.getClosestPlanetInfluence()end;local m5={position=position,name=fv,planetname=p.name,gravity=l5,safe=m4}if not hv then SavedLocations[#SavedLocations+1]=m5 else for c9,ca in pairs(b[0])do if ca.name and fv==ca.name then table.remove(b[0],c9)end end end;table.insert(b[0],m5)lV()m0()a2="Location saved as "..fv.."("..p.name..")"else a2="Databank must be installed to save permanent locations"end end;local m6={}function m6.UpdateAtlasLocationsList()lV()end;function m6.UpdateAutopilotTarget()m0()end;function m6.adjustAutopilotTargetIndex(gO)m3(gO)end;function m6.findAtlasIndex(l_)lZ(l_)end;function m6.UpdatePosition(m7)local fg=lZ(SavedLocations)if fg~=-1 then if m7~=nil then SavedLocations[fg].name=m7;AutopilotTargetIndex=AutopilotTargetIndex-1;m3()else local m8=SavedLocations[fg]m8.gravity=unit.getClosestPlanetInfluence()m8.position=bb;m8.safe=true end;a2=SavedLocations[fg].name.." position updated ("..SavedLocations[fg].planetname..")"else a2="Name Not Found"end end;function m6.AddNewLocation(fv,position,hv,m4)ky(fv,position,hv,m4)end;function m6.ClearCurrentPosition()kD()end;for c9,ca in pairs(SavedLocations)do table.insert(b[0],ca)end;lV()if AutopilotTargetIndex>#bi then AutopilotTargetIndex=0 end;m6.UpdateAutopilotTarget()return m6 end;local function m9()local ma={}local function mb(e0)local mc=AutopilotEndSpeed;if not Autopilot then mc=0 end;if not am then return aH.computeDistanceAndTime(e0,mc,ar,0,0,LastMaxBrake-AutopilotPlanetGravity*ar)else if LastMaxBrakeInAtmo and LastMaxBrakeInAtmo>0 then return aH.computeDistanceAndTime(e0,mc,ar,0,0,LastMaxBrakeInAtmo-AutopilotPlanetGravity*ar)else return 0,0 end end end;local function md(e0)local mc=AutopilotEndSpeed;if not Autopilot then mc=0 end;return aH.computeDistanceAndTime(e0,mc,ar,a:maxForceForward(),warmup,LastMaxBrake-AutopilotPlanetGravity*ar)end;local me=false;local mf=0;local mg=0;local mh=0;local mi=q()local mj=0;local mk=0;local ml=0;local mm=0;local mn=false;local mo=false;local mp=false;local mq=nil;local mr=0;local ms={}function ma.GetAutopilotBrakeDistanceAndTime(e0)return mb(e0)end;function ma.GetAutopilotTBBrakeDistanceAndTime(e0)return md(e0)end;local function mt(mu,mv,mw)mv=mv:project_on_plane(mu)mw=mw:project_on_plane(mu)return n(mv:cross(mw):dot(mu),mv:dot(mw))end;local function mx()local function my()local mz=-1;local mA=-1;if vBooster then mz=vBooster.getDistance()end;if hover then mA=hover.getDistance()end;if mz~=-1 and mA~=-1 then if mz<mA then return mz else return mA end elseif mz~=-1 then return mz elseif mA~=-1 then return mA else return-1 end end;local mB=my()local mC=-1;if telemeter_1 then mC=telemeter_1.getDistance()end;if mB~=-1 and mC~=-1 then if mB<mC then return mB else return mC end elseif mB~=-1 then return mB else return mC end end;local function mD(planet,dm,mE)local function mF(mG,cF)local dt=vec3(cF)if mG.id==0 then return setmetatable({latitude=dt.x,longitude=dt.y,altitude=dt.z,id=0,systemId=mG.systemId},MapPosition)end;local du=dt-mG.center;local af=du:len()local cL=af-mG.radius;local cJ=0;local cK=0;if not bV(af,0)then local dv=n(du.y,du.x)cK=dv>=0 and dv or 2*math.pi+dv;cJ=math.pi/2-math.acos(du.z/af)end;return setmetatable({latitude=math.deg(cJ),longitude=math.deg(cK),altitude=cL,id=mG.id,systemId=mG.systemId},MapPosition)end;local mH=mF(planet,dm)mH="::pos{"..mH.systemId..","..mH.id..","..mH.latitude..","..mH.longitude..","..mH.altitude.."}"if mE then return mH else system.setWaypoint(mH)return true end end;local mI=false;function ma.showWayPoint(planet,dm,mE)return mD(planet,dm,mE)end;function ma.APTick()local function mJ()if bp and not BrakeLanding then local d5=bp[1]local fw,fx=bp[2],bp[3]local mK=math.min(fw,fx or fw)local mL=mK/b8;local mM=AutoTakeoff and(b8<42 or ak~=-1)local mN=AltitudeHold or VectorToTarget or LockPitch or Autopilot;if mN and not mM and(a4*1.5>mK or mL<1)then BrakeIsOn=true;aM.cmdThrottle(0)if AltitudeHold then aM.ToggleAltitudeHold()end;if LockPitch then ToggleLockPitch()end;a2="Autopilot Cancelled due to possible collision"if VectorToTarget or Autopilot then ms={}aM.ToggleAutopilot()end;StrongBrakes=true;BrakeLanding=true;aR=true end;if mL<11 then bo=d5.name.." COLLISION "..c0(mL).." / "..bY(mK,2)else bo=d5.name.." collision "..c0(mL)end;if mL<6 then bC("alarm","AL",2)end else bo=false end end;local function mO(mP,mQ,mR)local function mS(mP,d7)mP=vec3(mP)d7=vec3(d7):normalize()local cq=mP*d7;return cq.x+cq.y+cq.z end;local mT=0.001;local mU=1;if not am or not aT or ak~=-1 or b8<Q then if mR==nil then mR=DampingMultiplier end;if mQ==nil then mQ=mT end;mP=vec3(mP):normalize()local mV=vec3()-mP;local mW=-mS(mV,core.getConstructWorldOrientationRight())*mU;local mX=-mS(mV,core.getConstructWorldOrientationUp())*mU;if mg==0 then mg=mW/2 end;if mh==0 then mh=mX/2 end;if d(mW)<0.1 then V=V-mW*2 else V=V-(mW+(mW-mg)*mR)end;if d(mX)<0.1 then U=U+mX*2 else U=U+mX+(mX-mh)*mR end;mg=mW;mh=mX;if d(mW)<mQ and d(mX)<mQ then return true end;return false elseif aT and ak==-1 then mP=b7;if mR==nil then mR=DampingMultiplier end;if mQ==nil then mQ=mT end;mP=vec3(mP):normalize()local mV=b4-mP;local mW=-mS(mV,core.getConstructWorldOrientationRight())*mU;local mX=-mS(mV,core.getConstructWorldOrientationUp())*mU;if mg==0 then mg=mW/2 end;if mh==0 then mh=mX/2 end;if d(mW)<0.1 then V=V-mW*5 else V=V-(mW+(mW-mg)*mR)end;if d(mX)<0.1 then U=U+mX*5 else U=U+mX+(mX-mh)*mR end;mg=mW;mh=mX;if d(mW)<mQ and d(mX)<mQ then return true end;return false end end;am=k()>0;an=k()ao=core.getAltitude()ak=mx()E=q()mi=E;if CollisionSystem then mJ()end;if antigrav then bd=antigrav.getState()==1 end;local mY=1;local mZ=1;local m_=E-mi;local n0=-math.deg(mt(b3,b7,b4))local n1=math.deg(mt(b5,b7,b4))local gO=b9*-1;aT=am and n0<-YawStallAngle or n0>YawStallAngle or n1<-PitchStallAngle or n1>PitchStallAngle;local n2=system.getMouseDeltaX()local n3=system.getMouseDeltaY()if InvertMouse and not a1 then n3=-n3 end;V=0;Z=0;U=0;sys=aG[0]planet=sys:closestBody(core.getConstructWorldPos())kepPlanet=aJ(planet)orbit=kepPlanet:orbitalParameters(core.getConstructWorldPos(),b7)if ao==0 then ao=(bb-planet.center):len()-planet.radius end;bn=unit.getClosestPlanetInfluence()>0 or ao>0 and ao<200000;local l5=planet:getGravity(core.getConstructWorldPos()):len()*ar;aU=0;aI=core.getMaxKinematicsParametersAlongAxis("ground",core.getConstructOrientationUp())[1]if x()==0 then if m()==1 and a1 then if not aP then ac=r(ac+n2,-ay/2,ay/2)ad=r(ad+n3,-az/2,az/2)end else ac=0;ad=0 end else ac=r(ac+n2,-ay/2,ay/2)ad=r(ad+n3,-az/2,az/2)af=y(ac*ac+ad*ad)if not a1 and m()==0 then local hI,hJ=n2,n3;if SelectedTab=="SCOPE"then hI,hJ=bw/90,bw/90 end;if userControlScheme=="virtual joystick"then if ac>0 and ac>DeadZone then V=V-(ac-DeadZone)*MouseXSensitivity*hI elseif ac<0 and ac<DeadZone*-1 then V=V-(ac+DeadZone)*MouseXSensitivity*hI else V=0 end;if ad>0 and ad>DeadZone then U=U-(ad-DeadZone)*MouseYSensitivity*hJ elseif ad<0 and ad<DeadZone*-1 then U=U-(ad+DeadZone)*MouseYSensitivity*hJ else U=0 end else ac=0;ad=0;if userControlScheme=="mouse"then U=(-utils.smoothstep(n3,-100,100)+0.5)*2*mY;V=(-utils.smoothstep(n2,-100,100)+0.5)*2*mZ end end end end;local n4=b8>8334;if b8>SpaceSpeedLimit/3.6 and not am and not Autopilot and not n4 then a2="Space Speed Engine Shutoff reached"aM.cmdThrottle(0)end;if not n4 and LastIsWarping then if not BrakeIsOn then aM.BrakeToggle()end;if Autopilot then aM.ToggleAutopilot()end end;LastIsWarping=n4;if am and an>0.09 then if b8>aV/3.6 and not AtmoSpeedAssist and not me then BrakeIsOn=true;me=true elseif not AtmoSpeedAssist and me then if b8<aV/3.6 then BrakeIsOn=false;me=false end end end;if BrakeIsOn then Y=1 else Y=0 end;if ProgradeIsOn then if ah then BrakeIsOn=false;local n5=false;if CustomTarget and ah~=1 then n5=mO(CustomTarget.position-bb,0.1)else n5=mO(vec3(b7),0.01)end;aR=true;if n5 then aM.cmdCruise(e(aV))if(d(bh)<2 or d(bg)>85)and b8>=aV/3.6-1 then BrakeIsOn=false;ProgradeIsOn=false;R=true;if ah~=1 then aj=true end;ah=false;Autopilot=false;aM.BeginReentry()end elseif am and AtmoSpeedAssist then aM.cmdThrottle(1)end elseif b8>Q then mO(vec3(b7),0.01)end end;if RetrogradeIsOn then if am then RetrogradeIsOn=false elseif b8>Q then mO(-vec3(b7))end end;if not ProgradeIsOn and ah and not IntoOrbit then if an==0 then R=true;aM.BeginReentry()ah=false;aj=true else ah=false;aM.ToggleAutopilot()end end;if aj and CustomTarget and(ao<HoldAltitude+250 and ao>HoldAltitude-250)and b8*3.6>aV-250 and d(ba)<25 and an>=0.1 and(CustomTarget.position-bb):len()>2000+ao then aM.ToggleAutopilot()aj=false end;if VertTakeOff then aR=true;local n6=HoldAltitude;if ba<-30 then a2="Unable to achieve lift. Safety Landing."ab=0;aR=autoRollPreference;VertTakeOff=false;BrakeLanding=true elseif not ExternalAGG and bd or HoldAltitude<planet.spaceEngineMinAltitude then if bd then n6=antigrav.getBaseAltitude()end;if ao<n6-100 then aW=0;ab=15;BrakeIsOn=false elseif ba>0 then BrakeIsOn=true;ab=0 elseif ba<-30 then BrakeIsOn=true;ab=15 elseif ao>=n6 then if bd then if Autopilot or VectorToTarget then aM.ToggleVerticalTakeoff()else BrakeIsOn=true;VertTakeOff=false end;a2="Takeoff complete. Singularity engaged"bC("aggLk","AG")else BrakeIsOn=false;a2="VTO complete. Engaging Horizontal Flight"bC("vtoc","VT")aM.ToggleVerticalTakeoff()end;ab=0 end else if an>0.08 then aW=0;BrakeIsOn=false;ab=20 elseif an<0.08 and an>0 then BrakeIsOn=false;if b1 then aW=0;ab=20 else ab=0;aW=36;aM.cmdCruise(3500)end else aR=autoRollPreference;IntoOrbit=true;a_=false;CancelIntoOrbit=false;mn=false;ml=nil;mm=nil;if mq==nil then mq=planet end;aZ=n6;mp=true;VertTakeOff=false end end;if aW~=nil then if vTpitchPID==nil then vTpitchPID=pid.new(2*0.01,0,2*0.1)end;local n7=r(aW-bg,-PitchStallAngle*0.80,PitchStallAngle*0.80)vTpitchPID:inject(n7)local n8=r(vTpitchPID:get(),-1,1)U=n8 end end;if IntoOrbit then local mV;local n9=false;local na=bY(aZ)if mq==nil then mq=planet;if VectorToTarget then mq=a8 end end;if not mp then aZ=e(mq.radius+mq.surfaceMaxAltitude+LowOrbitHeight)if mq.hasAtmosphere then aZ=e(mq.radius+mq.noAtmosphericDensityAltitude+LowOrbitHeight)end;mp=true end;if aY.VectorToTarget and CustomTarget then mV=CustomTarget.position-bb end;local nb,nc=aJ(mq):escapeAndOrbitalSpeed((bb-mq.center):len()-mq.radius)local nd=bh;if not mn then local ne=false;local nf=false;aM.cmdThrottle(0)mm=0;aX="Aligning to orbital path - OrbitHeight: "..na;if aY.VectorToTarget then mO(mV:normalize():project_on_plane(b9))n9=b4:dot(mV:project_on_plane(b3):normalize())>0.95 else mO(b7)n9=n0<0.5;if b8<150 then n9=true end end;U=0;ml=0;if bg<=ml+1 and bg>=ml-1 then ne=true else ne=false end;if nd<=mm+1 and nd>=mm-1 then nf=true else nf=false end;if ne and nf and n9 then ml=nil;mm=nil;mn=true end else if aY.VectorToTarget then mO(mV:normalize():project_on_plane(b9))elseif b8>150 then mO(b7)end;U=0;if aY.VectorToTarget and CustomTarget then local a4,_=aH.computeDistanceAndTime(b8,aV/3.6,ar,0,0,LastMaxBrake)if a_ and mV:len()>15000+a4+ao then aX="Orbiting to Target"if ao-100<=mq.noAtmosphericDensityAltitude or travelTime>orbit.timeToPeriapsis and orbit.periapsis.altitude<mq.noAtmosphericDensityAltitude then a_=false end elseif a_ or mV:len()<15000+a4+ao then a2="Orbit complete, proceeding with reentry"bC("orCom","OB")AutopilotTargetCoords=CustomTarget.position;R=true;aj=true;aY.VectorToTarget,aY.AutopilotAlign=false,false;aM.ToggleIntoOrbit()aM.BeginReentry()return end end;if orbit.periapsis~=nil and orbit.apoapsis~=nil and orbit.eccentricity<1 and ao>aZ*0.9 and ao<aZ*1.4 then if orbit.apoapsis~=nil then if orbit.periapsis.altitude>=aZ*0.99 and orbit.apoapsis.altitude>=aZ*0.99 and orbit.periapsis.altitude<orbit.apoapsis.altitude and orbit.periapsis.altitude*1.05>=orbit.apoapsis.altitude or a_ then if a_ then BrakeIsOn=false;aM.cmdThrottle(0)ml=0;if not aY.VectorToTarget then a2="Orbit complete"bC("orCom","OB")aM.ToggleIntoOrbit()end else mr=mr+1;if mr>=2 then a_=true end end else aX="Adjusting Orbit - OrbitHeight: "..na;mo=true;aM.cmdCruise(nc*3.6+1)local ng=aZ-ao;if VSpdPID==nil then VSpdPID=pid.new(0.1,0,1*0.1)end;VSpdPID:inject(ng-ba*r(utils.smoothstep(2000-ng,-2000,2000)^6*10,1,10))ml=r(VSpdPID:get(),-60,60)end end else local nh=2.75;local ni=d(A(nb*nh))local nj=ni%50;if nj>0 then ni=ni-nj+50 end;BrakeIsOn=false;if ao<aZ*0.8 then aX="Escaping planet gravity - OrbitHeight: "..na;ml=utils.map(ba,200,0,-15,80)elseif ao>=aZ*0.8 and ao<aZ*1.15 then aX="Approaching orbital corridor - OrbitHeight: "..na;ni=ni*0.75;ml=utils.map(ba,100,-100,-15,65)elseif ao>=aZ*1.15 and ao<aZ*1.5 then aX="Approaching orbital corridor - OrbitHeight: "..na;ni=ni*0.75;if ba<0 or mo then ml=utils.map(ao,aZ*1.5,aZ*1.01,-30,0)else ml=utils.map(ao,aZ*0.99,aZ*1.5,0,30)end elseif ao>aZ*1.5 then aX="Reentering orbital corridor - OrbitHeight: "..na;ml=-65;local nk=utils.map(ba,-150,-400,1,0.55)ni=ni*nk end;aM.cmdCruise(e(ni))end end;if ml~=nil then if OrbitPitchPID==nil then OrbitPitchPID=pid.new(1*0.01,0,5*0.1)end;local nl=ml-bg;OrbitPitchPID:inject(nl)local nm=r(OrbitPitchPID:get(),-0.5,0.5)U=nm end end;if Autopilot and an==0 and not ah then local function nn(by,orbit)system.print(by)BrakeIsOn=false;AutopilotBraking=false;Autopilot=false;TargetSet=false;AutopilotStatus="Aligning"aM.cmdThrottle(0)P=false;a2=by;bC("apCom","AP")if orbit or ah then if orbit and AutopilotTargetOrbit~=nil and not ah then if not ao or ao==0 then return end;aZ=ao;mp=true end;aM.ToggleIntoOrbit()end end;local no,np=AutopilotTargetCoords,false;if CustomTarget and CustomTarget.planetname~="Space"then AutopilotRealigned=true;if not TargetSet then local nq=(CustomTarget.position-a8.center):normalize()local nr=nq:project_on_plane((a8.center-bb):normalize()):normalize()local ns=a8.center+nr*(a8.radius+AutopilotTargetOrbit)local nt=CustomTarget.position+(CustomTarget.position-a8.center):normalize()*(AutopilotTargetOrbit-a8:getAltitude(CustomTarget.position))if(bb-ns):len()<(bb-nt):len()then no=ns else no=nt;AutopilotEndSpeed=0 end;AutopilotTargetCoords=no;aM.showWayPoint(a8,AutopilotTargetCoords)np=true;TargetSet=true end;AutopilotPlanetGravity=0 elseif CustomTarget and CustomTarget.planetname=="Space"then if not TargetSet then AutopilotPlanetGravity=0;np=true;AutopilotRealigned=true;TargetSet=true;no=CustomTarget.position+(bb-CustomTarget.position):normalize()*AutopilotSpaceDistance;AutopilotTargetCoords=no end elseif CustomTarget==nil then AutopilotPlanetGravity=0;if not TargetSet then local nq=(bb+b7*100000-a8.center):normalize()local nr=nq:project_on_plane((a8.center-bb):normalize()):normalize()if nr:len()<1 then nq=(bb+b4*100000-a8.center):normalize()nr=nq:project_on_plane((a8.center-bb):normalize()):normalize()end;no=a8.center+nr*(a8.radius+AutopilotTargetOrbit)AutopilotTargetCoords=no;TargetSet=true;np=true;AutopilotRealigned=true;aM.showWayPoint(a8,AutopilotTargetCoords)end end;AutopilotDistance=(vec3(no)-bb):len()local iw,dk,dl=aG:getPlanetarySystem(0):castIntersections(bb,b7:normalize(),function(d5)if d5.noAtmosphericDensityAltitude>0 then return d5.radius+d5.noAtmosphericDensityAltitude else return d5.radius+d5.surfaceMaxAltitude*1.5 end end)local ix=dk;if dl~=nil and dk~=nil then ix=math.min(dl,dk)end;if ix~=nil and ix<AutopilotDistance and iw.name==a8.name then AutopilotDistance=ix end;local n5=true;local nu=(a8.center-(bb+vec3(b7):normalize()*AutopilotDistance)):len()-a8.radius;local il=bY(nu)u(widgetTrajectoryAltitudeText,'{"label": "Projected Altitude", "value": "'..il..'"}')local a4,a5;if not TurnBurn then a4,a5=mb(b8)else a4,a5=md(b8)end;if b8>50 and AutopilotAccelerating then local mV=vec3(no)-bb;local nw=r(math.deg(mt(b3,b7:normalize(),mV:normalize()))*b8/500,-90,90)local nx=r(math.deg(mt(b5,b7:normalize(),mV:normalize()))*b8/500,-90,90)if d(nw)<20 and d(nx)<20 then nw=nw*2;nx=nx*2 end;if d(nw)<2 and d(nx)<2 then nw=nw*2;nx=nx*2 end;local n0=-math.deg(mt(b3,b4,b7:normalize()))local n1=-math.deg(mt(b5,b4,b7:normalize()))if apPitchPID==nil then apPitchPID=pid.new(2*0.01,0,2*0.1)end;apPitchPID:inject(nx-n1)local ny=r(apPitchPID:get(),-1,1)U=U+ny;if apYawPID==nil then apYawPID=pid.new(2*0.01,0,2*0.1)end;apYawPID:inject(nw-n0)local nz=r(apYawPID:get(),-1,1)V=V+nz;np=true;if d(nw)>2 or d(nx)>2 then if AutopilotStatus~="Adjusting Trajectory"then AutopilotStatus="Adjusting Trajectory"bC("apAdj","AP")end else if AutopilotStatus~="Accelerating"then AutopilotStatus="Accelerating"bC("apAcc","AP")end end elseif AutopilotAccelerating and b8<=50 then mO((no-bb):normalize())end;if nu<AutopilotTargetOrbit*1.5 then if CustomTarget and CustomTarget.planetname=="Space"then AutopilotEndSpeed=0 elseif CustomTarget==nil then _,AutopilotEndSpeed=aJ(a8):escapeAndOrbitalSpeed(nu)end end;if Autopilot and not AutopilotAccelerating and not AutopilotCruising and not AutopilotBraking then local iw,ix=aM.checkLOS((AutopilotTargetCoords-bb):normalize())if a8.name~=planet.name then if iw~=nil and a8.name~=iw.name and ix<AutopilotDistance then a2="Collision with "..iw.name.." in "..bY(ix).."\nClear LOS to continue."ae=5;mI=true else mI=false;a2=""end end end;if not mI then if not AutopilotCruising and not AutopilotBraking and not np then n5=mO((no-bb):normalize())elseif TurnBurn and(AutopilotBraking or AutopilotCruising)then n5=mO(-vec3(b7):normalize())end end;if AutopilotAccelerating then if not P then BrakeIsOn=false;aM.cmdThrottle(AutopilotInterplanetaryThrottle)K=A(AutopilotInterplanetaryThrottle,2)P=true end;local nA=unit.getThrottle()if AtmoSpeedAssist then nA=K end;local nB=99999;local lh=-vec3(core.getWorldAcceleration()):dot(b7:normalize())local nC=r(b7:dot((no-bb):normalize()),0,b8)if nC>0 or lh>0 then nB=aH.computeTravelTime(nC,lh,AutopilotDistance-a4)end;if b6:len()>=MaxGameVelocity or nA==0 and P or warmup/4>nB then AutopilotAccelerating=false;if AutopilotStatus~="Cruising"then bC("apCru","AP")AutopilotStatus="Cruising"end;AutopilotCruising=true;aM.cmdThrottle(0)end;local nD=AutopilotDistance;if nD<=a4 or PreventPvP and bk<=a4+10000 and bj then if PreventPvP and bk<=a4+10000 and bj then if bk<mf and bk>2000 then aM.ToggleAutopilot()a2="Autopilot cancelled to prevent crossing PvP Line"BrakeIsOn=true;mf=bk else mf=bk;return end end;AutopilotAccelerating=false;if AutopilotStatus~="Braking"then bC("apBrk","AP")AutopilotStatus="Braking"end;AutopilotBraking=true;aM.cmdThrottle(0)P=false end elseif AutopilotBraking then if AutopilotStatus~="Orbiting to Target"then BrakeIsOn=true;Y=1 end;if TurnBurn then aM.cmdThrottle(1,true)end;local _,nc=aJ(a8):escapeAndOrbitalSpeed((bb-planet.center):len()-planet.radius)local mV;if CustomTarget then mV=CustomTarget.position-bb end;if CustomTarget and CustomTarget.planetname=="Space"and b8<50 then if#ms>0 then BrakeIsOn=false;aM.ToggleAutopilot()aM.ToggleAutopilot()return end;nn("Autopilot complete, arrived at space location")BrakeIsOn=true;Y=1 elseif CustomTarget and CustomTarget.planetname~="Space"and b8<=nc and(orbit.apoapsis==nil or orbit.periapsis==nil or orbit.apoapsis.altitude<=0 or orbit.periapsis.altitude<=0)then nn("Autopilot complete, commencing reentry")AutopilotTargetCoords=CustomTarget.position;ah=true;aM.showWayPoint(a8,AutopilotTargetCoords)elseif(CustomTarget and CustomTarget.planetname~="Space"or CustomTarget==nil)and orbit.periapsis~=nil and orbit.periapsis.altitude>0 and orbit.eccentricity<1 or AutopilotStatus=="Circularizing"then if AutopilotStatus~="Circularizing"then bC("apCir","AP")AutopilotStatus="Circularizing"end;if b8<=nc then if CustomTarget then if b7:normalize():dot(mV:normalize())>0.4 then if AutopilotStatus~="Orbiting to Target"then bC("apOrb","OB")AutopilotStatus="Orbiting to Target"end;if not WaypointSet then BrakeIsOn=false;aM.showWayPoint(a8,CustomTarget.position)WaypointSet=true end else nn("Autopilot complete, proceeding with reentry")AutopilotTargetCoords=CustomTarget.position;ah=true;aM.showWayPoint(a8,CustomTarget.position)WaypointSet=false end else nn("Autopilot completed, setting orbit",true)Y=0 end end elseif AutopilotStatus=="Circularizing"then nn("Autopilot complete, fixing Orbit",true)end elseif AutopilotCruising then local nD=AutopilotDistance;if nD<=a4 or PreventPvP and bk<=a4+10000 and bj then if PreventPvP and bk<=a4+10000 and bj then if bk<mf and bk>2000 then aM.ToggleAutopilot()a2="Autopilot cancelled to prevent crossing PvP Line"BrakeIsOn=true;mf=bk else mf=bk;return end end;AutopilotAccelerating=false;if AutopilotStatus~="Braking"then bC("apBrk","AP")AutopilotStatus="Braking"end;AutopilotBraking=true end;local nA=unit.getThrottle()if AtmoSpeedAssist then nA=K end;if nA>0 then AutopilotAccelerating=true;if AutopilotStatus~="Accelerating"then AutopilotStatus="Accelerating"bC("apAcc","AP")end;AutopilotCruising=false end else if n5 then if not AutopilotRealigned and CustomTarget==nil or not AutopilotRealigned and CustomTarget and CustomTarget.planetname~="Space"then if not ah then AutopilotTargetCoords=vec3(a8.center)+(AutopilotTargetOrbit+a8.radius)*b5;AutopilotShipUp=b3;AutopilotShipRight=b5 end;AutopilotRealigned=true elseif n5 and not mI then AutopilotAccelerating=true;if AutopilotStatus~="Accelerating"then AutopilotStatus="Accelerating"bC("apAcc","AP")end;if not P then aM.cmdThrottle(AutopilotInterplanetaryThrottle,true)K=A(AutopilotInterplanetaryThrottle,2)P=true;BrakeIsOn=false end end end end elseif Autopilot and(CustomTarget~=nil and CustomTarget.planetname~="Space"and an>0)then a2="Autopilot complete, starting reentry"bC("apCom","AP")AutopilotTargetCoords=CustomTarget.position;BrakeIsOn=false;AutopilotBraking=false;Autopilot=false;TargetSet=false;AutopilotStatus="Aligning"Y=0;aM.cmdThrottle(0)P=false;ProgradeIsOn=true;ah=true;aM.showWayPoint(a8,CustomTarget.position)end;if a0 then aR=true;local nx=0;local e4=bb+vec3(unit.getMasterPlayerRelativePosition())local nE=e4-bb;local nF=vec3(nE):project_on(b4):len()local nG=vec3(nE):project_on(b5):len()local af=y(nF*nF+nG*nG)mO(nE:normalize())local jw=40;local nH=af<jw;local nI=100;local nJ=r((af-jw)/2,10,nI)U=0;local n5=d(V)<0.1;if n5 and b8<nJ and not nH then BrakeIsOn=false;nx=-20 else BrakeIsOn=true;nx=0 end;local nK=0;if d(nx-bg)>nK then if pitchPID==nil then pitchPID=pid.new(2*0.01,0,2*0.1)end;pitchPID:inject(nx-bg)local ny=pitchPID:get()U=ny end end;if AltitudeHold or BrakeLanding or Reentry or VectorToTarget or LockPitch~=nil then local nL=LastMaxBrakeInAtmo;if nL then nL=nL*r(b8/100,0.1,1)*an else nL=LastMaxBrake end;if an<0.01 then nL=LastMaxBrake end;local nM=b4:project_on_plane(b9):normalize():dot(b7)local nN=vec3(core.getWorldAirFrictionAcceleration())local nO=nN:len()*ar;if nM>100 then a4,a5=aH.computeDistanceAndTime(nM,100,ar,0,0,nL)local nP,nQ=aH.computeDistanceAndTime(100,0,ar,0,0,nL*0.55)a4=a4+nP else a4,a5=aH.computeDistanceAndTime(nM,0,ar,0,0,nL*0.55)end;local ng=HoldAltitude-ao-ba;local nR=200+b8;if Reentry or ah then minMax=2000+b8 end;local nS=1;if AutoTakeoff then nS=r(b8/100,0.1,1)end;local nx=(utils.smoothstep(ng,-nR,nR)-0.5)*2*MaxPitch*nS;if not Reentry and not ah and not VectorToTarget and b4:dot(b7:normalize())<0.99 then nx=(utils.smoothstep(ng,-nR*r(20-19*an*10,1,20),nR*r(20-19*an*10,1,20))-0.5)*2*MaxPitch*r(2-an*10,1,2)*nS end;if not AltitudeHold then nx=0 end;if LockPitch~=nil then if bn and not IntoOrbit then nx=LockPitch else LockPitch=nil end end;aR=true;local nT=U;if Reentry then local nU=e(aV)local nV,nW=aH.computeDistanceAndTime(b8,nU/3.6,ar,0,0,LastMaxBrake-planet.gravity*9.8*ar)nV=nV==-1 and 5000 or nV;local nX=ao-(planet.noAtmosphericDensityAltitude+nV)local nY=ao>planet.noAtmosphericDensityAltitude+nV*1.35;if nY then nx=ReEntryPitch;if b8<=nU/3.6 and b8>nU/3.6-10 and d(b7:normalize():dot(b4))>0.9 and not bf then O=false;aM.cmdThrottle(1)end elseif bf and not nY and not am then aM.cmdCruise(nU,true)end;if bf then if b8>nU/3.6 and not nY then BrakeIsOn=true else BrakeIsOn=false end else BrakeIsOn=false end;if ba>0 then BrakeIsOn=true end;if not R then nx=-80;if an>0.02 then a2="PARACHUTE DEPLOYED"Reentry=false;BrakeLanding=true;nx=0;aR=autoRollPreference end elseif planet.noAtmosphericDensityAltitude>0 and nY then aR=true elseif not nY then if not am and(bf or s:getTargetSpeed(axisCommandId.longitudinal)~=nU)then aM.cmdCruise(nU)end;if b8<nU/3.6+1 then BrakeIsOn=false;R=false;Reentry=false;aR=true end end end;if b8>Q and not ai and not VectorToTarget and not BrakeLanding and ForceAlignment then mO(vec3(b7))end;if bl or(VectorToTarget or ai)and AutopilotTargetIndex>0 and an>0.01 then local mV;if bl then if type(bl)=="table"then mV=bl elseif bl<3 and bl>0 then mV=-b9:cross(b7)*5000 elseif bl>=3 then mV=b9:cross(b7)*5000 elseif bl<0 then mV=b7*25000 end elseif CustomTarget~=nil then mV=CustomTarget.position-bb else mV=a8.center-bb end;local nw=math.deg(mt(b9:normalize(),b7,mV))*2;local jz=math.rad(d(bh))if b8>minRollVelocity and an>0.01 then local nZ=1000+b8;local n_=(utils.smoothstep(ng-ba*10,-nZ,nZ)-0.5)*2*MaxPitch;local o0=r(90-n_,0,180)aU=r(nw*2,-o0,o0)local o1=nw;nw=r(r(nw,-YawStallAngle*0.80,YawStallAngle*0.80)*math.cos(jz)+4*(bg-nx)*math.sin(math.rad(bh)),-YawStallAngle*0.80,YawStallAngle*0.80)local o2=1;if aU~=0 then o2=d(jz/aU)end;o2=(90-r(d(aU-bh),0,90))/90;local o3=nx;if d(bh)>90 then o3=-o3 end;nx=o2*r(r(o3*math.cos(jz),-PitchStallAngle*0.8,PitchStallAngle*0.8)+d(r(d(o1)*math.sin(jz),-PitchStallAngle*0.80,PitchStallAngle*0.80)),-PitchStallAngle*0.80,PitchStallAngle*0.80)else aU=0;nw=r(nw,-YawStallAngle*0.80,YawStallAngle*0.80)end;local o4=n0-nw;if bl and d(o4)<=0.0001 and(type(bl)=="table"or type(bl)~="table"and bl<0 and d(bh)<1)then if bl==-2 then aM.ToggleAltitudeHold()end;bl=nil;bC("180Off","BR")return end;if not aT and b8>minRollVelocity and an>0.01 then if yawPID==nil then yawPID=pid.new(2*0.01,0,2*0.1)end;yawPID:inject(o4)local nz=r(yawPID:get(),-1,1)V=V+nz elseif am and ak>-1 or b8<minRollVelocity then mO(mV)elseif aT and an>0.01 then if(n0<-YawStallAngle or n0>YawStallAngle)and an>0.01 then mO(b7)end;if(n1<-PitchStallAngle or n1>PitchStallAngle)and an>0.01 then nx=r(bg-n1,bg-PitchStallAngle*0.80,bg+PitchStallAngle*0.80)end end;if CustomTarget~=nil and not ai then local n6=planet:getAltitude(CustomTarget.position)local nX=mV:project_on_plane(b9):len()StrongBrakes=true;if not ai and not Reentry and nX<=a4 and(b7:project_on_plane(b9):normalize():dot(mV:project_on_plane(b9):normalize())>0.99 or VectorStatus=="Finalizing Approach")then VectorStatus="Finalizing Approach"if#ms>0 then aM.ToggleAutopilot()aM.ToggleAutopilot()return end;aM.cmdThrottle(0)if AltitudeHold then aM.ToggleAltitudeHold()VectorToTarget=true end;BrakeIsOn=true elseif not AutoTakeoff then BrakeIsOn=false end;if VectorStatus=="Finalizing Approach"and(nM<0.1 or nX<0.1 or LastDistanceToTarget~=nil and LastDistanceToTarget<nX)then if not bd then bC("bklOn","BL")BrakeLanding=true end;VectorToTarget=false;VectorStatus="Proceeding to Waypoint"bo=false end;LastDistanceToTarget=nX end elseif VectorToTarget and an==0 and HoldAltitude>planet.noAtmosphericDensityAltitude and not(ai or Reentry)then if CustomTarget~=nil and a8.name==planet.name then local mV=CustomTarget.position-bb;local n6=planet:getAltitude(CustomTarget.position)local nX=y(mV:len()^2-(ao-n6)^2)local nL=LastMaxBrakeInAtmo;if nL then a4,a5=aH.computeDistanceAndTime(b8,0,ar,0,0,nL/2)StrongBrakes=true;if nX<=a4+b8*m_/2 and b7:project_on_plane(b9):normalize():dot(mV:project_on_plane(b9):normalize())>0.99 then if planet.hasAtmosphere then BrakeIsOn=false;ProgradeIsOn=false;R=true;ah=false;aj=true;Autopilot=false;aM.BeginReentry()end end;LastDistanceToTarget=nX end end end;if an==0 and(AltitudeHold and HoldAltitude>planet.noAtmosphericDensityAltitude)and not(ai or IntoOrbit or Reentry)then if not a_ and not IntoOrbit then aZ=HoldAltitude;mp=true;if VectorToTarget then aY.VectorToTarget=true end;aM.ToggleIntoOrbit()VectorToTarget=false;mn=true end end;if aT and an>0.01 and ak==-1 and b8>minRollVelocity and VectorStatus~="Finalizing Approach"then mO(b7)nx=r(bg-n1,bg-PitchStallAngle*0.80,bg+PitchStallAngle*0.80)end;U=nT;local mC=-1;if BrakeLanding then nx=0;local o5=false;local o6=30;if aI~=nil and aI>0 then local o7=r(an,0.4,2)local nL=LastMaxBrakeInAtmo*r(b8/100,0.1,1)*o7;local o8=aI*o7+nL-l5;local o9=nL/2-l5;local oa=b8-y(d(o9/2)*20/(0.5*ar))*utils.sign(o9)if oa<0 then oa=0 end;local ob;if b8>100 then local oc,_=aH.computeDistanceAndTime(b8,100,ar,0,0,nL)local od,_=aH.computeDistanceAndTime(100,0,ar,0,0,y(nL))ob=oc+od else ob=aH.computeDistanceAndTime(b8,0,ar,0,0,y(nL))end;if ob<20 then BrakeIsOn=false else local oe=0;if oa>100 then local of,_=aH.computeDistanceAndTime(oa,100,ar,0,0,o8)local og,_=aH.computeDistanceAndTime(100,0,ar,0,0,aI*o7+y(nL)-l5)oe=of+og else oe,_=aH.computeDistanceAndTime(oa,0,ar,0,0,aI*o7+y(nL)-l5)end;oe=(oe+15+b8*m_)*1.1;local oh=CustomTarget~=nil and planet:getAltitude(CustomTarget.position)>0 and CustomTarget.safe;if oh then local n6=planet:getAltitude(CustomTarget.position)local oi=ao-n6-100;local mV=CustomTarget.position-bb;local oj=y(mV:len()^2-(ao-n6)^2)if oj>100 then oh=false elseif oi<=oe or oe==-1 then BrakeIsOn=true;o5=true else BrakeIsOn=false;o5=true end end;if not oh and CalculateBrakeLandingSpeed then if oe>=o6 then BrakeIsOn=true else BrakeIsOn=false end;o5=true end end end;if not bf then aM.cmdThrottle(0)end;s:setTargetGroundAltitude(500)s:activateGroundEngineAltitudeStabilization(500)stablized=true;mC=ak;if mC>-1 then aR=autoRollPreference;if b8<1 or b7:normalize():dot(b9)<0 then BrakeLanding=false;AltitudeHold=false;GearExtended=true;if S then a.control.extendLandingGears()bC("grOut","LG",1)end;s:setTargetGroundAltitude(LandingGearGroundHeight)ab=0;BrakeIsOn=true else BrakeIsOn=true end elseif StrongBrakes and b7:normalize():dot(-gO)<0.999 then BrakeIsOn=true elseif ba<-brakeLandingRate and not o5 then BrakeIsOn=true elseif not o5 then BrakeIsOn=false end end;if AutoTakeoff or ai then local iw,dl,dk;if AutopilotTargetCoords~=nil then iw,dl,dk=aG:getPlanetarySystem(0):castIntersections(bb,(AutopilotTargetCoords-bb):normalize(),function(d5)return d5.radius+d5.noAtmosphericDensityAltitude end)end;if bd then if ao>=HoldAltitude-50 then AutoTakeoff=false;if not Autopilot and not VectorToTarget then BrakeIsOn=true;aM.cmdThrottle(0)end else HoldAltitude=antigrav.getBaseAltitude()end elseif d(nx)<15 and ao/HoldAltitude>0.75 then AutoTakeoff=false;if not ai then if bf and not AtmoSpeedAssist then a.control.cancelCurrentControlMasterMode()end elseif ai and b8<Q then Autopilot=true;ai=false;AltitudeHold=false;AutoTakeoff=false;aM.cmdThrottle(0)elseif ai then aM.cmdThrottle(0)BrakeIsOn=true end elseif ai and an==0 and a8~=nil and(iw==nil or iw.name==a8.name)then Autopilot=true;ai=false;AltitudeHold=false;AutoTakeoff=false;if not bf then aM.cmdThrottle(0)end;AutopilotAccelerating=true end end;local ok=ak>-1;local ol=bg;if(VectorToTarget or ai or bl)and not ok and b8>minRollVelocity and an>0.01 then local jz=math.rad(d(bh))ol=bg*d(math.cos(jz))+n1*math.sin(jz)end;local om=r(nx-ol,-PitchStallAngle*0.80,PitchStallAngle*0.80)if an<0.01 and VectorToTarget then om=r(nx-ol,-85,MaxPitch)elseif an<0.01 then om=r(nx-ol,-MaxPitch,MaxPitch)end;if d(bh)<5 or VectorToTarget or bl or BrakeLanding or ok or AltitudeHold then if pitchPID==nil then pitchPID=pid.new(5*0.01,0,5*0.1)end;pitchPID:inject(om)local ny=pitchPID:get()U=U+ny end end;if antigrav~=nil and(antigrav and not ExternalAGG and ao<200000)then if AntigravTargetAltitude==nil or AntigravTargetAltitude<1000 then AntigravTargetAltitude=1000 end;if desiredBaseAltitude~=AntigravTargetAltitude then desiredBaseAltitude=AntigravTargetAltitude;antigrav.setBaseAltitude(desiredBaseAltitude)end end end;function ma.ToggleIntoOrbit()a_=false;ml=nil;mm=nil;mr=0;if an==0 then if IntoOrbit then bC("orOff","AP")IntoOrbit=false;mn=false;mq=nil;aR=autoRollPreference;if AltitudeHold then AltitudeHold=false;AutoTakeoff=false end;aY.VectorToTarget=false;aY.AutopilotAlign=false;mp=false elseif bn then bC("orOn","AP")IntoOrbit=true;aR=true;if mq==nil then mq=planet end;if AltitudeHold then AltitudeHold=false;AutoTakeoff=false end else a2="Unable to engage auto-orbit, not near a planet"end else IntoOrbit=false;mn=false;mq=nil;aR=autoRollPreference;if AltitudeHold then AltitudeHold=false end;aY.VectorToTarget=false;aY.AutopilotAlign=false;mp=false end end;function ma.ToggleVerticalTakeoff()AltitudeHold=false;if VertTakeOff then StrongBrakes=true;Reentry=false;AutoTakeoff=false;BrakeLanding=true;aR=true;ab=0;if am and ak==-1 then BrakeLanding=false;AltitudeHold=true;ab=0;a:setEngineForceCommand('thrust analog vertical fueled ',vec3(),1)aM.cmdCruise(e(aV))end else a_=false;GearExtended=false;a.control.retractLandingGears()s:setTargetGroundAltitude(TargetHoverHeight)BrakeIsOn=true end;VertTakeOff=not VertTakeOff end;function ma.checkLOS(mP)local iw,dk,dl=aG:getPlanetarySystem(0):castIntersections(bb,mP,function(d5)if d5.noAtmosphericDensityAltitude>0 then return d5.radius+d5.noAtmosphericDensityAltitude else return d5.radius+d5.surfaceMaxAltitude*1.5 end end)local ix=dk;if dl~=nil and dk~=nil then ix=math.min(dl,dk)end;if ix~=nil then return iw,ix else return nil,nil end end;function ma.ToggleAutopilot()local function on(SpaceTarget)bo=false;VectorToTarget=not VectorToTarget;if VectorToTarget then TurnBurn=false;if not AltitudeHold and not SpaceTarget then aM.ToggleAltitudeHold()end end;VectorStatus="Proceeding to Waypoint"end;local oo=false;if E-mk<1.5 and an>0 then if not b2 then a2="No space engines detected, Orbital Hop not supported"return end;if planet.hasAtmosphere then if an>0 then HoldAltitude=planet.noAtmosphericDensityAltitude+LowOrbitHeight;bC("orH","OH")end;mk=-1;if Autopilot or VectorToTarget or IntoOrbit then return end end else mk=E end;TargetSet=false;if(AutopilotTargetIndex>0 or#ms>0)and not Autopilot and not VectorToTarget and not ai and not IntoOrbit then if 0.5*a:maxForceForward()/core.g()<ar then a2="WARNING: Heavy Loads may affect autopilot performance."ae=5 end;if#ms>0 and not aj then AutopilotTargetIndex=ms[1]aL.UpdateAutopilotTarget()table.remove(ms,1)a2="Route Autopilot in Progress"local mV=CustomTarget.position-bb;local nX=mV:project_on_plane(b9):len()if nX>50000 and CustomTarget.planetname==planet.name then oo=true end end;aL.UpdateAutopilotTarget()aM.showWayPoint(a8,AutopilotTargetCoords)if CustomTarget~=nil then LockPitch=nil;SpaceTarget=CustomTarget.planetname=="Space"if SpaceTarget then bC("apSpc","AP")if an~=0 then ai=true;aM.ToggleAltitudeHold()else Autopilot=true end elseif planet.name==CustomTarget.planetname then StrongBrakes=true;if an>0 then if not VectorToTarget then bC("vtt","AP")on(SpaceTarget)if oo then HoldAltitude=planet.noAtmosphericDensityAltitude+LowOrbitHeight end end else bC("apOn","AP")if not(a8.name==planet.name and ao<AutopilotTargetOrbit*1.5)then a_=false;Autopilot=true elseif not am then if IntoOrbit then aM.ToggleIntoOrbit()end;aZ=planet.noAtmosphericDensityAltitude+LowOrbitHeight;mp=true;aY.AutopilotAlign=true;aY.VectorToTarget=true;mn=false;if not IntoOrbit then aM.ToggleIntoOrbit()end end end else bC("apP","AP")RetrogradeIsOn=false;ProgradeIsOn=false;if an~=0 then ai=true;aM.ToggleAltitudeHold()else Autopilot=true end end elseif an==0 then if CustomTarget==nil and(a8.name==planet.name and bn)and not IntoOrbit then WaypointSet=false;a_=false;mn=false;aM.ToggleIntoOrbit()else bC("apP","AP")Autopilot=true;RetrogradeIsOn=false;ProgradeIsOn=false;AutopilotRealigned=false;a0=false;AltitudeHold=false;BrakeLanding=false;Reentry=false;AutoTakeoff=false;P=false;LockPitch=nil;WaypointSet=false end else bC("apP","AP")ai=true;aM.ToggleAltitudeHold()end else bC("apOff","AP")aM.ResetAutopilots(1)end end;function ma.routeWP(op,oq,os)if os then if os==1 then ms=saveRoute;if#ms>0 then a2="Route Loaded"else a2="No Saved Route found on Databank"end;return ms else saveRoute=ms;a2="Route Saved"return end end;if op then return ms end;if oq then ms={}else ms[#ms+1]=AutopilotTargetIndex;a2="Added "..CustomTarget.name.." to route. "end;return ms end;function ma.cmdThrottle(cv,ot)if s:getAxisCommandType(0)~=axisCommandType.byThrottle and not ot then a.control.cancelCurrentControlMasterMode()end;s:setThrottleCommand(axisCommandId.longitudinal,cv)K=r(A(cv*100,0)/100,-1,1)be=nil end;function ma.cmdCruise(cv,ot)if s:getAxisCommandType(0)~=axisCommandType.byTargetSpeed and not ot then a.control.cancelCurrentControlMasterMode()end;s:setTargetSpeedCommand(axisCommandId.longitudinal,cv)be=cv end;function ma.ToggleLockPitch()if LockPitch==nil then bC("lkPOn","LP")if not a1 then LockPitch=bg else LockPitch=LockPitchTarget end;AutoTakeoff=false;AltitudeHold=false;BrakeLanding=false else bC("lkPOff","LP")LockPitch=nil end end;function ma.ToggleAltitudeHold()if E-mj<1.5 then if planet.hasAtmosphere then if an>0 then HoldAltitude=planet.spaceEngineMinAltitude-0.01*planet.noAtmosphericDensityAltitude;bC("11","EP")else if bn then HoldAltitude=planet.noAtmosphericDensityAltitude+LowOrbitHeight;aZ=HoldAltitude;mp=true;if not IntoOrbit then aM.ToggleIntoOrbit()end;mn=true end end;mj=-1;if AltitudeHold or IntoOrbit or VertTakeOff then return end end else mj=E end;if bn and an==0 then aZ=ao;mp=true;mn=true;aM.ToggleIntoOrbit()if IntoOrbit then mj=E else mj=0 end;return end;AltitudeHold=not AltitudeHold;BrakeLanding=false;Reentry=false;if AltitudeHold then Autopilot=false;ProgradeIsOn=false;RetrogradeIsOn=false;a0=false;aR=true;LockPitch=nil;a_=false;if ak~=-1 and b8<20 then bC("lfs","LS")AutoTakeoff=true;if mj>-1 then HoldAltitude=ao+AutoTakeoffAltitude end;GearExtended=false;a.control.retractLandingGears()BrakeIsOn=true;s:setTargetGroundAltitude(TargetHoverHeight)if VertTakeOffEngine and bc then aM.ToggleVerticalTakeoff()end else bC("altOn","AH")AutoTakeoff=false;if mj>-1 then if bn then HoldAltitude=ao end end;if VertTakeOff then aM.ToggleVerticalTakeoff()end end;if ai then HoldAltitude=100000 end else bC("altOff","AH")if IntoOrbit then aM.ToggleIntoOrbit()end;if VertTakeOff then aM.ToggleVerticalTakeoff()end;aR=autoRollPreference;AutoTakeoff=false;VectorToTarget=false;mj=0 end end;function ma.ResetAutopilots(ma)if ma then ai=false;Autopilot=false;AutopilotRealigned=false;P=false;HoldAltitude=ao;TargetSet=false end;VectorToTarget=false;AutoTakeoff=false;Reentry=false;ProgradeIsOn=false;BrakeLanding=false;AutoLanding=false;bl=nil;if not bd then AltitudeHold=false;LockPitch=nil end;if VertTakeOff then aM.ToggleVerticalTakeoff()end;if IntoOrbit then aM.ToggleIntoOrbit()end;aR=autoRollPreference;ah=false;aj=false;ab=0 end;function ma.BrakeToggle()BrakeIsOn=not BrakeIsOn;if BrakeLanding then BrakeLanding=false;aR=autoRollPreference end;if BrakeIsOn then bC("bkOn","B",1)aM.ResetAutopilots()else bC("bkOff","B",1)end end;function ma.BeginReentry()if Reentry then a2="Re-Entry cancelled"bC("reOff","RE")Reentry=false;aR=autoRollPreference;AltitudeHold=false elseif not planet.hasAtmosphere then a2="Re-Entry requirements not met: you must start out of atmosphere\n and within a planets gravity well over a planet with atmosphere"ae=5 elseif not R then Reentry=true;if s:getAxisCommandType(0)~=controlMasterModeId.cruise then a.control.cancelCurrentControlMasterMode()end;aR=true;BrakeIsOn=false;a2="Beginning Parachute Re-Entry - Strap In.  Target speed: "..aV;bC("par","RE")else Reentry=true;AltitudeHold=true;aR=true;BrakeIsOn=false;HoldAltitude=planet.surfaceMaxAltitude+ReEntryHeight;if HoldAltitude>planet.spaceEngineMinAltitude then HoldAltitude=planet.spaceEngineMinAltitude-0.01*planet.noAtmosphericDensityAltitude end;local bS=bY(HoldAltitude)a2="Beginning Re-entry.  Target speed: "..aV.." Target Altitude: "..bS;bC("glide","RE")aM.cmdCruise(e(aV))end;AutoTakeoff=false end;function ma.ToggleAntigrav()if antigrav and not ExternalAGG then if bd then bC("aggOff","AG")antigrav.deactivate()antigrav.hide()else if AntigravTargetAltitude==nil then AntigravTargetAltitude=ao end;if AntigravTargetAltitude<1000 then AntigravTargetAltitude=1000 end;bC("aggOn","AG")antigrav.activate()antigrav.show()end end end;ak=mx()return ma end;local function ou()local ov={}local ow=true;local ox=5;local oy=5;local oz=ox;local oA=oy;function ov.startControl(oB)local function oC(bA)local D=1;local function oD(oE,bA)local oF={planet.surfaceMaxAltitude+100,planet.spaceEngineMinAltitude-0.01*planet.noAtmosphericDensityAltitude,planet.noAtmosphericDensityAltitude+LowOrbitHeight,planet.radius*(TargetOrbitRadius-1)+planet.noAtmosphericDensityAltitude}local oG=oE;for _,ca in ipairs(oF)do if bA and oG>ca then oE=ca elseif oE<ca and not bA then oE=ca;break end end;return oE end;if bA then D=-1 end;if not ExternalAGG and bd then if a1 and bA then AntigravTargetAltitude=1000 elseif AntigravTargetAltitude~=nil then AntigravTargetAltitude=AntigravTargetAltitude+D*oy;if AntigravTargetAltitude<1000 then AntigravTargetAltitude=1000 end;if AltitudeHold and AntigravTargetAltitude<HoldAltitude+10 and AntigravTargetAltitude>HoldAltitude-10 then HoldAltitude=AntigravTargetAltitude end else AntigravTargetAltitude=desiredBaseAltitude+D*100 end elseif AltitudeHold or VertTakeOff or IntoOrbit then if IntoOrbit then if a1 then aZ=oD(aZ,bA)else aZ=aZ+D*ox end;if aZ<planet.noAtmosphericDensityAltitude then aZ=planet.noAtmosphericDensityAltitude end else if a1 and am then HoldAltitude=oD(HoldAltitude,bA)else HoldAltitude=HoldAltitude+D*ox end end else s:updateTargetGroundAltitudeFromActionStart(D*1.0)end end;local function oH(oI)if not am then a2="Flight Assist in Atmo only"return end;local cg=type(oI)if bl==nil then if cg=="table"then if Autopilot or VectorToTarget then aM.ToggleAutopilot()end;bC("180On","BR")elseif oI==1 then bC("bnkLft","BR")else bC("bnkRht","BR")end;if not AltitudeHold and not Autopilot and not VectorToTarget then aM.ToggleAltitudeHold()if cg~="table"then oI=oI+1 end end;bl=oI else bC("180Off","BR")bl=nil end end;if oB=="gear"then GearExtended=not GearExtended;if GearExtended then VectorToTarget=false;LockPitch=nil;aM.cmdThrottle(0)if vBooster or hover then if am and ak==-1 then bC("bklOn","BL")StrongBrakes=true;Reentry=false;AutoTakeoff=false;VertTakeOff=false;AltitudeHold=false;BrakeLanding=true;aR=true;GearExtended=false else if S then bC("grOut","LG",1)a.control.extendLandingGears()end;s:setTargetGroundAltitude(LandingGearGroundHeight)if am then BrakeIsOn=true end end end;if S and not BrakeLanding and not(vBooster or hover)then bC("grOut","LG",1)a.control.extendLandingGears()end else if S then bC("grIn","LG",1)a.control.retractLandingGears()end;s:setTargetGroundAltitude(TargetHoverHeight)end elseif oB=="light"then if a.control.isAnyHeadlightSwitchedOn()==1 then a.control.switchOffHeadlights()else a.control.switchOnHeadlights()end elseif oB=="forward"then T=T-1 elseif oB=="backward"then if AltIsOn then oH(-b7*5000)else T=T+1 end elseif oB=="left"then if AltIsOn then oH(1)else W=W-1 end elseif oB=="right"then if AltIsOn then oH(3)else W=W+1 end elseif oB=="yawright"then X=X-1 elseif oB=="yawleft"then X=X+1 elseif oB=="straferight"then s:updateCommandFromActionStart(axisCommandId.lateral,1.0)LeftAmount=1 elseif oB=="strafeleft"then s:updateCommandFromActionStart(axisCommandId.lateral,-1.0)LeftAmount=-1 elseif oB=="up"then ab=ab+1;s:deactivateGroundEngineAltitudeStabilization()s:updateCommandFromActionStart(axisCommandId.vertical,1.0)elseif oB=="down"then ab=ab-1;s:deactivateGroundEngineAltitudeStabilization()s:updateCommandFromActionStart(axisCommandId.vertical,-1.0)elseif oB=="groundaltitudeup"then oC()elseif oB=="groundaltitudedown"then oC(true)elseif oB=="option1"then toggleView=false;if AltIsOn and a1 then local oJ=""for i=1,#bt do oJ=oJ.."| Name: "..system.getPlayerName(bt[i]).." Mass: "..A(core.getBoardedPlayerMass(bt[i])/1000,1).."t "end;system.print("Onboard: "..oJ)return end;aL.adjustAutopilotTargetIndex()elseif oB=="option2"then toggleView=false;if AltIsOn and a1 then for i=1,#bt do core.forceDeboard(bt[i])end;a2="Deboarded All Passengers"return end;aL.adjustAutopilotTargetIndex(1)elseif oB=="option3"then local function oK()ow=not ow;if not ow then bC("wid","DH")unit.show()core.show()if atmofueltank_size>0 then _autoconf.displayCategoryPanel(atmofueltank,atmofueltank_size,"Atmo Fuel","fuel_container")fuelPanelID=_autoconf.panels[_autoconf.panels_size]end;if spacefueltank_size>0 then _autoconf.displayCategoryPanel(spacefueltank,spacefueltank_size,"Space Fuel","fuel_container")spacefuelPanelID=_autoconf.panels[_autoconf.panels_size]end;if rocketfueltank_size>0 then _autoconf.displayCategoryPanel(rocketfueltank,rocketfueltank_size,"Rocket Fuel","fuel_container")rocketfuelPanelID=_autoconf.panels[_autoconf.panels_size]end;parentingPanelId=system.createWidgetPanel("Docking")parentingWidgetId=system.createWidget(parentingPanelId,"parenting")system.addDataToWidget(unit.getDataId(),parentingWidgetId)coreCombatStressPanelId=system.createWidgetPanel("Core combat stress")coreCombatStressgWidgetId=system.createWidget(coreCombatStressPanelId,"core_stress")system.addDataToWidget(core.getDataId(),coreCombatStressgWidgetId)if shield_1~=nil then shield_1.show()end else bC("hud","DH")unit.hide()core.hide()if fuelPanelID~=nil then t(fuelPanelID)fuelPanelID=nil end;if parentingPanelId~=nil then t(parentingPanelId)parentingPanelId=nil end;if coreCombatStressPanelId~=nil then t(coreCombatStressPanelId)coreCombatStressPanelId=nil end;if spacefuelPanelID~=nil then t(spacefuelPanelID)spacefuelPanelID=nil end;if rocketfuelPanelID~=nil then t(rocketfuelPanelID)rocketfuelPanelID=nil end;if shield_1~=nil then shield_1.hide()end end end;toggleView=false;if AltIsOn and a1 then local oJ=""for i=1,#bu do oJ=oJ.."| ID: "..bu[i].." Mass: "..A(core.getDockedConstructMass(bu[i])/1000,1).."t "end;system.print("Docked Ships: "..oJ)return end;if hideHudOnToggleWidgets then if showHud then showHud=false else showHud=true end end;oK()elseif oB=="option4"then toggleView=false;if AltIsOn and a1 then for i=1,#bu do core.forceUndock(bu[i])end;a2="Undocked all ships"return end;bl=nil;aM.ToggleAutopilot()elseif oB=="option5"then toggleView=false;aM.ToggleLockPitch()elseif oB=="option6"then toggleView=false;if AltIsOn and a1 then if shield_1 then local oL=shield_1.getVentingCooldown()if oL>0 then a2="Cannot vent again for "..oL.." seconds"return end;if shield_1.getShieldHitpoints()<shield_1.getMaxShieldHitpoints()then shield_1.startVenting()a2="Shields Venting Enabled - NO SHIELDS WHILE VENTING"else a2="Shields already at max hitpoints"end;return else a2="No shield found"return end end;aM.ToggleAltitudeHold()elseif oB=="option7"then toggleView=false;if AltIsOn and a1 then if shield_1 then shield_1.toggle()return else a2="No shield found"return end end;CollisionSystem=not CollisionSystem;if CollisionSystem then a2="Collision System Enabled"else a2="Collision System Secured"end elseif oB=="option8"then toggleView=false;if AltIsOn and a1 then if AutopilotTargetIndex>0 and CustomTarget~=nil then aM.routeWP()else a2="Select a saved wp on IPH to add to or remove from route"end;return end;stablized=not stablized;if not stablized then a2="DeCoupled Mode - Ground Stabilization off"s:deactivateGroundEngineAltitudeStabilization()bC("gsOff","GS")else a2="Coupled Mode - Ground Stabilization on"s:activateGroundEngineAltitudeStabilization(currentGroundAltitudeStabilization)a:setEngineForceCommand('hover',vec3(),1)bC("gsOn","GS")end elseif oB=="option9"then toggleView=false;if AltIsOn and a1 then s:resetCommand(axisCommandId.longitudinal)s:resetCommand(axisCommandId.lateral)s:resetCommand(axisCommandId.vertical)aM.cmdThrottle(0)unit.setTimer("tagTick",0.1)elseif gyro~=nil then gyro.toggle()at=gyro.getState()==1;if at then bC("gyOn","GA")else bC("gyOff","GA")end else a2="No gyro found"end elseif oB=="lshift"then bq=false;if AltIsOn then a1=true end;if x()==1 then a1=true;PrevViewLock=x()w(1)elseif m()==1 and ShiftShowsRemoteButtons then a1=true;aQ=false;aP=false end elseif oB=="brake"then if BrakeToggleStatus or AltIsOn then aM.BrakeToggle()elseif not BrakeIsOn then aM.BrakeToggle()else BrakeIsOn=true end elseif oB=="lalt"then toggleView=true;AltIsOn=true;if m()==0 and not freeLookToggle and userControlScheme=="keyboard"then w(1)end elseif oB=="booster"then if VanillaRockets then a:toggleBoosters()elseif not a3 then if not IsRocketOn then a:toggleBoosters()IsRocketOn=true end;a3=true else if IsRocketOn then a:toggleBoosters()IsRocketOn=false end;a3=false end elseif oB=="stopengines"then local function oM()if E-F<1.5 then bC("clear","CA")AutopilotAccelerating=false;AutopilotBraking=false;AutopilotCruising=false;Autopilot=false;AutopilotRealigned=false;AutopilotStatus="Aligning"RetrogradeIsOn=false;ProgradeIsOn=false;bl=nil;AltitudeHold=false;Reentry=false;BrakeLanding=false;BrakeIsOn=false;AutoTakeoff=false;VertTakeOff=false;a0=false;P=false;ah=false;ai=false;R=false;aR=autoRollPreference;VectorToTarget=false;TurnBurn=false;at=false;LockPitch=nil;IntoOrbit=false end end;oM()F=E;if s:getAxisCommandType(0)~=axisCommandType.byTargetSpeed then if K~=0 then s:resetCommand(axisCommandId.longitudinal)aM.cmdThrottle(0)else aM.cmdThrottle(100)end else if s:getTargetSpeed(axisCommandId.longitudinal)~=0 then s:resetCommand(axisCommandId.longitudinal)else if am then aM.cmdCruise(AtmoSpeedLimit)else aM.cmdCruise(MaxGameVelocity*3.6)end end end elseif oB=="speedup"then bz()elseif oB=="speeddown"then bz(true)elseif oB=="antigravity"and not ExternalAGG then if antigrav~=nil then aM.ToggleAntigrav()else a2="No antigrav found"end end end;function ov.stopControl(oB)local function oN()if not ExternalAGG and bd then oA=oy end;if AltitudeHold or VertTakeOff or IntoOrbit then oz=ox end end;if oB=="forward"then T=0 elseif oB=="backward"then T=0 elseif oB=="left"then if bl then if bl==2 then bl=-2 else bl=-1 end end;W=0 elseif oB=="right"then if bl then if bl==4 then bl=-2 else bl=-1 end end;W=0 elseif oB=="yawright"then X=0 elseif oB=="yawleft"then X=0 elseif oB=="straferight"then s:updateCommandFromActionStop(axisCommandId.lateral,-1.0)LeftAmount=0 elseif oB=="strafeleft"then s:updateCommandFromActionStop(axisCommandId.lateral,1.0)LeftAmount=0 elseif oB=="up"then ab=0;s:updateCommandFromActionStop(axisCommandId.vertical,-1.0)if stablized then s:activateGroundEngineAltitudeStabilization(currentGroundAltitudeStabilization)a:setEngineForceCommand('hover',vec3(),1)end elseif oB=="down"then ab=0;s:updateCommandFromActionStop(axisCommandId.vertical,1.0)if stablized then s:activateGroundEngineAltitudeStabilization(currentGroundAltitudeStabilization)a:setEngineForceCommand('hover',vec3(),1)end elseif oB=="groundaltitudeup"then oN()toggleView=false elseif oB=="groundaltitudedown"then oN()toggleView=false elseif oB=="lshift"then if x()==1 then ac=0;ad=0;w(PrevViewLock)elseif m()==1 and ShiftShowsRemoteButtons then aQ=false;aP=false end;a1=false elseif oB=="brake"then if not BrakeToggleStatus and not AltIsOn then if BrakeIsOn then aM.BrakeToggle()else BrakeIsOn=false end end elseif oB=="lalt"then if m()==0 and freeLookToggle then if toggleView then if x()==1 then w(0)else w(1)end else toggleView=true end elseif m()==0 and not freeLookToggle and userControlScheme=="keyboard"then w(0)end;AltIsOn=false end end;function ov.loopControl(oB)local function oO(bA)local D=1;if bA then D=-1 end;if not ExternalAGG and bd then if AntigravTargetAltitude~=nil then AntigravTargetAltitude=AntigravTargetAltitude+D*oA;if AntigravTargetAltitude<1000 then AntigravTargetAltitude=1000 end;if AltitudeHold and AntigravTargetAltitude<HoldAltitude+10 and AntigravTargetAltitude>HoldAltitude-10 then HoldAltitude=AntigravTargetAltitude end;oA=r(oA*1.05,oy,50)BrakeIsOn=false else AntigravTargetAltitude=desiredBaseAltitude+D*100;BrakeIsOn=false end elseif AltitudeHold or VertTakeOff or IntoOrbit then if IntoOrbit then aZ=aZ+D*oz;if aZ<planet.noAtmosphericDensityAltitude then aZ=planet.noAtmosphericDensityAltitude end else HoldAltitude=HoldAltitude+D*oz end;oz=r(oz*1.05,ox,50)else s:updateTargetGroundAltitudeFromActionLoop(D*1.0)end end;local function oP(bA)local D=1;if bA then D=-1 end;if not a1 then if AtmoSpeedAssist and not AltIsOn then K=r(K+D*speedChangeSmall/100,-1,1)else s:updateCommandFromActionLoop(axisCommandId.longitudinal,D*speedChangeSmall)end end end;if oB=="groundaltitudeup"then if not a1 then oO()end elseif oB=="groundaltitudedown"then if not a1 then oO(true)end elseif oB=="speedup"then oP()elseif oB=="speeddown"then oP(true)end end;function ov.inputTextControl(bS)local function oQ(oR,e4,hv)local function oS(e4)local B=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local co='::pos{'..B..','..B..','..B..','..B..','..B..'}'local cC,cD,cJ,cK,cL=o(e4,co)if cC=="0"and cD=="0"then return vec3(z(cJ),z(cK),z(cL))end;cK=math.rad(cK)cJ=math.rad(cJ)local planet=b[z(cC)][z(cD)]local dw=math.cos(cJ)local oT=vec3(dw*math.cos(cK),dw*math.sin(cK),math.sin(cJ))return planet.center+(planet.radius+cL)*oT end;local position=oS(e4)return aL.AddNewLocation(oR,position,hv)end;local i;local oU,oV=nil,nil;local oW="Command List:\n/commands \n/setname <newname> - Updates current selected saved position name\n/G VariableName newValue - Updates global variable to new value\n".."/G dump - shows all variables updatable by /G\n/agg <targetheight> - Manually set agg target height\n".."/addlocation SafeZoneCenter ::pos{0,0,13771471,7435803,-128971} - adds a saved location by waypoint, not as accurate as making one at location\n".."/::pos{0,0,13771471,7435803,-128971} - adds a temporary waypoint that is not saved to databank with name 0Temp\n".."/copydatabank - copies dbHud databank to a blank databank\n".."/iphWP - displays current IPH target's ::pos waypoint in lua chat\n".."/resist 0.15, 0.15, 0.15, 0.15 - Sets shield resistance distribution of the floating 60% extra available, usable once per minute\n".."/deletewp - Deletes current selected custom wp"i=string.find(bS," ")oU=bS;if i~=nil then oU=string.sub(bS,0,i-1)oV=string.sub(bS,i+1)end;if oU=="/help"or oU=="/commands"then for lm in string.gmatch(oW,"([^\n]+)")do system.print(lm)end;return elseif oU=="/setname"then if oV==nil or oV==""then a2="Usage: ah-setname Newname"return end;if AutopilotTargetIndex>0 and CustomTarget~=nil then aL.UpdatePosition(oV)else a2="Select a saved target to rename first"end elseif shield_1 and oU=="/resist"then if not shield_1 then a2="No shield found"return elseif oV==nil or shield_1.getResistancesCooldown()>0 then a2="Usable once per min.  Usage: /resist 0.15, 0.15, 0.15, 0.15"return end;local B=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local co=B..', '..B..', '..B..', '..B;local oX,oY,oZ,o_=o(oV,co)if o_==nil or oX+oY+oZ+o_>0.6 then a2="Improperly formatted or total exceeds 0.6"return end;if shield_1.setResistances(oX,oY,oZ,o_)==1 then a2="Shield Resistances set"else a2="Resistance setting failed."end elseif oU=="/addlocation"or string.find(bS,"::pos")~=nil then local hv=false;local oR="0-Temp"if oV==nil or oV==""then oV=oU;hv=true end;i=string.find(oV,"::")if not hv then oR=string.sub(oV,1,i-2)end;local e4=string.sub(oV,i)oQ(oR,e4,hv)elseif oU=="/agg"then if oV==nil or oV==""then a2="Usage: /agg targetheight"return end;oV=z(oV)if oV<1000 then oV=1000 end;AntigravTargetAltitude=oV;a2="AGG Target Height set to "..oV elseif oU=="/G"then if oV==nil or oV==""then a2="Usage: /G VariableName variablevalue\n/G dump - shows all variables"return end;if oV=="dump"then for c9,ca in pairs(bI())do if type(_G[ca])=="boolean"then if _G[ca]==true then system.print(ca.." true")else system.print(ca.." false")end elseif _G[ca]==nil then system.print(ca.." nil")else system.print(ca.." ".._G[ca])end end;return end;i=string.find(oV," ")local p0=string.sub(oV,0,i-1)local p1=string.sub(oV,i+1)for c9,ca in pairs(bI())do if ca==p0 then a2="Variable "..p0 .." changed to "..p1;local p2=type(_G[ca])if p2=="number"then p1=z(p1)if ca=="AtmoSpeedLimit"then aV=p1 end elseif p2=="boolean"then if string.lower(p1)=="true"then p1=true else p1=false end end;_G[ca]=p1;return end end;a2="No such global variable: "..p0 elseif oU=="/deletewp"then if AutopilotTargetIndex>0 and CustomTarget~=nil then aL.ClearCurrentPosition()else a2="Select a custom wp to delete first in IPH"end elseif oU=="/copydatabank"then if dbHud_2 then c5(true)else a2="Spare Databank required to copy databank"end elseif oU=="/iphWP"then if AutopilotTargetIndex>0 then system.print(aM.showWayPoint(a8,AutopilotTargetCoords,true))a2="::pos waypoint shown in lua chat"else a2="No target selected in IPH"end end end;return ov end;function script.onStart()local p3=false;local function p4()local function p5(p6)local p7=dbHud_1.hasKey;for c9,ca in pairs(p6)do if p7(ca)then local cq=g(dbHud_1.getStringValue(ca))if cq~=nil then _G[ca]=cq;p3=true end end end end;if dbHud_1 then if not useTheseSettings then p5(bI())coroutine.yield()p5(c)else p5(c)a2="Updated user preferences used.  Will be saved when you exit seat.\nToggle off useTheseSettings to use saved values"ae=5;p3=false end;coroutine.yield()if p3 then a2="Loaded Saved Variables"ay=ResolutionX;az=ResolutionY;BrakeToggleStatus=BrakeToggleDefault;userControlScheme=string.lower(userControlScheme)aR=autoRollPreference;aV=AtmoSpeedLimit;au=[[rgb(]]..e(H+0.5)..","..e(J+0.5)..","..e(I+0.5)..[[)]]av=[[rgb(]]..e(H*0.9+0.5)..","..e(J*0.9+0.5)..","..e(I*0.9+0.5)..[[)]]elseif not useTheseSettings then a2="No Saved Variables Found - Exit HUD to save settings"end;if LastVersionUpdate<1.500 then if LowOrbitHeight<2000 then a2="Updating LowOrbitHeight to new minimum default of 2000."LowOrbitHeight=2000 end end;LastVersionUpdate=VERSION_NUMBER else a2="No databank found. Attach one to control unit and rerun \nthe autoconfigure to save preferences and locations"end;if LastStartTime+180<E then LastMaxBrakeInAtmo=0 end;LastStartTime=E;userControlScheme=string.lower(userControlScheme)if string.find("keyboard virtual joystick mouse",userControlScheme)==nil then a2="Invalid User Control Scheme selected.\nChange userControlScheme in Lua Parameters to keyboard, mouse, or virtual joystick\nOr use shift and button in screen"ae=7 end;if antigrav and not ExternalAGG then if AntigravTargetAltitude==nil then AntigravTargetAltitude=ao end;antigrav.setBaseAltitude(AntigravTargetAltitude)end;VectorStatus="Proceeding to Waypoint"end;local function p8()local function p9(pa,pb)if pa>pb then pb=pa end;local pc,pd=0,0;if ContainerOptimization>0 then pc=ContainerOptimization*0.05 end;if FuelTankOptimization>0 then pd=FuelTankOptimization*0.05 end;pb=pb*(1-(pc+pd))return pb end;local pe=core.getElementNameById;local pf=fuelX~=0 and fuelY~=0;for c9 in pairs(ap)do local type=core.getElementTypeById(ap[c9])if o(type,'^.*Atmospheric Engine$')then if o(tostring(core.getElementTagsById(ap[c9])),'^.*vertical.*$')and core.getElementForwardById(ap[c9])[3]>0 then bc=true end end;if o(type,'^.*Space Engine$')then b2=true;if o(tostring(core.getElementTagsById(ap[c9])),'^.*vertical.*$')then local pg=core.getElementForwardById(ap[c9])if pg[3]<0 then b0=true else b1=true end end end;if type=="Landing Gear"then S=true end;if type=="Dynamic Core Unit"then local ph=j(ap[c9])if ph>10000 then G=110 elseif ph>1000 then G=55 elseif ph>150 then G=27 end end;aD=aD+j(ap[c9])if pf and(type=="Atmospheric Fuel Tank"or type=="Space Fuel Tank"or type=="Rocket Fuel Tank")then local ph=j(ap[c9])local ld=l(ap[c9])local pa=0;local gA=q()if type=="Atmospheric Fuel Tank"then local pb=400;local pi=35.03;if ph>10000 then pb=51200;pi=5480 elseif ph>1300 then pb=6400;pi=988.67 elseif ph>150 then pb=1600;pi=182.67 end;pa=ld-pi;if fuelTankHandlingAtmo>0 then pb=pb+pb*fuelTankHandlingAtmo*0.2 end;pb=p9(pa,pb)aA[#aA+1]={ap[c9],pe(ap[c9]),pb,pi,pa,gA}end;if type=="Rocket Fuel Tank"then local pb=320;local pi=173.42;if ph>65000 then pb=40000;pi=25740 elseif ph>6000 then pb=5120;pi=4720 elseif ph>700 then pb=640;pi=886.72 end;pa=ld-pi;if fuelTankHandlingRocket>0 then pb=pb+pb*fuelTankHandlingRocket*0.1 end;pb=p9(pa,pb)aC[#aC+1]={ap[c9],pe(ap[c9]),pb,pi,pa,gA}end;if type=="Space Fuel Tank"then local pb=600;local pi=35.03;if ph>10000 then pb=76800;pi=5480 elseif ph>1300 then pb=9600;pi=988.67 elseif ph>150 then pb=2400;pi=182.67 end;pa=ld-pi;if fuelTankHandlingSpace>0 then pb=pb+pb*fuelTankHandlingSpace*0.2 end;pb=p9(pa,pb)aB[#aB+1]={ap[c9],pe(ap[c9]),pb,pi,pa,gA}end end end;if not bc then VertTakeOff,VertTakeOffEngine=false,false end end;local function pj()if gyro~=nil then at=gyro.getState()==1 end;if not stablized then s:deactivateGroundEngineAltitudeStabilization()end;if userControlScheme~="keyboard"then w(1)else w(0)end;if door and(am or not am and ao<10000)then for _,ca in pairs(door)do ca.toggle()end end;if switch then for _,ca in pairs(switch)do ca.toggle()end end;if forcefield and(am or not am==0 and ao<10000)then for _,ca in pairs(forcefield)do ca.toggle()end end;if antigrav then bd=antigrav.getState()==1;if bd and not ExternalAGG then antigrav.show()end end;if m()==1 and RemoteFreeze then system.freeze(1)else system.freeze(0)end;if S then GearExtended=a.control.isAnyLandingGearExtended()==1;if GearExtended then a.control.extendLandingGears()else a.control.retractLandingGears()end end;if ak~=-1 or not am and b6:len()<50 then BrakeIsOn=true;GearExtended=true;if S then a.control.extendLandingGears()end else BrakeIsOn=false end;s:setTargetGroundAltitude(aS)if am and ak~=-1 then aI=core.getMaxKinematicsParametersAlongAxis("ground",core.getConstructOrientationUp())[1]end;WasInAtmo=am end;local function pk()local pl={}local function pm()return{id=0,name={"Space","Space","Space"},type={},biosphere={},classification={},habitability={},description={},iconPath="",hasAtmosphere=false,isSanctuary=false,isInSafeZone=true,systemId=0,positionInSystem=0,satellites={},center={0,0,0},gravity=0,radius=0,atmosphereThickness=0,atmosphereRadius=0,surfaceArea=0,surfaceAverageAltitude=0,surfaceMaxAltitude=0,surfaceMinAltitude=0,GM=0,ores={},territories=0,noAtmosphericDensityAltitude=0,spaceEngineMinAltitude=0}end;local pn={[1]=4480,[6]=4480,[7]=6270}for po,pp in pairs(b)do b[po][0]=pm()b[po][0].systemId=po;pl[po]={}for pq,planet in pairs(b[po])do planet.gravity=planet.gravity/9.8;planet.center=vec3(planet.center)planet.name=planet.name[1]planet.noAtmosphericDensityAltitude=planet.atmosphereThickness or planet.atmosphereRadius-planet.radius;planet.spaceEngineMinAltitude=pn[planet.id]or 0.68377*(planet.atmosphereThickness or planet.atmosphereRadius-planet.radius)planet.planetarySystemId=po;planet.bodyId=planet.id;pl[po][pq]=planet;if minAtlasX==nil or planet.center.x<minAtlasX then minAtlasX=planet.center.x end;if maxAtlasX==nil or planet.center.x>maxAtlasX then maxAtlasX=planet.center.x end;if minAtlasY==nil or planet.center.y<minAtlasY then minAtlasY=planet.center.y end;if maxAtlasY==nil or planet.center.y>maxAtlasY then maxAtlasY=planet.center.y end;if planet.center and planet.name~="Space"then bv[#bv+1]=planet end end end;aF=cb()aG=aF(pl)aH=dz()aJ=e2()aL=lT()end;SetupComplete=false;beginSetup=coroutine.create(function()s:setupCustomTargetSpeedRanges(axisCommandId.longitudinal,{1000,5000,10000,20000,30000})p4()coroutine.yield()p8()coroutine.yield()aM=m9()pj()coroutine.yield()pk()aN=eq()aK=fL()aK.ButtonSetup()aO=ou()coroutine.yield()unit.hide()system.showScreen(1)system.showHelper(0)collectgarbage("collect")coroutine.yield()unit.setTimer("apTick",apTickRate)unit.setTimer("radarTick",apTickRate)unit.setTimer("hudTick",hudTickRate)unit.setTimer("oneSecond",1)unit.setTimer("tenthSecond",1/10)unit.setTimer("fiveSecond",5)bC("start","SU")end)coroutine.resume(beginSetup)end;function script.onStop()_autoconf.hideCategoryPanels()if antigrav~=nil and not ExternalAGG then antigrav.hide()end;if warpdrive~=nil then warpdrive.hide()end;core.hide()a.control.switchOffHeadlights()if door and(an>0 or an==0 and ao<10000)then for _,ca in pairs(door)do ca.toggle()end end;if switch then for _,ca in pairs(switch)do ca.toggle()end end;if forcefield and(an>0 or an==0 and ao<10000)then for _,ca in pairs(forcefield)do ca.toggle()end end;showHud=bx;c5()if button then button.activate()end;if SetWaypointOnExit then aM.showWayPoint(planet,bb)end;bC("stop","SU")end;function script.onTick(pr)local ps=nil;if pr=="contact"then if not contactTimer then contactTimer=0 end;if E>contactTimer+10 then a2="Radar Contact"bC("rdrCon","RC")contactTimer=E end;unit.stopTimer("contact")elseif pr=="tenthSecond"then local function pt()local pu=system.createData;local pv=system.createWidget;panelInterplanetary=system.createWidgetPanel("Interplanetary Helper")interplanetaryHeader=pv(panelInterplanetary,"value")interplanetaryHeaderText=pu('{"label": "Target Planet", "value": "N/A", "unit":""}')v(interplanetaryHeaderText,interplanetaryHeader)widgetDistance=pv(panelInterplanetary,"value")widgetDistanceText=pu('{"label": "distance", "value": "N/A", "unit":""}')v(widgetDistanceText,widgetDistance)widgetTravelTime=pv(panelInterplanetary,"value")widgetTravelTimeText=pu('{"label": "Travel Time", "value": "N/A", "unit":""}')v(widgetTravelTimeText,widgetTravelTime)widgetMaxMass=pv(panelInterplanetary,"value")widgetMaxMassText=pu('{"label": "Maximum Mass", "value": "N/A", "unit":""}')v(widgetMaxMassText,widgetMaxMass)widgetTargetOrbit=pv(panelInterplanetary,"value")widgetTargetOrbitText=pu('{"label": "Target Altitude", "value": "N/A", "unit":""}')v(widgetTargetOrbitText,widgetTargetOrbit)widgetCurBrakeDistance=pv(panelInterplanetary,"value")widgetCurBrakeDistanceText=pu('{"label": "Cur Brake distance", "value": "N/A", "unit":""}')widgetCurBrakeTime=pv(panelInterplanetary,"value")widgetCurBrakeTimeText=pu('{"label": "Cur Brake Time", "value": "N/A", "unit":""}')widgetMaxBrakeDistance=pv(panelInterplanetary,"value")widgetMaxBrakeDistanceText=pu('{"label": "Max Brake distance", "value": "N/A", "unit":""}')widgetMaxBrakeTime=pv(panelInterplanetary,"value")widgetMaxBrakeTimeText=pu('{"label": "Max Brake Time", "value": "N/A", "unit":""}')widgetTrajectoryAltitude=pv(panelInterplanetary,"value")widgetTrajectoryAltitudeText=pu('{"label": "Projected Altitude", "value": "N/A", "unit":""}')if not am then v(widgetCurBrakeDistanceText,widgetCurBrakeDistance)v(widgetCurBrakeTimeText,widgetCurBrakeTime)v(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)v(widgetMaxBrakeTimeText,widgetMaxBrakeTime)v(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)end end;local function pw()t(panelInterplanetary)panelInterplanetary=nil end;local function px()if not Autopilot then if CustomTarget==nil or CustomTarget.planetname~=planet.name then AutopilotDistance=(a8.center-bb):len()else AutopilotDistance=(CustomTarget.position-bb):len()end end;local e0=b8;local nA=unit.getThrottle()/100;if AtmoSpeedAssist then nA=K end;local py,pz=aH.computeDistanceAndTime(b8,MaxGameVelocity,ar,a:maxForceForward()*nA,warmup,0)local a4,a5;if not TurnBurn then a4,a5=aM.GetAutopilotBrakeDistanceAndTime(MaxGameVelocity)else a4,a5=aM.GetAutopilotTBBrakeDistanceAndTime(MaxGameVelocity)end;local _,pA;if not TurnBurn and e0>0 then _,pA=aM.GetAutopilotBrakeDistanceAndTime(e0)else _,pA=aM.GetAutopilotTBBrakeDistanceAndTime(e0)end;local pB=0;local pC=0;if AutopilotCruising or not Autopilot and e0>5 then pC=aH.computeTravelTime(e0,0,AutopilotDistance)elseif a4+py<AutopilotDistance then pB=AutopilotDistance-(a4+py)pC=aH.computeTravelTime(8333.0556,0,pB)else local pD=(AutopilotDistance-a4)/py;py=AutopilotDistance-a4;pz=pz*pD end;if CustomTarget~=nil and CustomTarget.planetname==planet.name and not Autopilot then return pC elseif AutopilotBraking then return pA elseif AutopilotCruising then return pC+pA else return pz+a5+pC end end;local function pE(l5,pF)if l5==nil then l5=core.g()end;l5=A(l5,5)if pF~=nil and pF or(ps==nil or ps~=l5)then local e0=b6:len()local pG=g(unit.getData()).maxBrake;if pG~=nil and pG>0 and am then pG=pG/r(e0/100,0.1,1)pG=pG/an;if an>0.10 then if LastMaxBrakeInAtmo then LastMaxBrakeInAtmo=(LastMaxBrakeInAtmo+pG)/2 else LastMaxBrakeInAtmo=pG end end end;if pG~=nil and pG>0 then LastMaxBrake=pG end;ps=l5 end end;pE(nil,true)if be~=nil then if s:getAxisCommandType(0)~=axisCommandType.byTargetSpeed or s:getTargetSpeed(axisCommandId.longitudinal)~=be then aM.cmdCruise(be)else be=nil end end;if AutopilotTargetName~="None"then if panelInterplanetary==nil then pt()end;if AutopilotTargetName~=nil then local pH=CustomTarget~=nil;local pI=0.5*LastMaxBrakeInAtmo/a8:getGravity(a8.center+vec3(0,0,1)*a8.radius):len()pI=pI>1000000 and A(pI/1000000,2).." kTons"or A(pI/1000,2).." Tons"u(interplanetaryHeaderText,'{"label": "Target", "value": "'..AutopilotTargetName..'", "unit":""}')travelTime=px()if pH and not Autopilot then af=(bb-CustomTarget.position):len()else af=(AutopilotTargetCoords-bb):len()end;if not TurnBurn then a4,a5=aM.GetAutopilotBrakeDistanceAndTime(b8)a6,a7=aM.GetAutopilotBrakeDistanceAndTime(MaxGameVelocity)else a4,a5=aM.GetAutopilotTBBrakeDistanceAndTime(b8)a6,a7=aM.GetAutopilotTBBrakeDistanceAndTime(MaxGameVelocity)end;local il=bY(af)u(widgetDistanceText,'{"label": "distance", "value": "'..il..'"}')u(widgetTravelTimeText,'{"label": "Travel Time", "value": "'..c0(travelTime)..'", "unit":""}')il=bY(a4)u(widgetCurBrakeDistanceText,'{"label": "Cur Brake distance", "value": "'..il..'"}')u(widgetCurBrakeTimeText,'{"label": "Cur Brake Time", "value": "'..c0(a5)..'", "unit":""}')il=bY(a6)u(widgetMaxBrakeDistanceText,'{"label": "Max Brake distance", "value": "'..il..'"}')u(widgetMaxBrakeTimeText,'{"label": "Max Brake Time", "value": "'..c0(a7)..'", "unit":""}')u(widgetMaxMassText,'{"label": "Max Brake Mass", "value": "'..f("%s",pI)..'", "unit":""}')il=bY(AutopilotTargetOrbit)u(widgetTargetOrbitText,'{"label": "Target Orbit", "value": "'..il..'"}')if an>0 and not WasInAtmo then system.removeDataFromWidget(widgetMaxBrakeTimeText,widgetMaxBrakeTime)system.removeDataFromWidget(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)system.removeDataFromWidget(widgetCurBrakeTimeText,widgetCurBrakeTime)system.removeDataFromWidget(widgetCurBrakeDistanceText,widgetCurBrakeDistance)system.removeDataFromWidget(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)WasInAtmo=true;if not bf and AtmoSpeedAssist and(AltitudeHold or Reentry or aj)then aM.cmdThrottle(1)BrakeIsOn=false;O=false end end;if an==0 and WasInAtmo then if u(widgetMaxBrakeTimeText,widgetMaxBrakeTime)==1 then v(widgetMaxBrakeTimeText,widgetMaxBrakeTime)end;if u(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)==1 then v(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)end;if u(widgetCurBrakeTimeText,widgetCurBrakeTime)==1 then v(widgetCurBrakeTimeText,widgetCurBrakeTime)end;if u(widgetCurBrakeDistanceText,widgetCurBrakeDistance)==1 then v(widgetCurBrakeDistanceText,widgetCurBrakeDistance)end;if u(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)==1 then v(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)end;WasInAtmo=false end end else pw()end;if warpdrive~=nil then if g(warpdrive.getData()).destination~="Unknown"and g(warpdrive.getData()).distance>400000 then warpdrive.show()showWarpWidget=true else warpdrive.hide()showWarpWidget=false end end;aK.TenthTick()elseif pr=="oneSecond"then local function pJ(gK)local pK=0;ax=""local pL=aD;local pM=0;local pN=0;local pO=0;local gE=0;local gF=""local pP=core.getElementHitPointsById;for c9 in pairs(ap)do local ph=0;local pQ=0;pQ=j(ap[c9])ph=pP(ap[c9])pM=pM+ph;if ph<pQ then if ph==0 then pO=pO+1 else pN=pN+1 end;if aE and#aw==0 then position=vec3(core.getElementPositionById(ap[c9]))local bQ=position.x;local bR=position.y;local eY=position.z;table.insert(aw,core.spawnArrowSticker(bQ,bR,eY+1,"down"))table.insert(aw,core.spawnArrowSticker(bQ,bR,eY+1,"down"))core.rotateSticker(aw[2],0,0,90)table.insert(aw,core.spawnArrowSticker(bQ+1,bR,eY,"north"))table.insert(aw,core.spawnArrowSticker(bQ+1,bR,eY,"north"))core.rotateSticker(aw[4],90,90,0)table.insert(aw,core.spawnArrowSticker(bQ-1,bR,eY,"south"))table.insert(aw,core.spawnArrowSticker(bQ-1,bR,eY,"south"))core.rotateSticker(aw[6],90,-90,0)table.insert(aw,core.spawnArrowSticker(bQ,bR-1,eY,"east"))table.insert(aw,core.spawnArrowSticker(bQ,bR-1,eY,"east"))core.rotateSticker(aw[8],90,0,90)table.insert(aw,core.spawnArrowSticker(bQ,bR+1,eY,"west"))table.insert(aw,core.spawnArrowSticker(bQ,bR+1,eY,"west"))core.rotateSticker(aw[10],-90,0,90)table.insert(aw,ap[c9])end elseif aE and#aw>0 and aw[11]==ap[c9]then for gz in pairs(aw)do core.deleteSticker(aw[gz])end;aw={}end end;pK=e(pM/pL*100)if pK<100 then gK[#gK+1]=bP(0,0,"","pbright txt")gE=e(pK*2.55)gF=f("rgb(%d,%d,%d)",255-gE,gE,0)if pK<100 then gK[#gK+1]=bP("50%",1035,"Elemental Integrity: "..pK.."%","txtbig txtmid","fill:"..gF)if pO>0 then gK[#gK+1]=bP("50%",1055,"Disabled Modules: "..pO.." Damaged Modules: "..pN,"txtbig txtmid","fill:"..gF)elseif pN>0 then gK[#gK+1]=bP("50%",1055,"Damaged Modules: "..pN,"txtbig txtmid","fill:"..gF)end end end end;local function pR()if weapon then if WeaponPanelID==nil and(radarPanelID~=nil or GearExtended)then _autoconf.displayCategoryPanel(weapon,weapon_size,"Weapons","weapon",true)WeaponPanelID=_autoconf.panels[_autoconf.panels_size]elseif WeaponPanelID~=nil and radarPanelID==nil and not GearExtended then t(WeaponPanelID)WeaponPanelID=nil end end end;bt=core.getPlayersOnBoard()bu=core.getDockedConstructs()pR()local gK={}aK.OneSecond(gK)if ShouldCheckDamage then pJ(gK)end;ag=table.concat(gK,"")collectgarbage("collect")elseif pr=="fiveSecond"then if not UseSatNav then return end;al=dbHud_1.getStringValue("SPBAutopilotTargetName")if al~=nil and al~=""and al~="SatNavNotChanged"then local cq=g(dbHud_1.getStringValue("SavedLocations"))if cq~=nil then _G["SavedLocations"]=cq;local fg=-1;local m5;for c9,ca in pairs(SavedLocations)do if ca.name and ca.name=="SatNav Location"then fg=c9;break end end;if fg~=-1 then m5=SavedLocations[fg]fg=-1;for c9,ca in pairs(b[0])do if ca.name and ca.name=="SatNav Location"then fg=c9;break end end;if fg>-1 then b[0][fg]=m5 end;aL.UpdateAtlasLocationsList()a2=m5.name.." position updated"end end;for i=1,#bi do if bi[i].name==al then AutopilotTargetIndex=i;system.print("Index = "..AutopilotTargetIndex.." "..bi[i].name)aL.UpdateAutopilotTarget()dbHud_1.setStringValue("SPBAutopilotTargetName","SatNavNotChanged")break end end end elseif pr=="msgTick"then local gK={}aK.DisplayMessage(gK,"empty")a2="empty"unit.stopTimer("msgTick")ae=3 elseif pr=="animateTick"then aQ=true;aP=false;ac=0;ad=0;unit.stopTimer("animateTick")elseif pr=="hudTick"then aK.hudtick()elseif pr=="apTick"then aM.APTick()elseif pr=="radarTick"then aN.UpdateRadar()elseif pr=="tagTick"then if UseExtra=="Off"then UseExtra="All"elseif UseExtra=="All"then UseExtra="Longitude"elseif UseExtra=="Longitude"then UseExtra="Lateral"elseif UseExtra=="Lateral"then UseExtra="Vertical"else UseExtra="Off"end;a2="Extra Engine Tags: "..UseExtra;unit.stopTimer("tagTick")end end;function script.onFlush()local function pS(pT,nJ)local pU=vec3()local pV=vec3()if pT==axisCommandId.longitudinal then pU=vec3(core.getConstructOrientationForward())pV=b4 elseif pT==axisCommandId.vertical then pU=vec3(core.getConstructOrientationUp())pV=b3 elseif pT==axisCommandId.lateral then pU=vec3(core.getConstructOrientationRight())pV=b5 else return vec3()end;local pW=vec3(core.getWorldGravity())local pX=pW:dot(pV)local pY=vec3(core.getWorldAirFrictionAcceleration())local pZ=pY:dot(pV)local p_=b6:dot(pU)local q0=nJ*constants.kph2m;if targetSpeedPID2==nil then targetSpeedPID2=pid.new(10,0,10.0)end;targetSpeedPID2:inject(q0-p_)local q1=targetSpeedPID2:get()local q2=(q1-pZ-pX)*pV;return q2 end;local function q3(pT,nJ)local pU=vec3()local pV=vec3()if pT==axisCommandId.longitudinal then pU=vec3(core.getConstructOrientationForward())pV=b4 elseif pT==axisCommandId.vertical then pU=vec3(core.getConstructOrientationUp())pV=b3 elseif pT==axisCommandId.lateral then pU=vec3(core.getConstructOrientationRight())pV=b5 else return vec3()end;local pW=vec3(core.getWorldGravity())local pX=pW:dot(pV)local pY=vec3(core.getWorldAirFrictionAcceleration())local pZ=pY:dot(pV)local p_=b6:dot(pU)local q0=nJ*constants.kph2m;if targetSpeedPID==nil then targetSpeedPID=pid.new(10,0,10.0)end;targetSpeedPID:inject(q0-p_)local q1=targetSpeedPID:get()local q2=(q1-pZ-pX)*pV;return q2 end;local function q4(q5,gN,lY)local q6=q5:cross(lY):normalize_inplace()local hz=math.acos(r(q6:dot(-gN),-1,1))*constants.rad2deg;if q6:cross(-gN):dot(lY)<0 then hz=-hz end;return hz end;if antigrav and not ExternalAGG then if not bd and antigrav.getBaseAltitude()~=AntigravTargetAltitude then antigrav.setBaseAltitude(AntigravTargetAltitude)end end;bf=s:getAxisCommandType(0)==axisCommandType.byThrottle;if bf and O then aM.cmdThrottle(0)O=false elseif not bf and not O then K=0;O=true end;pitchSpeedFactor=math.max(pitchSpeedFactor,0.01)yawSpeedFactor=math.max(yawSpeedFactor,0.01)rollSpeedFactor=math.max(rollSpeedFactor,0.01)torqueFactor=math.max(torqueFactor,0.01)brakeSpeedFactor=math.max(brakeSpeedFactor,0.01)brakeFlatFactor=math.max(brakeFlatFactor,0.01)autoRollFactor=math.max(autoRollFactor,0.01)local q7=r(T+U+system.getControlDeviceForwardInput(),-1,1)local q8=r(W+Z+system.getControlDeviceYawInput(),-1,1)local q9=r(X+V-system.getControlDeviceLeftRightInput(),-1,1)local qa=Y;b9=vec3(core.getWorldVertical())if b9==nil or b9:len()==0 then b9=(planet.center-bb):normalize()end;b3=vec3(core.getConstructWorldOrientationUp())b4=vec3(core.getConstructWorldOrientationForward())b5=vec3(core.getConstructWorldOrientationRight())b7=vec3(core.getWorldVelocity())b6=vec3(core.getVelocity())bb=vec3(core.getConstructWorldPos())ar=core.getConstructMass()b8=vec3(b7):len()ba=-b9:dot(b7)bh=getRoll(b9,b4,b5)local qb=bh/180*math.pi;local qc=math.cos(qb)local qd=math.sin(qb)bg=q4(b9,b4,b5*qc+b3*qd)local qe=b7:normalize()local qf=d(bh)local qg=utils.sign(bh)local qh=vec3(core.getWorldAngularVelocity())local qi=q7*pitchSpeedFactor*b5+q8*rollSpeedFactor*b4+q9*yawSpeedFactor*b3;if aR==true and b9:len()>0.01 then local qj=d(aU-bh)if((ProgradeIsOn or Reentry or BrakeLanding or ah or AltitudeHold or IntoOrbit)and qj>0 or an>0.0 and qj<autoRollRollThreshold and autoRollPreference)and q8==0 and d(bg)<85 then local qk=aU;local ql=autoRollFactor;if an==0 then ql=ql/4;aU=0;qk=0 end;if rollPID==nil then rollPID=pid.new(ql*0.01,0,ql*0.1)end;rollPID:inject(qk-bh)local qm=rollPID:get()qi=qi+qm*b4 end end;local qn=1;local qo=0;local qp=1;local qq=system.getMouseWheel()if qq>0 then bz()elseif qq<0 then bz(true)else as=true end;L=0;if am and AtmoSpeedAssist and bf then if throttlePID==nil then throttlePID=pid.new(0.5,0,1)end;throttlePID:inject(aV/3.6-b7:dot(b4))local qr=throttlePID:get()N=r(qr,-1,1)if N<K and an>0.005 then M=true;s:setThrottleCommand(axisCommandId.longitudinal,r(N,0.01,1))else M=false;s:setThrottleCommand(axisCommandId.longitudinal,K)end;if brakePID==nil then brakePID=pid.new(1*0.01,0,1*0.1)end;brakePID:inject(b7:len()-aV/3.6)local qs=r(brakePID:get(),0,1)if an>0 and ba<-80 or an>0.005 then L=qs end;if L>0 then if M and N==0.01 then s:setThrottleCommand(axisCommandId.longitudinal,0)end else N=r(N,0.01,1)end;local qt=''local qu=vec3()local qv=pS(axisCommandId.vertical,ab*1000)a:setEngineForceCommand("vertical airfoil , vertical ground ",qv,qo)local qw='thrust analog longitudinal 'if UseExtra=="All"or UseExtra=="Longitude"then qw=qw..ExtraLongitudeTags end;local qx=s:getAxisCommandType(axisCommandId.longitudinal)local qy=s:composeAxisAccelerationFromThrottle(qw,axisCommandId.longitudinal)local qz=q3(axisCommandId.lateral,LeftAmount*1000)qt=qt..' , '.."lateral airfoil , lateral ground "qu=qu+qz;if qu:len()>constants.epsilon then a:setEngineForceCommand(qt,qu,qo,'','','',qp)end;a:setEngineForceCommand(qw,qy,qn)local qA='thrust analog vertical fueled 'local qB='thrust analog lateral fueled 'if UseExtra=="All"or UseExtra=="Lateral"then qB=qB..ExtraLateralTags end;if UseExtra=="All"or UseExtra=="Vertical"then qA=qA..ExtraVerticalTags end;if ab~=0 or BrakeLanding and BrakeIsOn or not GearExtended and not stablized then a:setEngineForceCommand(qA,qv,qn)else a:setEngineForceCommand(qA,vec3(),qn)end;if LeftAmount~=0 then a:setEngineForceCommand(qB,qz,qn)else a:setEngineForceCommand(qB,vec3(),qn)end;if qa==0 then qa=L end;local qC=-qa*(brakeSpeedFactor*b7+brakeFlatFactor*qe)a:setEngineForceCommand('brake',qC)else if AtmoSpeedAssist then s:setThrottleCommand(axisCommandId.longitudinal,K)end;local nJ=unit.getAxisCommandValue(0)if not bf then if brakePID==nil then brakePID=pid.new(1*0.01,0,1*0.1)end;brakePID:inject(b7:len()-nJ/3.6)local qs=r(brakePID:get(),0,1)qa=r(qa+qs,0,1)end;local qC=-qa*(brakeSpeedFactor*b7+brakeFlatFactor*qe)a:setEngineForceCommand('brake',qC)local qt=''local qu=vec3()local qD=false;local qw='thrust analog longitudinal 'if UseExtra=="All"or UseExtra=="Longitude"then qw=qw..ExtraLongitudeTags end;local qx=s:getAxisCommandType(axisCommandId.longitudinal)if qx==axisCommandType.byThrottle then local qy=s:composeAxisAccelerationFromThrottle(qw,axisCommandId.longitudinal)a:setEngineForceCommand(qw,qy,qn)elseif qx==axisCommandType.byTargetSpeed then local qy=s:composeAxisAccelerationFromTargetSpeed(axisCommandId.longitudinal)qt=qt..' , '..qw;qu=qu+qy;if s:getTargetSpeed(axisCommandId.longitudinal)==0 or s:getCurrentToTargetDeltaSpeed(axisCommandId.longitudinal)<-s:getTargetSpeedCurrentStep(axisCommandId.longitudinal)*0.5 then qD=true end end;local qB='thrust analog lateral 'if UseExtra=="All"or UseExtra=="Lateral"then qB=qB..ExtraLateralTags end;local qE=s:getAxisCommandType(axisCommandId.lateral)if qE==axisCommandType.byThrottle then local qF=s:composeAxisAccelerationFromThrottle(qB,axisCommandId.lateral)a:setEngineForceCommand(qB,qF,qn)elseif qE==axisCommandType.byTargetSpeed then local qz=s:composeAxisAccelerationFromTargetSpeed(axisCommandId.lateral)qt=qt..' , '..qB;qu=qu+qz end;local qA='thrust analog vertical 'if UseExtra=="All"or UseExtra=="Vertical"then qA=qA..ExtraVerticalTags end;local qG=s:getAxisCommandType(axisCommandId.vertical)if qG==axisCommandType.byThrottle then local qv=s:composeAxisAccelerationFromThrottle(qA,axisCommandId.vertical)if ab~=0 or BrakeLanding and BrakeIsOn then a:setEngineForceCommand(qA,qv,qn,'airfoil','ground','',qp)else a:setEngineForceCommand(qA,vec3(),qn)a:setEngineForceCommand('airfoil vertical',qv,qn,'airfoil','','',qp)a:setEngineForceCommand('ground vertical',qv,qn,'ground','','',qp)end elseif qG==axisCommandType.byTargetSpeed then if ab<0 then a:setEngineForceCommand('hover',vec3(),qn)end;local qH=s:composeAxisAccelerationFromTargetSpeed(axisCommandId.vertical)qt=qt..' , '..qA;qu=qu+qH end;if qu:len()>constants.epsilon then if Y~=0 or qD or d(qe:dot(b4))<0.5 then qt=qt..', brake'end;a:setEngineForceCommand(qt,qu,qo,'','','',qp)end end;local qI=torqueFactor*(qi-qh)local qJ=vec3(core.getWorldAirFrictionAngularAcceleration())qI=qI-qJ;a:setEngineTorqueCommand('torque',qI,qn,'airfoil','','',qp)a:setBoosterCommand('rocket_engine')if a3 and not VanillaRockets then local e0=b6:len()local qK=0.15;if not bf then local qL=s:getTargetSpeed(axisCommandId.longitudinal)if e0*3.6>qL*(1-qK)and IsRocketOn then IsRocketOn=false;a:toggleBoosters()elseif e0*3.6<qL*(1-qK)and not IsRocketOn then IsRocketOn=true;a:toggleBoosters()end else local nA=unit.getThrottle()if AtmoSpeedAssist then nA=K*100 end;local nJ=nA/100;if k==0 then nJ=nJ*MaxGameVelocity;if e0>=nJ*(1-qK)and IsRocketOn then IsRocketOn=false;a:toggleBoosters()elseif e0<nJ*(1-qK)and not IsRocketOn then IsRocketOn=true;a:toggleBoosters()end else local nU=e(aV)nJ=nJ*nU/3.6;if e0>=nJ*(1-qK)and IsRocketOn then IsRocketOn=false;a:toggleBoosters()elseif e0<nJ*(1-qK)and not IsRocketOn then IsRocketOn=true;a:toggleBoosters()end end end end end;function script.onUpdate()if not SetupComplete then local fD=coroutine.status(beginSetup)if fD=="suspended"then local cv,fE=coroutine.resume(beginSetup)if fE then system.print("ERROR STARTUP: "..fE)end elseif fD=="dead"then SetupComplete=true end end;if SetupComplete then a:update()if not aP and content~=LastContent then system.setScreen(content)end;LastContent=content end end;function script.onActionStart(oB)aO.startControl(oB)end;function script.onActionStop(oB)aO.stopControl(oB)end;function script.onActionLoop(oB)aO.loopControl(oB)end;function script.onInputText(bS)aO.inputTextControl(bS)end;function script.onEnter(cD)if radar_1 and not am and not bj then unit.setTimer("contact",0.1)end end;function script.onLeave(cD)if radar_1 and CollisionSystem then if#bm>650 then cD=tostring(cD)bm[cD]=nil end end end;script.onStart()
        
        
        -- error handling code added by wrap.lua
        end, __wrap_lua__traceback)
        if not ok then
          __wrap_lua__error(message)
          if not script then script = {} end
        end
    stop:
      lua: |
        if not __wrap_lua__stopped and script.onStop then
          local ok, message = xpcall(script.onStop,__wrap_lua__traceback,unit)
          if not ok then __wrap_lua__error(message) end
        end
    tick(timerId):
      lua: |
        if not __wrap_lua__stopped and script.onTick then
          local ok, message = xpcall(script.onTick,__wrap_lua__traceback,timerId,unit)
          if not ok then __wrap_lua__error(message) end
        end
  system:
    actionStart(action):
      lua: |
        if not __wrap_lua__stopped and script.onActionStart then
          local ok, message = xpcall(script.onActionStart,__wrap_lua__traceback,action,system)
          if not ok then __wrap_lua__error(message) end
        end
    actionStop(action):
      lua: |
        if not __wrap_lua__stopped and script.onActionStop then
          local ok, message = xpcall(script.onActionStop,__wrap_lua__traceback,action,system)
          if not ok then __wrap_lua__error(message) end
        end
    actionLoop(action):
      lua: |
        if not __wrap_lua__stopped and script.onActionLoop then
          local ok, message = xpcall(script.onActionLoop,__wrap_lua__traceback,action,system)
          if not ok then __wrap_lua__error(message) end
        end
    update:
      lua: |
        if not __wrap_lua__stopped and script.onUpdate then
          local ok, message = xpcall(script.onUpdate,__wrap_lua__traceback,system)
          if not ok then __wrap_lua__error(message) end
        end
    flush:
      lua: |
        if not __wrap_lua__stopped and script.onFlush then
          local ok, message = xpcall(script.onFlush,__wrap_lua__traceback,system)
          if not ok then __wrap_lua__error(message) end
        end
    inputText(text):
      lua: |
        if not __wrap_lua__stopped and script.onInputText then
          local ok, message = xpcall(script.onInputText,__wrap_lua__traceback,text,system)
          if not ok then __wrap_lua__error(message) end
        end
  radar_1:
    enter(id):
      lua: |
        local radar = radar_1
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_1
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_2:
    enter(id):
      lua: |
        local radar = radar_2
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_2
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_3:
    enter(id):
      lua: |
        local radar = radar_3
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_3
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_4:
    enter(id):
      lua: |
        local radar = radar_4
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_4
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_5:
    enter(id):
      lua: |
        local radar = radar_5
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_5
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_6:
    enter(id):
      lua: |
        local radar = radar_6
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_6
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_7:
    enter(id):
      lua: |
        local radar = radar_7
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_7
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_8:
    enter(id):
      lua: |
        local radar = radar_8
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_8
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_9:
    enter(id):
      lua: |
        local radar = radar_9
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_9
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_10:
    enter(id):
      lua: |
        local radar = radar_10
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_10
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
