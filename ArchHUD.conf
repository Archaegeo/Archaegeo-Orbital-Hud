name: ArchHud - Archaegeo v0.705 (Minified)
slots:
  core:
    class: CoreUnit
  radar:
    class: RadarPVPUnit
    select: manual
  antigrav:
    class: AntiGravityGeneratorUnit
  warpdrive:
    class: WarpDriveUnit
  gyro:
    class: GyroUnit
  weapon:
    class: WeaponUnit
    select: manual
  dbHud:
    class: databank
    select: manual
  telemeter:
    class: TelemeterUnit
    select: manual
  vBooster:
    class: VerticalBooster
  hover:
    class: Hovercraft
  door:
    class: DoorUnit
    select: manual
  switch:
    class: ManualSwitchUnit
    select: manual
  forcefield:
    class: ForceFieldUnit
    select: manual
  atmofueltank:
    class: AtmoFuelContainer
    select: manual
  spacefueltank:
    class: SpaceFuelContainer
    select: manual
  rocketfueltank:
    class: RocketFuelContainer
    select: manual
  shield:
    class: ShieldGeneratorUnit
    select: manual
handlers:
  unit:
    start:
      lua: |
        __wrap_lua__stopped=false
        __wrap_lua__stopOnError=false
        __wrap_lua__rethrowErrorAlways=false
        __wrap_lua__rethrowErrorIfStopped=true
        __wrap_lua__printError=true
        __wrap_lua__showErrorOnScreens=true
        function __wrap_lua__error(a) if __wrap_lua__stopped then return end a=tostring(a):gsub('"%-%- |STDERROR%-EVENTHANDLER[^"]*"','chunk'):gsub("&","&amp;"):gsub("<","&lt;"):gsub(">","&gt;") local b=unit or self or {} if __wrap_lua__showErrorOnScreens then for _,c in pairs(b) do if type(c)=="table" and c.setCenteredText and c.setHTML then if a:match("\n") then c.setHTML([[<pre style="color: white; background-color: black; font-family: Consolas,monospace; font-size: 4vh; white-space: pre-wrap; margin: 1em">
        Error: ]]..a..[[</pre>]]) else c.setCenteredText(a) end end end end if __wrap_lua__printError and system and system.print then system.print("Error: "..a:gsub("\n","<br>")) end if __wrap_lua__stopOnError then __wrap_lua__stopped=true end if __wrap_lua__stopped and b and b.exit then b.exit() end if __wrap_lua__rethrowErrorAlways or (__wrap_lua__stopped and __wrap_lua__rethrowErrorIfStopped) then error(a) end end __wrap_lua__traceback=traceback or (debug and debug.traceback) or function(a,b)return b or a end local a,b=xpcall(function() local a=system;local b=core;local c=unit;local d=Navigator.new(a,b,c)local e=require("atlas")script={}VERSION_NUMBER=0.705;f=false;g="virtual joystick"h="archHUD"i=true;j=true;k=false;l=true;m=false;n=false;o=false;p=false;q=false;r=false;s=true;t=false;u=true;v=false;w=true;x=true;y=true;z=true;A=false;B=false;C=true;D=true;E=true;F=true;G=true;H=true;I=true;J=35;K=35;L=30;M=30;N=-30;O=0;P=5000;Q=1.2;R=2000;S=1050;T=30000;U=1000;V=50;W=0;X=100000;Y=8333.00;Z=1.0;_=32;a0=0;a1=0;a2=0;a3=0;a4=0;a5=1920;a6=1080;a7=400;a8=130;a9=224;aa=255;ab=255;ac=0;ad=0;ae=960;af=540;ag=1300;ah=540;ai=1525;aj=325;ak=550;al=540;am=30;an=700;ao=1750;ap=250;aq=50;ar=250;as=0;at=25;au=100;av=5;aw=1;ax=0.003;ay=0.003;az=2;aA=1.5;aB=180;aC=150;aD=0.002;aE=2;aF=0.8;aG=1;aH=3;aI=1;aJ=40;aK=0.0166667;aL=0.0666667;aM="none"aN="none"aO="none"aP=j;aQ=false;aR=false;aS=false;aT=false;aU=false;aV=false;aW=false;aX=false;aY=false;aZ=false;a_=false;b0=1000;b1=false;b2=false;b3=false;b4=false;b5=0;b6="Aligning"b7=0;b8=1;b9="None"ba=nil;bb=0;bc=nil;bd=0.0;be=0;bf={}bg=false;bh=0;bi=0;bj=nil;bk=0;bl=1000;bm=0;bn=false;bo=0;bp=false;bq="All"br=true;bs="Off"bt=0.000;bu={}local bv={VertTakeOff={set=function(bw)a_=bw end,get=function()return a_ end},VertTakeOffEngine={set=function(bw)aQ=bw end,get=function()return aQ end},SpaceTarget={set=function(bw)bn=bw end,get=function()return bn end},BrakeToggleStatus={set=function(bw)aP=bw end,get=function()return aP end},BrakeIsOn={set=function(bw)aR=bw end,get=function()return aR end},RetrogradeIsOn={set=function(bw)aS=bw end,get=function()return aS end},ProgradeIsOn={set=function(bw)aT=bw end,get=function()return aT end},Autopilot={set=function(bw)aU=bw end,get=function()return aU end},TurnBurn={set=function(bw)aV=bw end,get=function()return aV end},AltitudeHold={set=function(bw)aW=bw end,get=function()return aW end},BrakeLanding={set=function(bw)aX=bw end,get=function()return aX end},Reentry={set=function(bw)aZ=bw end,get=function()return aZ end},AutoTakeoff={set=function(bw)aY=bw end,get=function()return aY end},HoldAltitude={set=function(bw)b0=bw end,get=function()return b0 end},AutopilotAccelerating={set=function(bw)b1=bw end,get=function()return b1 end},AutopilotBraking={set=function(bw)b3=bw end,get=function()return b3 end},AutopilotCruising={set=function(bw)b4=bw end,get=function()return b4 end},AutopilotRealigned={set=function(bw)b2=bw end,get=function()return b2 end},AutopilotEndSpeed={set=function(bw)b5=bw end,get=function()return b5 end},AutopilotStatus={set=function(bw)b6=bw end,get=function()return b6 end},AutopilotPlanetGravity={set=function(bw)b7=bw end,get=function()return b7 end},PrevViewLock={set=function(bw)b8=bw end,get=function()return b8 end},AutopilotTargetName={set=function(bw)b9=bw end,get=function()return b9 end},AutopilotTargetCoords={set=function(bw)ba=bw end,get=function()return ba end},AutopilotTargetIndex={set=function(bw)bb=bw end,get=function()return bb end},TotalDistanceTravelled={set=function(bw)bd=bw end,get=function()return bd end},TotalFlightTime={set=function(bw)be=bw end,get=function()return be end},SavedLocations={set=function(bw)bf=bw end,get=function()return bf end},VectorToTarget={set=function(bw)bg=bw end,get=function()return bg end},LocationIndex={set=function(bw)bh=bw end,get=function()return bh end},LastMaxBrake={set=function(bw)bi=bw end,get=function()return bi end},LockPitch={set=function(bw)bj=bw end,get=function()return bj end},LastMaxBrakeInAtmo={set=function(bw)bk=bw end,get=function()return bk end},AntigravTargetAltitude={set=function(bw)bl=bw end,get=function()return bl end},LastStartTime={set=function(bw)bm=bw end,get=function()return bm end},iphCondition={set=function(bw)bq=bw end,get=function()return bq end},stablized={set=function(bw)br=bw end,get=function()return br end},UseExtra={set=function(bw)bs=bw end,get=function()return bs end},SelectedTab={set=function(bw)bx=bw end,get=function()return bx end},saveRoute={set=function(bw)bu=bw end,get=function()return bu end}}local by=math.abs;local bz=math.floor;local bA=string.format;local bB=json.decode;local bC=json.encode;local bD=b.getElementMaxHitPointsById;local bE=c.getAtmosphereDensity;local bF=b.getElementMassById;local bG=d.control.isRemoteControlled;local bH=math.atan;local bI=string.match;local bJ=a.getTime;local vec3=vec3;local bK=utils.clamp;local bL=d.axisCommandManager;local bM=a.destroyWidgetPanel;local bN=a.updateData;local bO=a.addDataToWidget;local bP=a.lockView;local bQ=a.isViewLocked;local bR=math.sqrt;local bS=tonumber;local function bT(bU,bV)local bW=10^(bV or 0)return bz(bU*bW+0.5)/bW end;local bX=bJ()local bY=bJ()local bZ=13;local b_=a8;local c0=aa;local c1=a9;local c2=0;local c3=0;local c4=false;local c5=0;local c6=false;local c7=false;local c8=55;local c9=false;local ca=false;local cb=0;local cc=0;local cd=0;local ce=0;local cf=0;local cg=0;local ch=0;local ci=false;local cj=false;local ck="empty"local cl=false;local cm=0;local cn=0;local co=0;local cp=0;local cq=nil;local cr=0;local cs=0;local ct=0;local cu=0;local cv=0;local cw=3;local cx=0;local cy=""local cz=false;local cA=false;local cB=false;local cC=-1;local cD=""local cE=bE()>0;local cF=bE()local cG=b.getAltitude()local cH=b.getElementIdList()local cI=bJ()local cJ=b.getConstructMass()local cK=false;local cL=nil;local cM=[[rgb(]]..bz(b_+0.5)..","..bz(c1+0.5)..","..bz(c0+0.5)..[[)]]local cN=[[rgb(]]..bz(b_*0.9+0.5)..","..bz(c1*0.9+0.5)..","..bz(c0*0.9+0.5)..[[)]]local cO={}local cP=""local cQ=a5;local cR=a6;local cS={}local cT={}local cU={}local cV=0;local cW=false;local cX=nil;local cY=nil;local cZ=nil;local c_=nil;local d0=nil;local d1=nil;local d2=nil;local d3=nil;local d4=nil;local d5=nil;local d6=false;local d7=false;local d8=p;local d9=W;local da=false;local db=0;local dc=S;local dd=0;local de=nil;local df={VectorToTarget=false}local dg=0;local dh=false;local di=false;local dj=false;local dk=false;local dl=vec3(b.getConstructWorldOrientationUp())local dm=vec3(b.getConstructWorldOrientationForward())local dn=vec3(b.getConstructWorldOrientationRight())local dp=vec3(b.getVelocity())local dq=vec3(b.getWorldVelocity())local dr=vec3(dq):len()local ds=vec3(b.getWorldVertical())local dt=-ds:dot(dq)local du=vec3(b.getConstructWorldPos())local dv=false;local dw=false;local dx=nil;local dy=true;local dz=0;local dA=0;local dB={}local dC=false;local dD=50000;local dE=nil;local dF={}local dG=c.getClosestPlanetInfluence()>0 or cG>0 and cG<200000;local dH=false;local dI=nil;local dJ=false;local dK=0;local dL={}local dM=nil;local dN=nil;local dO={}local dP=90;local dQ=x;local function dR(dS,dT,type)if type==nil and not D or type~=nil and not E or h=="archHUD"then return end;if type~=nil then if type==2 then a.logInfo("sound_loop|audiopacks/"..h.."/"..dS.."|"..dT.."|"..au)else a.logInfo("sound_notification|audiopacks/"..h.."/"..dS.."|"..dT.."|"..au)end else a.logInfo("sound_q|audiopacks/"..h.."/"..dS.."|"..dT.."|"..au)end end;local function dU(dV,dW)for dX,dY in pairs(dW)do dV[dX]=dY end;return dV end;local function dZ(d_)local e0={}local e1={userControlScheme={set=function(bw)g=bw end,get=function()return g end},soundFolder={set=function(bw)h=bw end,get=function()return h end},freeLookToggle={set=function(bw)i=bw end,get=function()return i end},BrakeToggleDefault={set=function(bw)j=bw end,get=function()return j end},RemoteFreeze={set=function(bw)k=bw end,get=function()return k end},brightHud={set=function(bw)m=bw end,get=function()return m end},RemoteHud={set=function(bw)l=bw end,get=function()return l end},VanillaRockets={set=function(bw)n=bw end,get=function()return n end},InvertMouse={set=function(bw)o=bw end,get=function()return o end},autoRollPreference={set=function(bw)p=bw end,get=function()return p end},ExternalAGG={set=function(bw)q=bw end,get=function()return q end},UseSatNav={set=function(bw)r=bw end,get=function()return r end},ShouldCheckDamage={set=function(bw)s=bw end,get=function()return s end},CalculateBrakeLandingSpeed={set=function(bw)t=bw end,get=function()return t end},AtmoSpeedAssist={set=function(bw)u=bw end,get=function()return u end},ForceAlignment={set=function(bw)v=bw end,get=function()return v end},DisplayDeadZone={set=function(bw)w=bw end,get=function()return w end},showHud={set=function(bw)x=bw end,get=function()return x end},hideHudOnToggleWidgets={set=function(bw)y=bw end,get=function()return y end},ShiftShowsRemoteButtons={set=function(bw)z=bw end,get=function()return z end},SetWaypointOnExit={set=function(bw)A=bw end,get=function()return A end},AlwaysVSpd={set=function(bw)B=bw end,get=function()return B end},BarFuelDisplay={set=function(bw)C=bw end,get=function()return C end},voices={set=function(bw)D=bw end,get=function()return D end},alerts={set=function(bw)E=bw end,get=function()return E end},CollisionSystem={set=function(bw)F=bw end,get=function()return F end},AutoShieldToggle={set=function(bw)G=bw end,get=function()return G end},PreventPvP={set=function(bw)H=bw end,get=function()return H end},DisplayOdometer={set=function(bw)I=bw end,get=function()return I end}}local e2={YawStallAngle={set=function(bw)J=bw end,get=function()return J end},PitchStallAngle={set=function(bw)K=bw end,get=function()return K end},brakeLandingRate={set=function(bw)L=bw end,get=function()return L end},MaxPitch={set=function(bw)M=bw end,get=function()return M end},ReEntryPitch={set=function(bw)N=bw end,get=function()return N end},LockPitchTarget={set=function(bw)O=bw end,get=function()return O end},AutopilotSpaceDistance={set=function(bw)P=bw end,get=function()return P end},TargetOrbitRadius={set=function(bw)Q=bw end,get=function()return Q end},LowOrbitHeight={set=function(bw)R=bw end,get=function()return R end},AtmoSpeedLimit={set=function(bw)S=bw end,get=function()return S end},SpaceSpeedLimit={set=function(bw)T=bw end,get=function()return T end},AutoTakeoffAltitude={set=function(bw)U=bw end,get=function()return U end},TargetHoverHeight={set=function(bw)V=bw end,get=function()return V end},LandingGearGroundHeight={set=function(bw)W=bw end,get=function()return W end},ReEntryHeight={set=function(bw)X=bw end,get=function()return X end},MaxGameVelocity={set=function(bw)Y=bw end,get=function()return Y end},AutopilotInterplanetaryThrottle={set=function(bw)Z=bw end,get=function()return Z end},warmup={set=function(bw)_=bw end,get=function()return _ end},fuelTankHandlingAtmo={set=function(bw)a0=bw end,get=function()return a0 end},fuelTankHandlingSpace={set=function(bw)a1=bw end,get=function()return a1 end},fuelTankHandlingRocket={set=function(bw)a2=bw end,get=function()return a2 end},ContainerOptimization={set=function(bw)a3=bw end,get=function()return a3 end},FuelTankOptimization={set=function(bw)a4=bw end,get=function()return a4 end}}local e3={ResolutionX={set=function(bw)a5=bw end,get=function()return a5 end},ResolutionY={set=function(bw)a6=bw end,get=function()return a6 end},circleRad={set=function(bw)a7=bw end,get=function()return a7 end},SafeR={set=function(bw)a8=bw end,get=function()return a8 end},SafeG={set=function(bw)a9=bw end,get=function()return a9 end},SafeB={set=function(bw)aa=bw end,get=function()return aa end},PvPR={set=function(bw)ab=bw end,get=function()return ab end},PvPG={set=function(bw)ac=bw end,get=function()return ac end},PvPB={set=function(bw)ad=bw end,get=function()return ad end},centerX={set=function(bw)ae=bw end,get=function()return ae end},centerY={set=function(bw)af=bw end,get=function()return af end},throtPosX={set=function(bw)ag=bw end,get=function()return ag end},throtPosY={set=function(bw)ah=bw end,get=function()return ah end},vSpdMeterX={set=function(bw)ai=bw end,get=function()return ai end},vSpdMeterY={set=function(bw)aj=bw end,get=function()return aj end},altMeterX={set=function(bw)ak=bw end,get=function()return ak end},altMeterY={set=function(bw)al=bw end,get=function()return al end},fuelX={set=function(bw)am=bw end,get=function()return am end},fuelY={set=function(bw)an=bw end,get=function()return an end},shieldX={set=function(bw)ao=bw end,get=function()return ao end},shieldY={set=function(bw)ap=bw end,get=function()return ap end},DeadZone={set=function(bw)aq=bw end,get=function()return aq end},OrbitMapSize={set=function(bw)ar=bw end,get=function()return ar end},OrbitMapX={set=function(bw)as=bw end,get=function()return as end},OrbitMapY={set=function(bw)at=bw end,get=function()return at end},soundVolume={set=function(bw)au=bw end,get=function()return au end}}local e4={speedChangeLarge={set=function(bw)av=bw end,get=function()return av end},speedChangeSmall={set=function(bw)aw=bw end,get=function()return aw end},MouseXSensitivity={set=function(bw)ax=bw end,get=function()return ax end},MouseYSensitivity={set=function(bw)ay=bw end,get=function()return ay end},autoRollFactor={set=function(bw)az=bw end,get=function()return az end},rollSpeedFactor={set=function(bw)aA=bw end,get=function()return aA end},autoRollRollThreshold={set=function(bw)aB=bw end,get=function()return aB end},minRollVelocity={set=function(bw)aC=bw end,get=function()return aC end},TrajectoryAlignmentStrength={set=function(bw)aD=bw end,get=function()return aD end},torqueFactor={set=function(bw)aE=bw end,get=function()return aE end},pitchSpeedFactor={set=function(bw)aF=bw end,get=function()return aF end},yawSpeedFactor={set=function(bw)aG=bw end,get=function()return aG end},brakeSpeedFactor={set=function(bw)aH=bw end,get=function()return aH end},brakeFlatFactor={set=function(bw)aI=bw end,get=function()return aI end},DampingMultiplier={set=function(bw)aJ=bw end,get=function()return aJ end},apTickRate={set=function(bw)aK=bw end,get=function()return aK end},hudTickRate={set=function(bw)aL=bw end,get=function()return aL end},ExtraLongitudeTags={set=function(bw)aM=bw end,get=function()return aM end},ExtraLateralTags={set=function(bw)aN=bw end,get=function()return aN end},ExtraVerticalTags={set=function(bw)aO=bw end,get=function()return aO end}}if not d_ then dU(e0,e1)dU(e0,e2)dU(e0,e3)dU(e0,e4)return e0 elseif d_=="boolean"then return e1 elseif d_=="handling"then return e2 elseif d_=="hud"then return e3 elseif d_=="physics"then return e4 end end;local function e5(e6,e7,e8,e9,ea)if e9==nil then e9=""end;if ea==nil then ea=""end;return bA([[<text class="%s" x=%s y=%s style="%s">%s</text>]],e9,e6,e7,ea,e8)end;local function eb(ec,ed)if ec==0 then return by(ed)<1e-09 end;if ed==0 then return by(ec)<1e-09 end;return by(ec-ed)<math.max(by(ec),by(ed))*ee end;local function ef(cx,eg)local eh=cx>100000;if eg==nil then eg=1 end;if eh then return bT(cx/1000/200,eg).."SU"elseif cx<1000 then return bT(cx,eg).."M"else return bT(cx/1000,eg).."KM"end end;local function ei(ej)local ek=0;local el=0;local em=0;if ej<60 then ej=bz(ej)elseif ej<3600 then ek=bz(ej/60)ej=bz(ej%60)elseif ej<86400 then el=bz(ej/3600)ek=bz(ej%3600/60)else em=bz(ej/86400)el=bz(ej%86400/3600)end;if em>0 then return em.."d "..el.."h "elseif el>0 then return el.."h "..ek.."m "elseif ek>0 then return ek.."m "..ej.."s"elseif ej>0 then return ej.."s"else return"0s"end end;local function en(eo)local function ep(eq)for dX,dY in pairs(eq)do dbHud_1.setStringValue(dX,bC(dY.get()))if eo and dbHud_2 then dbHud_2.setStringValue(dX,bC(dY.get()))end end end;if dbHud_1 then ep(bv)ep(dZ())a.print("Saved Variables to Datacore")if eo and dbHud_2 then ck="Databank copied.  Remove copy when ready."end end end;local function er()local function es(et)return type(et)=='number'end;local function eu(et)return type(bS(et))=='number'end;local function ev(ew)return type(ew)=='table'end;local function ex(a)return type(a)=='string'end;local function ey(dY)return ev(dY)and es(dY.x and dY.y and dY.z)end;local function ez(eA)return ev(eA)and es(eA.latitude and eA.longitude and eA.altitude and eA.id and eA.systemId)end;local eB=math.pi/180;local eC=180/math.pi;local ee=1e-10;local bU=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local eD='::pos{'..bU..','..bU..','..bU..','..bU..','..bU..'}'local utils=require('cpml.utils')local vec3=require('cpml.vec3')local function eE(et)local eF=string.gsub(string.reverse(bA('%.4f',et)),'^0*%.?','')return eF==''and'0'or string.reverse(eF)end;local function eG(eH)if ey(eH)then return bA('{x=%.3f,y=%.3f,z=%.3f}',eH.x,eH.y,eH.z)end;if ev(eH)and not getmetatable(eH)then local eI={}local eJ=next(eH)if type(eJ)=='nil'or eJ==1 then eI=eH else for dX,dY in pairs(eH)do local eK=eG(dY)if type(dX)=='number'then table.insert(eI,bA('[%s]=%s',dX,eK))else table.insert(eI,bA('%s=%s',dX,eK))end end end;return bA('{%s}',table.concat(eI,','))end;if ex(eH)then return bA("'%s'",eH:gsub("'",[[\']]))end;return tostring(eH)end;local eL={}eL.__index=eL;eL.__tostring=function(eH,eM)local eN={}for dX in pairs(eH)do table.insert(eN,dX)end;table.sort(eN)local eI={}for eO,dX in ipairs(eN)do local eK=eG(eH[dX])if type(dX)=='number'then table.insert(eI,bA('[%s]=%s',dX,eK))else table.insert(eI,bA('%s=%s',dX,eK))end end;if eM then return bA('%s%s',eM,table.concat(eI,',\n'..eM))end;return bA('{%s}',table.concat(eI,','))end;eL.__eq=function(eP,eQ)return eP.systemId==eQ.systemId and eP.id==eQ.id and eb(eP.radius,eQ.radius)and eb(eP.center.x,eQ.center.x)and eb(eP.center.y,eQ.center.y)and eb(eP.center.z,eQ.center.z)and eb(eP.GM,eQ.GM)end;local function eR(eS,eT,eU,eV,eW)assert(eu(eS),'Argument 1 (systemId) must be a number:'..type(eS))assert(eu(eT),'Argument 2 (id) must be a number:'..type(eT))assert(eu(eU),'Argument 3 (radius) must be a number:'..type(eU))assert(ev(eV),'Argument 4 (worldCoordinates) must be a array or vec3.'..type(eV))assert(eu(eW),'Argument 5 (GM) must be a number:'..type(eW))return setmetatable({systemId=bS(eS),id=bS(eT),radius=bS(eU),center=vec3(eV),GM=bS(eW)},eL)end;local eX={}eX.__index=eX;eX.__tostring=function(eY)return bA('::pos{%d,%d,%s,%s,%s}',eY.systemId,eY.id,eE(eY.latitude*eC),eE(eY.longitude*eC),eE(eY.altitude))end;eX.__eq=function(eP,eQ)return eP.id==eQ.id and eP.systemId==eQ.systemId and eb(eP.latitude,eQ.latitude)and eb(eP.altitude,eQ.altitude)and(eb(eP.longitude,eQ.longitude)or eb(eP.latitude,math.pi/2)or eb(eP.latitude,-math.pi/2))end;local function eZ(e_,eT,f0,f1,f2)local eS=e_;if ex(e_)and not f1 and not f2 and not eT and not f0 then eS,eT,f0,f1,f2=bI(e_,eD)assert(eS,'Argument 1 (position string) is malformed.')else assert(eu(eS),'Argument 1 (systemId) must be a number:'..type(eS))assert(eu(eT),'Argument 2 (id) must be a number:'..type(eT))assert(eu(f0),'Argument 3 (latitude) must be in degrees:'..type(f0))assert(eu(f1),'Argument 4 (longitude) must be in degrees:'..type(f1))assert(eu(f2),'Argument 5 (altitude) must be in meters:'..type(f2))end;eS=bS(eS)eT=bS(eT)f0=bS(f0)f1=bS(f1)f2=bS(f2)if eT==0 then return setmetatable({latitude=f0,longitude=f1,altitude=f2,id=eT,systemId=eS},eX)end;return setmetatable({latitude=eB*bK(f0,-90,90),longitude=eB*(f1%360),altitude=f2,id=eT,systemId=eS},eX)end;local f3={}f3.__index=f3;f3.__tostring=function(eH,eM)local f4=eM and eM..'  'local f5={}local eN={}for dX in pairs(eH)do table.insert(eN,dX)end;table.sort(eN)for eO,f6 in ipairs(eN)do f7=eH[f6]local f8=eL.__tostring(f7,f4)if eM then table.insert(f5,bA('[%s]={\n%s\n%s}',f6,f8,eM))else table.insert(f5,bA('  [%s]=%s',f6,f8))end end;if eM then return bA('\n%s%s%s',eM,table.concat(f5,',\n'..eM),eM)end;return bA('{\n%s\n}',table.concat(f5,',\n'))end;local function f9(fa)local e={}local pid;for eO,dY in pairs(fa)do local eT=dY.planetarySystemId;if type(eT)~='number'then error('Invalid planetary s ID: '..tostring(eT))elseif pid and eT~=pid then error('Mistringmatch planetary s IDs: '..eT..' and '..pid)end;local fb=dY.bodyId;if type(fb)~='number'then error('Invalid body ID: '..tostring(fb))elseif e[fb]then error('Duplicate body ID: '..tostring(fb))end;setmetatable(dY.center,getmetatable(vec3.unit_x))e[fb]=setmetatable(dY,eL)pid=eT end;return setmetatable(e,f3)end;cX={}local function fc(fa)return setmetatable({galaxyAtlas=fa or{}},cX)end;cX.__index=function(ew,bw)if type(bw)=='number'then local a=ew.galaxyAtlas[bw]return f9(a)end;return rawget(cX,bw)end;cX.__pairs=function(eH)return function(ew,dX)local fd,fe=next(ew,dX)return fd,fe and f9(fe)end,eH.galaxyAtlas,nil end;cX.__tostring=function(eH)local ff={}for eO,fg in pairs(eH or{})do local fh=fg:getPlanetarySystemId()local fi=f3.__tostring(fg,'    ')table.insert(ff,bA('  [%s]={%s\n  }',fh,fi))end;return bA('{\n%s\n}\n',table.concat(ff,',\n'))end;cX.BodyParameters=eR;cX.MapPosition=eZ;cX.PlanetarySystem=f9;function cX.createBodyParameters(eS,eT,fj,fk,fl,fm,fn)assert(eu(eS),'Argument 1 (systemId) must be a number:'..type(eS))assert(eu(eT),'Argument 2 (id) must be a number:'..type(eT))assert(eu(fj),'Argument 3 (surfaceArea) must be a number:'..type(fj))assert(ev(fk),'Argument 4 (aPosition) must be an array or vec3:'..type(fk))assert(ev(fl),'Argument 5 (verticalAtPosition) must be an array or vec3:'..type(fl))assert(eu(fm),'Argument 6 (altitude) must be in meters:'..type(fm))assert(eu(fn),'Argument 7 (gravityAtPosition) must be number:'..type(fn))local eU=bR(fj/4/math.pi)local cx=eU+fm;local fo=vec3(fk)+cx*vec3(fl)local eW=fn*cx*cx;return eR(eS,eT,eU,fo,eW)end;cX.isMapPosition=ez;function cX:getPlanetarySystem(e_)if bw==nil then bw=0 end;if fe==nil then fe=0 end;local eS=e_;if ez(e_)then eS=e_.systemId end;if type(eS)=='number'then local a=self.galaxyAtlas[bw]if a then if getmetatable(fe)~=f3 then a=f9(a)end;return a end end end;function f3:sizeCalculator(fp)return 1.05*fp.radius end;function f3:castIntersections(fq,fr,fs,ft,fu,fv)local fw={}if fu then for eO,fp in pairs(fu)do table.insert(fw,fp)end else fw=dO end;if not fv then table.sort(fw,function(fx,fy)local ec=fx.center;local ed=fy.center;return(ec.x-fq.x)^2+(ec.y-fq.y)^2+(ec.z-fq.z)^2<(ed.x-fq.x)^2+(ed.y-fq.y)^2+(ed.z-fq.z)^2 end)end;local fz=fr:normalize()for eO,fp in ipairs(fw)do local fA=fp.center-fq;local eU=self:sizeCalculator(fp)local fB=fA:dot(fz)local fC=fB^2-(fA:len2()-eU^2)if fC>=0 then local fD=bR(fC)local fE=fB+fD;local fF=fB-fD;if fF>0 then return fp,fE,fF elseif fE>0 then return fp,fE,nil end end end;return nil,nil,nil end;function f3:closestBody(fG)assert(type(fG)=='table','Invalid coordinates.')local fH,fp;local fI=vec3(fG)for eO,fJ in pairs(self)do local fK=(fJ.center-fI):len2()if(not fp or fK<fH)and fJ.name~="Space"then fp=fJ;fH=fK end end;return fp end;function f3:convertToBodyIdAndWorldCoordinates(e_)local fL=e_;if ex(e_)then fL=eZ(e_)end;if fL.id==0 then return 0,vec3(fL.latitude,fL.longitude,fL.altitude)end;local fJ=self:getBodyParameters(fL)if fJ then return fL.id,fJ:convertToWorldCoordinates(fL)end end;function f3:getBodyParameters(e_)local eT=e_;if ez(e_)then eT=e_.id end;assert(eu(eT),'Argument 1 (id) must be a number:'..type(eT))return self[eT]end;function f3:getPlanetarySystemId()local eO,dY=next(self)return dY and dY.systemId end;function eL:convertToMapPosition(eV)assert(ev(eV),'Argument 1 (worldCoordinates) must be an array or vec3:'..type(eV))local fM=vec3(eV)if self.id==0 then return setmetatable({latitude=fM.x,longitude=fM.y,altitude=fM.z,id=0,systemId=self.systemId},eX)end;local fN=fM-self.center;local cx=fN:len()local f2=cx-self.radius;local f0=0;local f1=0;if not eb(cx,0)then local fO=bH(fN.y,fN.x)f1=fO>=0 and fO or 2*math.pi+fO;f0=math.pi/2-math.acos(fN.z/cx)end;return setmetatable({latitude=f0,longitude=f1,altitude=f2,id=self.id,systemId=self.systemId},eX)end;function eL:convertToWorldCoordinates(e_)local fL=ex(e_)and eZ(e_)or e_;if fL.id==0 then return vec3(fL.latitude,fL.longitude,fL.altitude)end;assert(ez(fL),'Argument 1 (mapPosition) is not an instance of "MapPosition".')assert(fL.systemId==self.systemId,'Argument 1 (mapPosition) has a different planetary s ID.')assert(fL.id==self.id,'Argument 1 (mapPosition) has a different planetary body ID.')local fP=math.cos(fL.latitude)return self.center+(self.radius+fL.altitude)*vec3(fP*math.cos(fL.longitude),fP*math.sin(fL.longitude),math.sin(fL.latitude))end;function eL:getAltitude(eV)return(vec3(eV)-self.center):len()-self.radius end;function eL:getDistance(eV)return(vec3(eV)-self.center):len()end;function eL:getGravity(eV)local fQ=self.center-vec3(eV)local fR=fQ:len2()return self.GM/fR*fQ/bR(fR)end;return setmetatable(cX,{__call=function(eO,...)return fc(...)end})end;local function fS()local cZ={}local fT=30000000/3600;local fU=fT*fT;local fV=100;function cZ.computeAccelerationTime(fW,fX,fY)local fZ=fT*math.asin(fW/fT)return(fT*math.asin(fY/fT)-fZ)/fX end;function cZ.computeDistanceAndTime(fW,fY,f_,g0,g1,g2)g1=g1 or 0;g2=g2 or 0;local g3=fW<=fY;local g4=g0*(g3 and 1 or-1)/f_;local g5=-g2/f_;local g6=g4+g5;if g3 and g6<=0 or not g3 and g6>=0 then return-1,-1 end;local g7,g8=0,0;if g4~=0 and g1>0 then local fZ=math.asin(fW/fT)local g9=math.pi*(g4/2+g5)local ga=g4*g1;local gb=fT*math.pi;local dY=function(ew)local gc=(g9*ew-ga*math.sin(math.pi*ew/2/g1)+gb*fZ)/gb;local gd=math.tan(gc)return fT*gd/bR(gd*gd+1)end;local ge=g3 and function(a)return a>=fY end or function(a)return a<=fY end;g8=2*g1;if ge(dY(g8))then local gf=0;while by(g8-gf)>0.5 do local ew=(g8+gf)/2;if ge(dY(ew))then g8=ew else gf=ew end end end;local gg=fW;local gh=g8/fV;for gi=1,fV do local gj=dY(gi*gh)g7=g7+(gj+gg)*gh/2;gg=gj end;if g8<2*g1 then return g7,g8 end;fW=gg end;local fZ=fT*math.asin(fW/fT)local bX=(fT*math.asin(fY/fT)-fZ)/g6;local gk=fU*math.cos(fZ/fT)/g6;local cx=gk-fU*math.cos((g6*bX+fZ)/fT)/g6;return cx+g7,bX+g8 end;function cZ.computeTravelTime(fW,fX,cx)if cx==0 then return 0 end;if fX>0 then local fZ=fT*math.asin(fW/fT)local gk=fU*math.cos(fZ/fT)/fX;return(fT*math.acos(fX*(gk-cx)/fU)-fZ)/fX end;if fW==0 then return-1 end;assert(fW>0,'Acceleration and initial speed are both zero.')return cx/fW end;return cZ end;local function gl()local vec3=require('cpml.vec3')local er=er()local function ex(a)return type(a)=='string'end;local function ev(ew)return type(ew)=='table'end;gm={}gm.__index=gm;function gm:escapeAndOrbitalSpeed(f2)assert(self.body)local cx=f2+self.body.radius;if not eb(cx,0)then local gn=bR(self.body.GM/cx)return bR(2)*gn,gn end;return nil,nil end;function gm:orbitalParameters(e_,go)assert(self.body)assert(ev(e_)or ex(e_))assert(ev(go))local gp=(ex(e_)or er.isMapPosition(e_))and self.body:convertToWorldCoordinates(e_)or vec3(e_)local dY=vec3(go)local gq=gp-self.body.center;local gr=dY:len2()local gs=gq:len()local gt=self.body.GM;local gu=((gr-gt/gs)*gq-gq:dot(dY)*dY)/gt;local ec=gt/(2*gt/gs-gr)local gv=gu:len()local fz=gu:normalize()local gw=ec*(1-gv)local gx=ec*(1+gv)local gy=gw*fz+self.body.center;local gz=gv<=1 and-gx*fz+self.body.center or nil;local gA=bR(ec*gt*(1-gv*gv))local gB=gz and 2*math.pi*bR(ec^3/gt)local gC=math.acos(gu:dot(gq)/(gv*gs))if gq:dot(dY)<0 then gC=-(gC-2*math.pi)end;local gD=math.acos((math.cos(gC)+gv)/(1+gv*math.cos(gC)))local gE=gD;if gE<0 then gE=gE+2*math.pi end;local gF=gE-gv*math.sin(gE)local gG=0;local gH=0;local gI=0;if gB~=nil then gG=gF/(2*math.pi/gB)gH=gB-gG;gI=gH+gB/2;if gC-math.pi>0 then gH=gG;gI=gH+gB/2 end;if gI>gB then gI=gI-gB end end;return{periapsis={position=gy,speed=gA/gw,circularOrbitSpeed=bR(gt/gw),altitude=gw-self.body.radius},apoapsis=gz and{position=gz,speed=gA/gx,circularOrbitSpeed=bR(gt/gx),altitude=gx-self.body.radius},currentVelocity=dY,currentPosition=gp,eccentricity=gv,period=gB,eccentricAnomaly=gD,meanAnomaly=gF,timeToPeriapsis=gH,timeToApoapsis=gI,trueAnomaly=gC}end;local function gJ(gK)local fJ=er.BodyParameters(gK.systemId,gK.id,gK.radius,gK.center,gK.GM)return setmetatable({body=fJ},gm)end;return setmetatable(gm,{__call=function(eO,...)return gJ(...)end})end;local function gL()local gM={}local gN={}local gO={XS=13,S=27,M=55,L=110,XL=221}local gP={}local gQ;local gR;local gS;local gT;local gU;local gV={}local gW="Atmo"local gX;local function gY()local function gZ(g_,h0,h1,h2,h3,h4,h5,h6)h0,h2,h4,h6=vec3(h0),vec3(h2),vec3(h4),vec3(h6)local h7,h8,h9=g_*g_,h1*h1,h3*h3;local gr=h2-h0;local ha=gr:normalize()local hb=gr:len()local hc=h4-h0;local hd=(hc-hc:project_on(ha)):normalize()local he,hf=hc:dot(ha),hc:dot(hd)local hg=he*he+hf*hf;local hh=ha:cross(hd)local e6=(h7-h8+hb*hb)/(2*hb)local e7=(h7-h9+hg-2*he*e6)/(2*hf)local eA=h7-e6^2-e7^2;local hi=bR(eA)local hj=h0+ha*e6+hd*e7+hh*hi;local hk=h0+ha*e6+hd*e7-hh*hi;if by((h6-hj):len()-h5)<by((h6-hk):len()-h5)then return hj else return hk end end;local function hl()local function hm()local hn=b.getConstructWorldOrientationRight()local gr=b.getConstructWorldOrientationForward()local hc=b.getConstructWorldOrientationUp()local ho=library.systemResolution3(hn,gr,hc,{1,0,0})local hp=library.systemResolution3(hn,gr,hc,{0,1,0})local hq=library.systemResolution3(hn,gr,hc,{0,0,1})return function(hr)return library.systemResolution3(ho,hp,hq,hr)end end;local hs=hm()local ht=b.getConstructWorldPos()local gp=b.getElementPositionById(1)local hu={gp[1],gp[2],gp[3]}local hv=hs(hu)local hw={ht[1]-hv[1],ht[2]-hv[2],ht[3]-hv[3]}return hw end;local function hx(hy,gs,hz)local hA=hy.pts;local hB=#hA;local hC=hy.ref;if hB>3 then local hD,hE,hF,hG=hA[hB],hA[hB-1],hA[hB-2],hA[hB-3]hy.ref=hz;local gp=gZ(hD[1],hD[2],hE[1],hE[2],hF[1],hF[2],hG[1],hG[2])local e6,e7,hi=gp.x,gp.y,gp.z;if e6==e6 and e7==e7 and hi==hi then e6=e6+hC[1]e7=e7+hC[2]hi=hi+hC[3]local hH=vec3(e6,e7,hi)if not hy.lastPos then hy.center=hH elseif(hy.lastPos-hH):len()<2 then hy.center=hH;hy.skipCalc=true end;hy.lastPos=hH end;hy.pts={}else local hI={hz[1]-hC[1],hz[2]-hC[2],hz[3]-hC[3]}hA[hB+1]={gs,hI}end end;if radar_1 or radar_2 then d4.assignRadar()end;if gV[1]then gQ=#gV[1].getConstructIds()local hJ=gV[1].getData()local hK=hJ:gmatch('{"constructId[^}]*}[^}]*}')if gQ>0 then local hz=hl()local hL,hM=0,0;gU,gT=0,0;for dY in hK do local eT,cx,hN=dY:match([[{"constructId":"([%d%.]*)","distance":([%d%.]*).-"size":"(%a+)"]])local hO=gO[hN]cx=bS(cx)if gV[1].hasMatchingTransponder(eT)==1 then table.insert(gN,eT)end;local hP=gV[1].getConstructType(eT)if F then if hO>27 or hP=="static"or hP=="space"then gU=gU+1;local hQ=gV[1].getConstructName(eT)local hy=dF[eT]if hy==nil then hO=hO+bZ;dF[eT]={pts={},ref=hz,name=hQ,i=0,radius=hO,skipCalc=false}hy=dF[eT]end;if not hy.skipCalc then hx(hy,cx,hz)hM=hM+1 end;if hy.center then table.insert(gP,hy)end end;hL=hL+1;if dG and hL>700 or hM>70 or(not dG and hL>300 or hM>30)then coroutine.yield()hL,hM=0,0 end end end;gT=#gP;if gT>0 and dr>20 then local fp,hR,hS,hT;local hU=0;local hV=cY:getPlanetarySystem(0)hT=dq:normalize()while hU<gT do coroutine.yield()local hW={table.unpack(gP,hU,math.min(hU+75,gT))}fp,hR,hS=hV:castIntersections(du,hT,nil,nil,hW,true)if fp and hS then dI={fp,hR,hS}break end;hU=hU+75 end;if not fp then dI=nil end else dI=nil end;gP={}gR=hJ:find('identifiedConstructs":%[%]')else gS=hJ:find('worksInEnvironment":false')end end end;local function hX()if gV[1]then gW="Atmo"if gV[1].getData():find('worksInAtmosphere":false')then gW="Space"end end end;function gM.pickType()hX()end;function gM.assignRadar()if radar_1 and gV[1]==radar_1 and radar_1.isOperational()~=1 then if radar_2 and radar_2.isOperational()==1 then gV[1]=radar_2 end;if gV[1]==radar_2 then hX()end elseif radar_2 and gV[1]==radar_2 and radar_2.isOperational()~=1 then if radar_1 and radar_1.isOperational()==1 then gV[1]=radar_1 end;if gV[1]==radar_1 then hX()end end end;function gM.UpdateRadar()local hY=coroutine.status(gX)if hY=="suspended"then local eK,hZ=coroutine.resume(gX)if hZ then a.print("ERROR UPDATE RADAR: "..hZ)end elseif hY=="dead"then gX=coroutine.create(gY)local eK,hZ=coroutine.resume(gX)end end;function gM.GetRadarHud(h_,i0,i1,i2)local i3=gN;local i4,i5;gN={}local bU=gT or 0;if gQ>0 then if F then i5=bU.."/"..gU.." Plotted : "..gQ-gU.." Ignored"else i5="Radar Contacts: "..gQ end;i4=e5(i1,i2,i5,"pbright txtbig txtmid")if#gN>0 then i4=i4 ..e5(h_,i0,"Friendlies In Range","pbright txtbig txtmid")for dX,dY in pairs(gN)do i0=i0+20;i4=i4 ..e5(h_,i0,gV[1].getConstructName(dY),"pdim txtmid")end end;if gR==nil and i6==nil then i7=1;d4.ToggleRadarPanel()end;if gR~=nil and i6~=nil then d4.ToggleRadarPanel()end;if i8==nil then d4.ToggleRadarPanel()end else if gS then i4=e5(i1,i2,gW.." Radar: Jammed","pbright txtbig txtmid")else i4=e5(i1,i2,"Radar: No "..gW.." Contacts","pbright txtbig txtmid")end;if i8~=nil then i7=0;d4.ToggleRadarPanel()end end;return i4 end;function gM.GetClosestName(hQ)if gV[1]then local eT,eO=gV[1].getData():match('"constructId":"([0-9]*)","distance":([%d%.]*)')if eT~=nil and eT~=""then hQ=hQ.." "..gV[1].getConstructName(eT)end end;return hQ end;function gM.ToggleRadarPanel()if i8~=nil and i7==0 then bM(i8)i8=nil;if i6~=nil then bM(i6)i6=nil end else if i7==1 then bM(i8)i8=nil;_autoconf.displayCategoryPanel(gV,1,"Periscope","periscope")i6=_autoconf.panels[_autoconf.panels_size]end;if i8==nil then _autoconf.displayCategoryPanel(gV,1,"Radar","radar")i8=_autoconf.panels[_autoconf.panels_size]end;i7=0 end end;gV[1]=nil;if radar_1 then gV[1]=radar_1;hX()end;gX=coroutine.create(gY)return gM end;local function i9()local ia=9.80665;local ib={}local ic={}local id={}local dL={}local ie=nil;local ig=nil;local ih=nil;local ii=false;local ij={}local ik=""local il=vec3({13771471,7435803,-128971})local im=18000000;local io=500000;local ip,iq=math.huge;local ir;local function is(it)ip=vec3(it):dist(il)if ip<im then return true,by(ip-im)end;iq=vec3(it):dist(vec3(iu.center))if iq<io then ir=true else ir=false end;if by(iq-io)<by(ip-im)then return ir,by(iq-io)else return ir,by(ip-im)end end;local function iv(dY)if cQ==1920 then return dY else return bT(cQ*dY/1920,0)end end;local function iw(dY)if cR==1080 then return dY else return bT(cR*dY/1080,0)end end;local function ix()return bQ()==0 and g~="keyboard"and bG()==0 end;local function iy()local iz="TRAVEL"if not dy then iz="CRUISE"end;if aU then iz="AUTOPILOT"end;return iz end;local i4=""local iA=""local iB=""local iC=1;local iD=2;local iE=3;local iF=4;local iG=5;local iH=6;local iI=""local iJ=0;local iK=bz(1/aK)*2*aL;local iL={}local iM={}local iN={}local iO={}local iP={}local iQ={}local function iR(e6,iS,iT,iU,iV,iW)local iX=iY;local iZ=iY+5;if not C then iZ=iZ+5 end;if bG()==1 and not l then iX=iX-50;iZ=iZ-50 end;if iT=="ATMO"then iI="atmofueltank"elseif iT=="SPACE"then iI="spacefueltank"else iI="rocketfueltank"end;iJ=_G[iI.."_size"]if#iU>0 then for bw=1,#iU do local hQ=string.sub(iU[bw][iD],1,12)local i_=0;for j0=1,iJ do if iU[bw][iD]==bB(c[iI.."_"..j0].getData()).name then i_=j0;break end end;local j1=bJ()if iV[bw]==nil or iW[bw]==nil or j1-iU[bw][iH]>iK then local j2;local j3=0;if i_~=0 then iW[bw]=bB(c[iI.."_"..i_].getData()).percentage;iV[bw]=bB(c[iI.."_"..i_].getData()).timeLeft;if iV[bw]=="n/a"then iV[bw]=0 end else j3=bF(iU[bw][iC])-iU[bw][iF]iW[bw]=bz(0.5+j3*100/iU[bw][iE])j2=iU[bw][iG]if j2<=j3 then iV[bw]=0 else iV[bw]=bz(0.5+j3/((j2-j3)/(j1-iU[bw][iH])))end;iU[bw][iG]=j3;iU[bw][iH]=j1 end end;if hQ==iS then hQ=bA("%s %d",iT,bw)end;if i_==0 then hQ=hQ.." *"end;local j4;if iV[bw]==0 then j4=""else j4=ei(iV[bw])end;if iW[bw]~=nil then local j5=bz(iW[bw]*2.55)local j6=bA("rgb(%d,%d,%d)",255-j5,j5,0)local e9=""if j4~=""and iV[bw]<120 or iW[bw]<5 then e9="red "end;local j7=bA("rgb(%d,%d,%d)",bK(bz((255-j5)/2.55),50,100),bK(bz(j5/2.55),0,50),50)local j8="rgb(196,0,255)"if iT=="ATMO"then j8="rgb(0,188,255)"elseif iT=="SPACE"then j8="rgb(239,255,0)"end;local j9=false;if ja~=j8 then j9=true end;ja=j8;if C then if j9 then iX=iX-5;iZ=iZ-5 end;iA=iA..bA([[
                                            <g class="pdim">                        
                                            <rect fill=%s class="bar" stroke=%s x="%d" y="%d" width="170" height="20"></rect></g>
                                            <g class="bar txtstart">
                                            <rect fill=%s width="%d" height="18" x="%d" y="%d"></rect>
                                            <text class="txtstart" fill="white" x="%d" y="%d" style="font-family:Play;font-size:14px">%s %s%%&nbsp;&nbsp;&nbsp;&nbsp;%s</text>
                                            </g>]],j7,j8,e6,iZ,j6,bz(iW[bw]*1.7+0.5)-2,e6+1,iZ+1,e6+5,iZ+14,hQ,iW[bw],j4)iX=iX-22;iZ=iZ-22 else iA=iA..e5(e6,iX,hQ,e9 .."pdim txtfuel")iA=iA..e5(e6,iZ,bA("%d%% %s",iW[bw],j4),"pdim txtfuel","fill:"..j6)iX=iX+30;iZ=iZ+30 end end end end;iY=iX end;local function jb(jc,f2)if ai==0 and aj==0 then return end;if f2<200000 and not cE or f2 and cE then local jd=0;if by(dt)>1 then jd=45*math.log(by(dt),10)if dt<0 then jd=-jd end end;jc[#jc+1]=bA([[
                                <g class="pbright txt txtvspd" transform="translate(%d %d) scale(0.6)">
                                        <text x="55" y="-41">1000</text>
                                        <text x="10" y="-65">100</text>
                                        <text x="-45" y="-45">10</text>
                                        <text x="-73" y="3">O</text>
                                        <text x="-45" y="52">-10</text>
                                        <text x="10" y="72">-100</text>
                                        <text x="55" y="50">-1000</text>
                                        <text x="85" y="0" class="txtvspdval txtend">%d m/s</text>
                                    <g class="linethick">
                                        <path d="m-41 75 2.5-4.4m17 12 1.2-4.9m20 7.5v-10m-75-34 4.4-2.5m-12-17 4.9-1.2m17 40 7-7m-32-53h10m34-75 2.5 4.4m17-12 1.2 4.9m20-7.5v10m-75 34 4.4 2.5m-12 17 4.9 1.2m17-40 7 7m-32 53h10m116 75-2.5-4.4m-17 12-1.2-4.9m40-17-7-7m-12-128-2.5 4.4m-17-12-1.2 4.9m40 17-7 7"/>
                                        <circle r="90" />
                                    </g>
                                    <path transform="rotate(%d)" d="m-0.094-7c-22 2.2-45 4.8-67 7 23 1.7 45 5.6 67 7 4.4-0.068 7.8-4.9 6.3-9.1-0.86-2.9-3.7-5-6.8-4.9z" />
                                </g>
                            ]],ai,aj,bz(dt),bz(jd))end;return jc end;local function je(jf)local jg=-ds;jf=jf-jf:project_on(jg)local jh=vec3(0,0,1)jh=jh-jh:project_on(jg)local ji=jh:cross(jg)local jd=jh:angle_between(jf)*constants.rad2deg;if jf:dot(ji)<0 then jd=360-jd end;return jd end;local function jj(jc,ae,af,jk,jl,dG)if a7==0 then return end;local jm=a7;local jn=20;local jo=bz(jk)if dG then for bw=-45,45,5 do local jp=bw;jc[#jc+1]=bA([[<g transform="rotate(%f,%d,%d)">]],jp,ae,af)jq=5;if bw%15==0 then jq=15 elseif bw%10==0 then jq=10 end;jc[#jc+1]=bA([[<line x1=%d y1=%d x2=%d y2="%d"/></g>]],ae,af+jm+jn-jq,ae,af+jm+jn)end;jc[#jc+1]=e5(ae,af+jm+jn-35,jl,"pdim txt txtmid")jc[#jc+1]=e5(ae,af+jm+jn-25,jo.." deg","pdim txt txtmid")jc[#jc+1]=bA([[<g transform="rotate(%f,%d,%d)">]],-jk,ae,af)jc[#jc+1]=bA([[<<polygon points="%d,%d %d,%d %d,%d"/>]],ae-5,af+jm+jn-20,ae+5,af+jm+jn-20,ae,af+jm+jn-15)jc[#jc+1]="</g>"end;jc[#jc+1]=[[<g style="clip-path: url(#headingClip);">]]local jr=jo;if dG then jr=je(dm)end;local js=20;local jt=bz(jr)local ju=0;local jv=af+jm+jn+20;local jw=ae;if jl~="YAW"then jv=iw(130)jw=iv(960)end;local jx=[[<path class="txttick line" d="]]local jy=bz(jt-(js+10)-jt%5+0.5)for bw=jy+70,jy,-5 do local e6=jw-(-bw*5+jr*5)if bw%10==0 then ju=10;local bU=bw;if bU==360 then bU=0 elseif bU>360 then bU=bU-360 elseif bU<0 then bU=bU+360 end;jc[#jc+1]=e5(e6,jv+15,bU,"txtmid bright")elseif bw%5==0 then ju=5 end;if ju==10 then jx=bA([[%s M %f %f v %d]],jx,e6,jv-5,ju)else jx=bA([[%s M %f %f v %d]],jx,e6,jv-2.5,ju)end end;jc[#jc+1]=jx..[["/>]]jc[#jc+1]=bA([[<<polygon class="bright" points="%d,%d %d,%d %d,%d"/>]],jw-5,jv-20,jw+5,jv-20,jw,jv-10)if I then if dG then jl="HDG"end;jc[#jc+1]=e5(iv(960),iw(100),jt.."°","dim txt txtmid size14","")jc[#jc+1]=e5(iv(960),iw(85),jl,"dim txt txtmid size20","")end;jc[#jc+1]=[[</g>]]end;local function jz(jc,jA,jk,ae,af,dG,jB,gj)if a7==0 then return end;local jm=a7;local jC=bz(jm*3/5)if jm>0 then local jD=bz(jA)local jq=0;local jx=bA([[<path transform="rotate(%f,%d,%d)" class="dim line" d="]],-1*jk,ae,af)if not cE then jx=bA([[<path transform="rotate(0,%d,%d)" class="dim line" d="]],ae,af)end;jc[#jc+1]=bA([[<clipPath id="cut"><circle r="%f" cx="%d" cy="%d"/></clipPath>]],jm-1,ae,af)jc[#jc+1]=[[<g class="dim txttick" clip-path="url(#cut)">]]for bw=bz(jD-30-jD%5+0.5),bz(jD+30+jD%5+0.5),5 do if bw%10==0 then jq=30 elseif bw%5==0 then jq=20 end;local e7=af+-bw*5+jA*5;if jq==30 then jx=bA([[%s M %d %f h %d]],jx,ae-jC-jq,e7,jq)if cE then jc[#jc+1]=bA([[<g path transform="rotate(%f,%d,%d)" class="pdim txt txtmid"><text x="%d" y="%f">%d</text></g>]],-1*jk,ae,af,ae-jC+10,e7+4,bw)jc[#jc+1]=bA([[<g path transform="rotate(%f,%d,%d)" class="pdim txt txtmid"><text x="%d" y="%f">%d</text></g>]],-1*jk,ae,af,ae+jC-10,e7+4,bw)if bw==0 or bw==180 or bw==-180 then jc[#jc+1]=bA([[<path transform="rotate(%f,%d,%d)" d="m %d,%f %d,0" stroke-width="1" style="fill:none;stroke:#F5B800;" />]],-1*jk,ae,af,ae-jC+20,e7,jC*2-40)end else jc[#jc+1]=e5(ae-jC+10,e7,bw,"pdim txt txtmid")jc[#jc+1]=e5(ae+jC-10,e7,bw,"pdim txt txtmid")end;jx=bA([[%s M %d %f h %d]],jx,ae+jC,e7,jq)else jx=bA([[%s M %d %f h %d]],jx,ae-jC-jq,e7,jq)jx=bA([[%s M %d %f h %d]],jx,ae+jC,e7,jq)end end;jc[#jc+1]=jx..[["/>]]local jE="PITCH"if not dG then jE="REL PITCH"end;if jA>90 and not cE then jA=90-(jA-90)elseif jA<-90 and not cE then jA=-90-(jA+90)end;if jm>200 then if cE then if gj>c8 then jc[#jc+1]=e5(ae,af-15,"Yaw","pdim txt txtmid")jc[#jc+1]=e5(ae,af+20,jB,"pdim txt txtmid")end;jc[#jc+1]=bA([[<g transform="rotate(%f,%d,%d)">]],-jk,ae,af)else jc[#jc+1]=bA([[<g transform="rotate(0,%d,%d)">]],ae,af)end;jc[#jc+1]=bA([[<<polygon points="%d,%d %d,%d %d,%d"/> class="pdim txtend"><text x="%d" y="%f">%d</text>]],ae-jC+25,af-5,ae-jC+20,af,ae-jC+25,af+5,ae-jC+50,af+4,jD)jc[#jc+1]=bA([[<<polygon points="%d,%d %d,%d %d,%d"/> class="pdim txtend"><text x="%d" y="%f">%d</text>]],ae+jC-25,af-5,ae+jC-20,af,ae+jC-25,af+5,ae+jC-30,af+4,jD)jc[#jc+1]="</g>"end;local jF=bz(jm/3)jc[#jc+1]=bA([[<path d="m %d,%d %d,0" stroke-width="2" style="fill:none;stroke:#F5B800;" />]],ae-jF,af,jm-jF)if not cE and dG then jc[#jc+1]=bA([[<path transform="rotate(%f,%d,%d)" d="m %d,%f %d,0" stroke-width="1" style="fill:none;stroke:#F5B800;" />]],-1*jk,ae,af,ae-jC+10,af,jC*2-20)end;jc[#jc+1]="</g>"if jm<200 then if cE and gj>c8 then jc[#jc+1]=e5(ae,af-jm,jE,"pdim txt txtmid")jc[#jc+1]=e5(ae,af-jm+10,jD,"pdim txt txtmid")jc[#jc+1]=e5(ae,af-15,"Yaw","pdim txt txtmid")jc[#jc+1]=e5(ae,af+20,jB,"pdim txt txtmid")else jc[#jc+1]=e5(ae,af-jm,jE,"pdim txt txtmid")jc[#jc+1]=e5(ae,af-jm+15,jD,"pdim txt txtmid")end end end end;local function jG(jc,f2,dG)local jH=ak;local jI=al;if jH==0 and jI==0 then return end;local jJ=78;local jK=19;local jL=cC;if cC~=-1 then jc[#jc+1]=e5(jH+jJ,jI+jK+20,bA("AGL: %.1fm",cC),"pdim altsm txtend")end;if dG and(f2<200000 and not cE or f2 and cE)then table.insert(jc,bA([[
                                <g class="pdim">                        
                                    <rect class="line" x="%d" y="%d" width="%d" height="%d"/> 
                                    <clipPath id="alt"><rect class="line" x="%d" y="%d" width="%d" height="%d"/></clipPath>
                                    <g clip-path="url(#alt)">]],jH-1,jI-4,jJ+2,jK+6,jH+1,jI-1,jJ-4,jK))local hB=0;local jM=1;local jN=0;local jO=f2<0;local jP=f2<iu.surfaceMaxAltitude;local jQ=9;if jO then jQ=0 end;local f2=by(f2)while hB<6 do local jR=11;local jS=16;local jT=9;local jU=14;local e9="altsm"if hB>2 then jS=jS+3;jR=jR+2;jU=jU+2;jT=jT-6;e9="altbig"end;if jO then e9=e9 .." red"elseif jP then e9=e9 .." orange"end;local jV=f2/jM%10;local jW=bz(jV)local jX=bz((jW+1)%10)local jY=jN;if hB==0 then jY=jV-jW;if jO then jY=1-jY end end;if jO and(hB==0 or jN~=0)then local jZ=jX;jX=jW;jW=jZ end;local j_=jS*(jY-1)local k0=j_+jS;local e6=jH+jT+(6-hB)*jR;local e7=jI+jU;jc[#jc+1]=e5(e6,e7+j_,jX,e9)jc[#jc+1]=e5(e6,e7+k0,jW,e9)hB=hB+1;jM=jM*10;if jW==jQ then jN=jY else jN=0 end end;table.insert(jc,[[</g></g>]])end end;local function k1(go)local k2=-math.deg(bH(go.y,go.z))+180;k2=k2-90;if k2<0 then k2=360+k2 end;if k2>180 then k2=-180+k2-180 end;return-k2 end;local function k3(go)local jr=math.deg(bH(go.y,go.x))-90;if jr<-180 then jr=360+jr end;return jr end;local function k4(jc,go,gj,ae,af)if gj>5 and not cE or gj>c8 then local jm=a7;local k5=20;local k6=20;local k7=k1(go)local k8=k3(go)local k9=14;local ka=k9/2;local kb=-k8/k6*jm;local kc=k7/k5*jm;local e6=ae+kb;local e7=af+kc;local cx=bR(kb^2+kc^2)local kd=[[<circle
                            cx="]]..e6 ..[["
                            cy="]]..e7 ..[["
                            r="]]..ka/k9 ..[["
                            style="fill:#d7fe00;stroke:none;fill-opacity:1"/>
                        <circle
                            cx="]]..e6 ..[["
                            cy="]]..e7 ..[["
                            r="]]..ka..[["
                            style="stroke:#d7fe00;stroke-opacity:1;fill:none" />
                        <path
                            d="M ]]..e6-k9 ..[[,]]..e7 ..[[ h ]]..ka..[["
                            style="stroke:#d7fe00;stroke-opacity:1" />
                        <path
                            d="M ]]..e6+ka..[[,]]..e7 ..[[ h ]]..ka..[["
                            style="stroke:#d7fe00;stroke-opacity:1" />
                        <path
                            d="M ]]..e6 ..[[,]]..e7-k9 ..[[ v ]]..ka..[["
                            style="stroke:#d7fe00;stroke-opacity:1" />]]if cx<jm then jc[#jc+1]=kd else local jd=bH(kc,kb)local ke=4;local kf=ae+jm*math.cos(jd)local kg=af+jm*math.sin(jd)jc[#jc+1]=bA('<g transform="rotate(%f %f %f)"><rect x="%f" y="%f" width="%f" height="%f" stroke="#d7fe00" fill="#d7fe00" /><path d="M %f %f l %f %f l %f %f z" fill="#d7fe00" stroke="#d7fe00"></g>',jd*180/math.pi,kf,kg,kf-ke,kg-ke/2,ke*2,ke,kf+ke,kg-ke,ke,ke,-ke,ke)end;if not cE then local kh=vec3(go)k7=k1(-kh)k8=k3(-kh)kb=-k8/k6*jm;kc=k7/k5*jm;e6=ae+kb;e7=af+kc;cx=bR(kb^2+kc^2)if cx<jm then local ki=[[<circle
                                    cx="]]..e6 ..[["
                                    cy="]]..e7 ..[["
                                    r="]]..ka..[["
                                    style="stroke:#d7fe00;stroke-opacity:1;fill:none" />
                                <path
                                    d="M ]]..e6 ..[[,]]..e7-k9 ..[[ v ]]..ka..[["
                                    style="stroke:#d7fe00;stroke-opacity:1" id="l"/>
                                <use
                                    xlink:href="#l"
                                    transform="rotate(120,]]..e6 ..[[,]]..e7 ..[[)" />
                                <use
                                    xlink:href="#l"
                                    transform="rotate(-120,]]..e6 ..[[,]]..e7 ..[[)" />
                                <path
                                    d="M ]]..e6-ka..[[,]]..e7 ..[[ h ]]..k9 ..[["
                                    style="stroke-width:0.5;stroke:#d7fe00;stroke-opacity:1"
                                    transform="rotate(-45,]]..e6 ..[[,]]..e7 ..[[)" id="c"/>
                                <use
                                    xlink:href="#c"
                                    transform="rotate(-90,]]..e6 ..[[,]]..e7 ..[[)"/>]]jc[#jc+1]=ki end end end end;local function kj(jc,iz,kk,kl)if ag==0 and ah==0 then return end;kk=bz(kk+0.5)local iX=ah+10;local iZ=ah+20;if bG()==1 and not l then iX=55;iZ=65 end;local km="CRUISE"local c="km/h"local eK=kl;if iz=="TRAVEL"or iz=="AUTOPILOT"then km="THROT"c="%"eK=kk;local kn="dim"if kk<0 then kn="red"end;jc[#jc+1]=bA([[<g class="%s">
                                <path class="linethick" d="M %d %d L %d %d L %d %d L %d %d"/>
                                <g transform="translate(0 %.0f)">
                                    <polygon points="%d,%d %d,%d %d,%d"/>
                                </g>]],kn,ag-7,ah-50,ag,ah-50,ag,ah+50,ag-7,ah+50,1-by(kk),ag-10,ah+50,ag-15,ah+53,ag-15,ah+47)end;jc[#jc+1]=e5(ag+10,iX,km,"pbright txtstart")jc[#jc+1]=e5(ag+10,iZ,bA("%.0f %s",eK,c),"pbright txtstart")if cE and u and dy and c4 then kk=bz(c5*100+0.5)local kn="red"if kk<0 then kn="red"end;jc[#jc+1]=bA([[<g class="%s">
                                <g transform="translate(0 %d)">
                                    <polygon points="%d,%d %d,%d %d,%d"/>
                                </g></g>]],kn,1-by(kk),ag-10,ah+50,ag-15,ah+53,ag-15,ah+47)jc[#jc+1]=e5(ag+10,iX+40,"LIMIT","pbright txtstart")jc[#jc+1]=e5(ag+10,iZ+40,kk.."%","pbright txtstart")end;if cE and u or aZ then jc[#jc+1]=e5(ag+10,iX-40,"LIMIT: "..dc.." km/h","dim txtstart")elseif not cE and aU then jc[#jc+1]=e5(ag+10,iX-40,"LIMIT: "..bz(Y*3.6+0.5).." km/h","dim txtstart")end end;local function ko(jc,kp)if ag==0 and ah==0 then return end;local kq=ah-10;local kr=ag+10;jc[#jc+1]=e5(0,0,"","pdim txt txtend")if bG()==1 and not l then kq=75 end;jc[#jc+1]=e5(kr,kq,bz(kp).." km/h","pbright txtbig txtstart")end;local function ks(jc)jc[#jc+1]=e5(iv(1900),iw(1070),bA("ARCH Hud Version: %.3f",VERSION_NUMBER),"hudver")jc[#jc+1]=[[<g class="warnings">]]if c.isMouseControlActivated()==1 then jc[#jc+1]=e5(iv(960),iw(550),"Warning: Invalid Control Scheme Detected","warnings")jc[#jc+1]=e5(iv(960),iw(600),"Keyboard Scheme must be selected","warnings")jc[#jc+1]=e5(iv(960),iw(650),"Set your preferred scheme in Lua Parameters instead","warnings")end;local kt=iv(960)local ku=iw(860)local kv=iw(880)local kw=iw(900)local kx=iw(960)local ky=iw(200)local kz=iw(250)local kA=iw(960)if bG()==1 and not l then ku=iw(135)kv=iw(155)kw=iw(175)ky=iw(115)kz=iw(95)end;local kB="#222222"local kC="white"local kD="dimmer"local kE="pbright"local kF="#110000"local kG=kB;local kH=kD;if aR then jc[#jc+1]=e5(kt,ku,"Brake Engaged","warnings")kF="#440000"kG=kC;kH=kE elseif c3>0 then jc[#jc+1]=e5(kt,ku,"Auto-Brake Engaged","warnings","opacity:"..c3)end;local kI="#110000"local kJ=kB;local kK=kD;if cE and da and cC==-1 then if not aU and not bg and not aX and not dw and not a_ and not aY then jc[#jc+1]=e5(kt,ky+50,"** STALL WARNING **","warnings")kI="#ff0000"kJ=kC;kK=kE;dR("stall","SW",2)end end;if dE then jc[#jc+1]=e5(kt,ky+90,"Flight Assist in Progress","warnings")end;if cL then jc[#jc+1]=e5(kt,kA,"Gyro Enabled","warnings")end;local kL="#111100"local kM=kB;local kN=kD;if bc then kL="#775500"kM=kC;kN=kE;if ca then jc[#jc+1]=e5(kt,kv,"Gear Extended","warn")else jc[#jc+1]=e5(kt,kv,"Landed (G: Takeoff)","warnings")end;local kO=ef(d:getTargetGroundAltitude())jc[#jc+1]=e5(kt,kw,"Hover Height: "..kO,"warn")end;local kP="#000011"local kQ=kB;local kR=kD;if cl then kP="#0000DD"kQ=kC;kR=kE;jc[#jc+1]=e5(kt,kx+20,"ROCKET BOOST ENABLED","warn")end;local kS="#001100"local kT=kB;local kU=kD;if antigrav and not q and dw and bl~=nil then kS="#00DD00"kT=kC;kU=kE;if by(cG-antigrav.getBaseAltitude())<501 then jc[#jc+1]=e5(kt,ky+15,bA("Target Altitude: %d Singularity Altitude: %d",bz(bl),bz(antigrav.getBaseAltitude())),"warn")else jc[#jc+1]=e5(kt,ky+15,bA("Target Altitude: %d Singluarity Altitude: %d",bz(bl),bz(antigrav.getBaseAltitude())),"warnings")end elseif aU and b9~="None"then jc[#jc+1]=e5(kt,ky+20,"Autopilot "..b6,"warn")elseif bj~=nil then jc[#jc+1]=e5(kt,ky+20,bA("LockedPitch: %d",bz(bj)),"warn")elseif ci then jc[#jc+1]=e5(kt,ky+20,"Follow Mode Engaged","warn")elseif aZ or cB then jc[#jc+1]=e5(kt,ky+20,"Re-entry in Progress","warn")end;if aW or a_ then local kO=ef(b0,2)if a_ then if dw then kO=ef(antigrav.getBaseAltitude(),2).." AGG singularity height"end;jc[#jc+1]=e5(kt,ky,"VTO to "..kO,"warn")elseif aY and not bp then if cA then jc[#jc+1]=e5(kt,ky,"Takeoff to "..b9,"warn")else jc[#jc+1]=e5(kt,ky,"Takeoff to "..kO,"warn")end;if aR and not a_ then jc[#jc+1]=e5(kt,ky+50,"Throttle Up and Disengage Brake For Takeoff","crit")end else jc[#jc+1]=e5(kt,ky,"Altitude Hold: "..kO,"warn")end end;if a_ and(antigrav~=nil and antigrav)then if cF>0.1 then jc[#jc+1]=e5(kt,ky+20,"Beginning ascent","warn")elseif cF<0.09 and cF>0.05 then jc[#jc+1]=e5(kt,ky+20,"Aligning trajectory","warn")elseif cF<0.05 then jc[#jc+1]=e5(kt,ky+20,"Leaving atmosphere","warn")end end;if bp then if de~=nil then jc[#jc+1]=e5(kt,ky,de,"warn")end end;if aX then if kV then jc[#jc+1]=e5(kt,ky,"Brake-Landing","warnings")else jc[#jc+1]=e5(kt,ky,"Coast-Landing","warnings")end end;if aT then jc[#jc+1]=e5(kt,ky,"Prograde Alignment","crit")end;if aS then jc[#jc+1]=e5(kt,ky,"Retrograde Alignment","crit")end;local kW="#110000"local kX=kB;local kY=kD;if dH then kW="#FF0000"kX=kC;kY=kE;local type;if string.find(dH,"COLLISION")then type="warnings"else type="crit"end;jc[#jc+1]=e5(kt,kz+20,dH,type)elseif cF==0 then local kZ,k_=d3.checkLOS(dq:normalize())if k_~=nil then kY=kE;kW="#FF0000"kX=kC;local kO=ef(k_)local l0=cZ.computeTravelTime(dr,0,k_)local l1="Collision"if kZ.noAtmosphericDensityAltitude>0 then l1="Atmosphere"end;jc[#jc+1]=e5(kt,kz+20,kZ.name.." "..l1 .." "..ei(l0).." In "..kO,"crit")end end;if bg and not bp then jc[#jc+1]=e5(kt,ky+35,l2,"warn")end;local l3="#111100"local l4=kB;local l5=kD;if dM and#dM>1 then l3="#DDDD00"l4=kC;l5=kE end;local l6=iv;local l7=iw;local kD="topButton"local l8="topButtonActive"local l9=kD;if aU or bg or cA or bp then l9=l8 end;local la=kD;if aT then la=l8 end;local lb=kD;if aX or bc then lb=l8 end;local lc=kD;if aW or bg then lc=l8 end;local ld=kD;if aS then ld=l8 end;local le=kD;if bp or dh and aU then le=l8 end;if x and I then local lf=l7(30)jc[#jc+1]=bA([[ 
                                <g class="pdim txt txtmid">
                                    <g class="%s">
                                    <path d="M %f %f l 0 %f l %f 0 l %f %f Z"/>
                                    ]],l9,l6(960),l7(54),l7(-53),l6(-120),l6(25),l7(50))jc[#jc+1]=e5(l6(910),lf,"AUTOPILOT")jc[#jc+1]=bA([[
                                    </g>
                
                                    <g class="%s">
                                    <path d="M %f %f l %f %f l %f 0 l %f %f Z"/>
                                    ]],la,l6(865),l7(51),l6(-25),l7(-50),l6(-110),l6(25),l7(46))jc[#jc+1]=e5(l6(800),lf,"PROGRADE")jc[#jc+1]=bA([[
                                    </g>
                
                                    <g class="%s">
                                    <path d="M %f %f l %f %f l %f 0 l %f %f Z"/>
                                    ]],lb,l6(755),l7(47),l6(-25),l7(-46),l6(-98),l6(44),l7(44))jc[#jc+1]=e5(l6(700),lf,"LAND")jc[#jc+1]=bA([[
                                    </g>
                
                                    <g class="%s">
                                    <path d="M %f %f l 0 %f l %f 0 l %f %f Z"/>
                                    ]],lc,l6(960),l7(54),l7(-53),l6(120),l6(-25),l7(50))jc[#jc+1]=e5(l6(1010),lf,"ALT HOLD")jc[#jc+1]=bA([[
                                    </g>
                
                                    <g class="%s">
                                    <path d="M %f %f l %f %f l %f 0 l %f %f Z"/>
                                    ]],ld,l6(1055),l7(51),l6(25),l7(-50),l6(110),l6(-25),l7(46))jc[#jc+1]=e5(l6(1122),lf,"RETROGRADE")jc[#jc+1]=bA([[
                                    </g>
                
                                    <g class="%s">
                                    <path d="M %f %f l %f %f l %f 0 l %f %f Z"/>
                                    ]],le,l6(1165),l7(47),l6(25),l7(-46),l6(98),l6(-44),l7(44))jc[#jc+1]=e5(l6(1220),lf,"ORBIT")jc[#jc+1]=[[
                                    </g>
                                </g>]]jc[#jc+1]="</g>"end;return jc end;local function lg(gj)return bz(bT(gj*3.6,0)+0.5).." km/h"end;local function lh(hB)local hQ=b9;if hB~=nil and type(hB)=="number"then if hB==0 then return"None"end;hQ=dB[hB].name end;if hQ==nil then hQ=li.name end;if hQ==nil then hQ="None"end;return hQ end;local function lj(jc)local lk=d3.routeWP(true)if#lk==0 then return end;local e6=iv(750)local e7=iw(360)if aU or bg then jc[#jc+1]=e5(e6,e7,"REMAINING ROUTE","pdim txtstart size20")else jc[#jc+1]=e5(e6,e7,"LOADED ROUTE","pdim txtstart size20")end;for dX,bw in pairs(lk)do e7=e7+20;jc[#jc+1]=e5(e6,e7,dX..". "..lh(lk[dX]),"pdim txtstart size20")end end;local function ll(jc)local e6=as+10;local e7=at+20;local lm={}local ln={"Alt-4: AutoTakeoff to Target"}local lo={"Alt-6: Altitude hold at current altitude","Alt-6-6: Altitude Hold at 11% atmosphere","Alt-Q/E: Hard Bankroll left/right till released","Alt-S: 180 deg bank turn"}local lp={"Alt-6: Orbit at current altitude","Alt-6-6: Orbit at LowOrbitHeight over atmosphere"}local lq={"","------------------ALWAYS--------------------","Alt-1: Increment Interplanetary Helper","Alt-2: Decrement Interplanetary Helper","Alt-3: Toggle Vanilla Widget view","Alt-4: Autopilot to IPH target","Alt-5: Lock Pitch at current pitch","Alt-7: Toggle Collision System on and off","Alt-8: Toggle ground stabilization (underwater flight)","CTRL: Toggle Brakes on and off. Cancels active AP","LAlt: Tap to shift freelook on and off","Shift: Hold while not in freelook to see Buttons","Type /commands or /help in lua chat to see text commands"}table.insert(lm,"--------------DYNAMIC-----------------")if cE then if cC~=-1 then dU(lm,ln)if cq and iu and cq.name==iu.name then table.insert(lm,"Alt-4-4: Low Orbit Autopilot to Target")end;if antigrav or aQ then if antigrav then if dw then table.insert(lm,"Alt-6: AGG is on, will takeoff to AGG Height")else table.insert(lm,"Turn on AGG to takeoff to AGG Height")end end;if aQ then table.insert(lm,"Alt-6: Begins Vertical AutoTakeoff.")end else table.insert(lm,"Alt-6: Autotakeoff to AutoTakeoffAltitude")table.insert(lm,"Alt-6-6: Autotakeoff to 11% atmosphere")end;if bc then table.insert(lm,"G: Takeoff to hover height, raise gear")else table.insert(lm,"G: Lowergear and Land")end else dU(lm,lo)table.insert(lm,"G: Begin BrakeLanding or Land")end;if a_ then table.insert(lm,"Hit Alt-6 before exiting Atmosphere during VTO to hold in level flight")end else dU(lm,lp)if lr then table.insert(lm,"Alt-Shift-5: Toggle shield off and on")table.insert(lm,"Alt-Shift-6: Vent shields")end end;if gyro then table.insert(lm,"Alt-9: Activate Gyroscope")end;if aN~="none"or aM~="none"or aO~="none"then table.insert(lm,"Alt-Shift-9: Cycles engines with Extra tags")end;if aW then table.insert(lm,"Alt-Spacebar/C will raise/lower target height")table.insert(lm,"Alt+Shift+Spacebar/C will raise/lower target to preset values")end;if u or not cE then table.insert(lm,"LALT+Mousewheel will lower/raise speed limit")end;dU(lm,lq)for bw=1,#lm do e7=e7+12;jc[#jc+1]=e5(e6,e7,lm[bw],"pdim txtbig txtstart")end end;local function ls(jc)local lt=as;local lu=at;local lv=ar;local lw=4;local lx=15;local e6=0;local e7=0;local ly,lz,lA,lB;local lC;local function lD(type)local lE,bX,gj,lF,e9,lG;if type=="Periapsis"then lE=lC.periapsis.altitude;bX=lC.timeToPeriapsis;gj=lC.periapsis.speed;e9="txtend"lF=12;lG=math.min(e6,lt+lv-iu.radius/lA-lw*2)else lE=lC.apoapsis.altitude;bX=lC.timeToApoapsis;gj=lC.apoapsis.speed;lF=-12;e9="txtstart"lG=e6 end;if dr<1 then bX=0 end;jc[#jc+1]=bA([[<line class="pdim linethin" style="stroke:white" x1="%f" y1="%f" x2="%f" y2="%f"/>]],lG+lF,e7-5,e6,e7-5)jc[#jc+1]=bA([[<line class="pdim linethin" x1="%f" y1="%f" x2="%f" y2="%f"/>]],lG-lF*4,e7+2,e6,e7+2)jc[#jc+1]=e5(lG,e7,type,e9)e6=lG-lF*2;e7=e7+lx;local kO=ef(lE)jc[#jc+1]=e5(e6,e7,kO,e9)e7=e7+lx;jc[#jc+1]=e5(e6,e7,ei(bX),e9)e7=e7+lx;jc[#jc+1]=e5(e6,e7,lg(gj),e9)end;local lH=lv*1.5;if bx=="INFO"then lH=25*7 end;if bx~="HIDE"then jc[#jc+1]=[[<g class="pbright txtorb txtmid">]]jc[#jc+1]=bA('<rect width="%f" height="%d" rx="10" ry="10" x="%d" y="%d" class="dimfill brightstroke" style="stroke-width:3;fill-opacity:0.3;" />',lv*2,lH,lt,lu)jc[#jc+1]=bA([[<clippath id="orbitRect">
                                                        <rect width="%f" height="%d" rx="10" ry="10" x="%d" y="%d" class="dimfill brightstroke" style="stroke-width:3;fill-opacity:0.3;" />
                                                        </clippath>]],lv*2,lH,lt,lu)end;local lI=lv*1.5;local lJ=lv*2;local lK=lI/2;local lL=lv;local lM=lt+lL;local lN=lu+lK;local lO=lt+lJ;local lP=lu+lI;if bx=="ORBIT"then lu=lu+lw;ly=lv/2;lB=0;lC={}lC.periapsis={}lC.apoapsis={}if gn~=nil then if gn.periapsis~=nil then lC.periapsis.altitude=gn.periapsis.altitude;lC.periapsis.speed=gn.periapsis.speed end;if gn.apoapsis~=nil then lC.apoapsis.altitude=gn.apoapsis.altitude;lC.apoapsis.speed=gn.apoapsis.speed end;lC.period=gn.period;lC.eccentricity=gn.eccentricity;lC.timeToApoapsis=gn.timeToApoapsis;lC.timeToPeriapsis=gn.timeToPeriapsis;lC.eccentricAnomaly=gn.eccentricAnomaly;lC.trueAnomaly=gn.trueAnomaly end;if lC.periapsis==nil then lC.periapsis={}lC.periapsis.altitude=-iu.radius;lC.periapsis.speed=Y end;if lC.eccentricity==nil then lC.eccentricity=1 end;if lC.apoapsis==nil then lC.apoapsis={}lC.apoapsis.altitude=cG;lC.apoapsis.speed=0 end;if dr<1 then lC.apoapsis.altitude=cG;lC.apoapsis.speed=0 end;if lC.apoapsis.altitude then lA=(lC.apoapsis.altitude+lC.periapsis.altitude+iu.radius*2)/(ly*2)lz=(iu.radius+lC.apoapsis.altitude)/lA*(1-lC.eccentricity)lB=ly-lC.periapsis.altitude/lA-iu.radius/lA;local lQ=math.pi;if lC.period~=nil and lC.period>0 and lC.timeToApoapsis~=nil then lQ=lC.eccentricAnomaly;if lC.timeToPeriapsis<lC.timeToApoapsis then lQ=2*math.pi-lQ end end;if dr<1 or lQ~=lQ then lQ=math.pi end;local lR=-ly*math.cos(lQ)+lt+lL+lw;local lS=lz*math.sin(lQ)+lu+lK+lw;local lT=""jc[#jc+1]='<g clip-path="url(#orbitRect)">'jc[#jc+1]=bA([[<ellipse class="%s line" cx="%f" cy="%f" rx="%f" ry="%f"/>]],lT,lt+lv+lw,lu+lv*1.5/2+lw,ly,lz)if lz<1 then jc[#jc+1]=bA([[<line x1="%f" y1="%f" x2="%f" y2="%f" stroke="red"/>]],lt+lv+lw-lB,lu+lv*1.5/2+lw,lR,lS)end;jc[#jc+1]=bA('<circle cx="%f" cy="%f" r="%f" stroke="white" stroke-width="1" fill="rgb(0,150,200)" opacity="0.5" />',lt+lv+lw-lB,lu+lv*1.5/2+lw,(iu.radius+iu.noAtmosphericDensityAltitude)/lA)jc[#jc+1]=bA('<clipPath id="planetClip"><circle cx="%f" cy="%f" r="%f" /></clipPath>',lt+lv+lw-lB,lu+lv*1.5/2+lw,(iu.radius+iu.noAtmosphericDensityAltitude)/lA)jc[#jc+1]=bA([[<ellipse class="%s line" cx="%f" cy="%f" rx="%f" ry="%f" clip-path="url(#planetClip)"/>]],"redout",lt+lv+lw,lu+lv*1.5/2+lw,ly,lz)jc[#jc+1]=bA('<circle cx="%f" cy="%f" r="%f" stroke="black" stroke-width="1" fill="rgb(0,100,150)" />',lt+lv+lw-lB,lu+lv*1.5/2+lw,iu.radius/lA)jc[#jc+1]='</g>'local lU=math.floor(iu.radius/lA+0.5)local lV=lW.Generic_Moon;if lW[iu.name]then lV=lW[iu.name]end;e6=lt+lv+lw*4+ly;e7=lu+lv*1.5/2+5+lw;if lC.apoapsis~=nil and lC.apoapsis.speed<Y then lD("Apoapsis")end;e7=lu+lv*1.5/2+5+lw;e6=lt+lv-lw*2-ly;if lC.periapsis~=nil and lC.periapsis.speed<Y and lC.periapsis.altitude>0 then lD("Periapsis")end;jc[#jc+1]=e5(lt+lv+lw,lu+20+lw,iu.name,"txtorbbig")jc[#jc+1]=bA('<circle cx="%f" cy="%f" r="2" stroke="black" stroke-width="1" fill="white" />',lR,lS)jc[#jc+1]=[[</g>]]return jc else jc[#jc+1]='<g clip-path="url(#orbitRect)">'local lX=""local lY=1.2*(lZ-l_)/(lv*2)local m0=1.4*(m1-m2)/(lv*1.5)for dX,dY in pairs(e[0])do if dY.center then local e6=lt+lv+dY.center.x/lY;local e7=lu+lv*1.5/2+dY.center.y/m0;lX=lX..'<circle cx="'..e6 ..'" cy="'..e7 ..'" r="'..dY.radius/lY*30 ..'" stroke="white" stroke-width="1" fill="blue" />'if not string.match(dY.name,"Moon")and not string.match(dY.name,"Sanctuary")and not string.match(dY.name,"Space")then lX=lX.."<text x='"..e6 .."' y='"..e7+dY.radius/lY*30+20 .."' font-size='12' fill="..cM.." text-anchor='middle' font-family='Montserrat'>"..dY.name.."</text>"end end end;local gp=vec3(b.getConstructWorldPos())local e6=lt+lv+gp.x/lY;local e7=lu+lv*1.5/2+gp.y/m0;lX=lX..'<circle cx="'..e6 ..'" cy="'..e7 ..'" r="2" stroke="white" stroke-width="1" fill="red"/>'lX=lX.."<text x='"..e6 .."' y='"..e7-10 .."' font-size='14' fill='darkred' text-anchor='middle' font-family='Bank' font-weight='bold'>You Are Here</text>"ie=lY;ig=m0;local m3=gp+dq*1000000;local m4=lt+lv+m3.x/lY;local iZ=lu+lv*1.5/2+m3.y/m0;lX=lX..'<line x1="'..e6 ..'" y1="'..e7 ..'" x2="'..m4 ..'" y2="'..iZ..'" stroke="purple" stroke-width="1"/>'jc[#jc+1]=lX;jc[#jc+1]='</g>'end elseif bx=="INFO"then jc=d1.DrawOdometer(jc,cr,bd,cs)elseif bx=="HELP"then jc=ll(jc)elseif bx=="SCOPE"then jc[#jc+1]='<g clip-path="url(#orbitRect)">'local m5=dP;if cF>0 then table.sort(dO,function(fx,fy)local ec,ed=fx.center,fy.center;return(ec.x-du.x)^2+(ec.y-du.y)^2+(ec.z-du.z)^2<(ed.x-du.x)^2+(ed.y-du.y)^2+(ed.z-du.z)^2 end)end;local gS={}local m6={}local m7=120;local m8=nil;local m9=nil;for bw,dY in ipairs(dO)do local gR=dY.center-du;local ma=gR:len()local mb=gR:normalize()local mc=gR:cross(dm):normalize()local md=math.acos(mc:dot(dn))if md~=md then md=0 end;if mc:cross(dn):dot(dm)<0 then md=-md end;local me=gR:project_on_plane(dm):len()local mf=math.sin(md)*math.asin(me/ma)*constants.rad2deg;local mg=math.cos(md)*math.asin(me/ma)*constants.rad2deg;if mb:dot(dm)<0 then mg=90*math.cos(md)+90*math.cos(md)-mg;mf=90*math.sin(md)+90*math.sin(md)-mf end;local e6=lM+mf/m5*lI;local e7=lN+mg/m5*lI;local mh=(e6-lM)*(e6-lM)+(e7-lN)*(e7-lN)local mi=math.asin((dY.radius+dY.surfaceMaxAltitude)/ma)*constants.rad2deg;if mi~=mi then mi=m5 end;local hN=mi/m5*lI;local mj=math.asin(dY.atmosphereRadius/ma)*constants.rad2deg;if mj~=mj then mj=mi end;local mk=mj/m5*lI;local cx=ef(ma,1)local ml=dY.name;local mm=false;if e7>lu then if e7>lP then if e7-mk<=lP then mm=true end else mm=true end else if e7+mk>=lu then mm=true end end;local mn=false;local mo=e6;if dY.systemId==0 then mo=e6+m7 else mo=e6-m7 end;if mo+m7>lt then if mo+m7>lO then if mo-mk-m7<=lO then mn=true end else mn=true end else if mo+mk+m7>=lt then mn=true end end;local mp={}mp.x=e6;mp.y=e7;mp.planet=dY;mp.atmoSize=mk;if not m8 or mh<m8 then m8=mh;m9=mp end;if mn and mm then local mq=math.max(mk,5)if mh<mq*mq then ml=ml.." - "..cx end;mp.size=hN;mp.i=bw;mp.displayString=ml;mp.distance=cx;mp.visible=true;m6[#m6+1]=mp else mp.visible=false end end;local mr=false;table.sort(m6,function(ec,ed)return ec.y<ed.y end)for dX,gs in ipairs(m6)do local dY,hN,bw,mk,e6,e7,ml,cx=gs.planet,gs.size,gs.i,gs.atmoSize,gs.x,gs.y,gs.displayString,gs.distance;local lG,ms,mt,mu;local mv=15;local e9="pdim"if dY.systemId~=0 then mt=iv(string.len(ml)*5)mv=-(15+mt)mu=iw(10)e9="pdimfill"else mt=iv(string.len(ml)*9)mu=iw(15)end;if hN*2>mt then lG=bK(e6,lt+mt/2,lO-mt/2)ms=bK(e7,lu+mu,lP-5)lG=bK(lG,e6-hN+mt/2,e6+hN-mt/2)ms=bK(ms,e7-hN+mu,e7+hN)else lG=e6+mv;ms=e7 end;for mw,gs in pairs(gS)do local mx=gs.textPositions;local my=mx.y-ms;if mw~=bw and by(my)<mx.height and mx.x+mx.width>lG and mx.x<lG+mt then if hN>mt then ms=bK(ms+mu,lu+15,lP-5)else ms=mx.y+mx.height+1 end end end;local mz=ml~=dY.name or lG<=lM and lG+mt>=lM and ms-mu<=lN and ms>=lN;gs.hovered=mz;local mA=1;if mz then mA=2;if hN*2<mt then mA=10 end;if ml==dY.name then ml=ml.." - "..cx end;e9="pbright"if dY.systemId~=0 then mt=iv(string.len(ml)*5)mv=-(15+mt)else mt=iv(string.len(ml)*7)end;if hN*2>mt then lG=bK(e6,lt+mt/2,lO-mt/2)lG=bK(lG,e6-hN+mt/2,e6+hN-mt/2)else lG=e6+mv end end;gS[bw]={}gS[bw].textPositions={}gS[bw].textPositions.y=ms;gS[bw].textPositions.x=lG;gS[bw].textPositions.width=mt;gS[bw].textPositions.height=mu;gS[bw].output=""if hN*2>mt then e9=e9 .." txtmid"else e9=e9 .." txtstart"end;if mk-hN>2 then gS[bw].output=bA('<circle cx="%f" cy="%f" r="%f" stroke-width="1" stroke="%s" stroke-opacity="%f" fill="url(#RadialAtmo)" />',e6,e7,mk,cN,0.1*mA)end;gS[bw].output=gS[bw].output..bA('<circle cx="%f" cy="%f" r="%f" stroke="%s" stroke-width="1" stroke-opacity="%f" fill="url(#RadialPlanetCenter)" />',e6,e7,hN,cN,0.2*mA)if dY.systemId==0 then gS[bw].output=gS[bw].output..bA([[<text x='%f' y='%f'
                                            font-size='12' fill='%s' class='%s' font-family='Montserrat'>%s</text>]],lG,ms,cM,e9,ml)if hN*2<=mt then gS[bw].output=gS[bw].output..bA("<path class='linethin dimstroke' d='M %f %f L %f %f L %f %f' />",lG+mt,ms+2,lG,ms+2,e6,e7)end else gS[bw].output=gS[bw].output..bA([[<text x='%f' y='%f'
                                            font-size='8' fill='%s' class='%s' font-family='Montserrat'>%s</text>]],lG,ms,cN,e9,ml)if hN*2<=mt then gS[bw].output=gS[bw].output..bA("<path class='linethin dimstroke' d='M %f %f L %f %f L %f %f' />",lG,ms+2,lG+mt,ms+2,e6,e7)end end end;for dX=#dO,1,-1 do if gS[dX]then jc[#jc+1]=gS[dX].output end end;if m9~=nil and dP<90 and not m9.hovered then local mB=m9.planet.atmosphereRadius/m9.atmoSize;local mC=bR(m8)*mB;local mD=ef(mC,1)local mt=iv(math.max(string.len(mD)*7,string.len(m9.planet.name)*7))local mu=iw(12)local lG=bK(m9.x+(lM-m9.x)/2,lt+mt/2,lO-mt/2)local ms=bK(m9.y+(lN-m9.y)/2,lu+mu*2,lP-5)jc[#jc+1]=bA("<path class='linethin dimstroke' stroke='white' d='M %f %f L %f %f' />",m9.x,m9.y,lM,lN)jc[#jc+1]=bA([[<text x='%f' y='%f'
                                        font-size='12' fill='%s' class='txtmid' font-family='Montserrat'>%s</text>]],lG,ms,"white",mD)if not m9.visible then jc[#jc+1]=bA([[<text x='%f' y='%f'
                                            font-size='12' fill='%s' class='txtmid' font-family='Montserrat'>%s</text>]],lG,ms-mu,"white",m9.planet.name)end end;if dr>1 then local gR=dq;local mb=gR:normalize()local me=gR:project_on_plane(dm):len()local mc=gR:cross(dm):normalize()local md=math.acos(mc:dot(dn))if md~=md then md=0 end;if mc:cross(dn):dot(dm)<0 then md=-md end;local mf=math.sin(md)*math.asin(me/gR:len())*constants.rad2deg;local mg=math.cos(md)*math.asin(me/gR:len())*constants.rad2deg;if mb:dot(dm)<0 then mg=90*math.cos(md)+90*math.cos(md)-mg;mf=90*math.sin(md)+90*math.sin(md)-mf end;local e6=lM+mf/m5*lI;local e7=lN+mg/m5*lI;local k9=14;local ka=k9/2;local kd=[[<circle
                                    cx="]]..e6 ..[["
                                    cy="]]..e7 ..[["
                                    r="]]..ka/k9 ..[["
                                    style="fill:#d7fe00;stroke:none;fill-opacity:1"/>
                                <circle
                                    cx="]]..e6 ..[["
                                    cy="]]..e7 ..[["
                                    r="]]..ka..[["
                                    style="stroke:#d7fe00;stroke-opacity:1;fill:none" />
                                <path
                                    d="M ]]..e6-k9 ..[[,]]..e7 ..[[ h ]]..ka..[["
                                    style="stroke:#d7fe00;stroke-opacity:1" />
                                <path
                                    d="M ]]..e6+ka..[[,]]..e7 ..[[ h ]]..ka..[["
                                    style="stroke:#d7fe00;stroke-opacity:1" />
                                <path
                                    d="M ]]..e6 ..[[,]]..e7-k9 ..[[ v ]]..ka..[["
                                    style="stroke:#d7fe00;stroke-opacity:1" />]]jc[#jc+1]=kd end;jc[#jc+1]=bA("<line class='linethin dimstroke' x1='%f' y1='%f' x2='%f' y2='%f' />",lM,lN-10,lM,lN+10)jc[#jc+1]=bA("<line class='linethin dimstroke' x1='%f' y1='%f' x2='%f' y2='%f' />",lM-10,lN,lM+10,lN)jc[#jc+1]='</g>'else return jc end end;local function mE(mF,mG)local mH;local mI=(mG-mF):normalize()local gq=(du-mF):dot(mI)/mI:dot(mI)if gq<=0. then return(du-mF):len()elseif gq>=(mG-mF):len()then return(du-mG):len()end;local mJ=mF+gq*mI;mH=(mJ-du):len()return mH end;local function mK()local mH;local mL=nil;local mM=nil;local mN=nil;for dX,mO in pairs(e[0])do if mO.hasAtmosphere then local cx=mE(iu.center,mO.center)if mL==nil or cx<mL then mM=mO;mL=cx;mN=iu end;if cq and cq.hasAtmosphere and cq.name~=iu.name then local fK=mE(cq.center,mO.center)if fK<mL then mM=mO;mL=fK;mN=cq end end end end;local mP=iv(1770)local mQ=iw(330)if mL then local mR="txttick "local mS=500000;if mL<mM.radius+mS or mL<mN.radius+mS then if dC then mR="txttick red "else mR="txttick orange "end end;mH=ef(mL,2)ik=e5(mP,mQ,"Pipe ("..mN.name.."--"..mM.name.."): "..mH,mR.."pbright txtmid")end end;local function mT(e6,e7,mU,mV,km)local mW={x=e6,y=e7,width=mU,height=mV,label=km}dL[km]=mW;return mW end;local function mX(mY,mZ,mU,mV,e6,e7,m_,n0,n1,n2,e9)local mW={enableName=mY,disableName=mZ,width=mU,height=mV,x=e6,y=e7,toggleVar=m_,toggleFunction=n0,drawCondition=n1,hovered=false,class=e9}if n2 then table.insert(id,mW)else table.insert(ic,mW)end;return mW end;local function n3(n4)if not ii then n5=false;n6=false;n7=false;x=true;return elseif n4=="handling"then n5=not n5;n6=false;n7=false elseif n4=="hud"then n6=not n6;n5=false;n7=false elseif n4=="physics"then n7=not n7;n5=false;n6=false end;if n7 or n6 or n5 then ij=dZ(n4)x=false else ij={}x=true end end;local function n8()ii=not ii;if ii then ib=id;ck="Hold SHIFT to see Settings"dQ=x else ib=ic;ck="Hold SHIFT to see Control Buttons"n3()x=dQ end end;local function n9()local function na(dY)_G[dY]=not _G[dY]if _G[dY]then ck=dY.." set to true"else ck=dY.." set to false"end;if dY=="showHud"then dQ=_G[dY]elseif dY=="BrakeToggleDefault"then aP=j end end;local nb=50;local nc=340;local e6=500;local e7=cR/2-400;local nd=0;for dX,dY in pairs(dZ("boolean"))do if type(_G[dY])=="boolean"then mX(dY,dY,nc,nb,e6,e7,function()return _G[dY]end,function()na(dY)end,function()return true end,true)e7=e7+nb+20;if nd==9 then e6=e6+nc+20;e7=cR/2-400;nd=0 else nd=nd+1 end end end;mX("Control View","Control View",nc,nb,10,cR/2-500,function()return true end,n8,function()return true end,true)mX("View Handling Settings",'Hide Handling Settings',nc,nb,10,cR/2-(500-nb),function()return n5 end,function()n3("handling")end,function()return true end,true)mX("View Hud Settings",'Hide Hud Settings',nc,nb,10,cR/2-(500-nb*2),function()return n6 end,function()n3("hud")end,function()return true end,true)mX("View Physics Settings",'Hide Physics Settings',nc,nb,10,cR/2-(500-nb*3),function()return n7 end,function()n3("physics")end,function()return true end,true)end;local function ne()local function nf()local ng=du;local hQ=iu.name..". "..#bf;if radar_1 then hQ=d4.GetClosestName(hQ)end;return d2.AddNewLocation(hQ,ng,false,true)end;local function nh()aV=not aV end;local function ni(nj)if nj==1 then aT=not aT;aS=false else aS=not aS;aT=false end;aU=false;aW=false;ci=false;aX=false;bj=nil;aZ=false;aY=false end;local function nk()d2.UpdatePosition()end;local function nl()d2.ClearCurrentPosition()end;local function nm(hB)local lk=d3.routeWP(true)if lk and#lk>0 then return"Engage Route: "..lh(lk[1])end;return"Engage Autopilot: "..lh(hB)end;local function nn(hB)local lk=d3.routeWP(true)if lk and#lk>0 then return"Next Route Point: "..lh(lk[1])end;return"Disable Autopilot: "..lh(hB)end;local function no()if bG()==1 then ci=not ci;if ci then aU=false;aS=false;aT=false;aW=false;aZ=false;aX=false;aY=false;np=bc;bc=false;d.control.retractLandingGears()bL:setTargetGroundAltitude(V)dR("folOn","F")else dR("folOff","F")aR=true;d8=p;bc=np;if bc then d.control.extendLandingGears()bL:setTargetGroundAltitude(W)end end else ck="Follow Mode only works with Remote controller"ci=false end end;local nb=50;local nc=260;local nq=iv(30)local nr=as+ar*2+2;local ns=at+1;mX("+","+",nq,nq,nr,ns+nq+1,function()return false end,function()dP=dP/8 end,function()return bx=="SCOPE"end,nil,"ZoomButton")mX("-","-",nq,nq,nr,ns,function()return false end,function()dP=math.min(dP*8,90)end,function()return bx=="SCOPE"end,nil,"ZoomButton")mX("0","0",nq,nq,nr,ns+nq*2+2,function()return false end,function()dP=90 end,function()return bx=="SCOPE"and dP~=90 end,nil,"ZoomButton")local nt=mX("Enable Brake Toggle","Disable Brake Toggle",nc,nb,cQ/2-nc/2,cR/2+350,function()return aP end,function()aP=not aP;if aP then ck="Brakes in Toggle Mode"else ck="Brakes in Default Mode"end end)mX("Align Prograde","Disable Prograde",nc,nb,cQ/2-nc/2-50-nt.width,cR/2-nb+380,function()return aT end,function()ni(1)end)mX("Align Retrograde","Disable Retrograde",nc,nb,cQ/2-nc/2+nt.width+50,cR/2-nb+380,function()return aS end,ni,function()return cF==0 end)nu=mX(nm,nn,600,60,cQ/2-600/2,cR/2-60/2-330,function()return aU or bg or cA or bp end,function()end)local bw;local function nv(nw)local lk=d3.routeWP(true)if lk and#lk>0 then return lk[1]end;local hB=dK+nw;if hB>#dB then hB=hB-#dB-1 end;if hB<0 then hB=#dB+hB end;return hB end;nx={}for bw=0,10 do local ny=mX(function(ed)local hB=nv(ed.apExtraIndex)if aU or bg or cA or bp then return"Redirect: "..lh(hB)end;return nm(hB)end,function(ed)local hB=nv(ed.apExtraIndex)return nn(hB)end,600,60,cQ/2-600/2,cR/2-60/2-330+60*bw,function(ed)local hB=nv(ed.apExtraIndex)return hB==bb and(aU or bg or cA or bp)end,function(ed)local hB=nv(ed.apExtraIndex)local nz=bb==hB;bb=hB;d2.UpdateAutopilotTarget()d3.ToggleAutopilot()if not nz and not(aU or bg or cA or bp)then d3.ToggleAutopilot()end end,function()return dJ and(#d3.routeWP(true)==0 or bw==0)end)ny.apExtraIndex=bw;nx[bw]=ny end;mX("Save Position","Save Position",200,nu.height,nu.x+nu.width+30,nu.y,function()return false end,nf,function()return bb==0 or li==nil end)mX("Update Position","Update Position",200,nu.height,nu.x+nu.width+30,nu.y,function()return false end,nk,function()return bb>0 and li~=nil end)mX("Clear Position","Clear Position",200,nu.height,nu.x-200-30,nu.y,function()return true end,nl,function()return bb>0 and li~=nil end)mX("Save Route","Save Route",200,nu.height,nu.x+nu.width+30,nu.y+nu.height+20,function()return false end,function()d3.routeWP(false,false,2)end,function()return#d3.routeWP(true)>0 end)mX("Load Route","Clear Route",200,nu.height,nu.x-200-30,nu.y+nu.height+20,function()return#d3.routeWP(true)>0 end,function()if#d3.routeWP(true)>0 then d3.routeWP(false,true)elseif aU or bg then ck="Disable Autopilot before loading route"return else d3.routeWP(false,false,1)end end,function()return true end)nb=60;nc=300;local e6=0;local e7=cR/2-150;mX("View Settings","View Settings",nc,nb,e6,e7,function()return true end,n8)e7=e7+nb+20;mX("Enable Turn and Burn","Disable Turn and Burn",nc,nb,e6,e7,function()return aV end,nh)e6=10;e7=cR/2-300;mX("Horizontal Takeoff Mode","Vertical Takeoff Mode",nc,nb,e6+nc+20,e7,function()return aQ end,function()aQ=not aQ;if aQ then ck="Vertical Takeoff Mode"else ck="Horizontal Takeoff Mode"end end,function()return dv end)e7=e7+nb+20;mX("Engage Orbiting","Cancel Orbiting",nc,nb,e6+nc+20,e7,function()return bp end,d3.ToggleIntoOrbit,function()return cF==0 and dG end)e7=cR/2-150;mX("Glide Re-Entry","Cancel Glide Re-Entry",nc,nb,e6+nc+20,e7,function()return aZ end,function()cz=1;ni(1)end,function()return iu.hasAtmosphere and not cE end)e7=e7+nb+20;mX("Parachute Re-Entry","Cancel Parachute Re-Entry",nc,nb,e6+nc+20,e7,function()return aZ end,d3.BeginReentry,function()return iu.hasAtmosphere and not cE end)e7=e7+nb+20;mX("Engage Follow Mode","Disable Follow Mode",nc,nb,e6,e7,function()return ci end,no,function()return bG()==1 end)mX("Enable Repair Arrows","Disable Repair Arrows",nc,nb,e6+nc+20,e7,function()return cW end,function()cW=not cW;if cW then ck="Repair Arrows Enabled"else ck="Repair Arrows Diabled"end end,function()return bG()==1 end)e7=e7+nb+20;if not q then mX("Enable AGG","Disable AGG",nc,nb,e6,e7,function()return dw end,d3.ToggleAntigrav,function()return antigrav~=nil end)end;mX(function()return bA("Switch IPH Mode - Current: %s",bq)end,function()return bA("IPH Mode: %s",bq)end,nc*2,nb,e6,e7,function()return false end,function()if bq=="All"then bq="Custom Only"elseif bq=="Custom Only"then bq="No Moons"else bq="All"end;ck="IPH Mode: "..bq end)e7=e7+nb+20;mX(function()return bA("Toggle Control Scheme - Current: %s",g)end,function()return bA("Control Scheme: %s",g)end,nc*2,nb,e6,e7,function()return false end,function()if g=="keyboard"then g="mouse"elseif g=="mouse"then g="virtual joystick"else g="keyboard"end;ck="New Control Scheme: "..g end)local nA=iw(20)local ny=mT(0,0,iv(70),nA,"HELP")ny=mT(ny.x+ny.width,ny.y,iv(80),nA,"INFO")ny=mT(ny.x+ny.width,ny.y,iv(70),nA,"ORBIT")ny=mT(ny.x+ny.width,ny.y,iv(70),nA,"SCOPE")mT(ny.x+ny.width,ny.y,iv(70),nA,"HIDE")end;local nB={}local nC=nil;function nB.HUDPrologue(jc)dC,dD=is(du)if not dC then b_=ab;c1=ac;c0=ad;if lr and G and lr.getState()==0 then lr.toggle()end else b_=a8;c1=a9;c0=aa;if lr and G and lr.getState()==1 then lr.toggle()end end;cM=[[rgb(]]..bz(b_+0.6)..","..bz(c1+0.6)..","..bz(c0+0.6)..[[)]]cN=[[rgb(]]..bz(b_*0.8+0.5)..","..bz(c1*0.8+0.5)..","..bz(c0*0.8+0.5)..[[)]]local nD=cM;local nE=cN;local nF=[[rgb(]]..bz(b_*0.4+0.5)..","..bz(c1*0.4+0.5)..","..bz(c0*0.4+0.5)..[[)]]local nG=cM;local nH=cN;local nI=nF;if ix()and not m then nD=[[rgb(]]..bz(b_*0.5+0.5)..","..bz(c1*0.5+0.5)..","..bz(c0*0.5+0.5)..[[)]]nE=[[rgb(]]..bz(b_*0.3+0.5)..","..bz(c1*0.3+0.5)..","..bz(c0*0.2+0.5)..[[)]]nF=[[rgb(]]..bz(b_*0.2+0.5)..","..bz(c1*0.2+0.5)..","..bz(c0*0.2+0.5)..[[)]]end;local l6=iv;local l7=iw;jc[#jc+1]=bA([[ <head> <style>body{margin: 0}svg{position:absolute;top:0;left:0;font-family:Montserrat;}.txt{font-size:10px;font-weight:bold;}.txttick{font-size:12px;font-weight:bold;}.txtbig{font-size:14px;font-weight:bold;}.altsm{font-size:16px;font-weight:normal;}.altbig{font-size:21px;font-weight:normal;}.line{stroke-width:2px;fill:none;stroke:%s}.linethick{stroke-width:3px;fill:none}.linethin{stroke-width:1px;fill:none}.warnings{font-size:26px;fill:red;text-anchor:middle;font-family:Bank;}.warn{fill:orange; font-size:24px}.crit{fill:darkred;font-size:28px}.bright{fill:%s;stroke:%s}text.bright{stroke:black; stroke-width:10px;paint-order:stroke;}.pbright{fill:%s;stroke:%s}text.pbright{stroke:black; stroke-width:10px;paint-order:stroke;}.dim{fill:%s;stroke:%s}text.dim{stroke:black; stroke-width:10px;paint-order:stroke;}.pdim{fill:%s;stroke:%s}text.pdim{stroke:black; stroke-width:10px;paint-order:stroke;}.red{fill:red;stroke:red}text.red{stroke:black; stroke-width:10px;paint-order:stroke;}.orange{fill:orange;stroke:orange}text.orange{stroke:black; stroke-width:10px;paint-order:stroke;}.redout{fill:none;stroke:red}.op30{opacity:0.3}.op10{opacity:0.1}.txtstart{text-anchor:start}.txtend{text-anchor:end}.txtmid{text-anchor:middle}.txtvspd{font-family:sans-serif;font-weight:normal}.txtvspdval{font-size:20px}.txtfuel{font-size:11px;font-weight:bold}.txtorb{font-size:12px}.txtorbbig{font-size:18px}.hudver{font-size:10px;font-weight:bold;fill:red;text-anchor:end;font-family:Bank}.msg{font-size:40px;fill:red;text-anchor:middle;font-weight:normal}.cursor{stroke:white}text{stroke:black; stroke-width:10px;paint-order:stroke;}.dimstroke{stroke:%s}.brightstroke{stroke:%s}.indicatorText{font-size:20px;fill:white}.size14{font-size:14px}.size20{font-size:20px}.topButton{fill:%s;opacity:0.5;stroke-width:2;stroke:%s}.topButtonActive{fill:url(#RadialGradientCenter);opacity:0.8;stroke-width:2;stroke:%s}.topButton text{font-size:13px; fill: %s; opacity:1; stroke-width:20px}.topButtonActive text{font-size:13px;fill:%s; stroke-width:0px; opacity:1}.indicatorFont{font-size:20px;font-family:Bank}.dimmer{stroke: %s;}.pdimfill{fill: %s;}.dimfill{fill: %s;}</style> </head> <body> <svg height="100%%" width="100%%" viewBox="0 0 %d %d"> <defs> <radialGradient id="RadialGradientCenterTop" cx="0.5" cy="0" r="1"> <stop offset="0%%" stop-color="%s" stop-opacity="0.5"/> <stop offset="100%%" stop-color="black" stop-opacity="0"/> </radialGradient> <radialGradient id="RadialGradientRightTop" cx="1" cy="0" r="1"> <stop offset="0%%" stop-color="%s" stop-opacity="0.5"/> <stop offset="200%%" stop-color="black" stop-opacity="0"/> </radialGradient> <radialGradient id="ThinRightTopGradient" cx="1" cy="0" r="1"> <stop offset="0%%" stop-color="%s" stop-opacity="0.2"/> <stop offset="200%%" stop-color="black" stop-opacity="0"/> </radialGradient> <radialGradient id="RadialGradientLeftTop" cx="0" cy="0" r="1"> <stop offset="0%%" stop-color="%s" stop-opacity="0.5"/> <stop offset="200%%" stop-color="black" stop-opacity="0"/> </radialGradient> <radialGradient id="ThinLeftTopGradient" cx="0" cy="0" r="1"> <stop offset="0%%" stop-color="%s" stop-opacity="0.2"/> <stop offset="200%%" stop-color="black" stop-opacity="0"/> </radialGradient> <radialGradient id="RadialGradientCenter" cx="0.5" cy="0.5" r="1"> <stop offset="0%%" stop-color="%s" stop-opacity="0.8"/> <stop offset="100%%" stop-color="%s" stop-opacity="0.5"/> </radialGradient> <radialGradient id="RadialPlanetCenter" cx="0.5" cy="0.5" r="0.5"> <stop offset="0%%" stop-color="%s" stop-opacity="1"/> <stop offset="100%%" stop-color="%s" stop-opacity="1"/> </radialGradient> <radialGradient id="RadialAtmo" cx="0.5" cy="0.5" r="0.5"> <stop offset="0%%" stop-color="%s" stop-opacity="1"/> <stop offset="66%%" stop-color="%s" stop-opacity="1"/> <stop offset="100%%" stop-color="%s" stop-opacity="0.1"/> </radialGradient> </defs> <g class="pdim txt txtend">]],nD,nD,nD,nG,nG,nE,nE,nH,nH,nE,nD,nF,nH,nD,nD,nF,nF,nI,nF,cQ,cR,nE,nE,nE,nE,nE,nG,nE,nH,nI,nH,nH,nI)if not nC then nC=bA([[<path class="linethick brightstroke" style="fill:url(#RadialGradientCenterTop);" d="M %f %f L %f %f L %f %f %f %f L %f %f"/>
                        <path class="linethick brightstroke" style="fill:url(#RadialGradientRightTop);" d="M %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f Z"/>
                        
                        <path class="linethick brightstroke" style="fill:url(#RadialGradientLeftTop);" d="M %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f Z"/>
                        
                        <clipPath id="headingClip">
                            <path class="linethick dimstroke" style="fill:black;fill-opacity:0.4;" d="M %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f Z"/>
                        </clipPath>
                        <path class="linethick dimstroke" style="fill:black;fill-opacity:0.4;" d="M %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f Z"/>]],l6(630),l7(0),l6(675),l7(45),l6(960),l7(55),l6(1245),l7(45),l6(1290),l7(0),l6(1000),l7(105),l6(1040),l7(59),l6(1250),l7(51),l6(1300),l7(0),l6(1920),l7(0),l6(1920),l7(20),l6(1400),l7(20),l6(1300),l7(105),l6(920),l7(105),l6(880),l7(59),l6(670),l7(51),l6(620),l7(0),l6(0),l7(0),l6(0),l7(20),l6(520),l7(20),l6(620),l7(105),l6(890),l7(59),l6(960),l7(62),l6(1030),l7(59),l6(985),l7(112),l6(1150),l7(112),l6(1100),l7(152),l6(820),l7(152),l6(780),l7(112),l6(935),l7(112),l6(890),l7(59),l6(960),l7(62),l6(1030),l7(59),l6(985),l7(112),l6(1150),l7(112),l6(1100),l7(152),l6(820),l7(152),l6(780),l7(112),l6(935),l7(112))end;if x and I then jc[#jc+1]=nC end;return jc end;function nB.DrawVerticalSpeed(jc,f2)jb(jc,f2)end;function nB.UpdateHud(jc)local k2=dz;local nJ=dA;local jk=nJ;local jA=k2;local kk=bz(c.getThrottle())local kp=dr*3.6;local kl=c.getAxisCommandValue(0)local nK=iv(1770)local nL=iw(310)if u and dy then kl=c2;kk=c2*100 end;local iz=iy()local jl="ROLL"if kk==nil then kk=0 end;if not dG then if dr>5 then k2=k1(dp)nJ=k3(dp)else k2=0;nJ=0 end;jl="YAW"end;if dD>50000 and not cE then local nM;nM=ef(dD)jc[#jc+1]=e5(nK,nL,"PvP Boundary: "..nM,"pbright txtbig txtmid")end;jc[#jc+1]=cy;jc[#jc+1]=cP;jc[#jc+1]=i4;if ik~=""then jc[#jc+1]=ik end;if iA~=""then jc[#jc+1]=iA end;if iB~=""then jc[#jc+1]=iB end;jb(jc,cG)if bG()==0 or l then if dG then jj(jc,ae,af,jk,jl,dG)else jj(jc,ae,af,nJ,jl,dG)end;if not ix()or m then if dG then jj(jc,ae,af,jk,jl,dG)jz(jc,jA,jk,ae,af,dG,bz(k3(dp)),dr)else jj(jc,ae,af,nJ,jl,dG)jz(jc,k2,nJ,ae,af,dG,bz(nJ),dr)end;jG(jc,cG,dG)k4(jc,dp,dr,ae,af)end end;kj(jc,iz,kk,kl)ko(jc,kp)ks(jc)ls(jc)if not ii and cj then lj(jc)end;return jc end;function nB.HUDEpilogue(jc)jc[#jc+1]="</svg>"return jc end;function nB.ExtraData(jc)local nN=iv(1240)local nO=iw(55)local nP=nO+10;local nQ;local l6=iv;local l7=iw;local nR=0;local iz=iy()if aQ then iz=iz.."-VERTICAL"end;if F and not aY and not aX and dr>20 then iz=iz.."-COLLISION ON"end;if bs~="Off"then iz="("..bs..")-"..iz end;if aV then iz="TB-"..iz end;if not br then iz=iz.."-DeCoupled"end;local nS=l7(99)local nT=l7(80)local nU=l7(85)local nV=l7(31)local nW=0;local nX=0;local nY=cJ>1000000 and bT(cJ/1000000,2).."kT"or bT(cJ/1000,2).."T"if cE then nR=bk else nR=bi end;local nZ,n_=cZ.computeDistanceAndTime(dr,0,cJ,0,0,nR)if nZ<0 then nZ=0 end;nR=bT(nR/(cJ*ia),2).."g"local o0=d:maxForceForward()nQ=b.g()if nQ>0.1 then nX=cJ*nQ;nX=bT(nX/(cJ*ia),2).."g"nW=0.5*o0/nQ;nW=nW>1000000 and bT(nW/1000000,2).."kT"or bT(nW/1000,2).."T"end;o0=bT(o0/(cJ*ia),2).."g"local o1=vec3(b.getWorldAcceleration()):len()/9.80665;nQ=b.g()jc[#jc+1]=[[<g class="dim txt txtend size14">]]if bG()==1 and not l then nN=iv(1120)nO=iw(55)nP=nO+10 elseif cE and I then local o2=iv(770)jc[#jc+1]=e5(l6(895),nS,"ATMO","")jc[#jc+1]=bA([[<path class="linethin dimstroke"  d="M %f %f l %f 0"/>]],l6(895),nU,l6(-80))jc[#jc+1]=e5(l6(815),nT,bA("%.1f%%",cF*100),"txtstart size20")end;if I then jc[#jc+1]=e5(l6(1025),nS,"GRAVITY","txtstart")jc[#jc+1]=bA([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],l6(1025),nU,l6(80))jc[#jc+1]=e5(l6(1105),nT,bA("%.2fg",nQ/9.80665),"size20")jc[#jc+1]=e5(l6(1125),nS,"ACCEL","txtstart")jc[#jc+1]=bA([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],l6(1125),nU,l6(80))jc[#jc+1]=e5(l6(1205),nT,bA("%.2fg",o1),"size20")jc[#jc+1]=e5(l6(695),nS,"BRK TIME","")jc[#jc+1]=bA([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],l6(695),nU,l6(-80))jc[#jc+1]=e5(l6(615),nT,bA("%s",ei(n_)),"txtstart size20")jc[#jc+1]=e5(l6(635),l7(45),"TRIP","")jc[#jc+1]=bA([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],l6(635),l7(31),l6(-90))if l0 then jc[#jc+1]=e5(l6(532),l7(23),bA("%s",ei(l0)),"txtstart size20")end;jc[#jc+1]=e5(l6(795),nS,"BRK DIST","")jc[#jc+1]=bA([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],l6(795),nU,l6(-80))jc[#jc+1]=e5(l6(715),nT,bA("%s",ef(nZ)),"txtstart size20")jc[#jc+1]=e5(l6(1285),l7(45),"MASS","txtstart")jc[#jc+1]=bA([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],l6(1285),l7(31),l6(90))jc[#jc+1]=e5(l6(1388),l7(23),bA("%s",nY),"size20")jc[#jc+1]=e5(l6(1220),nS,"THRUST","txtstart")jc[#jc+1]=bA([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],l6(1220),nU,l6(80))jc[#jc+1]=e5(l6(1300),nT,bA("%s",o0),"size20")jc[#jc+1]=e5(iv(960),iw(175),iz,"pbright txtbig txtmid size20")end;jc[#jc+1]="</g>"end;function nB.DrawOdometer(jc,cr,bd,cs)if bx~="INFO"then return jc end;local nQ;local nW=0;local nX=0;local nR=0;local nY=cJ>1000000 and bT(cJ/1000000,2).." kTons"or bT(cJ/1000,2).." Tons"if cE then nR=bk else nR=bi end;local nZ,n_=cZ.computeDistanceAndTime(dr,0,cJ,0,0,nR)nR=bT(nR/(cJ*ia),2).." g"local o0=d:maxForceForward()nQ=b.g()if nQ>0.1 then nX=cJ*nQ;nX=bT(nX/(cJ*ia),2).." g"nW=0.5*o0/nQ;nW=nW>1000000 and bT(nW/1000000,2).." kTons"or bT(nW/1000,2).." Tons"end;o0=bT(o0/(cJ*ia),2).." g"if bG()==0 or l then local o3=iv(as+10)local o4=iw(at+20)local o5=iv(as+10+ar/1.25)local mV=25;jc[#jc+1]="<g class='txtstart size14 bright'>"jc[#jc+1]=e5(o3,o4,bA("BrkTime: %s",ei(n_)))jc[#jc+1]=e5(o5,o4,bA("Trip: %.2f km",cr))jc[#jc+1]=e5(o3,o4+mV,bA("Lifetime: %.2f kSU",bd/200000))jc[#jc+1]=e5(o5,o4+mV,bA("BrkDist: %s",ef(nZ)))jc[#jc+1]=e5(o3,o4+mV*2,"Trip Time: "..ei(cs))jc[#jc+1]=e5(o5,o4+mV*2,"Total Time: "..ei(be))jc[#jc+1]=e5(o3,o4+mV*3,bA("Mass: %s",nY))jc[#jc+1]=e5(o5,o4+mV*3,bA("Max Brake: %s",nR))jc[#jc+1]=e5(o3,o4+mV*4,bA("Max Thrust: %s",o0))if nQ>0.1 then jc[#jc+1]=e5(o5,o4+mV*4,bA("Max Thrust Mass: %s",nW))jc[#jc+1]=e5(o3,o4+mV*5,bA("Req Thrust: %s",nX))else jc[#jc+1]=e5(o5,o4+mV*5,"Max Mass: n/a")jc[#jc+1]=e5(o3,o4+mV*6,"Req Thrust: n/a")end end;jc[#jc+1]="</g></g>"return jc end;function nB.DrawWarnings(jc)return ks(jc)end;function nB.DisplayOrbitScreen(jc)return ls(jc)end;function nB.DisplayMessage(jc,kO)if kO~="empty"then local e7=310;for o6 in string.gmatch(kO,"([^\n]+)")do e7=e7+35;jc[#jc+1]=e5("50%",e7,o6,"msg")end end;if cw~=0 then c.setTimer("msgTick",cw)cw=0 end end;function nB.DrawDeadZone(jc)jc[#jc+1]=bA([[<circle class="dim line" style="fill:none" cx="50%%" cy="50%%" r="%d"/>]],aq)end;function nB.UpdatePipe()if cE then ik=""return end;mK()end;function nB.DrawSettings(jc)if#ij>0 then local e6=iv(640)local e7=iw(200)jc[#jc+1]=[[<g class="pbright txtvspd txtstart">]]for dX,dY in pairs(ij)do jc[#jc+1]=e5(e6,e7,dY..": ".._G[dY])e7=e7+20;if dX%12==0 then e6=e6+iv(350)e7=iw(200)end end;jc[#jc+1]=e5(iv(640),iw(200)+260,"To Change: In Lua Chat, enter /G VariableName Value")jc[#jc+1]="</g>"end;return jc end;local i6;local i1=iv(1770)local i2=iw(350)local i0=iw(15)local h_=iv(1370)local i5,o7;local i7=0;function nB.DrawRadarInfo()i4=d4.GetRadarHud(h_,i0,i1,i2)end;function nB.DrawTanks()if am~=0 and an~=0 then iA=e5(am,an,"","txtstart pdim txtfuel")iY=an;iR(am,"Atmospheric ","ATMO",cS,iP,iQ)iR(am,"Space Fuel T","SPACE",cT,iN,iO)iR(am,"Rocket Fuel ","ROCKET",cU,iL,iM)end end;function nB.DrawShield()local o8=lr.getState()==1 and"Shield Active"or"Shield Disabled"local o9=b.getPvPTimer()local oa=lr.getResistances()local ob="A: "..10+oa[1]*100 .."% / E: "..10+oa[2]*100 .."% / K:"..10+oa[3]*100 .."% / T: "..10+oa[4]*100 .."%"local e6,e7=ao-60,ap+30;local oc=bz(0.5+lr.getShieldHitpoints()*100/lr.getMaxShieldHitpoints())local j5=bz(oc*2.55)local j6=bA("rgb(%d,%d,%d)",255-j5,j5,0)local e9=""iB=e5(e6,e7,"","txtmid pdim txtfuel")if oc<10 and o8~="Shield Disabled"then e9="red "end;o9=o9>0 and"   PvPTime: "..ei(o9)or""iB=iB..bA([[
                        <g class="pdim">                        
                        <rect fill=grey class="bar" x="%d" y="%d" width="200" height="13"></rect></g>
                        <g class="bar txtstart">
                        <rect fill=%s width="%d" height="13" x="%d" y="%d"></rect>
                        <text fill=black x="%d" y="%d">%s%%%s</text>
                        </g>]],e6,e7,j6,oc*2,e6,e7,e6+2,e7+10,oc,o9)iB=iB..e5(e6,e7-5,o8,e9 .."txtstart pbright txtbig")iB=iB..e5(e6,e7+30,ob,e9 .."txtstart pbright txtsmall")end;function nB.hudtick()if not iu then return end;local function od(jc)local j8=bz(bK(cx/(cQ/4)*255,0,255))jc[#jc+1]=bA("<line x1='0' y1='0' x2='%fpx' y2='%fpx' style='stroke:rgb(%d,%d,%d);stroke-width:2;transform:translate(50%%, 50%%)' />",cu,cv,bz(b_+0.5)+j8,bz(c1+0.5)-j8,bz(c0+0.5)-j8)end;local function oe()for eO,dY in pairs(ib)do if dY.hovered then if not dY.drawCondition or dY.drawCondition(dY)then dY.toggleFunction(dY)end;dY.hovered=false end end;for eO,dY in pairs(dL)do if dY.hovered then bx=dY.label;dY.hovered=false end end end;local function of()local function og(oh,oi,e6,e7,mU,mV)if oh>=e6 and oh<=e6+mU and oi>=e7 and oi<=e7+mV then return true else return false end end;local e6=cu+cQ/2;local e7=cv+cR/2;for eO,dY in pairs(ib)do dY.hovered=og(e6,e7,dY.x,dY.y,dY.width,dY.height)end;for eO,dY in pairs(dL)do dY.hovered=og(e6,e7,dY.x,dY.y,dY.width,dY.height)end;if dJ then local mz=false;for eO,ed in ipairs(nx)do if ed.hovered then mz=true;break end end;if nu.hovered then mz=true end;dJ=mz else dJ=nu.hovered;if not dJ then dK=bb end end end;local function oj(jc)if not bx or bx==""then bx="HELP"end;if x then for dX,dY in pairs(dL)do local e9="dim brightstroke"local ok=0.2;if bx==dX then e9="pbright dimstroke"ok=0.6 end;local ol=""if dY.hovered then ok=0.8;ol=";stroke:white"end;jc[#jc+1]=bA([[<rect width="%f" height="%d" x="%d" y="%d" clip-path="url(#round-corner)" class="%s" style="stroke-width:1;fill-opacity:%f;%s" />]],dY.width,dY.height,dY.x,dY.y,e9,ok,ol)jc[#jc+1]=e5(dY.x+dY.width/2,dY.y+dY.height/2+5,dY.label,"txt txtmid pdim")end end end;local function om(jc)local function on(jc,oo,hover,e6,e7,gc,op,oq,os,ot,ou,ny)if type(ot)=="function"then ot=ot(ny)end;if type(ou)=="function"then ou=ou(ny)end;jc[#jc+1]=bA("<rect x='%f' y='%f' width='%f' height='%f' fill='",e6,e7,gc,op)if oo then jc[#jc+1]=bA("%s'",oq)else jc[#jc+1]=os end;if hover then jc[#jc+1]=bA(" style='stroke:rgb(%d,%d,%d); stroke-width:2'",a8,a9,aa)else jc[#jc+1]=bA(" style='stroke:rgb(%d,%d,%d); stroke-width:1'",bT(a8*0.5,0),bT(a9*0.5,0),bT(aa*0.5,0))end;jc[#jc+1]=" rx='5'></rect>"jc[#jc+1]=bA("<text x='%f' y='%f' font-size='24' fill='",e6+gc/2,e7+op/2+5)if oo then jc[#jc+1]="black"else jc[#jc+1]="white"end;jc[#jc+1]="' text-anchor='middle' font-family='Play' style='stroke-width:0px;'>"if oo then jc[#jc+1]=bA("%s</text>",ot)else jc[#jc+1]=bA("%s</text>",ou)end end;local ov=bA("rgb(%d,%d,%d)'",bT(a8*0.1,0),bT(a9*0.1,0),bT(aa*0.1,0))local ow=bA("rgb(%d,%d,%d)",bT(a8*0.8,0),bT(a9*0.8,0),bT(aa*0.8,0))local ox=on;for eO,dY in pairs(ib)do local mZ=dY.disableName;local mY=dY.enableName;if type(mZ)=="function"then mZ=mZ(dY)end;if type(mY)=="function"then mY=mY(dY)end;if not dY.drawCondition or dY.drawCondition(dY)then ox(jc,dY.toggleVar(dY),dY.hovered,dY.x,dY.y,dY.width,dY.height,ow,ov,mZ,mY,dY)end end end;local oy=bT(cQ/2,0)local oz=bT(cR/2,0)local jc={}d1.HUDPrologue(jc)if x then d1.UpdateHud(jc)else if B then d1.DrawVerticalSpeed(jc,cG)end;d1.DrawWarnings(jc)end;if ii and ij~={}then d1.DrawSettings(jc)end;if radar_1 then d1.DrawRadarInfo()end;d1.HUDEpilogue(jc)jc[#jc+1]=bA([[<svg width="100%%" height="100%%" style="position:absolute;top:0;left:0"  viewBox="0 0 %d %d">]],cQ,cR)if ck~="empty"then d1.DisplayMessage(jc,ck)end;if bG()==0 and g=="virtual joystick"then if w then d1.DrawDeadZone(jc)end end;oj(jc)if bQ()==0 then if bG()==1 and cj then if not oA then of()om(jc)end;if not d6 and not d7 then local oB=table.concat(jc,"")jc={}jc[#jc+1]=bA("<style>@keyframes test { from { opacity: 0; } to { opacity: 1; } }  body { animation-name: test; animation-duration: 0.5s; }</style><body><svg width='100%%' height='100%%' position='absolute' top='0' left='0'><rect width='100%%' height='100%%' x='0' y='0' position='absolute' style='fill:rgb(6,5,26);'/></svg><svg width='50%%' height='50%%' style='position:absolute;top:30%%;left:25%%' viewbox='0 0 %d %d'>",cQ,cR)jc[#jc+1]=oB;jc[#jc+1]="</body>"d6=true;jc[#jc+1]=[[</svg></body>]]c.setTimer("animateTick",0.5)local oC=table.concat(jc,"")a.setScreen(oC)elseif d7 then local oB=table.concat(jc,"")jc={}jc[#jc+1]=bA("<body style='background-color:rgb(6,5,26)'><svg width='50%%' height='50%%' style='position:absolute;top:30%%;left:25%%' viewbox='0 0 %d %d'>",cQ,cR)jc[#jc+1]=oB;jc[#jc+1]="</body>"end;if not d6 then jc[#jc+1]=bA([[<g transform="translate(%d %d)"><circle class="cursor" cx="%fpx" cy="%fpx" r="5"/></g>]],oy,oz,cu,cv)end else oe()end else if not cj and bG()==0 then oe()if cx>aq then if w then od(jc)end end elseif cj and(not oA or not i)then of()om(jc)end;jc[#jc+1]=bA([[<g transform="translate(%d %d)"><circle class="cursor" cx="%fpx" cy="%fpx" r="5"/></g>]],oy,oz,cu,cv)end;jc[#jc+1]=[[</svg></body>]]oC=table.concat(jc,"")end;function nB.TenthTick()d1.DrawTanks()if lr then d1.DrawShield()end end;function nB.OneSecond(jc)local function oD()local j1=bJ()local kp=dr;local oE=j1-cI;if kp>1.38889 then kp=kp/1000;local oF=kp*(j1-cI)bd=bd+oF;cr=cr+oF end;cs=cs+oE;be=be+oE;cI=j1 end;oD()d1.UpdatePipe()d1.ExtraData(jc)end;function nB.ButtonSetup()n9()ne()ib=ic end;return nB end;local function oG()local function oH(ng)local eY=oI:closestBody(ng)if(ng-eY.center):len()>eY.radius+eY.noAtmosphericDensityAltitude then eY=e[0][0]end;return eY end;local function oJ()local function oK(oL,oM)return oL.name<oM.name end;dB={}for dX,dY in pairs(e[0])do dB[#dB+1]={name=dY.name,index=dX}end;table.sort(dB,oK)end;local function oN(oO)for dX,dY in pairs(oO)do if dY.name and dY.name==li.name then return dX end end;return-1 end;local function oP()dK=bb;if bb==0 then b9="None"cq=nil;li=nil;return true end;local oQ=dB[bb].index;local oR=e[0][oQ]if oR.center then b9=oR.name;cq=cY[0][oQ]if li~=nil then if cF==0 then if bN(oS,oT)~=1 then bO(oS,oT)end;if bN(oU,oV)~=1 then bO(oU,oV)end;if bN(oW,oX)~=1 then bO(oW,oX)end;if bN(oY,oZ)~=1 then bO(oY,oZ)end;if bN(o_,p0)~=1 then bO(o_,p0)end end;if bN(p1,p2)~=1 then bO(p1,p2)end;if bN(p3,p4)~=1 then bO(p3,p4)end;if bN(p5,p6)~=1 then bO(p5,p6)end end;li=nil else li=oR;for eO,dY in pairs(cY[0])do if dY.name==li.planetname then cq=dY;b9=li.name;break end end;if bN(p1,p2)~=1 then bO(p1,p2)end;if bN(p3,p4)~=1 then bO(p3,p4)end end;if li==nil then ba=vec3(cq.center)else ba=li.position end;if cq.planetname~="Space"then if cq.hasAtmosphere then p7=bz(cq.radius*(Q-1)+cq.noAtmosphericDensityAltitude)else p7=bz(cq.radius*(Q-1)+cq.surfaceMaxAltitude)end else p7=P end;if li~=nil and li.planetname=="Space"then b5=0 else eO,b5=d0(cq):escapeAndOrbitalSpeed(p7)end;b7=0;b1=false;b3=false;b4=false;aU=false;b2=false;b6="Aligning"return true end;local function p8(jg)if not aU and not bg and not cA and not bp and not aZ and not cB then if jg==nil then bb=bb+1;if bb>#dB then bb=0 end else bb=bb-1;if bb<0 then bb=#dB end end;if bb==0 then oP()else local oQ=dB[bb].index;local oR=e[0][oQ]if oR~=nil and oR.name=="Space"or bq=="Custom Only"and oR.center or bq=="No Moons"and string.find(oR.name,"Moon")~=nil then if jg==nil then p8()else p8(1)end else oP()end end else ck="Disengage autopilot before changing Interplanetary Helper"dR("iph","AP")end end;local function nl()local hB=-1;hB=oN(e[0])if hB>-1 then table.remove(e[0],hB)end;hB=-1;hB=oN(bf)if hB~=-1 then ck=li.name.." saved location cleared"table.remove(bf,hB)end;p8()oJ()end;local function nf(hQ,ng,jZ,p9)if dbHud_1 or jZ then local eY=oH(ng)local nQ=eY.gravity;if p9 then nQ=c.getClosestPlanetInfluence()end;local pa={position=ng,name=hQ,planetname=eY.name,gravity=nQ,safe=p9}if not jZ then bf[#bf+1]=pa else for dX,dY in pairs(e[0])do if dY.name and hQ==dY.name then table.remove(e[0],dX)end end end;table.insert(e[0],pa)oJ()oP()ck="Location saved as "..hQ.."("..eY.name..")"else ck="Databank must be installed to save permanent locations"end end;local pb={}function pb.UpdateAtlasLocationsList()oJ()end;function pb.UpdateAutopilotTarget()oP()end;function pb.adjustAutopilotTargetIndex(jg)p8(jg)end;function pb.findAtlasIndex(oO)oN(oO)end;function pb.UpdatePosition(pc)local hB=oN(bf)if hB~=-1 then if pc~=nil then bf[hB].name=pc;bb=bb-1;p8()else local pd=bf[hB]pd.gravity=c.getClosestPlanetInfluence()pd.position=du;pd.safe=true end;ck=bf[hB].name.." position updated ("..bf[hB].planetname..")"else ck="Name Not Found"end end;function pb.AddNewLocation(hQ,ng,jZ,p9)nf(hQ,ng,jZ,p9)end;function pb.ClearCurrentPosition()nl()end;for dX,dY in pairs(bf)do table.insert(e[0],dY)end;oJ()if bb>#dB then bb=0 end;pb.UpdateAutopilotTarget()return pb end;local function pe()local pf={}local function pg(gj)local ph=b5;if not aU then ph=0 end;if not cE then return cZ.computeDistanceAndTime(gj,ph,cJ,0,0,bi-b7*cJ)else if bk and bk>0 then return cZ.computeDistanceAndTime(gj,ph,cJ,0,0,bk-b7*cJ)else return 0,0 end end end;local function pi(gj)local ph=b5;if not aU then ph=0 end;return cZ.computeDistanceAndTime(gj,ph,cJ,d:maxForceForward(),_,bi-b7*cJ)end;local pj=false;local pk=0;local pl=0;local pm=0;local pn=bJ()local po=0;local pp=0;local pq=0;local pr=0;local ps=false;local pt=false;local pu=false;local pv=nil;local pw=0;local px={}function pf.GetAutopilotBrakeDistanceAndTime(gj)return pg(gj)end;function pf.GetAutopilotTBBrakeDistanceAndTime(gj)return pi(gj)end;local function py(pz,pA,pB)pA=pA:project_on_plane(pz)pB=pB:project_on_plane(pz)return bH(pA:cross(pB):dot(pz),pA:dot(pB))end;local function pC()local function pD()local pE=-1;local pF=-1;if vBooster then pE=vBooster.getDistance()end;if hover then pF=hover.getDistance()end;if pE~=-1 and pF~=-1 then if pE<pF then return pE else return pF end elseif pE~=-1 then return pE elseif pF~=-1 then return pF else return-1 end end;local pG=pD()local pH=-1;if pI then pH=pI.getDistance()end;if pG~=-1 and pH~=-1 then if pG<pH then return pG else return pH end elseif pG~=-1 then return pG else return pH end end;local function pJ(iu,fG,pK)local function pL(pM,eV)local fM=vec3(eV)if pM.id==0 then return setmetatable({latitude=fM.x,longitude=fM.y,altitude=fM.z,id=0,systemId=pM.systemId},eX)end;local fN=fM-pM.center;local cx=fN:len()local f2=cx-pM.radius;local f0=0;local f1=0;if not eb(cx,0)then local fO=bH(fN.y,fN.x)f1=fO>=0 and fO or 2*math.pi+fO;f0=math.pi/2-math.acos(fN.z/cx)end;return setmetatable({latitude=math.deg(f0),longitude=math.deg(f1),altitude=f2,id=pM.id,systemId=pM.systemId},eX)end;local pN=pL(iu,fG)pN="::pos{"..pN.systemId..","..pN.id..","..pN.latitude..","..pN.longitude..","..pN.altitude.."}"if pK then return pN else a.setWaypoint(pN)return true end end;local pO=false;function pf.changeSpd(pP)local bW=1;if pP then bW=-1 end;if not cj then if u and not oA and cK then local pQ=c2;c2=bT(bK(c2+bW*av/100,-1,1),2)if c2>=0 and pQ<0 then c2=0;cK=false end elseif oA then if cF>0 or aZ then dc=bK(dc+bW*av,0,S)elseif aU then Y=bK(Y+bW*av/3.6*100,0,8333.00)end else bL:updateCommandFromActionStart(axisCommandId.longitudinal,bW*av)end else if aU or bg or cA or bp then dK=dK+1*bW*-1;if dK>#dB then dK=1 end;if dK<1 then dK=#dB end else if not pP then bW=1 else bW=nil end;d2.adjustAutopilotTargetIndex(bW)end end end;function pf.showWayPoint(iu,fG,pK)return pJ(iu,fG,pK)end;function pf.APTick()local function pR()if dI and not aX then local fp=dI[1]local hR,hS=dI[2],dI[3]local pS=math.min(hR,hS or hR)local pT=pS/dr;local pU=aY and(dr<42 or cC~=-1)local pV=aW or bg or bj or aU;if pV and not pU and(cm*1.5>pS or pT<1)then aR=true;d3.cmdThrottle(0)if aW then d3.ToggleAltitudeHold()end;if bj then pW()end;ck="Autopilot Cancelled due to possible collision"if bg or aU then px={}d3.ToggleAutopilot()end;kV=true;aX=true;d8=true end;if pT<11 then dH=fp.name.." COLLISION "..ei(pT).." / "..ef(pS,2)else dH=fp.name.." collision "..ei(pT)end;if pT<6 then dR("alarm","AL",2)end else dH=false end end;local function pX(pY,pZ,p_)local function q0(pY,fr)pY=vec3(pY)fr=vec3(fr):normalize()local eF=pY*fr;return eF.x+eF.y+eF.z end;local q1=0.001;local q2=1;if not cE or not da or cC~=-1 or dr<c8 then if p_==nil then p_=aJ end;if pZ==nil then pZ=q1 end;pY=vec3(pY):normalize()local q3=vec3()-pY;local q4=-q0(q3,b.getConstructWorldOrientationRight())*q2;local q5=-q0(q3,b.getConstructWorldOrientationUp())*q2;if pl==0 then pl=q4/2 end;if pm==0 then pm=q5/2 end;if by(q4)<0.1 then cd=cd-q4*2 else cd=cd-(q4+(q4-pl)*p_)end;if by(q5)<0.1 then cc=cc+q5*2 else cc=cc+q5+(q5-pm)*p_ end;pl=q4;pm=q5;if by(q4)<pZ and by(q5)<pZ then return true end;return false elseif da and cC==-1 then pY=dq;if p_==nil then p_=aJ end;if pZ==nil then pZ=q1 end;pY=vec3(pY):normalize()local q3=dm-pY;local q4=-q0(q3,b.getConstructWorldOrientationRight())*q2;local q5=-q0(q3,b.getConstructWorldOrientationUp())*q2;if pl==0 then pl=q4/2 end;if pm==0 then pm=q5/2 end;if by(q4)<0.1 then cd=cd-q4*5 else cd=cd-(q4+(q4-pl)*p_)end;if by(q5)<0.1 then cc=cc+q5*5 else cc=cc+q5+(q5-pm)*p_ end;pl=q4;pm=q5;if by(q4)<pZ and by(q5)<pZ then return true end;return false end end;cE=bE()>0;cF=bE()cG=b.getAltitude()cC=pC()bX=bJ()pn=bX;if F then pR()end;if antigrav then dw=antigrav.getState()==1 end;local q6=1;local q7=1;local q8=bX-pn;local q9=-math.deg(py(dl,dq,dm))local qa=math.deg(py(dn,dq,dm))local jg=ds*-1;da=cE and q9<-J or q9>J or qa<-K or qa>K;local qb=a.getMouseDeltaX()local qc=a.getMouseDeltaY()if o and not cj then qc=-qc end;cd=0;ch=0;cc=0;oI=cY[0]iu=oI:closestBody(b.getConstructWorldPos())qd=d0(iu)gn=qd:orbitalParameters(b.getConstructWorldPos(),dq)if cG==0 then cG=(du-iu.center):len()-iu.radius end;dG=c.getClosestPlanetInfluence()>0 or cG>0 and cG<200000;local nQ=iu:getGravity(b.getConstructWorldPos()):len()*cJ;db=0;c_=b.getMaxKinematicsParametersAlongAxis("ground",b.getConstructOrientationUp())[1]if bQ()==0 then if bG()==1 and cj then if not d6 then cu=bK(cu+qb,-cQ/2,cQ/2)cv=bK(cv+qc,-cR/2,cR/2)end else cu=0;cv=0 end else cu=bK(cu+qb,-cQ/2,cQ/2)cv=bK(cv+qc,-cR/2,cR/2)cx=bR(cu*cu+cv*cv)if not cj and bG()==0 then local kb,kc=1,1;if bx=="SCOPE"then kb,kc=dP/90,dP/90 end;if g=="virtual joystick"then if cu>0 and cu>aq then cd=cd-(cu-aq)*ax*kb elseif cu<0 and cu<aq*-1 then cd=cd-(cu+aq)*ax*kb else cd=0 end;if cv>0 and cv>aq then cc=cc-(cv-aq)*ay*kc elseif cv<0 and cv<aq*-1 then cc=cc-(cv+aq)*ay*kc else cc=0 end else cu=0;cv=0;if g=="mouse"then cc=(-utils.smoothstep(qc,-100,100)+0.5)*2*q6;cd=(-utils.smoothstep(qb,-100,100)+0.5)*2*q7 end end end end;local qe=dr>8334;if dr>T/3.6 and not cE and not aU and not qe then ck="Space Speed Engine Shutoff reached"d3.cmdThrottle(0)end;if not qe and qf then if not aR then d3.BrakeToggle()end;if aU then d3.ToggleAutopilot()end end;qf=qe;if cE and cF>0.09 then if dr>dc/3.6 and not u and not pj then aR=true;pj=true elseif not u and pj then if dr<dc/3.6 then aR=false;pj=false end end end;if aR then cg=1 else cg=0 end;if aT then if cz then aR=false;local qg=false;if li and cz~=1 then qg=pX(li.position-du,0.1)else qg=pX(vec3(dq),0.01)end;d8=true;if qg then d3.cmdCruise(bz(dc))if(by(dA)<2 or by(dz)>85)and dr>=dc/3.6-1 then aR=false;aT=false;c9=true;if cz~=1 then cB=true end;cz=false;aU=false;d3.BeginReentry()end elseif cE and u then d3.cmdThrottle(1)end elseif dr>c8 then pX(vec3(dq),0.01)end end;if aS then if cE then aS=false elseif dr>c8 then pX(-vec3(dq))end end;if not aT and cz and not bp then if cF==0 then c9=true;d3.BeginReentry()cz=false;cB=true else cz=false;d3.ToggleAutopilot()end end;if cB and li and(cG<b0+250 and cG>b0-250)and dr*3.6>dc-250 and by(dt)<25 and cF>=0.1 and(li.position-du):len()>2000+cG then d3.ToggleAutopilot()cB=false end;if a_ then d8=true;local qh=b0;if dt<-30 then ck="Unable to achieve lift. Safety Landing."ct=0;d8=p;a_=false;aX=true elseif not q and dw or b0<iu.spaceEngineMinAltitude then if dw then qh=antigrav.getBaseAltitude()end;if cG<qh-100 then dd=0;ct=15;aR=false elseif dt>0 then aR=true;ct=0 elseif dt<-30 then aR=true;ct=15 elseif cG>=qh then if dw then if aU or bg then d3.ToggleVerticalTakeoff()else aR=true;a_=false end;ck="Takeoff complete. Singularity engaged"dR("aggLk","AG")else aR=false;ck="VTO complete. Engaging Horizontal Flight"dR("vtoc","VT")d3.ToggleVerticalTakeoff()end;ct=0 end else if cF>0.08 then dd=0;aR=false;ct=20 elseif cF<0.08 and cF>0 then aR=false;if dj then dd=0;ct=20 else ct=0;dd=36;d3.cmdCruise(3500)end else d8=p;bp=true;dh=false;qi=false;ps=false;pq=nil;pr=nil;if pv==nil then pv=iu end;dg=qh;pu=true;a_=false end end;if dd~=nil then if qj==nil then qj=pid.new(2*0.01,0,2*0.1)end;local qk=bK(dd-dz,-K*0.80,K*0.80)qj:inject(qk)local ql=bK(qj:get(),-1,1)cc=ql end end;if bp then local q3;local qm=false;local qn=ef(dg)if pv==nil then pv=iu;if bg then pv=cq end end;if not pu then dg=bz(pv.radius+pv.surfaceMaxAltitude+R)if pv.hasAtmosphere then dg=bz(pv.radius+pv.noAtmosphericDensityAltitude+R)end;pu=true end;if df.VectorToTarget and li then q3=li.position-du end;local qo,qp=d0(pv):escapeAndOrbitalSpeed((du-pv.center):len()-pv.radius)local qq=dA;if not ps then local qr=false;local qs=false;d3.cmdThrottle(0)pr=0;de="Aligning to orbital path - OrbitHeight: "..qn;if df.VectorToTarget then pX(q3:normalize():project_on_plane(ds))qm=dm:dot(q3:project_on_plane(dl):normalize())>0.95 else pX(dq)qm=q9<0.5;if dr<150 then qm=true end end;cc=0;pq=0;if dz<=pq+1 and dz>=pq-1 then qr=true else qr=false end;if qq<=pr+1 and qq>=pr-1 then qs=true else qs=false end;if qr and qs and qm then pq=nil;pr=nil;ps=true end else if df.VectorToTarget then pX(q3:normalize():project_on_plane(ds))elseif dr>150 then pX(dq)end;cc=0;if df.VectorToTarget and li then local cm,eO=cZ.computeDistanceAndTime(dr,dc/3.6,cJ,0,0,bi)if dh and q3:len()>15000+cm+cG then de="Orbiting to Target"if cG-100<=pv.noAtmosphericDensityAltitude or l0>gn.timeToPeriapsis and gn.periapsis.altitude<pv.noAtmosphericDensityAltitude then dh=false end elseif dh or q3:len()<15000+cm+cG then ck="Orbit complete, proceeding with reentry"dR("orCom","OB")ba=li.position;c9=true;cB=true;df.VectorToTarget,df.AutopilotAlign=false,false;d3.ToggleIntoOrbit()d3.BeginReentry()return end end;if gn.periapsis~=nil and gn.apoapsis~=nil and gn.eccentricity<1 and cG>dg*0.9 and cG<dg*1.4 then if gn.apoapsis~=nil then if gn.periapsis.altitude>=dg*0.99 and gn.apoapsis.altitude>=dg*0.99 and gn.periapsis.altitude<gn.apoapsis.altitude and gn.periapsis.altitude*1.05>=gn.apoapsis.altitude or dh then if dh then aR=false;d3.cmdThrottle(0)pq=0;if not df.VectorToTarget then ck="Orbit complete"dR("orCom","OB")d3.ToggleIntoOrbit()end else pw=pw+1;if pw>=2 then dh=true end end else de="Adjusting Orbit - OrbitHeight: "..qn;pt=true;d3.cmdCruise(qp*3.6+1)local qt=dg-cG;if qu==nil then qu=pid.new(0.1,0,1*0.1)end;qu:inject(qt-dt*bK(utils.smoothstep(2000-qt,-2000,2000)^6*10,1,10))pq=bK(qu:get(),-60,60)end end else local qv=2.75;local qw=by(bT(qo*qv))local qx=qw%50;if qx>0 then qw=qw-qx+50 end;aR=false;if cG<dg*0.8 then de="Escaping planet gravity - OrbitHeight: "..qn;pq=utils.map(dt,200,0,-15,80)elseif cG>=dg*0.8 and cG<dg*1.15 then de="Approaching orbital corridor - OrbitHeight: "..qn;qw=qw*0.75;pq=utils.map(dt,100,-100,-15,65)elseif cG>=dg*1.15 and cG<dg*1.5 then de="Approaching orbital corridor - OrbitHeight: "..qn;qw=qw*0.75;if dt<0 or pt then pq=utils.map(cG,dg*1.5,dg*1.01,-30,0)else pq=utils.map(cG,dg*0.99,dg*1.5,0,30)end elseif cG>dg*1.5 then de="Reentering orbital corridor - OrbitHeight: "..qn;pq=-65;local qy=utils.map(dt,-150,-400,1,0.55)qw=qw*qy end;d3.cmdCruise(bz(qw))end end;if pq~=nil then if qz==nil then qz=pid.new(1*0.01,0,5*0.1)end;local qA=pq-dz;qz:inject(qA)local qB=bK(qz:get(),-0.5,0.5)cc=qB end end;if aU and cF==0 and not cz then local function qC(i5,gn)a.print(i5)aR=false;b3=false;aU=false;qD=false;b6="Aligning"d3.cmdThrottle(0)c7=false;ck=i5;dR("apCom","AP")if gn or cz then if gn and p7~=nil and not cz then if not cG or cG==0 then return end;dg=cG;pu=true end;d3.ToggleIntoOrbit()end end;local qE,qF=ba,false;if li and li.planetname~="Space"then b2=true;if not qD then local qG=(li.position-cq.center):normalize()local qH=qG:project_on_plane((cq.center-du):normalize()):normalize()local qI=cq.center+qH*(cq.radius+p7)local qJ=li.position+(li.position-cq.center):normalize()*(p7-cq:getAltitude(li.position))if(du-qI):len()<(du-qJ):len()then qE=qI else qE=qJ;b5=0 end;ba=qE;d3.showWayPoint(cq,ba)qF=true;qD=true end;b7=0 elseif li and li.planetname=="Space"then if not qD then b7=0;qF=true;b2=true;qD=true;qE=li.position+(du-li.position):normalize()*P;ba=qE end elseif li==nil then b7=0;if not qD then local qG=(du+dq*100000-cq.center):normalize()local qH=qG:project_on_plane((cq.center-du):normalize()):normalize()if qH:len()<1 then qG=(du+dm*100000-cq.center):normalize()qH=qG:project_on_plane((cq.center-du):normalize()):normalize()end;qE=cq.center+qH*(cq.radius+p7)ba=qE;qD=true;qF=true;b2=true;d3.showWayPoint(cq,ba)end end;qK=(vec3(qE)-du):len()local kZ,fE,fF=cY:getPlanetarySystem(0):castIntersections(du,dq:normalize(),function(fp)if fp.noAtmosphericDensityAltitude>0 then return fp.radius+fp.noAtmosphericDensityAltitude else return fp.radius+fp.surfaceMaxAltitude*1.5 end end)local k_=fE;if fF~=nil and fE~=nil then k_=math.min(fF,fE)end;if k_~=nil and k_<qK and kZ.name==cq.name then qK=k_ end;local qg=true;local qL=(cq.center-(du+vec3(dq):normalize()*qK)):len()-cq.radius;local kO=ef(qL)bN(o_,'{"label": "Projected Altitude", "value": "'..kO..'"}')local cm,cn;if not aV then cm,cn=pg(dr)else cm,cn=pi(dr)end;if dr>50 and b1 then local q3=vec3(qE)-du;local qM=bK(math.deg(py(dl,dq:normalize(),q3:normalize()))*dr/500,-90,90)local qN=bK(math.deg(py(dn,dq:normalize(),q3:normalize()))*dr/500,-90,90)if by(qM)<20 and by(qN)<20 then qM=qM*2;qN=qN*2 end;if by(qM)<2 and by(qN)<2 then qM=qM*2;qN=qN*2 end;local q9=-math.deg(py(dl,dm,dq:normalize()))local qa=-math.deg(py(dn,dm,dq:normalize()))if qO==nil then qO=pid.new(2*0.01,0,2*0.1)end;qO:inject(qN-qa)local qP=bK(qO:get(),-1,1)cc=cc+qP;if qQ==nil then qQ=pid.new(2*0.01,0,2*0.1)end;qQ:inject(qM-q9)local qR=bK(qQ:get(),-1,1)cd=cd+qR;qF=true;if by(qM)>2 or by(qN)>2 then if b6~="Adjusting Trajectory"then b6="Adjusting Trajectory"dR("apAdj","AP")end else if b6~="Accelerating"then b6="Accelerating"dR("apAcc","AP")end end elseif b1 and dr<=50 then pX((qE-du):normalize())end;if qL<p7*1.5 then if li and li.planetname=="Space"then b5=0 elseif li==nil then eO,b5=d0(cq):escapeAndOrbitalSpeed(qL)end end;if aU and not b1 and not b4 and not b3 then local kZ,k_=d3.checkLOS((ba-du):normalize())if cq.name~=iu.name then if kZ~=nil and cq.name~=kZ.name and k_<qK then ck="Collision with "..kZ.name.." in "..ef(k_).."\nClear LOS to continue."cw=5;pO=true else pO=false;ck=""end end end;if not pO then if not b4 and not b3 and not qF then qg=pX((qE-du):normalize())elseif aV and(b3 or b4)then qg=pX(-vec3(dq):normalize())end end;if b1 then if not c7 then aR=false;d3.cmdThrottle(Z)c2=bT(Z,2)c7=true end;local qS=c.getThrottle()if u then qS=c2 end;local qT=99999;local o1=-vec3(b.getWorldAcceleration()):dot(dq:normalize())local qU=bK(dq:dot((qE-du):normalize()),0,dr)if qU>0 or o1>0 then qT=cZ.computeTravelTime(qU,o1,qK-cm)end;if dp:len()>=Y or qS==0 and c7 or _/4>qT then b1=false;if b6~="Cruising"then dR("apCru","AP")b6="Cruising"end;b4=true;d3.cmdThrottle(0)end;local qV=qK;if qV<=cm or H and dD<=cm+10000 and dC then if H and dD<=cm+10000 and dC then if dD<pk and dD>2000 then d3.ToggleAutopilot()ck="Autopilot cancelled to prevent crossing PvP Line"aR=true;pk=dD else pk=dD;return end end;b1=false;if b6~="Braking"then dR("apBrk","AP")b6="Braking"end;b3=true;d3.cmdThrottle(0)c7=false end elseif b3 then if b6~="Orbiting to Target"then aR=true;cg=1 end;if aV then d3.cmdThrottle(1,true)end;local eO,qp=d0(cq):escapeAndOrbitalSpeed((du-iu.center):len()-iu.radius)local q3;if li then q3=li.position-du end;if li and li.planetname=="Space"and dr<50 then if#px>0 then aR=false;d3.ToggleAutopilot()d3.ToggleAutopilot()return end;qC("Autopilot complete, arrived at space location")aR=true;cg=1 elseif li and li.planetname~="Space"and dr<=qp and(gn.apoapsis==nil or gn.periapsis==nil or gn.apoapsis.altitude<=0 or gn.periapsis.altitude<=0)then qC("Autopilot complete, commencing reentry")ba=li.position;cz=true;d3.showWayPoint(cq,ba)elseif(li and li.planetname~="Space"or li==nil)and gn.periapsis~=nil and gn.periapsis.altitude>0 and gn.eccentricity<1 or b6=="Circularizing"then if b6~="Circularizing"then dR("apCir","AP")b6="Circularizing"end;if dr<=qp then if li then if dq:normalize():dot(q3:normalize())>0.4 then if b6~="Orbiting to Target"then dR("apOrb","OB")b6="Orbiting to Target"end;if not qW then aR=false;d3.showWayPoint(cq,li.position)qW=true end else qC("Autopilot complete, proceeding with reentry")ba=li.position;cz=true;d3.showWayPoint(cq,li.position)qW=false end else qC("Autopilot completed, setting orbit",true)cg=0 end end elseif b6=="Circularizing"then qC("Autopilot complete, fixing Orbit",true)end elseif b4 then local qV=qK;if qV<=cm or H and dD<=cm+10000 and dC then if H and dD<=cm+10000 and dC then if dD<pk and dD>2000 then d3.ToggleAutopilot()ck="Autopilot cancelled to prevent crossing PvP Line"aR=true;pk=dD else pk=dD;return end end;b1=false;if b6~="Braking"then dR("apBrk","AP")b6="Braking"end;b3=true end;local qS=c.getThrottle()if u then qS=c2 end;if qS>0 then b1=true;if b6~="Accelerating"then b6="Accelerating"dR("apAcc","AP")end;b4=false end else if qg then if not b2 and li==nil or not b2 and li and li.planetname~="Space"then if not cz then ba=vec3(cq.center)+(p7+cq.radius)*dn;qX=dl;qY=dn end;b2=true elseif qg and not pO then b1=true;if b6~="Accelerating"then b6="Accelerating"dR("apAcc","AP")end;if not c7 then d3.cmdThrottle(Z,true)c2=bT(Z,2)c7=true;aR=false end end end end elseif aU and(li~=nil and li.planetname~="Space"and cF>0)then ck="Autopilot complete, starting reentry"dR("apCom","AP")ba=li.position;aR=false;b3=false;aU=false;qD=false;b6="Aligning"cg=0;d3.cmdThrottle(0)c7=false;aT=true;cz=true;d3.showWayPoint(cq,li.position)end;if ci then d8=true;local qN=0;local gp=du+vec3(c.getMasterPlayerRelativePosition())local qZ=gp-du;local q_=vec3(qZ):project_on(dm):len()local r0=vec3(qZ):project_on(dn):len()local cx=bR(q_*q_+r0*r0)pX(qZ:normalize())local ma=40;local r1=cx<ma;local r2=100;local r3=bK((cx-ma)/2,10,r2)cc=0;local qg=by(cd)<0.1;if qg and dr<r3 and not r1 then aR=false;qN=-20 else aR=true;qN=0 end;local r4=0;if by(qN-dz)>r4 then if r5==nil then r5=pid.new(2*0.01,0,2*0.1)end;r5:inject(qN-dz)local qP=r5:get()cc=qP end end;if aW or aX or aZ or bg or bj~=nil then local r6=bk;if r6 then r6=r6*bK(dr/100,0.1,1)*cF else r6=bi end;if cF<0.01 then r6=bi end;local r7=dm:project_on_plane(ds):normalize():dot(dq)local r8=vec3(b.getWorldAirFrictionAcceleration())local r9=r8:len()*cJ;if r7>100 then cm,cn=cZ.computeDistanceAndTime(r7,100,cJ,0,0,r6)local ra,rb=cZ.computeDistanceAndTime(100,0,cJ,0,0,r6*0.55)cm=cm+ra else cm,cn=cZ.computeDistanceAndTime(r7,0,cJ,0,0,r6*0.55)end;local qt=b0-cG-dt;local rc=200+dr;if aZ or cz then rd=2000+dr end;local re=1;if aY then re=bK(dr/100,0.1,1)end;local qN=(utils.smoothstep(qt,-rc,rc)-0.5)*2*M*re;if not aZ and not cz and not bg and dm:dot(dq:normalize())<0.99 then qN=(utils.smoothstep(qt,-rc*bK(20-19*cF*10,1,20),rc*bK(20-19*cF*10,1,20))-0.5)*2*M*bK(2-cF*10,1,2)*re end;if not aW then qN=0 end;if bj~=nil then if dG and not bp then qN=bj else bj=nil end end;d8=true;local rf=cc;if aZ then local rg=bz(dc)local rh,ri=cZ.computeDistanceAndTime(dr,rg/3.6,cJ,0,0,bi-iu.gravity*9.8*cJ)rh=rh==-1 and 5000 or rh;local rj=cG-(iu.noAtmosphericDensityAltitude+rh)local rk=cG>iu.noAtmosphericDensityAltitude+rh*1.35;if rk then qN=N;if dr<=rg/3.6 and dr>rg/3.6-10 and by(dq:normalize():dot(dm))>0.9 and not dy then c6=false;d3.cmdThrottle(1)end elseif dy and not rk and not cE then d3.cmdCruise(rg,true)end;if dy then if dr>rg/3.6 and not rk then aR=true else aR=false end else aR=false end;if dt>0 then aR=true end;if not c9 then qN=-80;if cF>0.02 then ck="PARACHUTE DEPLOYED"aZ=false;aX=true;qN=0;d8=p end elseif iu.noAtmosphericDensityAltitude>0 and rk then d8=true elseif not rk then if not cE and(dy or bL:getTargetSpeed(axisCommandId.longitudinal)~=rg)then d3.cmdCruise(rg)end;if dr<rg/3.6+1 then aR=false;c9=false;aZ=false;d8=true end end end;if dr>c8 and not cA and not bg and not aX and v then pX(vec3(dq))end;if dE or(bg or cA)and bb>0 and cF>0.01 then local q3;if dE then if type(dE)=="table"then q3=dE elseif dE<3 and dE>0 then q3=-ds:cross(dq)*5000 elseif dE>=3 then q3=ds:cross(dq)*5000 elseif dE<0 then q3=dq*25000 end elseif li~=nil then q3=li.position-du else q3=cq.center-du end;local qM=math.deg(py(ds:normalize(),dq,q3))*2;local md=math.rad(by(dA))if dr>aC and cF>0.01 then local rl=1000+dr;local rm=(utils.smoothstep(qt-dt*10,-rl,rl)-0.5)*2*M;local rn=bK(90-rm,0,180)db=bK(qM*2,-rn,rn)local ro=qM;qM=bK(bK(qM,-J*0.80,J*0.80)*math.cos(md)+4*(dz-qN)*math.sin(math.rad(dA)),-J*0.80,J*0.80)local rp=1;if db~=0 then rp=by(md/db)end;rp=(90-bK(by(db-dA),0,90))/90;local rq=qN;if by(dA)>90 then rq=-rq end;qN=rp*bK(bK(rq*math.cos(md),-K*0.8,K*0.8)+by(bK(by(ro)*math.sin(md),-K*0.80,K*0.80)),-K*0.80,K*0.80)else db=0;qM=bK(qM,-J*0.80,J*0.80)end;local rr=q9-qM;if dE and by(rr)<=0.0001 and(type(dE)=="table"or type(dE)~="table"and dE<0 and by(dA)<1)then if dE==-2 then d3.ToggleAltitudeHold()end;dE=nil;dR("180Off","BR")return end;if not da and dr>aC and cF>0.01 then if rs==nil then rs=pid.new(2*0.01,0,2*0.1)end;rs:inject(rr)local qR=bK(rs:get(),-1,1)cd=cd+qR elseif cE and cC>-1 or dr<aC then pX(q3)elseif da and cF>0.01 then if(q9<-J or q9>J)and cF>0.01 then pX(dq)end;if(qa<-K or qa>K)and cF>0.01 then qN=bK(dz-qa,dz-K*0.80,dz+K*0.80)end end;if li~=nil and not cA then local qh=iu:getAltitude(li.position)local rj=q3:project_on_plane(ds):len()kV=true;if not cA and not aZ and rj<=cm and(dq:project_on_plane(ds):normalize():dot(q3:project_on_plane(ds):normalize())>0.99 or l2=="Finalizing Approach")then l2="Finalizing Approach"if#px>0 then d3.ToggleAutopilot()d3.ToggleAutopilot()return end;d3.cmdThrottle(0)if aW then d3.ToggleAltitudeHold()bg=true end;aR=true elseif not aY then aR=false end;if l2=="Finalizing Approach"and(r7<0.1 or rj<0.1 or rt~=nil and rt<rj)then if not dw then dR("bklOn","BL")aX=true end;bg=false;l2="Proceeding to Waypoint"dH=false end;rt=rj end elseif bg and cF==0 and b0>iu.noAtmosphericDensityAltitude and not(cA or aZ)then if li~=nil and cq.name==iu.name then local q3=li.position-du;local qh=iu:getAltitude(li.position)local rj=bR(q3:len()^2-(cG-qh)^2)local r6=bk;if r6 then cm,cn=cZ.computeDistanceAndTime(dr,0,cJ,0,0,r6/2)kV=true;if rj<=cm+dr*q8/2 and dq:project_on_plane(ds):normalize():dot(q3:project_on_plane(ds):normalize())>0.99 then if iu.hasAtmosphere then aR=false;aT=false;c9=true;cz=false;cB=true;aU=false;d3.BeginReentry()end end;rt=rj end end end;if cF==0 and(aW and b0>iu.noAtmosphericDensityAltitude)and not(cA or bp or aZ)then if not dh and not bp then dg=b0;pu=true;if bg then df.VectorToTarget=true end;d3.ToggleIntoOrbit()bg=false;ps=true end end;if da and cF>0.01 and cC==-1 and dr>aC and l2~="Finalizing Approach"then pX(dq)qN=bK(dz-qa,dz-K*0.80,dz+K*0.80)end;cc=rf;local pH=-1;if aX then qN=0;local ru=false;local rv=30;if c_~=nil and c_>0 then local rw=bK(cF,0.4,2)local r6=bk*bK(dr/100,0.1,1)*rw;local rx=c_*rw+r6-nQ;local ry=r6/2-nQ;local rz=dr-bR(by(ry/2)*20/(0.5*cJ))*utils.sign(ry)if rz<0 then rz=0 end;local rA;if dr>100 then local rB,eO=cZ.computeDistanceAndTime(dr,100,cJ,0,0,r6)local rC,eO=cZ.computeDistanceAndTime(100,0,cJ,0,0,bR(r6))rA=rB+rC else rA=cZ.computeDistanceAndTime(dr,0,cJ,0,0,bR(r6))end;if rA<20 then aR=false else local rD=0;if rz>100 then local rE,eO=cZ.computeDistanceAndTime(rz,100,cJ,0,0,rx)local rF,eO=cZ.computeDistanceAndTime(100,0,cJ,0,0,c_*rw+bR(r6)-nQ)rD=rE+rF else rD,eO=cZ.computeDistanceAndTime(rz,0,cJ,0,0,c_*rw+bR(r6)-nQ)end;rD=(rD+15+dr*q8)*1.1;local rG=li~=nil and iu:getAltitude(li.position)>0 and li.safe;if rG then local qh=iu:getAltitude(li.position)local rH=cG-qh-100;local q3=li.position-du;local rI=bR(q3:len()^2-(cG-qh)^2)if rI>100 then rG=false elseif rH<=rD or rD==-1 then aR=true;ru=true else aR=false;ru=true end end;if not rG and t then if rD>=rv then aR=true else aR=false end;ru=true end end end;if not dy then d3.cmdThrottle(0)end;bL:setTargetGroundAltitude(500)bL:activateGroundEngineAltitudeStabilization(500)br=true;pH=cC;if pH>-1 then d8=p;if dr<1 or dq:normalize():dot(ds)<0 then aX=false;aW=false;bc=true;if ca then d.control.extendLandingGears()dR("grOut","LG",1)end;bL:setTargetGroundAltitude(W)ct=0;aR=true else aR=true end elseif kV and dq:normalize():dot(-jg)<0.999 then aR=true elseif dt<-L and not ru then aR=true elseif not ru then aR=false end end;if aY or cA then local kZ,fF,fE;if ba~=nil then kZ,fF,fE=cY:getPlanetarySystem(0):castIntersections(du,(ba-du):normalize(),function(fp)return fp.radius+fp.noAtmosphericDensityAltitude end)end;if dw then if cG>=b0-50 then aY=false;if not aU and not bg then aR=true;d3.cmdThrottle(0)end else b0=antigrav.getBaseAltitude()end elseif by(qN)<15 and cG/b0>0.75 then aY=false;if not cA then if dy and not u then d.control.cancelCurrentControlMasterMode()end elseif cA and dr<c8 then aU=true;cA=false;aW=false;aY=false;d3.cmdThrottle(0)elseif cA then d3.cmdThrottle(0)aR=true end elseif cA and cF==0 and cq~=nil and(kZ==nil or kZ.name==cq.name)then aU=true;cA=false;aW=false;aY=false;if not dy then d3.cmdThrottle(0)end;b1=true end end;local rJ=cC>-1;local rK=dz;if(bg or cA or dE)and not rJ and dr>aC and cF>0.01 then local md=math.rad(by(dA))rK=dz*by(math.cos(md))+qa*math.sin(md)end;local rL=bK(qN-rK,-K*0.80,K*0.80)if cF<0.01 and bg then rL=bK(qN-rK,-85,M)elseif cF<0.01 then rL=bK(qN-rK,-M,M)end;if by(dA)<5 or bg or dE or aX or rJ or aW then if r5==nil then r5=pid.new(5*0.01,0,5*0.1)end;r5:inject(rL)local qP=r5:get()cc=cc+qP end end;if antigrav~=nil and(antigrav and not q and cG<200000)then if bl==nil or bl<1000 then bl=1000 end;if rM~=bl then rM=bl;antigrav.setBaseAltitude(rM)end end end;function pf.ToggleIntoOrbit()dh=false;pq=nil;pr=nil;pw=0;if cF==0 then if bp then dR("orOff","AP")bp=false;ps=false;pv=nil;d8=p;if aW then aW=false;aY=false end;df.VectorToTarget=false;df.AutopilotAlign=false;pu=false elseif dG then dR("orOn","AP")bp=true;d8=true;if pv==nil then pv=iu end;if aW then aW=false;aY=false end else ck="Unable to engage auto-orbit, not near a planet"end else bp=false;ps=false;pv=nil;d8=p;if aW then aW=false end;df.VectorToTarget=false;df.AutopilotAlign=false;pu=false end end;function pf.ToggleVerticalTakeoff()aW=false;if a_ then kV=true;aZ=false;aY=false;aX=true;d8=true;ct=0;if cE and cC==-1 then aX=false;aW=true;ct=0;d:setEngineForceCommand('thrust analog vertical fueled ',vec3(),1)d3.cmdCruise(bz(dc))end else dh=false;bc=false;d.control.retractLandingGears()bL:setTargetGroundAltitude(V)aR=true end;a_=not a_ end;function pf.checkLOS(pY)local kZ,fE,fF=cY:getPlanetarySystem(0):castIntersections(du,pY,function(fp)if fp.noAtmosphericDensityAltitude>0 then return fp.radius+fp.noAtmosphericDensityAltitude else return fp.radius+fp.surfaceMaxAltitude*1.5 end end)local k_=fE;if fF~=nil and fE~=nil then k_=math.min(fF,fE)end;if k_~=nil then return kZ,k_ else return nil,nil end end;function pf.ToggleAutopilot()local function rN(bn)dH=false;bg=not bg;if bg then aV=false;if not aW and not bn then d3.ToggleAltitudeHold()end end;l2="Proceeding to Waypoint"end;local rO=false;if bX-pp<1.5 and cF>0 then if not dk then ck="No space engines detected, Orbital Hop not supported"return end;if iu.hasAtmosphere then if cF>0 then b0=iu.noAtmosphericDensityAltitude+R;dR("orH","OH")end;pp=-1;if aU or bg or bp then return end end else pp=bX end;qD=false;if(bb>0 or#px>0)and not aU and not bg and not cA and not bp then if 0.5*d:maxForceForward()/b.g()<cJ then ck="WARNING: Heavy Loads may affect autopilot performance."cw=5 end;if#px>0 and not cB then bb=px[1]d2.UpdateAutopilotTarget()table.remove(px,1)ck="Route Autopilot in Progress"local q3=li.position-du;local rj=q3:project_on_plane(ds):len()if rj>50000 and li.planetname==iu.name then rO=true end end;d2.UpdateAutopilotTarget()d3.showWayPoint(cq,ba)if li~=nil then bj=nil;bn=li.planetname=="Space"if bn then dR("apSpc","AP")if cF~=0 then cA=true;d3.ToggleAltitudeHold()else aU=true end elseif iu.name==li.planetname then kV=true;if cF>0 then if not bg then dR("vtt","AP")rN(bn)if rO then b0=iu.noAtmosphericDensityAltitude+R end end else dR("apOn","AP")if not(cq.name==iu.name and cG<p7*1.5)then dh=false;aU=true elseif not cE then if bp then d3.ToggleIntoOrbit()end;dg=iu.noAtmosphericDensityAltitude+R;pu=true;df.AutopilotAlign=true;df.VectorToTarget=true;ps=false;if not bp then d3.ToggleIntoOrbit()end end end else dR("apP","AP")aS=false;aT=false;if cF~=0 then cA=true;d3.ToggleAltitudeHold()else aU=true end end elseif cF==0 then if li==nil and(cq.name==iu.name and dG)and not bp then qW=false;dh=false;ps=false;d3.ToggleIntoOrbit()else dR("apP","AP")aU=true;aS=false;aT=false;b2=false;ci=false;aW=false;aX=false;aZ=false;aY=false;c7=false;bj=nil;qW=false end else dR("apP","AP")cA=true;d3.ToggleAltitudeHold()end else dR("apOff","AP")d3.ResetAutopilots(1)end end;function pf.routeWP(rP,rQ,rR)if rR then if rR==1 then px={}px=dU(px,bu)if#px>0 then ck="Route Loaded"else ck="No Saved Route found on Databank"end;return px else bu={}bu=dU(bu,px)ck="Route Saved"en()return end end;if rP then return px end;if rQ then px={}ck="Current Route Cleared"else px[#px+1]=bb;ck="Added "..li.name.." to route. "end;return px end;function pf.cmdThrottle(eK,rS)if bL:getAxisCommandType(0)~=axisCommandType.byThrottle and not rS then d.control.cancelCurrentControlMasterMode()end;bL:setThrottleCommand(axisCommandId.longitudinal,eK)c2=bK(bT(eK*100,0)/100,-1,1)dx=nil end;function pf.cmdCruise(eK,rS)if bL:getAxisCommandType(0)~=axisCommandType.byTargetSpeed and not rS then d.control.cancelCurrentControlMasterMode()end;bL:setTargetSpeedCommand(axisCommandId.longitudinal,eK)dx=eK end;function pf.ToggleLockPitch()if bj==nil then dR("lkPOn","LP")if not cj then bj=dz else bj=O end;aY=false;aW=false;aX=false else dR("lkPOff","LP")bj=nil end end;function pf.ToggleAltitudeHold()if bX-po<1.5 then if iu.hasAtmosphere then if cF>0 then b0=iu.spaceEngineMinAltitude-0.01*iu.noAtmosphericDensityAltitude;dR("11","EP")else if dG then b0=iu.noAtmosphericDensityAltitude+R;dg=b0;pu=true;if not bp then d3.ToggleIntoOrbit()end;ps=true end end;po=-1;if aW or bp or a_ then return end end else po=bX end;if dG and cF==0 then dg=cG;pu=true;ps=true;d3.ToggleIntoOrbit()if bp then po=bX else po=0 end;return end;aW=not aW;aX=false;aZ=false;if aW then aU=false;aT=false;aS=false;ci=false;d8=true;bj=nil;dh=false;if cC~=-1 and dr<20 then dR("lfs","LS")aY=true;if po>-1 then b0=cG+U end;bc=false;d.control.retractLandingGears()aR=true;bL:setTargetGroundAltitude(V)if aQ and dv then d3.ToggleVerticalTakeoff()end else dR("altOn","AH")aY=false;if po>-1 then if dG then b0=cG end end;if a_ then d3.ToggleVerticalTakeoff()end end;if cA then b0=100000 end else dR("altOff","AH")if bp then d3.ToggleIntoOrbit()end;if a_ then d3.ToggleVerticalTakeoff()end;d8=p;aY=false;bg=false;po=0 end end;function pf.ResetAutopilots(pf)if pf then cA=false;aU=false;b2=false;c7=false;b0=cG;qD=false end;bg=false;aY=false;aZ=false;aT=false;aX=false;rT=false;dE=nil;if not dw then aW=false;bj=nil end;if a_ then d3.ToggleVerticalTakeoff()end;if bp then d3.ToggleIntoOrbit()end;d8=p;cz=false;cB=false;ct=0 end;function pf.BrakeToggle()aR=not aR;if aX then aX=false;d8=p end;if aR then dR("bkOn","B",1)d3.ResetAutopilots()else dR("bkOff","B",1)end end;function pf.BeginReentry()if aZ then ck="Re-Entry cancelled"dR("reOff","RE")aZ=false;d8=p;aW=false elseif not iu.hasAtmosphere then ck="Re-Entry requirements not met: you must start out of atmosphere\n and within a planets gravity well over a planet with atmosphere"cw=5 elseif not c9 then aZ=true;if bL:getAxisCommandType(0)~=rU.cruise then d.control.cancelCurrentControlMasterMode()end;d8=true;aR=false;ck="Beginning Parachute Re-Entry - Strap In.  Target speed: "..dc;dR("par","RE")else aZ=true;aW=true;d8=true;aR=false;b0=iu.surfaceMaxAltitude+X;if b0>iu.spaceEngineMinAltitude then b0=iu.spaceEngineMinAltitude-0.01*iu.noAtmosphericDensityAltitude end;local e8=ef(b0)ck="Beginning Re-entry.  Target speed: "..dc.." Target Altitude: "..e8;dR("glide","RE")d3.cmdCruise(bz(dc))end;aY=false end;function pf.ToggleAntigrav()if antigrav and not q then if dw then dR("aggOff","AG")antigrav.deactivate()antigrav.hide()else if bl==nil then bl=cG end;if bl<1000 then bl=1000 end;dR("aggOn","AG")antigrav.activate()antigrav.show()end end end;cC=pC()return pf end;local function rV()local rW={}local rX=true;local rY=5;local rZ=5;local r_=rY;local s0=rZ;function rW.startControl(s1)local function s2(pP)local bW=1;local function s3(s4,pP)local s5={iu.surfaceMaxAltitude+100,iu.spaceEngineMinAltitude-0.01*iu.noAtmosphericDensityAltitude,iu.noAtmosphericDensityAltitude+R,iu.radius*(Q-1)+iu.noAtmosphericDensityAltitude}local s6=s4;for eO,dY in ipairs(s5)do if pP and s6>dY then s4=dY elseif s4<dY and not pP then s4=dY;break end end;return s4 end;if pP then bW=-1 end;if not q and dw then if cj and pP then bl=1000 elseif bl~=nil then bl=bl+bW*rZ;if bl<1000 then bl=1000 end;if aW and bl<b0+10 and bl>b0-10 then b0=bl end else bl=rM+bW*100 end elseif aW or a_ or bp then if bp then if cj then dg=s3(dg,pP)else dg=dg+bW*rY end;if dg<iu.noAtmosphericDensityAltitude then dg=iu.noAtmosphericDensityAltitude end else if cj and cE then b0=s3(b0,pP)else b0=b0+bW*rY end end else bL:updateTargetGroundAltitudeFromActionStart(bW*1.0)end end;local function s7(s8)if not cE then ck="Flight Assist in Atmo only"return end;local ew=type(s8)if dE==nil then if ew=="table"then if aU or bg then d3.ToggleAutopilot()end;dR("180On","BR")elseif s8==1 then dR("bnkLft","BR")else dR("bnkRht","BR")end;if not aW and not aU and not bg then d3.ToggleAltitudeHold()if ew~="table"then s8=s8+1 end end;dE=s8 else dR("180Off","BR")dE=nil end end;if s1=="gear"then bc=not bc;if bc then bg=false;bj=nil;d3.cmdThrottle(0)if vBooster or hover then if cE and cC==-1 then dR("bklOn","BL")kV=true;aZ=false;aY=false;a_=false;aW=false;aX=true;d8=true;bc=false else if ca then dR("grOut","LG",1)d.control.extendLandingGears()end;bL:setTargetGroundAltitude(W)if cE then aR=true end end end;if ca and not aX and not(vBooster or hover)then dR("grOut","LG",1)d.control.extendLandingGears()end else if ca then dR("grIn","LG",1)d.control.retractLandingGears()end;bL:setTargetGroundAltitude(V)end elseif s1=="light"then if d.control.isAnyHeadlightSwitchedOn()==1 then d.control.switchOffHeadlights()else d.control.switchOnHeadlights()end elseif s1=="forward"then cb=cb-1 elseif s1=="backward"then if oA then s7(-dq*5000)else cb=cb+1 end elseif s1=="left"then if oA then s7(1)else ce=ce-1 end elseif s1=="right"then if oA then s7(3)else ce=ce+1 end elseif s1=="yawright"then cf=cf-1 elseif s1=="yawleft"then cf=cf+1 elseif s1=="straferight"then bL:updateCommandFromActionStart(axisCommandId.lateral,1.0)bo=1 elseif s1=="strafeleft"then bL:updateCommandFromActionStart(axisCommandId.lateral,-1.0)bo=-1 elseif s1=="up"then ct=ct+1;bL:deactivateGroundEngineAltitudeStabilization()bL:updateCommandFromActionStart(axisCommandId.vertical,1.0)elseif s1=="down"then ct=ct-1;bL:deactivateGroundEngineAltitudeStabilization()bL:updateCommandFromActionStart(axisCommandId.vertical,-1.0)elseif s1=="groundaltitudeup"then s2()elseif s1=="groundaltitudedown"then s2(true)elseif s1=="option1"then s9=false;if oA and cj then local sa=""for bw=1,#dM do sa=sa.."| Name: "..a.getPlayerName(dM[bw]).." Mass: "..bT(b.getBoardedPlayerMass(dM[bw])/1000,1).."t "end;a.print("Onboard: "..sa)return end;d2.adjustAutopilotTargetIndex()elseif s1=="option2"then s9=false;if oA and cj then for bw=1,#dM do b.forceDeboard(dM[bw])end;ck="Deboarded All Passengers"return end;d2.adjustAutopilotTargetIndex(1)elseif s1=="option3"then local function sb()rX=not rX;if not rX then dR("wid","DH")c.show()b.show()if atmofueltank_size>0 then _autoconf.displayCategoryPanel(sc,atmofueltank_size,"Atmo Fuel","fuel_container")sd=_autoconf.panels[_autoconf.panels_size]end;if spacefueltank_size>0 then _autoconf.displayCategoryPanel(se,spacefueltank_size,"Space Fuel","fuel_container")sf=_autoconf.panels[_autoconf.panels_size]end;if rocketfueltank_size>0 then _autoconf.displayCategoryPanel(sg,rocketfueltank_size,"Rocket Fuel","fuel_container")sh=_autoconf.panels[_autoconf.panels_size]end;si=a.createWidgetPanel("Docking")sj=a.createWidget(si,"parenting")a.addDataToWidget(c.getDataId(),sj)sk=a.createWidgetPanel("Core combat stress")sl=a.createWidget(sk,"core_stress")a.addDataToWidget(b.getDataId(),sl)if lr~=nil then lr.show()end else dR("hud","DH")c.hide()b.hide()if sd~=nil then bM(sd)sd=nil end;if si~=nil then bM(si)si=nil end;if sk~=nil then bM(sk)sk=nil end;if sf~=nil then bM(sf)sf=nil end;if sh~=nil then bM(sh)sh=nil end;if lr~=nil then lr.hide()end end end;s9=false;if oA and cj then local sa=""for bw=1,#dN do sa=sa.."| ID: "..dN[bw].." Mass: "..bT(b.getDockedConstructMass(dN[bw])/1000,1).."t "end;a.print("Docked Ships: "..sa)return end;if y then if x then x=false else x=true end end;sb()elseif s1=="option4"then s9=false;if oA and cj then for bw=1,#dN do b.forceUndock(dN[bw])end;ck="Undocked all ships"return end;dE=nil;d3.ToggleAutopilot()elseif s1=="option5"then s9=false;d3.ToggleLockPitch()elseif s1=="option6"then s9=false;if oA and cj then if lr then local sm=lr.getVentingCooldown()if sm>0 then ck="Cannot vent again for "..sm.." seconds"return end;if lr.getShieldHitpoints()<lr.getMaxShieldHitpoints()then lr.startVenting()ck="Shields Venting Enabled - NO SHIELDS WHILE VENTING"else ck="Shields already at max hitpoints"end;return else ck="No shield found"return end end;d3.ToggleAltitudeHold()elseif s1=="option7"then s9=false;if oA and cj then if lr then lr.toggle()return else ck="No shield found"return end end;F=not F;if F then ck="Collision System Enabled"else ck="Collision System Secured"end elseif s1=="option8"then s9=false;if oA and cj then if bb>0 and li~=nil then d3.routeWP()else ck="Select a saved wp on IPH to add to or remove from route"end;return end;br=not br;if not br then ck="DeCoupled Mode - Ground Stabilization off"bL:deactivateGroundEngineAltitudeStabilization()dR("gsOff","GS")else ck="Coupled Mode - Ground Stabilization on"bL:activateGroundEngineAltitudeStabilization(sn)d:setEngineForceCommand('hover',vec3(),1)dR("gsOn","GS")end elseif s1=="option9"then s9=false;if oA and cj then bL:resetCommand(axisCommandId.longitudinal)bL:resetCommand(axisCommandId.lateral)bL:resetCommand(axisCommandId.vertical)d3.cmdThrottle(0)c.setTimer("tagTick",0.1)elseif gyro~=nil then gyro.toggle()cL=gyro.getState()==1;if cL then dR("gyOn","GA")else dR("gyOff","GA")end else ck="No gyro found"end elseif s1=="lshift"then dJ=false;if oA then cj=true end;if bQ()==1 then cj=true;b8=bQ()bP(1)elseif bG()==1 and z then cj=true;d7=false;d6=false end elseif s1=="brake"then if aP or oA then d3.BrakeToggle()elseif not aR then d3.BrakeToggle()else aR=true end elseif s1=="lalt"then s9=true;oA=true;if bG()==0 and not i and g=="keyboard"then bP(1)end elseif s1=="booster"then if n then d:toggleBoosters()elseif not cl then if not so then d:toggleBoosters()so=true end;cl=true else if so then d:toggleBoosters()so=false end;cl=false end elseif s1=="stopengines"then local function sp()if bX-bY<1.5 then dR("clear","CA")b1=false;b3=false;b4=false;aU=false;b2=false;b6="Aligning"aS=false;aT=false;dE=nil;aW=false;aZ=false;aX=false;aR=false;aY=false;a_=false;ci=false;c7=false;cz=false;cA=false;c9=false;d8=p;bg=false;aV=false;cL=false;bj=nil;bp=false end end;sp()bY=bX;if bL:getAxisCommandType(0)~=axisCommandType.byTargetSpeed then if c2~=0 then bL:resetCommand(axisCommandId.longitudinal)d3.cmdThrottle(0)else d3.cmdThrottle(100)end else if bL:getTargetSpeed(axisCommandId.longitudinal)~=0 then bL:resetCommand(axisCommandId.longitudinal)else if cE then d3.cmdCruise(S)else d3.cmdCruise(Y*3.6)end end end elseif s1=="speedup"then d3.changeSpd()elseif s1=="speeddown"then d3.changeSpd(true)elseif s1=="antigravity"and not q then if antigrav~=nil then d3.ToggleAntigrav()else ck="No antigrav found"end end end;function rW.stopControl(s1)local function sq()if not q and dw then s0=rZ end;if aW or a_ or bp then r_=rY end end;if s1=="forward"then cb=0 elseif s1=="backward"then cb=0 elseif s1=="left"then if dE then if dE==2 then dE=-2 else dE=-1 end end;ce=0 elseif s1=="right"then if dE then if dE==4 then dE=-2 else dE=-1 end end;ce=0 elseif s1=="yawright"then cf=0 elseif s1=="yawleft"then cf=0 elseif s1=="straferight"then bL:updateCommandFromActionStop(axisCommandId.lateral,-1.0)bo=0 elseif s1=="strafeleft"then bL:updateCommandFromActionStop(axisCommandId.lateral,1.0)bo=0 elseif s1=="up"then ct=0;bL:updateCommandFromActionStop(axisCommandId.vertical,-1.0)if br then bL:activateGroundEngineAltitudeStabilization(sn)d:setEngineForceCommand('hover',vec3(),1)end elseif s1=="down"then ct=0;bL:updateCommandFromActionStop(axisCommandId.vertical,1.0)if br then bL:activateGroundEngineAltitudeStabilization(sn)d:setEngineForceCommand('hover',vec3(),1)end elseif s1=="groundaltitudeup"then sq()s9=false elseif s1=="groundaltitudedown"then sq()s9=false elseif s1=="lshift"then if bQ()==1 then cu=0;cv=0;bP(b8)elseif bG()==1 and z then d7=false;d6=false end;cj=false elseif s1=="brake"then if not aP and not oA then if aR then d3.BrakeToggle()else aR=false end end elseif s1=="lalt"then if bG()==0 and i then if s9 then if bQ()==1 then bP(0)else bP(1)end else s9=true end elseif bG()==0 and not i and g=="keyboard"then bP(0)end;oA=false end end;function rW.loopControl(s1)local function sr(pP)local bW=1;if pP then bW=-1 end;if not q and dw then if bl~=nil then bl=bl+bW*s0;if bl<1000 then bl=1000 end;if aW and bl<b0+10 and bl>b0-10 then b0=bl end;s0=bK(s0*1.05,rZ,50)aR=false else bl=rM+bW*100;aR=false end elseif aW or a_ or bp then if bp then dg=dg+bW*r_;if dg<iu.noAtmosphericDensityAltitude then dg=iu.noAtmosphericDensityAltitude end else b0=b0+bW*r_ end;r_=bK(r_*1.05,rY,50)else bL:updateTargetGroundAltitudeFromActionLoop(bW*1.0)end end;local function ss(pP)local bW=1;if pP then bW=-1 end;if not cj then if u and not oA then c2=bK(c2+bW*aw/100,-1,1)else bL:updateCommandFromActionLoop(axisCommandId.longitudinal,bW*aw)end end end;if s1=="groundaltitudeup"then if not cj then sr()end elseif s1=="groundaltitudedown"then if not cj then sr(true)end elseif s1=="speedup"then ss()elseif s1=="speeddown"then ss(true)end end;function rW.inputTextControl(e8)local function st(su,gp,jZ)local function sv(gp)local bU=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local eD='::pos{'..bU..','..bU..','..bU..','..bU..','..bU..'}'local eS,eT,f0,f1,f2=bI(gp,eD)if eS=="0"and eT=="0"then return vec3(bS(f0),bS(f1),bS(f2))end;f1=math.rad(f1)f0=math.rad(f0)local iu=e[bS(eS)][bS(eT)]local fP=math.cos(f0)local sw=vec3(fP*math.cos(f1),fP*math.sin(f1),math.sin(f0))return iu.center+(iu.radius+f2)*sw end;local ng=sv(gp)return d2.AddNewLocation(su,ng,jZ)end;local bw;local sx,sy=nil,nil;local sz="Command List:\n/commands \n/setname <newname> - Updates current selected saved position name\n/G VariableName newValue - Updates global variable to new value\n".."/G dump - shows all variables updatable by /G\n/agg <targetheight> - Manually set agg target height\n".."/addlocation SafeZoneCenter ::pos{0,0,13771471,7435803,-128971} - adds a saved location by waypoint, not as accurate as making one at location\n".."/::pos{0,0,13771471,7435803,-128971} - adds a temporary waypoint that is not saved to databank with name 0Temp\n".."/copydatabank - copies dbHud databank to a blank databank\n".."/iphWP - displays current IPH target's ::pos waypoint in lua chat\n".."/resist 0.15, 0.15, 0.15, 0.15 - Sets shield resistance distribution of the floating 60% extra available, usable once per minute\n".."/deletewp - Deletes current selected custom wp"bw=string.find(e8," ")sx=e8;if bw~=nil then sx=string.sub(e8,0,bw-1)sy=string.sub(e8,bw+1)end;if sx=="/help"or sx=="/commands"then for o6 in string.gmatch(sz,"([^\n]+)")do a.print(o6)end;return elseif sx=="/setname"then if sy==nil or sy==""then ck="Usage: ah-setname Newname"return end;if bb>0 and li~=nil then d2.UpdatePosition(sy)else ck="Select a saved target to rename first"end elseif lr and sx=="/resist"then if not lr then ck="No shield found"return elseif sy==nil or lr.getResistancesCooldown()>0 then ck="Usable once per min.  Usage: /resist 0.15, 0.15, 0.15, 0.15"return end;local bU=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local eD=bU..', '..bU..', '..bU..', '..bU;local sA,sB,sC,sD=bI(sy,eD)if sD==nil or sA+sB+sC+sD>0.6 then ck="Improperly formatted or total exceeds 0.6"return end;if lr.setResistances(sA,sB,sC,sD)==1 then ck="Shield Resistances set"else ck="Resistance setting failed."end elseif sx=="/addlocation"or string.find(e8,"::pos")~=nil then local jZ=false;local su="0-Temp"if sy==nil or sy==""then sy=sx;jZ=true end;bw=string.find(sy,"::")if not jZ then su=string.sub(sy,1,bw-2)end;local gp=string.sub(sy,bw)st(su,gp,jZ)elseif sx=="/agg"then if sy==nil or sy==""then ck="Usage: /agg targetheight"return end;sy=bS(sy)if sy<1000 then sy=1000 end;bl=sy;ck="AGG Target Height set to "..sy elseif sx=="/G"then if sy==nil or sy==""then ck="Usage: /G VariableName variablevalue\n/G dump - shows all variables"return end;if sy=="dump"then for dX,dY in pairs(dZ())do if type(dY.get())=="boolean"then if dY.get()==true then a.print(dY.." true")else a.print(dY.." false")end elseif dY.get()==nil then a.print(dY.." nil")else a.print(dY.." "..dY.get())end end;return end;bw=string.find(sy," ")local sE=string.sub(sy,0,bw-1)local sF=string.sub(sy,bw+1)for dX,dY in pairs(dZ())do if dX==sE then ck="Variable "..sE.." changed to "..sF;local sG=type(dY.get())if sG=="number"then sF=bS(sF)if dX=="AtmoSpeedLimit"then dc=sF end elseif sG=="boolean"then if string.lower(sF)=="true"then sF=true else sF=false end end;dY.set(sF)return end end;ck="No such global variable: "..sE elseif sx=="/deletewp"then if bb>0 and li~=nil then d2.ClearCurrentPosition()else ck="Select a custom wp to delete first in IPH"end elseif sx=="/copydatabank"then if dbHud_2 then en(true)else ck="Spare Databank required to copy databank"end elseif sx=="/iphWP"then if bb>0 then a.print(d3.showWayPoint(cq,ba,true))ck="::pos waypoint shown in lua chat"else ck="No target selected in IPH"end end end;return rW end;function script.onStart()local sH=false;local function sI()local function sJ(sK)local sL=dbHud_1.hasKey;for dX,dY in pairs(sK)do if sL(dX)then local eF=bB(dbHud_1.getStringValue(dX))if eF~=nil then dY.set(eF)sH=true end end end end;if dbHud_1 then if not f then sJ(dZ())coroutine.yield()sJ(bv)else sJ(bv)ck="Updated user preferences used.  Will be saved when you exit seat.\nToggle off useTheseSettings to use saved values"cw=5;sH=false end;coroutine.yield()if sH then ck="Loaded Saved Variables"cQ=a5;cR=a6;aP=j;g=string.lower(g)d8=p;dc=S;cM=[[rgb(]]..bz(b_+0.5)..","..bz(c1+0.5)..","..bz(c0+0.5)..[[)]]cN=[[rgb(]]..bz(b_*0.9+0.5)..","..bz(c1*0.9+0.5)..","..bz(c0*0.9+0.5)..[[)]]elseif not f then ck="No Saved Variables Found - Exit HUD to save settings"end;if bt<1.500 then if R<2000 then ck="Updating LowOrbitHeight to new minimum default of 2000."R=2000 end end;bt=VERSION_NUMBER else ck="No databank found. Attach one to control u and rerun \nthe autoconfigure to save preferences and locations"end;if bm+180<bX then bk=0 end;bm=bX;g=string.lower(g)if string.find("keyboard virtual joystick mouse",g)==nil then ck="Invalid User Control Scheme selected.\nChange userControlScheme in Lua Parameters to keyboard, mouse, or virtual joystick\nOr use shift and button in screen"cw=7 end;if antigrav and not q then if bl==nil then bl=cG end;antigrav.setBaseAltitude(bl)end;l2="Proceeding to Waypoint"end;local function sM()local function sN(sO,sP)if sO>sP then sP=sO end;local sQ,sR=0,0;if a3>0 then sQ=a3*0.05 end;if a4>0 then sR=a4*0.05 end;sP=sP*(1-(sQ+sR))return sP end;local sS=b.getElementNameById;local sT=am~=0 and an~=0;for dX in pairs(cH)do local type=b.getElementTypeById(cH[dX])if bI(type,'^.*Atmospheric Engine$')then if bI(tostring(b.getElementTagsById(cH[dX])),'^.*vertical.*$')and b.getElementForwardById(cH[dX])[3]>0 then dv=true end end;if bI(type,'^.*Space Engine$')then dk=true;if bI(tostring(b.getElementTagsById(cH[dX])),'^.*vertical.*$')then local sU=b.getElementForwardById(cH[dX])if sU[3]<0 then di=true else dj=true end end end;if type=="Landing Gear"then ca=true end;if type=="Dynamic Core Unit"then local sV=bD(cH[dX])if sV>10000 then bZ=110 elseif sV>1000 then bZ=55 elseif sV>150 then bZ=27 end end;cV=cV+bD(cH[dX])if sT and(type=="Atmospheric Fuel Tank"or type=="Space Fuel Tank"or type=="Rocket Fuel Tank")then local sV=bD(cH[dX])local nY=bF(cH[dX])local sO=0;local j1=bJ()if type=="Atmospheric Fuel Tank"then local sP=400;local sW=35.03;if sV>10000 then sP=51200;sW=5480 elseif sV>1300 then sP=6400;sW=988.67 elseif sV>150 then sP=1600;sW=182.67 end;sO=nY-sW;if a0>0 then sP=sP+sP*a0*0.2 end;sP=sN(sO,sP)cS[#cS+1]={cH[dX],sS(cH[dX]),sP,sW,sO,j1}end;if type=="Rocket Fuel Tank"then local sP=320;local sW=173.42;if sV>65000 then sP=40000;sW=25740 elseif sV>6000 then sP=5120;sW=4720 elseif sV>700 then sP=640;sW=886.72 end;sO=nY-sW;if a2>0 then sP=sP+sP*a2*0.1 end;sP=sN(sO,sP)cU[#cU+1]={cH[dX],sS(cH[dX]),sP,sW,sO,j1}end;if type=="Space Fuel Tank"then local sP=600;local sW=35.03;if sV>10000 then sP=76800;sW=5480 elseif sV>1300 then sP=9600;sW=988.67 elseif sV>150 then sP=2400;sW=182.67 end;sO=nY-sW;if a1>0 then sP=sP+sP*a1*0.2 end;sP=sN(sO,sP)cT[#cT+1]={cH[dX],sS(cH[dX]),sP,sW,sO,j1}end end end;if not dv then a_,aQ=false,false end end;local function sX()if gyro~=nil then cL=gyro.getState()==1 end;if not br then bL:deactivateGroundEngineAltitudeStabilization()end;if g~="keyboard"then bP(1)else bP(0)end;if door and(cE or not cE and cG<10000)then for eO,dY in pairs(door)do dY.toggle()end end;if switch then for eO,dY in pairs(switch)do dY.toggle()end end;if forcefield and(cE or not cE==0 and cG<10000)then for eO,dY in pairs(forcefield)do dY.toggle()end end;if antigrav then dw=antigrav.getState()==1;if dw and not q then antigrav.show()end end;if bG()==1 and k then a.freeze(1)else a.freeze(0)end;if ca then bc=d.control.isAnyLandingGearExtended()==1;if bc then d.control.extendLandingGears()else d.control.retractLandingGears()end end;if cC~=-1 or not cE and dp:len()<50 then aR=true;bc=true;if ca then d.control.extendLandingGears()end else aR=false end;bL:setTargetGroundAltitude(d9)if cE and cC~=-1 then c_=b.getMaxKinematicsParametersAlongAxis("ground",b.getConstructOrientationUp())[1]end;sY=cE end;local function sZ()local s_={}local function t0()return{id=0,name={"Space","Space","Space"},type={},biosphere={},classification={},habitability={},description={},iconPath="",hasAtmosphere=false,isSanctuary=false,isInSafeZone=true,systemId=0,positionInSystem=0,satellites={},center={0,0,0},gravity=0,radius=0,atmosphereThickness=0,atmosphereRadius=0,surfaceArea=0,surfaceAverageAltitude=0,surfaceMaxAltitude=0,surfaceMinAltitude=0,GM=0,ores={},territories=0,noAtmosphericDensityAltitude=0,spaceEngineMinAltitude=0}end;local t1={[1]=4480,[6]=4480,[7]=6270}for t2,t3 in pairs(e)do e[t2][0]=t0()e[t2][0].systemId=t2;s_[t2]={}for t4,iu in pairs(e[t2])do iu.gravity=iu.gravity/9.8;iu.center=vec3(iu.center)iu.name=iu.name[1]iu.noAtmosphericDensityAltitude=iu.atmosphereThickness or iu.atmosphereRadius-iu.radius;iu.spaceEngineMinAltitude=t1[iu.id]or 0.68377*(iu.atmosphereThickness or iu.atmosphereRadius-iu.radius)iu.planetarySystemId=t2;iu.bodyId=iu.id;s_[t2][t4]=iu;if l_==nil or iu.center.x<l_ then l_=iu.center.x end;if lZ==nil or iu.center.x>lZ then lZ=iu.center.x end;if m2==nil or iu.center.y<m2 then m2=iu.center.y end;if m1==nil or iu.center.y>m1 then m1=iu.center.y end;if iu.center and iu.name~="Space"then dO[#dO+1]=iu end end end;cX=er()cY=cX(s_)cZ=fS()d0=gl()d2=oG()end;t5=false;t6=coroutine.create(function()bL:setupCustomTargetSpeedRanges(axisCommandId.longitudinal,{1000,5000,10000,20000,30000})sI()coroutine.yield()sM()coroutine.yield()d3=pe()sX()coroutine.yield()sZ()d4=gL()d1=i9()d1.ButtonSetup()d5=rV()coroutine.yield()c.hide()a.showScreen(1)a.showHelper(0)collectgarbage("collect")coroutine.yield()c.setTimer("apTick",aK)c.setTimer("radarTick",aK)c.setTimer("hudTick",aL)c.setTimer("oneSecond",1)c.setTimer("tenthSecond",1/10)c.setTimer("fiveSecond",5)dR("start","SU")end)coroutine.resume(t6)end;function script.onStop()_autoconf.hideCategoryPanels()if antigrav~=nil and not q then antigrav.hide()end;if warpdrive~=nil then warpdrive.hide()end;b.hide()d.control.switchOffHeadlights()if door and(cF>0 or cF==0 and cG<10000)then for eO,dY in pairs(door)do dY.toggle()end end;if switch then for eO,dY in pairs(switch)do dY.toggle()end end;if forcefield and(cF>0 or cF==0 and cG<10000)then for eO,dY in pairs(forcefield)do dY.toggle()end end;x=dQ;en()if ny then ny.activate()end;if A then d3.showWayPoint(iu,du)end;dR("stop","SU")end;function script.onTick(t7)local t8=nil;if t7=="contact"then if not t9 then t9=0 end;if bX>t9+10 then ck="Radar Contact"dR("rdrCon","RC")t9=bX end;c.stopTimer("contact")elseif t7=="tenthSecond"then local function ta()local tb=a.createData;local tc=a.createWidget;td=a.createWidgetPanel("Interplanetary Helper")te=tc(td,"value")tf=tb('{"label": "Target Planet", "value": "N/A", "u":""}')bO(tf,te)tg=tc(td,"value")th=tb('{"label": "distance", "value": "N/A", "u":""}')bO(th,tg)p4=tc(td,"value")p3=tb('{"label": "Travel Time", "value": "N/A", "u":""}')bO(p3,p4)p2=tc(td,"value")p1=tb('{"label": "Maximum Mass", "value": "N/A", "u":""}')bO(p1,p2)p6=tc(td,"value")p5=tb('{"label": "Target Altitude", "value": "N/A", "u":""}')bO(p5,p6)oZ=tc(td,"value")oY=tb('{"label": "Cur Brake distance", "value": "N/A", "u":""}')oX=tc(td,"value")oW=tb('{"label": "Cur Brake Time", "value": "N/A", "u":""}')oV=tc(td,"value")oU=tb('{"label": "Max Brake distance", "value": "N/A", "u":""}')oT=tc(td,"value")oS=tb('{"label": "Max Brake Time", "value": "N/A", "u":""}')p0=tc(td,"value")o_=tb('{"label": "Projected Altitude", "value": "N/A", "u":""}')if not cE then bO(oY,oZ)bO(oW,oX)bO(oU,oV)bO(oS,oT)bO(o_,p0)end end;local function ti()bM(td)td=nil end;local function tj()if not aU then if li==nil or li.planetname~=iu.name then qK=(cq.center-du):len()else qK=(li.position-du):len()end end;local gj=dr;local qS=c.getThrottle()/100;if u then qS=c2 end;local tk,tl=cZ.computeDistanceAndTime(dr,Y,cJ,d:maxForceForward()*qS,_,0)local cm,cn;if not aV then cm,cn=d3.GetAutopilotBrakeDistanceAndTime(Y)else cm,cn=d3.GetAutopilotTBBrakeDistanceAndTime(Y)end;local eO,tm;if not aV and gj>0 then eO,tm=d3.GetAutopilotBrakeDistanceAndTime(gj)else eO,tm=d3.GetAutopilotTBBrakeDistanceAndTime(gj)end;local tn=0;local to=0;if b4 or not aU and gj>5 then to=cZ.computeTravelTime(gj,0,qK)elseif cm+tk<qK then tn=qK-(cm+tk)to=cZ.computeTravelTime(8333.0556,0,tn)else local tp=(qK-cm)/tk;tk=qK-cm;tl=tl*tp end;if li~=nil and li.planetname==iu.name and not aU then return to elseif b3 then return tm elseif b4 then return to+tm else return tl+cn+to end end;local function tq(nQ,tr)if nQ==nil then nQ=b.g()end;nQ=bT(nQ,5)if tr~=nil and tr or(t8==nil or t8~=nQ)then local gj=dp:len()local ts=bB(c.getData()).maxBrake;if ts~=nil and ts>0 and cE then ts=ts/bK(gj/100,0.1,1)ts=ts/cF;if cF>0.10 then if bk then bk=(bk+ts)/2 else bk=ts end end end;if ts~=nil and ts>0 then bi=ts end;t8=nQ end end;tq(nil,true)if dx~=nil then if bL:getAxisCommandType(0)~=axisCommandType.byTargetSpeed or bL:getTargetSpeed(axisCommandId.longitudinal)~=dx then d3.cmdCruise(dx)else dx=nil end end;if b9~="None"then if td==nil then ta()end;if b9~=nil then local tt=li~=nil;local tu=0.5*bk/cq:getGravity(cq.center+vec3(0,0,1)*cq.radius):len()tu=tu>1000000 and bT(tu/1000000,2).." kTons"or bT(tu/1000,2).." Tons"bN(tf,'{"label": "Target", "value": "'..b9 ..'", "u":""}')l0=tj()if tt and not aU then cx=(du-li.position):len()else cx=(ba-du):len()end;if not aV then cm,cn=d3.GetAutopilotBrakeDistanceAndTime(dr)co,cp=d3.GetAutopilotBrakeDistanceAndTime(Y)else cm,cn=d3.GetAutopilotTBBrakeDistanceAndTime(dr)co,cp=d3.GetAutopilotTBBrakeDistanceAndTime(Y)end;local kO=ef(cx)bN(th,'{"label": "distance", "value": "'..kO..'"}')bN(p3,'{"label": "Travel Time", "value": "'..ei(l0)..'", "u":""}')kO=ef(cm)bN(oY,'{"label": "Cur Brake distance", "value": "'..kO..'"}')bN(oW,'{"label": "Cur Brake Time", "value": "'..ei(cn)..'", "u":""}')kO=ef(co)bN(oU,'{"label": "Max Brake distance", "value": "'..kO..'"}')bN(oS,'{"label": "Max Brake Time", "value": "'..ei(cp)..'", "u":""}')bN(p1,'{"label": "Max Brake Mass", "value": "'..bA("%s",tu)..'", "u":""}')kO=ef(p7)bN(p5,'{"label": "Target Orbit", "value": "'..kO..'"}')if cF>0 and not sY then a.removeDataFromWidget(oS,oT)a.removeDataFromWidget(oU,oV)a.removeDataFromWidget(oW,oX)a.removeDataFromWidget(oY,oZ)a.removeDataFromWidget(o_,p0)sY=true;if not dy and u and(aW or aZ or cB)then d3.cmdThrottle(1)aR=false;c6=false end end;if cF==0 and sY then if bN(oS,oT)==1 then bO(oS,oT)end;if bN(oU,oV)==1 then bO(oU,oV)end;if bN(oW,oX)==1 then bO(oW,oX)end;if bN(oY,oZ)==1 then bO(oY,oZ)end;if bN(o_,p0)==1 then bO(o_,p0)end;sY=false end end else ti()end;if warpdrive~=nil then if bB(warpdrive.getData()).destination~="Unknown"and bB(warpdrive.getData()).distance>400000 then warpdrive.show()tv=true else warpdrive.hide()tv=false end end;d1.TenthTick()elseif t7=="oneSecond"then local function tw(jc)local tx=0;cP=""local ty=cV;local tz=0;local tA=0;local tB=0;local j5=0;local j6=""local tC=b.getElementHitPointsById;for dX in pairs(cH)do local sV=0;local tD=0;tD=bD(cH[dX])sV=tC(cH[dX])tz=tz+sV;if sV<tD then if sV==0 then tB=tB+1 else tA=tA+1 end;if cW and#cO==0 then ng=vec3(b.getElementPositionById(cH[dX]))local e6=ng.x;local e7=ng.y;local hi=ng.z;table.insert(cO,b.spawnArrowSticker(e6,e7,hi+1,"down"))table.insert(cO,b.spawnArrowSticker(e6,e7,hi+1,"down"))b.rotateSticker(cO[2],0,0,90)table.insert(cO,b.spawnArrowSticker(e6+1,e7,hi,"north"))table.insert(cO,b.spawnArrowSticker(e6+1,e7,hi,"north"))b.rotateSticker(cO[4],90,90,0)table.insert(cO,b.spawnArrowSticker(e6-1,e7,hi,"south"))table.insert(cO,b.spawnArrowSticker(e6-1,e7,hi,"south"))b.rotateSticker(cO[6],90,-90,0)table.insert(cO,b.spawnArrowSticker(e6,e7-1,hi,"east"))table.insert(cO,b.spawnArrowSticker(e6,e7-1,hi,"east"))b.rotateSticker(cO[8],90,0,90)table.insert(cO,b.spawnArrowSticker(e6,e7+1,hi,"west"))table.insert(cO,b.spawnArrowSticker(e6,e7+1,hi,"west"))b.rotateSticker(cO[10],-90,0,90)table.insert(cO,cH[dX])end elseif cW and#cO>0 and cO[11]==cH[dX]then for j0 in pairs(cO)do b.deleteSticker(cO[j0])end;cO={}end end;tx=bz(tz/ty*100)if tx<100 then jc[#jc+1]=e5(0,0,"","pbright txt")j5=bz(tx*2.55)j6=bA("rgb(%d,%d,%d)",255-j5,j5,0)if tx<100 then jc[#jc+1]=e5("50%",1035,"Elemental Integrity: "..tx.."%","txtbig txtmid","fill:"..j6)if tB>0 then jc[#jc+1]=e5("50%",1055,"Disabled Modules: "..tB.." Damaged Modules: "..tA,"txtbig txtmid","fill:"..j6)elseif tA>0 then jc[#jc+1]=e5("50%",1055,"Damaged Modules: "..tA,"txtbig txtmid","fill:"..j6)end end end end;local function tE()if tF then if tG==nil and(i8~=nil or bc)then _autoconf.displayCategoryPanel(tF,weapon_size,"Weapons","weapon",true)tG=_autoconf.panels[_autoconf.panels_size]elseif tG~=nil and i8==nil and not bc then bM(tG)tG=nil end end end;dM=b.getPlayersOnBoard()dN=b.getDockedConstructs()tE()local jc={}d1.OneSecond(jc)if s then tw(jc)end;cy=table.concat(jc,"")collectgarbage("collect")elseif t7=="fiveSecond"then if not r then return end;cD=dbHud_1.getStringValue("SPBAutopilotTargetName")if cD~=nil and cD~=""and cD~="SatNavNotChanged"then local eF=bB(dbHud_1.getStringValue("SavedLocations"))if eF~=nil then _G["SavedLocations"]=eF;local hB=-1;local pa;for dX,dY in pairs(bf)do if dY.name and dY.name=="SatNav Location"then hB=dX;break end end;if hB~=-1 then pa=bf[hB]hB=-1;for dX,dY in pairs(e[0])do if dY.name and dY.name=="SatNav Location"then hB=dX;break end end;if hB>-1 then e[0][hB]=pa end;d2.UpdateAtlasLocationsList()ck=pa.name.." position updated"end end;for bw=1,#dB do if dB[bw].name==cD then bb=bw;a.print("Index = "..bb.." "..dB[bw].name)d2.UpdateAutopilotTarget()dbHud_1.setStringValue("SPBAutopilotTargetName","SatNavNotChanged")break end end end elseif t7=="msgTick"then local jc={}d1.DisplayMessage(jc,"empty")ck="empty"c.stopTimer("msgTick")cw=3 elseif t7=="animateTick"then d7=true;d6=false;cu=0;cv=0;c.stopTimer("animateTick")elseif t7=="hudTick"then d1.hudtick()elseif t7=="apTick"then d3.APTick()elseif t7=="radarTick"then d4.UpdateRadar()elseif t7=="tagTick"then if bs=="Off"then bs="All"elseif bs=="All"then bs="Longitude"elseif bs=="Longitude"then bs="Lateral"elseif bs=="Lateral"then bs="Vertical"else bs="Off"end;ck="Extra Engine Tags: "..bs;c.stopTimer("tagTick")end end;function script.onFlush()local function tH(tI,r3)local tJ=vec3()local tK=vec3()if tI==axisCommandId.longitudinal then tJ=vec3(b.getConstructOrientationForward())tK=dm elseif tI==axisCommandId.vertical then tJ=vec3(b.getConstructOrientationUp())tK=dl elseif tI==axisCommandId.lateral then tJ=vec3(b.getConstructOrientationRight())tK=dn else return vec3()end;local tL=vec3(b.getWorldGravity())local tM=tL:dot(tK)local tN=vec3(b.getWorldAirFrictionAcceleration())local tO=tN:dot(tK)local tP=dp:dot(tJ)local tQ=r3*constants.kph2m;if tR==nil then tR=pid.new(10,0,10.0)end;tR:inject(tQ-tP)local tS=tR:get()local tT=(tS-tO-tM)*tK;return tT end;local function tU(tI,r3)local tJ=vec3()local tK=vec3()if tI==axisCommandId.longitudinal then tJ=vec3(b.getConstructOrientationForward())tK=dm elseif tI==axisCommandId.vertical then tJ=vec3(b.getConstructOrientationUp())tK=dl elseif tI==axisCommandId.lateral then tJ=vec3(b.getConstructOrientationRight())tK=dn else return vec3()end;local tL=vec3(b.getWorldGravity())local tM=tL:dot(tK)local tN=vec3(b.getWorldAirFrictionAcceleration())local tO=tN:dot(tK)local tP=dp:dot(tJ)local tQ=r3*constants.kph2m;if tV==nil then tV=pid.new(10,0,10.0)end;tV:inject(tQ-tP)local tS=tV:get()local tT=(tS-tO-tM)*tK;return tT end;local function tW(tX,jf,oM)local tY=tX:cross(oM):normalize_inplace()local k2=math.acos(bK(tY:dot(-jf),-1,1))*constants.rad2deg;if tY:cross(-jf):dot(oM)<0 then k2=-k2 end;return k2 end;if antigrav and not q then if not dw and antigrav.getBaseAltitude()~=bl then antigrav.setBaseAltitude(bl)end end;dy=bL:getAxisCommandType(0)==axisCommandType.byThrottle;if dy and c6 then d3.cmdThrottle(0)c6=false elseif not dy and not c6 then c2=0;c6=true end;aF=math.max(aF,0.01)aG=math.max(aG,0.01)aA=math.max(aA,0.01)aE=math.max(aE,0.01)aH=math.max(aH,0.01)aI=math.max(aI,0.01)az=math.max(az,0.01)local tZ=bK(cb+cc+a.getControlDeviceForwardInput(),-1,1)local t_=bK(ce+ch+a.getControlDeviceYawInput(),-1,1)local u0=bK(cf+cd-a.getControlDeviceLeftRightInput(),-1,1)local u1=cg;ds=vec3(b.getWorldVertical())if ds==nil or ds:len()==0 then ds=(iu.center-du):normalize()end;dl=vec3(b.getConstructWorldOrientationUp())dm=vec3(b.getConstructWorldOrientationForward())dn=vec3(b.getConstructWorldOrientationRight())dq=vec3(b.getWorldVelocity())dp=vec3(b.getVelocity())du=vec3(b.getConstructWorldPos())cJ=b.getConstructMass()dr=vec3(dq):len()dt=-ds:dot(dq)dA=getRoll(ds,dm,dn)local u2=dA/180*math.pi;local u3=math.cos(u2)local u4=math.sin(u2)dz=tW(ds,dm,dn*u3+dl*u4)local u5=dq:normalize()local u6=by(dA)local u7=utils.sign(dA)local u8=vec3(b.getWorldAngularVelocity())local u9=tZ*aF*dn+t_*aA*dm+u0*aG*dl;if d8==true and ds:len()>0.01 then local ua=by(db-dA)if((aT or aZ or aX or cz or aW or bp)and ua>0 or cF>0.0 and ua<aB and p)and t_==0 and by(dz)<85 then local ub=db;local uc=az;if cF==0 then uc=uc/4;db=0;ub=0 end;if ud==nil then ud=pid.new(uc*0.01,0,uc*0.1)end;ud:inject(ub-dA)local ue=ud:get()u9=u9+ue*dm end end;local uf=1;local ug=0;local uh=1;local ui=a.getMouseWheel()if ui>0 then d3.changeSpd()elseif ui<0 then d3.changeSpd(true)else cK=true end;c3=0;if cE and u and dy then if uj==nil then uj=pid.new(0.5,0,1)end;uj:inject(dc/3.6-dq:dot(dm))local uk=uj:get()c5=bK(uk,-1,1)if c5<c2 and cF>0.005 then c4=true;bL:setThrottleCommand(axisCommandId.longitudinal,bK(c5,0.01,1))else c4=false;bL:setThrottleCommand(axisCommandId.longitudinal,c2)end;if ul==nil then ul=pid.new(1*0.01,0,1*0.1)end;ul:inject(dq:len()-dc/3.6)local um=bK(ul:get(),0,1)if cF>0 and dt<-80 or cF>0.005 then c3=um end;if c3>0 then if c4 and c5==0.01 then bL:setThrottleCommand(axisCommandId.longitudinal,0)end else c5=bK(c5,0.01,1)end;local un=''local uo=vec3()local up=tH(axisCommandId.vertical,ct*1000)d:setEngineForceCommand("vertical airfoil , vertical ground ",up,ug)local uq='thrust analog longitudinal 'if bs=="All"or bs=="Longitude"then uq=uq..aM end;local ur=bL:getAxisCommandType(axisCommandId.longitudinal)local us=bL:composeAxisAccelerationFromThrottle(uq,axisCommandId.longitudinal)local ut=tU(axisCommandId.lateral,bo*1000)un=un..' , '.."lateral airfoil , lateral ground "uo=uo+ut;if uo:len()>constants.epsilon then d:setEngineForceCommand(un,uo,ug,'','','',uh)end;d:setEngineForceCommand(uq,us,uf)local uu='thrust analog vertical fueled 'local uv='thrust analog lateral fueled 'if bs=="All"or bs=="Lateral"then uv=uv..aN end;if bs=="All"or bs=="Vertical"then uu=uu..aO end;if ct~=0 or aX and aR or not bc and not br then d:setEngineForceCommand(uu,up,uf)else d:setEngineForceCommand(uu,vec3(),uf)end;if bo~=0 then d:setEngineForceCommand(uv,ut,uf)else d:setEngineForceCommand(uv,vec3(),uf)end;if u1==0 then u1=c3 end;local uw=-u1*(aH*dq+aI*u5)d:setEngineForceCommand('brake',uw)else if u then bL:setThrottleCommand(axisCommandId.longitudinal,c2)end;local r3=c.getAxisCommandValue(0)if not dy then if ul==nil then ul=pid.new(1*0.01,0,1*0.1)end;ul:inject(dq:len()-r3/3.6)local um=bK(ul:get(),0,1)u1=bK(u1+um,0,1)end;local uw=-u1*(aH*dq+aI*u5)d:setEngineForceCommand('brake',uw)local un=''local uo=vec3()local ux=false;local uq='thrust analog longitudinal 'if bs=="All"or bs=="Longitude"then uq=uq..aM end;local ur=bL:getAxisCommandType(axisCommandId.longitudinal)if ur==axisCommandType.byThrottle then local us=bL:composeAxisAccelerationFromThrottle(uq,axisCommandId.longitudinal)d:setEngineForceCommand(uq,us,uf)elseif ur==axisCommandType.byTargetSpeed then local us=bL:composeAxisAccelerationFromTargetSpeed(axisCommandId.longitudinal)un=un..' , '..uq;uo=uo+us;if bL:getTargetSpeed(axisCommandId.longitudinal)==0 or bL:getCurrentToTargetDeltaSpeed(axisCommandId.longitudinal)<-bL:getTargetSpeedCurrentStep(axisCommandId.longitudinal)*0.5 then ux=true end end;local uv='thrust analog lateral 'if bs=="All"or bs=="Lateral"then uv=uv..aN end;local uy=bL:getAxisCommandType(axisCommandId.lateral)if uy==axisCommandType.byThrottle then local uz=bL:composeAxisAccelerationFromThrottle(uv,axisCommandId.lateral)d:setEngineForceCommand(uv,uz,uf)elseif uy==axisCommandType.byTargetSpeed then local ut=bL:composeAxisAccelerationFromTargetSpeed(axisCommandId.lateral)un=un..' , '..uv;uo=uo+ut end;local uu='thrust analog vertical 'if bs=="All"or bs=="Vertical"then uu=uu..aO end;local uA=bL:getAxisCommandType(axisCommandId.vertical)if uA==axisCommandType.byThrottle then local up=bL:composeAxisAccelerationFromThrottle(uu,axisCommandId.vertical)if ct~=0 or aX and aR then d:setEngineForceCommand(uu,up,uf,'airfoil','ground','',uh)else d:setEngineForceCommand(uu,vec3(),uf)d:setEngineForceCommand('airfoil vertical',up,uf,'airfoil','','',uh)d:setEngineForceCommand('ground vertical',up,uf,'ground','','',uh)end elseif uA==axisCommandType.byTargetSpeed then if ct<0 then d:setEngineForceCommand('hover',vec3(),uf)end;local uB=bL:composeAxisAccelerationFromTargetSpeed(axisCommandId.vertical)un=un..' , '..uu;uo=uo+uB end;if uo:len()>constants.epsilon then if cg~=0 or ux or by(u5:dot(dm))<0.5 then un=un..', brake'end;d:setEngineForceCommand(un,uo,ug,'','','',uh)end end;local uC=aE*(u9-u8)local uD=vec3(b.getWorldAirFrictionAngularAcceleration())uC=uC-uD;d:setEngineTorqueCommand('torque',uC,uf,'airfoil','','',uh)d:setBoosterCommand('rocket_engine')if cl and not n then local gj=dp:len()local uE=0.15;if not dy then local uF=bL:getTargetSpeed(axisCommandId.longitudinal)if gj*3.6>uF*(1-uE)and so then so=false;d:toggleBoosters()elseif gj*3.6<uF*(1-uE)and not so then so=true;d:toggleBoosters()end else local qS=c.getThrottle()if u then qS=c2*100 end;local r3=qS/100;if bE==0 then r3=r3*Y;if gj>=r3*(1-uE)and so then so=false;d:toggleBoosters()elseif gj<r3*(1-uE)and not so then so=true;d:toggleBoosters()end else local rg=bz(dc)r3=r3*rg/3.6;if gj>=r3*(1-uE)and so then so=false;d:toggleBoosters()elseif gj<r3*(1-uE)and not so then so=true;d:toggleBoosters()end end end end end;function script.onUpdate()if not t5 then local hY=coroutine.status(t6)if hY=="suspended"then local eK,hZ=coroutine.resume(t6)if hZ then a.print("ERROR STARTUP: "..hZ)end elseif hY=="dead"then t5=true end end;if t5 then d:update()if not d6 and oC~=uG then a.setScreen(oC)end;uG=oC end end;function script.onActionStart(s1)d5.startControl(s1)end;function script.onActionStop(s1)d5.stopControl(s1)end;function script.onActionLoop(s1)d5.loopControl(s1)end;function script.onInputText(e8)d5.inputTextControl(e8)end;function script.onEnter(eT)if radar_1 and not cE and not dC then c.setTimer("contact",0.1)end end;function script.onLeave(eT)if radar_1 and F then if#dF>650 then eT=tostring(eT)dF[eT]=nil end end end;script.onStart()
         end,__wrap_lua__traceback) if not a then __wrap_lua__error(b) if not script then script = {} end end 
    stop:
      lua: if not __wrap_lua__stopped and script.onStop then local a,b=xpcall(script.onStop,__wrap_lua__traceback,unit) if not a then __wrap_lua__error(b) end end
    tick(timerId):
      lua: if not __wrap_lua__stopped and script.onTick then local a,b=xpcall(script.onTick,__wrap_lua__traceback,timerId,unit) if not a then __wrap_lua__error(b) end end
  system:
    actionStart(action):
      lua: if not __wrap_lua__stopped and script.onActionStart then local a,b=xpcall(script.onActionStart,__wrap_lua__traceback,action,system) if not a then __wrap_lua__error(b) end end
    actionStop(action):
      lua: if not __wrap_lua__stopped and script.onActionStop then local a,b=xpcall(script.onActionStop,__wrap_lua__traceback,action,system) if not a then __wrap_lua__error(b) end end
    actionLoop(action):
      lua: if not __wrap_lua__stopped and script.onActionLoop then local a,b=xpcall(script.onActionLoop,__wrap_lua__traceback,action,system) if not a then __wrap_lua__error(b) end end
    update:
      lua: if not __wrap_lua__stopped and script.onUpdate then local a,b=xpcall(script.onUpdate,__wrap_lua__traceback,system) if not a then __wrap_lua__error(b) end end
    flush:
      lua: if not __wrap_lua__stopped and script.onFlush then local a,b=xpcall(script.onFlush,__wrap_lua__traceback,system) if not a then __wrap_lua__error(b) end end
    inputText(text):
      lua: if not __wrap_lua__stopped and script.onInputText then local a,b=xpcall(script.onInputText,__wrap_lua__traceback,text,system) if not a then __wrap_lua__error(b) end end
  radar_1:
    enter(id):
      lua: |
        local radar = radar_1
        if not __wrap_lua__stopped and script.onEnter then local a,b=xpcall(script.onEnter,__wrap_lua__traceback,id,radar) if not a then __wrap_lua__error(b) end end
    leave(id):
      lua: |
        local radar = radar_1
        if not __wrap_lua__stopped and script.onLeave then local a,b=xpcall(script.onLeave,__wrap_lua__traceback,id,radar) if not a then __wrap_lua__error(b) end end
  radar_2:
    enter(id):
      lua: |
        local radar = radar_2
        if not __wrap_lua__stopped and script.onEnter then local a,b=xpcall(script.onEnter,__wrap_lua__traceback,id,radar) if not a then __wrap_lua__error(b) end end
    leave(id):
      lua: |
        local radar = radar_2
        if not __wrap_lua__stopped and script.onLeave then local a,b=xpcall(script.onLeave,__wrap_lua__traceback,id,radar) if not a then __wrap_lua__error(b) end end
