name: ArchHud - Archaegeo v1.321 (Minified)
slots:
  core:
    class: CoreUnit
  radar:
    class: RadarPVPUnit
    select: manual
  antigrav:
    class: AntiGravityGeneratorUnit
  warpdrive:
    class: WarpDriveUnit
  gyro:
    class: GyroUnit
  weapon:
    class: WeaponUnit
    select: manual
  dbHud:
    class: databank
    select: manual
  telemeter:
    class: TelemeterUnit
    select: manual
  vBooster:
    class: VerticalBooster
  hover:
    class: Hovercraft
  door:
    class: DoorUnit
    select: manual
  switch:
    class: ManualSwitchUnit
    select: manual
  forcefield:
    class: ForceFieldUnit
    select: manual
  atmofueltank:
    class: AtmoFuelContainer
    select: manual
  spacefueltank:
    class: SpaceFuelContainer
    select: manual
  rocketfueltank:
    class: RocketFuelContainer
    select: manual
handlers:
  unit:
    start:
      lua: |
        -- error handling code added by wrap.lua
        __wrap_lua__stopped = false
        __wrap_lua__stopOnError = false
        __wrap_lua__rethrowErrorAlways = false
        __wrap_lua__rethrowErrorIfStopped = true
        __wrap_lua__printError = true
        __wrap_lua__showErrorOnScreens = true
        
        function __wrap_lua__error (message)
          if __wrap_lua__stopped then return end
        
          -- make the traceback more readable and escape HTML syntax characters
          message = tostring(message):gsub('"%-%- |STDERROR%-EVENTHANDLER[^"]*"', 'chunk'):gsub("&", "&amp;"):gsub("<", "&lt;"):gsub(">", "&gt;")
        
          local unit = unit or self or {}
        
          if __wrap_lua__showErrorOnScreens then
            for _, value in pairs(unit) do
              if type(value) == "table" and value.setCenteredText and value.setHTML then -- value is a screen
                if message:match("\n") then
                  value.setHTML([[
        <pre style="color: white; background-color: black; font-family: Consolas,monospace; font-size: 4vh; white-space: pre-wrap; margin: 1em">
        Error: ]] .. message .. [[
        </pre>]])
                else
                  value.setCenteredText(message)
                end
              end
            end
          end
        
          if __wrap_lua__printError and system and system.print then
            system.print("Error: " .. message:gsub("\n", "<br>"))
          end
        
          if __wrap_lua__stopOnError then
            __wrap_lua__stopped = true
          end
        
          if __wrap_lua__stopped and unit and unit.exit then
            unit.exit()
          end
        
          if __wrap_lua__rethrowErrorAlways or (__wrap_lua__stopped and __wrap_lua__rethrowErrorIfStopped) then
            error(message)
          end
        end
        
        -- in case traceback is removed or renamed
        __wrap_lua__traceback = traceback or (debug and debug.traceback) or function (arg1, arg2) return arg2 or arg1 end
        
        local ok, message = xpcall(function ()
        
        -- script code
        
        useTheseSettings = false --export:
        userControlScheme = "virtual joystick" --export:
        soundFolder = "archHUD" --export:
        freeLookToggle = true --export:
        BrakeToggleDefault = true --export:
        RemoteFreeze = false --export:
        RemoteHud = true --export:
        brightHud = false --export:
        VanillaRockets = false --export:
        InvertMouse = false --export:
        autoRollPreference = false --export:
        turnAssist = true --export:
        ExternalAGG = false --export:
        UseSatNav = false --export:
        ShouldCheckDamage = true --export:
        CalculateBrakeLandingSpeed = false --export:
        AtmoSpeedAssist = true --export:
        ForceAlignment = false --export:
        DisplayDeadZone = true --export:
        showHud = true --export: 
        ShowOdometer = true --export:
        hideHudOnToggleWidgets = true --export:
        ShiftShowsRemoteButtons = true --export:
        DisplayOrbit = true --export: 
        SetWaypointOnExit = false --export:
        IntruderAlertSystem = false --export:
        AlwaysVSpd = false --export:
        BarFuelDisplay = true --export:
        showHelp = true --export:
        Cockpit = false --export:
        voices = true --export:
        alerts = true --export:
        YawStallAngle = 35 --export:
        PitchStallAngle = 35 --export:
        brakeLandingRate = 30 --export:
        MaxPitch = 30 --export:
        TargetOrbitRadius = 1.4 --export:
        LowOrbitHeight = 1000 --export:
        AtmoSpeedLimit = 1050 --export:
        SpaceSpeedLimit = 30000 --export:
        AutoTakeoffAltitude = 1000 --export:
        TargetHoverHeight = 50 --export:
        LandingGearGroundHeight = 0 --export:
        ReEntryHeight = 5000 --export:
        MaxGameVelocity = 8333.00 --export:
        AutopilotInterplanetaryThrottle = 1.0 --export:
        warmup = 32 --export:
        fuelTankHandlingAtmo = 0 --export:
        fuelTankHandlingSpace = 0 --export:
        fuelTankHandlingRocket = 0 --export:
        ContainerOptimization = 0 --export:
        FuelTankOptimization = 0 --export:
        ResolutionX = 1920 --export:
        ResolutionY = 1080 --export:
        circleRad = 400 --export:
        SafeR = 130 --export:
        SafeG = 224 --export:
        SafeB = 255 --export:
        PvPR = 255 --export:
        PvPG = 0 --export:
        PvPB = 0 --export:
        centerX = 960 --export:
        centerY = 540 --export:
        throtPosX = 1300 --export:
        throtPosY = 540 --export:
        vSpdMeterX = 1525  --export:
        vSpdMeterY = 325 --export:
        altMeterX = 550  --export:
        altMeterY = 540 --export:
        fuelX = 30 --export:
        fuelY = 700 --export:
        DeadZone = 50 --export:
        OrbitMapSize = 250 --export:
        OrbitMapX = 75 --export:
        OrbitMapY = 0 --export:
        soundVolume = 100 --export:
        speedChangeLarge = 5 --export:
        speedChangeSmall = 1 --export:
        MouseXSensitivity = 0.003 --export:
        MouseYSensitivity = 0.003 --export:
        autoRollFactor = 2 --export:
        rollSpeedFactor = 1.5 --export:
        autoRollRollThreshold = 180 --export:
        minRollVelocity = 150 --export:
        turnAssistFactor = 2 --export:
        TrajectoryAlignmentStrength = 0.002 --export:
        torqueFactor = 2 --export:
        pitchSpeedFactor = 0.8 --export:
        yawSpeedFactor = 1 --export:
        brakeSpeedFactor = 3 --export:
        brakeFlatFactor = 1 --export:
        DampingMultiplier = 40 --export:
        apTickRate = 0.0166667 --export:
        hudTickRate = 0.0666667 --export:
        ExtraLongitudeTags = "none" --export:
        ExtraLateralTags = "none" --export:
        ExtraVerticalTags = "none" --export:
        local a=Navigator.new(system,core,unit)script={}VERSION_NUMBER=1.321;BrakeToggleStatus=BrakeToggleDefault;VertTakeOffEngine=false;BrakeIsOn=false;RetrogradeIsOn=false;ProgradeIsOn=false;Autopilot=false;TurnBurn=false;AltitudeHold=false;BrakeLanding=false;AutoTakeoff=false;Reentry=false;VertTakeOff=false;HoldAltitude=1000;AutopilotAccelerating=false;AutopilotRealigned=false;AutopilotBraking=false;AutopilotCruising=false;AutopilotEndSpeed=0;AutopilotStatus="Aligning"AutopilotPlanetGravity=0;PrevViewLock=1;AutopilotTargetName="None"AutopilotTargetCoords=nil;AutopilotTargetIndex=0;GearExtended=nil;TotalDistanceTravelled=0.0;TotalFlightTime=0;SavedLocations={}VectorToTarget=false;LocationIndex=0;LastMaxBrake=0;LockPitch=nil;LastMaxBrakeInAtmo=0;AntigravTargetAltitude=1000;LastStartTime=0;SpaceTarget=false;LeftAmount=0;IntoOrbit=false;safeMass=0;iphCondition="All"stablized=true;sounds=true;local b={"VertTakeOff","VertTakeOffEngine","SpaceTarget","BrakeToggleStatus","BrakeIsOn","RetrogradeIsOn","ProgradeIsOn","Autopilot","TurnBurn","AltitudeHold","BrakeLanding","Reentry","AutoTakeoff","HoldAltitude","AutopilotAccelerating","AutopilotBraking","AutopilotCruising","AutopilotRealigned","AutopilotEndSpeed","AutopilotStatus","AutopilotPlanetGravity","PrevViewLock","AutopilotTargetName","AutopilotTargetCoords","AutopilotTargetIndex","TotalDistanceTravelled","TotalFlightTime","SavedLocations","VectorToTarget","LocationIndex","LastMaxBrake","LockPitch","LastMaxBrakeInAtmo","AntigravTargetAltitude","LastStartTime","safeMass","iphCondition","stablized","sounds"}local c=math.abs;local d=math.floor;local e=string.format;local f=json.decode;local g=json.encode;local h=core.getElementMaxHitPointsById;local j=unit.getAtmosphereDensity;local k=core.getElementMassById;local l=a.control.isRemoteControlled;local m=math.atan;local n=string.match;local o=utils.round;local p=system.getTime;local vec3=vec3;local q=utils.clamp;local r=a.axisCommandManager;local s=system.destroyWidgetPanel;local t=system.updateData;local u=system.addDataToWidget;local v=system.lockView;local w=system.isViewLocked;local function x(num,y)local z=10^(y or 0)return d(num*z+0.5)/z end;local A=p()local B=p()local C=16;local D=SafeR;local E=SafeB;local F=SafeG;local G=0;local H=0;local I=false;local J=0;local K=false;local L=x(ResolutionX/2,0)local M=x(ResolutionY/2,0)local N=false;local O=55;local P=false;local Q=false;local R=0;local S=0;local T=0;local U=0;local V=0;local W=0;local X=0;local Y=false;local Z=false;local a0="empty"local a1=5;local a2=5;local a3=a1;local a4=a2;local a5=false;local a6,a7=0;local a8,a9=0;local aa=nil;local ab=0;local ac=0;local ad=0;local ae=0;local af=0;local ag=3;local ah=0;local ai=""local aj=0;local ak=false;local al=false;local am=false;local an=-1;local ao=""local ap=j()>0;local aq=j()local ar=core.getAltitude()local as=core.getElementIdList()local at=p()local au=core.getConstructMass()local av=false;local aw=nil;local ax=false;local ay=[[rgb(]]..d(D+0.5)..","..d(F+0.5)..","..d(E+0.5)..[[)]]local az=[[rgb(]]..d(D*0.9+0.5)..","..d(F*0.9+0.5)..","..d(E*0.9+0.5)..[[)]]local aA={}local aB=0;local aC=0;local aD=""local aE=true;local aF={}local aG={}local aH={}local aI=ResolutionX;local aJ=ResolutionY;local aK=false;local aL=false;local aM=nil;local aN={}local aO={}local aP={}local aQ=0;local aR=false;local aS={}local aT={}local aU=d(1/apTickRate)*2;local aV={}local aW={}local aX={}local aY={}local aZ=false;local a_=0;local b0=nil;local b1=nil;local b2=nil;local b3=nil;local b4=nil;local b5=nil;local b6=nil;local b7=nil;local b8=nil;local b9=nil;local ba=nil;local bb=nil;local bc=false;local bd=false;local be=autoRollPreference;local bf=LandingGearGroundHeight;local bg=false;local bh=p()local bi=0;local bj=0;local bk=0;local bl=AtmoSpeedLimit;local bm=0;local bn=nil;local bo=0;local bp=0;local bq=false;local br=false;local bs={VectorToTarget=false}local bt=false;local bu=0;local bv=nil;local bw=false;local bx=false;local by=false;local bz=false;local bA=0;local bB=vec3(core.getConstructWorldOrientationUp())local bC=vec3(core.getConstructWorldOrientationForward())local bD=vec3(core.getConstructWorldOrientationRight())local bE=vec3(core.getWorldVelocity())local bF=vec3(bE):len()local bG=vec3(core.getWorldVertical())local bH=-bG:dot(bE)local bI=vec3(core.getConstructWorldPos())local bJ=0;local bK=false;local bL=false;local bM=nil;local bN=true;local bO=0;local bP=0;local bQ=false;local bR={}local bS=showHud;local bT={}local bU=false;local bV=""local bW=""local bX=nil;contacts={}positions={}collisionAlertStatus=false;local function bY(bZ,b_,type)if type==nil and not voices or type~=nil and not alerts or soundFolder=="archHUD"or not sounds then return end;if type~=nil then if type==2 then system.logInfo("sound_loop|audiopacks/"..soundFolder.."/"..bZ.."|"..b_.."|"..soundVolume)else system.logInfo("sound_notification|audiopacks/"..soundFolder.."/"..bZ.."|"..b_.."|"..soundVolume)end else system.logInfo("sound_q|audiopacks/"..soundFolder.."/"..bZ.."|"..b_.."|"..soundVolume)end end;local function c0(c1,c2)for i=1,#c2 do c1[#c1+1]=c2[i]end;return c1 end;local function c3(c4)local c5={}local c6={"userControlScheme","soundFolder","freeLookToggle","BrakeToggleDefault","RemoteFreeze","brightHud","RemoteHud","VanillaRockets","InvertMouse","autoRollPreference","turnAssist","ExternalAGG","UseSatNav","ShouldCheckDamage","CalculateBrakeLandingSpeed","AtmoSpeedAssist","ForceAlignment","DisplayDeadZone","showHud","ShowOdometer","hideHudOnToggleWidgets","ShiftShowsRemoteButtons","DisplayOrbit","SetWaypointOnExit","IntruderAlertSystem","AlwaysVSpd","BarFuelDisplay","showHelp","Cockpit","voices","alerts"}local c7={"YawStallAngle","PitchStallAngle","brakeLandingRate","MaxPitch","TargetOrbitRadius","LowOrbitHeight","AtmoSpeedLimit","SpaceSpeedLimit","AutoTakeoffAltitude","TargetHoverHeight","LandingGearGroundHeight","ReEntryHeight","MaxGameVelocity","AutopilotInterplanetaryThrottle","warmup","fuelTankHandlingAtmo","fuelTankHandlingSpace","fuelTankHandlingRocket","ContainerOptimization","FuelTankOptimization"}local c8={"ResolutionX","ResolutionY","circleRad","SafeR","SafeG","SafeB","PvPR","PvPG","PvPB","centerX","centerY","throtPosX","throtPosY","vSpdMeterX","vSpdMeterY","altMeterX","altMeterY","fuelX","fuelY","DeadZone","OrbitMapSize","OrbitMapX","OrbitMapY","soundVolume"}local c9={"speedChangeLarge","speedChangeSmall","MouseXSensitivity","MouseYSensitivity","autoRollFactor","rollSpeedFactor","autoRollRollThreshold","minRollVelocity","turnAssistFactor","TrajectoryAlignmentStrength","torqueFactor","pitchSpeedFactor","yawSpeedFactor","brakeSpeedFactor","brakeFlatFactor","DampingMultiplier","apTickRate","hudTickRate","ExtraLongitudeTags","ExtraLateralTags","ExtraVerticalTags"}if not c4 then c0(c5,c6)c0(c5,c7)c0(c5,c8)c0(c5,c9)return c5 elseif c4=="boolean"then return c6 elseif c4=="handling"then return c7 elseif c4=="hud"then return c8 elseif c4=="physics"then return c9 end end;local function ca(cb,cc,cd,ce,cf)if ce==nil then ce=""end;if cf==nil then cf=""end;return e([[<text class="%s" x=%s y=%s style="%s">%s</text>]],ce,cb,cc,cf,cd)end;local function cg(ch,ci)if r:getAxisCommandType(0)~=axisCommandType.byThrottle and not ci then a.control.cancelCurrentControlMasterMode()end;r:setThrottleCommand(axisCommandId.longitudinal,ch)G=q(x(ch*100,0)/100,-1,1)end;local function cj(ch,ci)if r:getAxisCommandType(0)~=axisCommandType.byTargetSpeed and not ci then a.control.cancelCurrentControlMasterMode()end;r:setTargetSpeedCommand(axisCommandId.longitudinal,ch)bM=ch end;local function ck(cl,cm)if cl==0 then return c(cm)<1e-09 end;if cm==0 then return c(cl)<1e-09 end;return c(cl-cm)<math.max(c(cl),c(cm))*epsilon end;local function cn(ah,co)local cp=ah>100000;if co==nil then co=1 end;if cp then return x(ah/1000/200,co).."SU"elseif ah<1000 then return x(ah,co).."M"else return x(ah/1000,co).."KM"end end;local function cq()AltitudeHold=false;if VertTakeOff then StrongBrakes=true;Reentry=false;AutoTakeoff=false;BrakeLanding=true;be=true;ad=0;if ap and an==-1 then BrakeLanding=false;AltitudeHold=true;ad=0;a:setEngineForceCommand('thrust analog vertical fueled ',vec3(),1)cj(d(bl))end else bw=false;GearExtended=false;a.control.retractLandingGears()r:setTargetGroundAltitude(TargetHoverHeight)BrakeIsOn=true end;VertTakeOff=not VertTakeOff end;local function cr()bw=false;bo=nil;bp=nil;bA=0;if aq==0 then if IntoOrbit then bY("orOff","AP")IntoOrbit=false;bq=false;bv=nil;be=autoRollPreference;if AltitudeHold then AltitudeHold=false;AutoTakeoff=false end;bs.VectorToTarget=false;bs.AutopilotAlign=false;bt=false elseif unit.getClosestPlanetInfluence()>0 then bY("orOn","AP")IntoOrbit=true;be=true;if bv==nil then bv=planet end;if AltitudeHold then AltitudeHold=false;AutoTakeoff=false end else a0="Unable to engage auto-orbit, not near a planet"end else IntoOrbit=false;bq=false;bv=nil;be=autoRollPreference;if AltitudeHold then AltitudeHold=false end;bs.VectorToTarget=false;bs.AutopilotAlign=false;bt=false end end;local function cs()if A-bj<1.5 then if planet.hasAtmosphere then if aq>0 then HoldAltitude=planet.spaceEngineMinAltitude-50;bY("11","EP")else if unit.getClosestPlanetInfluence()>0 then HoldAltitude=planet.noAtmosphericDensityAltitude+LowOrbitHeight;bu=HoldAltitude;bt=true;if not IntoOrbit then cr()end;bq=true end end;bj=-1;if AltitudeHold or IntoOrbit or VertTakeOff then return end end else bj=A end;if unit.getClosestPlanetInfluence()>0 and aq==0 then bu=ar;bt=true;bq=true;cr()if IntoOrbit then bj=A else bj=0 end;return end;AltitudeHold=not AltitudeHold;BrakeLanding=false;Reentry=false;if AltitudeHold then Autopilot=false;ProgradeIsOn=false;RetrogradeIsOn=false;Y=false;be=true;LockPitch=nil;bw=false;if an==-1 then bY("altOn","AH")AutoTakeoff=false;if bj>-1 then if unit.getClosestPlanetInfluence()>0 then HoldAltitude=ar end end;if VertTakeOff then cq()end else bY("lfs","LS")AutoTakeoff=true;if bj>-1 then HoldAltitude=ar+AutoTakeoffAltitude end;GearExtended=false;a.control.retractLandingGears()BrakeIsOn=true;r:setTargetGroundAltitude(TargetHoverHeight)if VertTakeOffEngine and bK then cq()end end;if al then HoldAltitude=100000 end else bY("altOff","AH")if IntoOrbit then cr()end;if VertTakeOff then cq()end;be=autoRollPreference;AutoTakeoff=false;VectorToTarget=false;bj=0 end end;local function ct()if l()==1 then Y=not Y;if Y then Autopilot=false;RetrogradeIsOn=false;ProgradeIsOn=false;AltitudeHold=false;Reentry=false;BrakeLanding=false;AutoTakeoff=false;OldGearExtended=GearExtended;GearExtended=false;a.control.retractLandingGears()r:setTargetGroundAltitude(TargetHoverHeight)bY("folOn","F")else bY("folOff","F")BrakeIsOn=true;be=autoRollPreference;GearExtended=OldGearExtended;if GearExtended then a.control.extendLandingGears()r:setTargetGroundAltitude(LandingGearGroundHeight)end end else a0="Follow Mode only works with Remote controller"Y=false end end;local function cu()local function cv(SpaceTarget)collisionAlertStatus=false;VectorToTarget=not VectorToTarget;if VectorToTarget then TurnBurn=false;if not AltitudeHold and not SpaceTarget then cs()end end;VectorStatus="Proceeding to Waypoint"end;if A-bk<1.5 and aq>0 then if not bz then a0="No space engines detected, Orbital Hop not supported"return end;if planet.hasAtmosphere then if aq>0 then HoldAltitude=planet.noAtmosphericDensityAltitude+LowOrbitHeight;bY("orH","OH")end;bk=-1;if Autopilot or VectorToTarget or IntoOrbit then return end end else bk=A end;TargetSet=false;if AutopilotTargetIndex>0 and not Autopilot and not VectorToTarget and not al and not IntoOrbit then ba.UpdateAutopilotTarget()bb.showWayPoint(aa,AutopilotTargetCoords)local cw=unit.getClosestPlanetInfluence()>0;if CustomTarget~=nil then LockPitch=nil;SpaceTarget=CustomTarget.planetname=="Space"if SpaceTarget then bY("apSpc","AP")if aq~=0 then al=true;cs()else Autopilot=true end elseif planet.name==CustomTarget.planetname then StrongBrakes=true;if aq>0 then if not VectorToTarget then bY("vtt","AP")cv(SpaceTarget)end else bY("apOn","AP")if not(aa.name==planet.name and cw)then bw=false;Autopilot=true elseif not ap then if IntoOrbit then cr()end;bu=planet.noAtmosphericDensityAltitude+LowOrbitHeight;bt=true;bs.AutopilotAlign=true;bs.VectorToTarget=true;bq=false;if not IntoOrbit then cr()end end end else bY("apP","AP")RetrogradeIsOn=false;ProgradeIsOn=false;if aq~=0 then al=true;cs()else Autopilot=true end end elseif aq==0 then if CustomTarget==nil and(aa.name==planet.name and cw)and not IntoOrbit then WaypointSet=false;bw=false;bq=false;cr()else bY("apP","AP")Autopilot=true;RetrogradeIsOn=false;ProgradeIsOn=false;AutopilotRealigned=false;Y=false;AltitudeHold=false;BrakeLanding=false;Reentry=false;AutoTakeoff=false;N=false;LockPitch=nil;WaypointSet=false end else bY("apP","AP")al=true;cs()end else bY("apOff","AP")al=false;Autopilot=false;AutopilotRealigned=false;VectorToTarget=false;N=false;AutoTakeoff=false;AltitudeHold=false;VectorToTarget=false;HoldAltitude=ar;TargetSet=false;Reentry=false;if IntoOrbit then cr()end end end;local function cx(cy)local cz=-1;local cA;cz=ba.findAtlasIndex(SavedLocations)if cz~=-1 then local cB;if cy~=nil then cA={position=SavedLocations[cz].position,name=cy,atmosphere=SavedLocations[cz].atmosphere,planetname=SavedLocations[cz].planetname,gravity=SavedLocations[cz].gravity}else cA={position=bI,name=SavedLocations[cz].name,atmosphere=aq,planetname=planet.name,gravity=unit.getClosestPlanetInfluence(),safe=true}end;SavedLocations[cz]=cA;cz=-1;cz=ba.findAtlasIndex(b0[0])if cz>-1 then b0[0][cz]=cA end;ba.UpdateAtlasLocationsList()a0=CustomTarget.name.." position updated"ba.UpdateAutopilotTarget()else a0="Name Not Found"end end;local function cC()BrakeIsOn=not BrakeIsOn;if BrakeLanding then BrakeLanding=false;be=autoRollPreference end;if BrakeIsOn then bY("bkOn","B",1)VectorToTarget=false;AutoTakeoff=false;Reentry=false;ProgradeIsOn=false;BrakeLanding=false;AutoLanding=false;bX=nil;if not bL then AltitudeHold=false;LockPitch=nil end;if VertTakeOff then cq()end;if IntoOrbit then cr()end;be=autoRollPreference;ak=false;am=false;ad=0 else bY("bkOff","B",1)end end;local function cD(cE,cF,cG)local function cH(cE,cI)cE=vec3(cE)cI=vec3(cI):normalize()local cJ=cE*cI;return cJ.x+cJ.y+cJ.z end;local cK=0.001;local cL=1;if not ap or not bg or an~=-1 or bF<O then if cG==nil then cG=DampingMultiplier end;if cF==nil then cF=cK end;cE=vec3(cE):normalize()local cM=vec3()-cE;local cN=-cH(cM,core.getConstructWorldOrientationRight())*cL;local cO=-cH(cM,core.getConstructWorldOrientationUp())*cL;if aB==0 then aB=cN/2 end;if aC==0 then aC=cO/2 end;if c(cN)<0.1 then T=T-cN*2 else T=T-(cN+(cN-aB)*cG)end;if c(cO)<0.1 then S=S+cO*2 else S=S+cO+(cO-aC)*cG end;aB=cN;aC=cO;if c(cN)<cF and c(cO)<cF then return true end;return false elseif bg and an==-1 then cE=bE;if cG==nil then cG=DampingMultiplier end;if cF==nil then cF=cK end;cE=vec3(cE):normalize()local cM=bC-cE;local cN=-cH(cM,core.getConstructWorldOrientationRight())*cL;local cO=-cH(cM,core.getConstructWorldOrientationUp())*cL;if aB==0 then aB=cN/2 end;if aC==0 then aC=cO/2 end;if c(cN)<0.1 then T=T-cN*5 else T=T-(cN+(cN-aB)*cG)end;if c(cO)<0.1 then S=S+cO*5 else S=S+cO+(cO-aC)*cG end;aB=cN;aC=cO;if c(cN)<cF and c(cO)<cF then return true end;return false end end;local function cP()if Reentry then a0="Re-Entry cancelled"bY("reOff","RE")Reentry=false;be=autoRollPreference;AltitudeHold=false elseif not planet.hasAtmosphere then a0="Re-Entry requirements not met: you must start out of atmosphere\n and within a planets gravity well over a planet with atmosphere"ag=5 elseif not P then Reentry=true;if r:getAxisCommandType(0)~=controlMasterModeId.cruise then a.control.cancelCurrentControlMasterMode()end;be=true;BrakeIsOn=false;a0="Beginning Parachute Re-Entry - Strap In.  Target speed: "..bl;bY("par","RE")else Reentry=true;AltitudeHold=true;be=true;BrakeIsOn=false;HoldAltitude=planet.surfaceMaxAltitude+ReEntryHeight;if HoldAltitude>planet.spaceEngineMinAltitude then HoldAltitude=planet.spaceEngineMinAltitude-planet.spaceEngineMinAltitude/10 end;local cd=cn(HoldAltitude)a0="Beginning Re-entry.  Target speed: "..bl.." Target Altitude: "..cd;bY("glide","RE")cj(d(bl))end;AutoTakeoff=false end;local function cQ()if antigrav and not ExternalAGG then if bL then bY("aggOff","AG")antigrav.deactivate()antigrav.hide()else if AntigravTargetAltitude==nil then AntigravTargetAltitude=ar end;if AntigravTargetAltitude<1000 then AntigravTargetAltitude=1000 end;bY("aggOn","AG")antigrav.activate()antigrav.show()end end end;local function cR(cS)local cT=0;local cU=0;local cV=0;if cS<60 then cS=d(cS)elseif cS<3600 then cT=d(cS/60)cS=d(cS%60)elseif cS<86400 then cU=d(cS/3600)cT=d(cS%3600/60)else cV=d(cS/86400)cU=d(cS%86400/3600)end;if cV>0 then return cV.."d "..cU.."h "elseif cU>0 then return cU.."h "..cT.."m "elseif cT>0 then return cT.."m "..cS.."s"elseif cS>0 then return cS.."s"else return"0s"end end;local function cW(cX)local function cY(cZ)for c_,d0 in pairs(cZ)do dbHud_1.setStringValue(d0,g(_G[d0]))if cX and dbHud_2 then dbHud_2.setStringValue(d0,g(_G[d0]))end end end;if dbHud_1 then cY(b)cY(c3())system.print("Saved Variables to Datacore")if cX and dbHud_2 then a0="Databank copied.  Remove copy when ready."end end end;function getTrueWorldPos()local function d1()local d2=core.getConstructWorldOrientationRight()local d3=core.getConstructWorldOrientationForward()local d4=core.getConstructWorldOrientationUp()local d5=library.systemResolution3(d2,d3,d4,{1,0,0})local d6=library.systemResolution3(d2,d3,d4,{0,1,0})local d7=library.systemResolution3(d2,d3,d4,{0,0,1})return function(d8)return library.systemResolution3(d5,d6,d7,d8)end end;local d9=d1()local da=core.getConstructWorldPos()local db=core.getElementPositionById(1)local dc={db[1]-C,db[2]-C,db[3]-C}local dd=d9(dc)local de={da[1]-dd[1],da[2]-dd[2],da[3]-dd[3]}return de end;local function df()return{[0]={[0]={GM=0,bodyId=0,center={x=0,y=0,z=0},name='Space',planetarySystemId=0,radius=0,hasAtmosphere=false,gravity=0,noAtmosphericDensityAltitude=0,surfaceMaxAltitude=0},[2]={name="Alioth",description="Alioth is the planet selected by the arkship for landfall; it is a typical goldilocks planet where humanity may rebuild in the coming decades. The arkship geological survey reports mountainous regions alongside deep seas and lush forests. This is where it all starts.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9401,atmosphericEngineMaxAltitude=5580,biosphere="Forest",classification="Mesoplanet",bodyId=2,GM=157470826617,gravity=1.0082568597356114,fullAtmosphericDensityMaxAltitude=-10,habitability="High",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=6272,numSatellites=2,positionFromSun=2,center={x=-8,y=-8,z=-126303},radius=126067.8984375,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=3410,surfaceArea=199718780928,surfaceAverageAltitude=200,surfaceMaxAltitude=1100,surfaceMinAltitude=-330,systemZone="High",territories=259472,type="Planet",waterLevel=0,planetarySystemId=0},[21]={name="Alioth Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=21,GM=2118960000,gravity=0.24006116402380084,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=457933,y=-1509011,z=115524},radius=30000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=0,surfaceArea=11309733888,surfaceAverageAltitude=140,surfaceMaxAltitude=200,surfaceMinAltitude=10,systemZone=nil,territories=14522,type="",waterLevel=nil,planetarySystemId=0},[22]={name="Alioth Moon 4",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=22,GM=2165833514,gravity=0.2427018259886451,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=-1692694,y=729681,z=-411464},radius=30330,safeAreaEdgeAltitude=500000,size="L",spaceEngineMinAltitude=0,surfaceArea=11559916544,surfaceAverageAltitude=-15,surfaceMaxAltitude=-5,surfaceMinAltitude=-50,systemZone=nil,territories=14522,type="",waterLevel=nil,planetarySystemId=0},[5]={name="Feli",description="Feli is easily identified by its massive and deep crater. Outside of the crater, the arkship geological survey reports a fairly bland and uniform planet, it also cannot explain the existence of the crater. Feli is particular for having an extremely small atmosphere, allowing life to develop in the deeper areas of its crater but limiting it drastically on the actual surface.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.5488,atmosphericEngineMaxAltitude=66725,biosphere="Barren",classification="Mesoplanet",bodyId=5,GM=16951680000,gravity=0.4801223280476017,fullAtmosphericDensityMaxAltitude=30,habitability="Low",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=78500,numSatellites=1,positionFromSun=5,center={x=-43534464,y=22565536,z=-48934464},radius=41800,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=42800,surfaceArea=21956466688,surfaceAverageAltitude=18300,surfaceMaxAltitude=18500,surfaceMinAltitude=46,systemZone="Low",territories=27002,type="Planet",waterLevel=nil,planetarySystemId=0},[50]={name="Feli Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=50,GM=499917600,gravity=0.11202853997062348,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=-43902841.78,y=22261034.7,z=-48862386},radius=14000,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=0,surfaceArea=2463008768,surfaceAverageAltitude=800,surfaceMaxAltitude=900,surfaceMinAltitude=0,systemZone=nil,territories=3002,type="",waterLevel=nil,planetarySystemId=0},[120]={name="Ion",description="Ion is nothing more than an oversized ice cube frozen through and through. It is a largely inhospitable planet due to its extremely low temperatures. The arkship geological survey reports extremely rough mountainous terrain with little habitable land.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9522,atmosphericEngineMaxAltitude=10480,biosphere="Ice",classification="Hypopsychroplanet",bodyId=120,GM=7135606629,gravity=0.36009174603570127,fullAtmosphericDensityMaxAltitude=-30,habitability="Average",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=17700,numSatellites=2,positionFromSun=12,center={x=2865536.7,y=-99034464,z=-934462.02},radius=44950,safeAreaEdgeAltitude=500000,size="XS",spaceEngineMinAltitude=6410,surfaceArea=25390383104,surfaceAverageAltitude=500,surfaceMaxAltitude=1300,surfaceMinAltitude=250,systemZone="Average",territories=32672,type="Planet",waterLevel=nil,planetarySystemId=0},[121]={name="Ion Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=121,GM=106830900,gravity=0.08802242599860607,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=2472916.8,y=-99133747,z=-1133582.8},radius=11000,safeAreaEdgeAltitude=500000,size="XS",spaceEngineMinAltitude=0,surfaceArea=1520530944,surfaceAverageAltitude=100,surfaceMaxAltitude=200,surfaceMinAltitude=3,systemZone=nil,territories=1922,type="",waterLevel=nil,planetarySystemId=0},[122]={name="Ion Moon 2",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=122,GM=176580000,gravity=0.12003058201190042,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=2995424.5,y=-99275010,z=-1378480.7},radius=15000,safeAreaEdgeAltitude=500000,size="XS",spaceEngineMinAltitude=0,surfaceArea=2827433472,surfaceAverageAltitude=-1900,surfaceMaxAltitude=-1400,surfaceMinAltitude=-2100,systemZone=nil,territories=3632,type="",waterLevel=nil,planetarySystemId=0},[9]={name="Jago",description="Jago is a water planet. The large majority of the planet&apos;s surface is covered by large oceans dotted by small areas of landmass across the planet. The arkship geological survey reports deep seas across the majority of the planet with sub 15 percent coverage of solid ground.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9835,atmosphericEngineMaxAltitude=9695,biosphere="Water",classification="Mesoplanet",bodyId=9,GM=18606274330,gravity=0.5041284298678057,fullAtmosphericDensityMaxAltitude=-90,habitability="Very High",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=10900,numSatellites=0,positionFromSun=9,center={x=-94134462,y=12765534,z=-3634464},radius=61590,safeAreaEdgeAltitude=500000,size="XL",spaceEngineMinAltitude=5900,surfaceArea=47668367360,surfaceAverageAltitude=0,surfaceMaxAltitude=1200,surfaceMinAltitude=-500,systemZone="Very High",territories=60752,type="Planet",waterLevel=0,planetarySystemId=0},[100]={name="Lacobus",description="Lacobus is an ice planet that also features large bodies of water. The arkship geological survey reports deep oceans alongside a frozen and rough mountainous environment. Lacobus seems to feature regional geothermal activity allowing for the presence of water on the surface.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.7571,atmosphericEngineMaxAltitude=11120,biosphere="Ice",classification="Psychroplanet",bodyId=100,GM=13975172474,gravity=0.45611622622739767,fullAtmosphericDensityMaxAltitude=-20,habitability="Average",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=12510,numSatellites=3,positionFromSun=10,center={x=98865536,y=-13534464,z=-934461.99},radius=55650,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=6790,surfaceArea=38917074944,surfaceAverageAltitude=800,surfaceMaxAltitude=1660,surfaceMinAltitude=250,systemZone="Average",territories=50432,type="Planet",waterLevel=0,planetarySystemId=0},[102]={name="Lacobus Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=102,GM=444981600,gravity=0.14403669598391783,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=99180968,y=-13783862,z=-926156.4},radius=18000,safeAreaEdgeAltitude=500000,size="XL",spaceEngineMinAltitude=0,surfaceArea=4071504128,surfaceAverageAltitude=150,surfaceMaxAltitude=300,surfaceMinAltitude=10,systemZone=nil,territories=5072,type="",waterLevel=nil,planetarySystemId=0},[103]={name="Lacobus Moon 2",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=103,GM=211503600,gravity=0.11202853997062348,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=99250052,y=-13629215,z=-1059341.4},radius=14000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=0,surfaceArea=2463008768,surfaceAverageAltitude=-1380,surfaceMaxAltitude=-1280,surfaceMinAltitude=-1880,systemZone=nil,territories=3002,type="",waterLevel=nil,planetarySystemId=0},[101]={name="Lacobus Moon 3",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=101,GM=264870000,gravity=0.12003058201190042,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=98905288.17,y=-13950921.1,z=-647589.53},radius=15000,safeAreaEdgeAltitude=500000,size="L",spaceEngineMinAltitude=0,surfaceArea=2827433472,surfaceAverageAltitude=500,surfaceMaxAltitude=820,surfaceMinAltitude=3,systemZone=nil,territories=3632,type="",waterLevel=nil,planetarySystemId=0},[1]={name="Madis",description="Madis is a barren wasteland of a rock; it sits closest to the sun and temperatures reach extreme highs during the day. The arkship geological survey reports long rocky valleys intermittently separated by small ravines.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.8629,atmosphericEngineMaxAltitude=7165,biosphere="Barren",classification="hyperthermoplanet",bodyId=1,GM=6930729684,gravity=0.36009174603570127,fullAtmosphericDensityMaxAltitude=220,habitability="Low",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=8050,numSatellites=3,positionFromSun=1,center={x=17465536,y=22665536,z=-34464},radius=44300,safeAreaEdgeAltitude=500000,size="XS",spaceEngineMinAltitude=4480,surfaceArea=24661377024,surfaceAverageAltitude=750,surfaceMaxAltitude=850,surfaceMinAltitude=670,systemZone="Low",territories=30722,type="Planet",waterLevel=nil,planetarySystemId=0},[10]={name="Madis Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=10,GM=78480000,gravity=0.08002039003323584,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=17448118.224,y=22966846.286,z=143078.82},radius=10000,safeAreaEdgeAltitude=500000,size="XL",spaceEngineMinAltitude=0,surfaceArea=1256637056,surfaceAverageAltitude=210,surfaceMaxAltitude=420,surfaceMinAltitude=0,systemZone=nil,territories=1472,type="",waterLevel=nil,planetarySystemId=0},[11]={name="Madis Moon 2",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=11,GM=237402000,gravity=0.09602446196397631,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=17194626,y=22243633.88,z=-214962.81},radius=12000,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=0,surfaceArea=1809557376,surfaceAverageAltitude=-700,surfaceMaxAltitude=300,surfaceMinAltitude=-2900,systemZone=nil,territories=1922,type="",waterLevel=nil,planetarySystemId=0},[12]={name="Madis Moon 3",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=12,GM=265046609,gravity=0.12003058201190042,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=17520614,y=22184730,z=-309989.99},radius=15000,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=0,surfaceArea=2827433472,surfaceAverageAltitude=700,surfaceMaxAltitude=1100,surfaceMinAltitude=0,systemZone=nil,territories=3632,type="",waterLevel=nil,planetarySystemId=0},[26]={name="Sanctuary",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9666,atmosphericEngineMaxAltitude=6935,biosphere="",classification="",bodyId=26,GM=68234043600,gravity=1.0000000427743831,fullAtmosphericDensityMaxAltitude=-30,habitability="",hasAtmosphere=true,isSanctuary=true,noAtmosphericDensityAltitude=7800,numSatellites=0,positionFromSun=0,center={x=-1404835,y=562655,z=-285074},radius=83400,safeAreaEdgeAltitude=0,size="L",spaceEngineMinAltitude=4230,surfaceArea=87406149632,surfaceAverageAltitude=80,surfaceMaxAltitude=500,surfaceMinAltitude=-60,systemZone=nil,territories=111632,type="",waterLevel=0,planetarySystemId=0},[6]={name="Sicari",description="Sicari is a typical desert planet; it has survived for millenniums and will continue to endure. While not the most habitable of environments it remains a relatively untouched and livable planet of the Alioth sector. The arkship geological survey reports large flatlands alongside steep plateaus.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.897,atmosphericEngineMaxAltitude=7725,biosphere="Desert",classification="Mesoplanet",bodyId=6,GM=10502547741,gravity=0.4081039739797361,fullAtmosphericDensityMaxAltitude=-625,habitability="Average",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=8770,numSatellites=0,positionFromSun=6,center={x=52765536,y=27165538,z=52065535},radius=51100,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=4480,surfaceArea=32813432832,surfaceAverageAltitude=130,surfaceMaxAltitude=220,surfaceMinAltitude=50,systemZone="Average",territories=41072,type="Planet",waterLevel=nil,planetarySystemId=0},[7]={name="Sinnen",description="Sinnen is a an empty and rocky hell. With no atmosphere to speak of it is one of the least hospitable planets in the sector. The arkship geological survey reports mostly flatlands alongside deep ravines which look to have once been riverbeds. This planet simply looks to have dried up and died, likely from solar winds.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9226,atmosphericEngineMaxAltitude=10335,biosphere="Desert",classification="Mesoplanet",bodyId=7,GM=13033380591,gravity=0.4401121421448438,fullAtmosphericDensityMaxAltitude=-120,habitability="Average",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=11620,numSatellites=1,positionFromSun=7,center={x=58665538,y=29665535,z=58165535},radius=54950,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=6270,surfaceArea=37944188928,surfaceAverageAltitude=317,surfaceMaxAltitude=360,surfaceMinAltitude=23,systemZone="Average",territories=48002,type="Planet",waterLevel=nil,planetarySystemId=0},[70]={name="Sinnen Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=70,GM=396912600,gravity=0.1360346539426409,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=58969616,y=29797945,z=57969449},radius=17000,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=0,surfaceArea=3631681280,surfaceAverageAltitude=-2050,surfaceMaxAltitude=-1950,surfaceMinAltitude=-2150,systemZone=nil,territories=4322,type="",waterLevel=nil,planetarySystemId=0},[110]={name="Symeon",description="Symeon is an ice planet mysteriously split at the equator by a band of solid desert. Exactly how this phenomenon is possible is unclear but some sort of weather anomaly may be responsible. The arkship geological survey reports a fairly diverse mix of flat-lands alongside mountainous formations.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9559,atmosphericEngineMaxAltitude=6920,biosphere="Ice, Desert",classification="Hybrid",bodyId=110,GM=9204742375,gravity=0.3920998898971822,fullAtmosphericDensityMaxAltitude=-30,habitability="High",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=7800,numSatellites=0,positionFromSun=11,center={x=14165536,y=-85634465,z=-934464.3},radius=49050,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=4230,surfaceArea=30233462784,surfaceAverageAltitude=39,surfaceMaxAltitude=450,surfaceMinAltitude=126,systemZone="High",territories=38882,type="Planet",waterLevel=nil,planetarySystemId=0},[4]={name="Talemai",description="Talemai is a planet in the final stages of an Ice Age. It seems likely that the planet was thrown into tumult by a cataclysmic volcanic event which resulted in its current state. The arkship geological survey reports large mountainous regions across the entire planet.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.8776,atmosphericEngineMaxAltitude=9685,biosphere="Barren",classification="Psychroplanet",bodyId=4,GM=14893847582,gravity=0.4641182439650478,fullAtmosphericDensityMaxAltitude=-78,habitability="Average",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=10890,numSatellites=3,positionFromSun=4,center={x=-13234464,y=55765536,z=465536},radius=57500,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=5890,surfaceArea=41547563008,surfaceAverageAltitude=580,surfaceMaxAltitude=610,surfaceMinAltitude=520,systemZone="Average",territories=52922,type="Planet",waterLevel=nil,planetarySystemId=0},[42]={name="Talemai Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=42,GM=264870000,gravity=0.12003058201190042,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=-13058408,y=55781856,z=740177.76},radius=15000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=0,surfaceArea=2827433472,surfaceAverageAltitude=720,surfaceMaxAltitude=850,surfaceMinAltitude=0,systemZone=nil,territories=3632,type="",waterLevel=nil,planetarySystemId=0},[40]={name="Talemai Moon 2",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=40,GM=141264000,gravity=0.09602446196397631,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=-13503090,y=55594325,z=769838.64},radius=12000,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=0,surfaceArea=1809557376,surfaceAverageAltitude=250,surfaceMaxAltitude=450,surfaceMinAltitude=0,systemZone=nil,territories=1922,type="",waterLevel=nil,planetarySystemId=0},[41]={name="Talemai Moon 3",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=41,GM=106830900,gravity=0.08802242599860607,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=-12800515,y=55700259,z=325207.84},radius=11000,safeAreaEdgeAltitude=500000,size="XS",spaceEngineMinAltitude=0,surfaceArea=1520530944,surfaceAverageAltitude=190,surfaceMaxAltitude=400,surfaceMinAltitude=0,systemZone=nil,territories=1922,type="",waterLevel=nil,planetarySystemId=0},[8]={name="Teoma",description="[REDACTED] The arkship geological survey [REDACTED]. This planet should not be here.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.7834,atmosphericEngineMaxAltitude=5580,biosphere="Forest",classification="Mesoplanet",bodyId=8,GM=18477723600,gravity=0.48812434578525177,fullAtmosphericDensityMaxAltitude=15,habitability="High",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=6280,numSatellites=0,positionFromSun=8,center={x=80865538,y=54665536,z=-934463.94},radius=62000,safeAreaEdgeAltitude=500000,size="L",spaceEngineMinAltitude=3420,surfaceArea=48305131520,surfaceAverageAltitude=700,surfaceMaxAltitude=1100,surfaceMinAltitude=-200,systemZone="High",territories=60752,type="Planet",waterLevel=0,planetarySystemId=0},[3]={name="Thades",description="Thades is a scorched desert planet. Perhaps it was once teaming with life but now all that remains is ash and dust. The arkship geological survey reports a rocky mountainous planet bisected by a massive unnatural ravine; something happened to this planet.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.03552,atmosphericEngineMaxAltitude=32180,biosphere="Desert",classification="Thermoplanet",bodyId=3,GM=11776905000,gravity=0.49612641213015557,fullAtmosphericDensityMaxAltitude=150,habitability="Low",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=32800,numSatellites=2,positionFromSun=3,center={x=29165536,y=10865536,z=65536},radius=49000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=21400,surfaceArea=30171856896,surfaceAverageAltitude=13640,surfaceMaxAltitude=13690,surfaceMinAltitude=370,systemZone="Low",territories=38882,type="Planet",waterLevel=nil,planetarySystemId=0},[30]={name="Thades Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=30,GM=211564034,gravity=0.11202853997062348,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=29214402,y=10907080.695,z=433858.2},radius=14000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=0,surfaceArea=2463008768,surfaceAverageAltitude=60,surfaceMaxAltitude=300,surfaceMinAltitude=0,systemZone=nil,territories=3002,type="",waterLevel=nil,planetarySystemId=0},[31]={name="Thades Moon 2",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=31,GM=264870000,gravity=0.12003058201190042,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=29404193,y=10432768,z=19554.131},radius=15000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=0,surfaceArea=2827433472,surfaceAverageAltitude=70,surfaceMaxAltitude=350,surfaceMinAltitude=0,systemZone=nil,territories=3632,type="",waterLevel=nil,planetarySystemId=0}}}end;local function dg()local function dh(di)return type(di)=='number'end;local function dj(di)return type(tonumber(di))=='number'end;local function dk(dl)return type(dl)=='table'end;local function dm(dn)return type(dn)=='string'end;local function dp(d0)return dk(d0)and dh(d0.x and d0.y and d0.z)end;local function dq(dr)return dk(dr)and dh(dr.latitude and dr.longitude and dr.altitude and dr.bodyId and dr.systemId)end;local ds=math.pi/180;local dt=180/math.pi;local epsilon=1e-10;local num=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local du='::pos{'..num..','..num..','..num..','..num..','..num..'}'local utils=require('cpml.utils')local vec3=require('cpml.vec3')local function dv(di)local cJ=string.gsub(string.reverse(e('%.4f',di)),'^0*%.?','')return cJ==''and'0'or string.reverse(cJ)end;local function dw(dx)if dp(dx)then return e('{x=%.3f,y=%.3f,z=%.3f}',dx.x,dx.y,dx.z)end;if dk(dx)and not getmetatable(dx)then local dy={}local dz=next(dx)if type(dz)=='nil'or dz==1 then dy=dx else for c_,d0 in pairs(dx)do local ch=dw(d0)if type(c_)=='number'then table.insert(dy,e('[%s]=%s',c_,ch))else table.insert(dy,e('%s=%s',c_,ch))end end end;return e('{%s}',table.concat(dy,','))end;if dm(dx)then return e("'%s'",dx:gsub("'",[[\']]))end;return tostring(dx)end;local dA={}dA.__index=dA;dA.__tostring=function(dx,dB)local dC={}for c_ in pairs(dx)do table.insert(dC,c_)end;table.sort(dC)local dy={}for _,c_ in ipairs(dC)do local ch=dw(dx[c_])if type(c_)=='number'then table.insert(dy,e('[%s]=%s',c_,ch))else table.insert(dy,e('%s=%s',c_,ch))end end;if dB then return e('%s%s',dB,table.concat(dy,',\n'..dB))end;return e('{%s}',table.concat(dy,','))end;dA.__eq=function(dD,dE)return dD.planetarySystemId==dE.planetarySystemId and dD.bodyId==dE.bodyId and ck(dD.radius,dE.radius)and ck(dD.center.x,dE.center.x)and ck(dD.center.y,dE.center.y)and ck(dD.center.z,dE.center.z)and ck(dD.GM,dE.GM)end;local function dF(dG,dH,dI,dJ,dK)assert(dj(dG),'Argument 1 (planetarySystemId) must be a number:'..type(dG))assert(dj(dH),'Argument 2 (bodyId) must be a number:'..type(dH))assert(dj(dI),'Argument 3 (radius) must be a number:'..type(dI))assert(dk(dJ),'Argument 4 (worldCoordinates) must be a array or vec3.'..type(dJ))assert(dj(dK),'Argument 5 (GM) must be a number:'..type(dK))return setmetatable({planetarySystemId=tonumber(dG),bodyId=tonumber(dH),radius=tonumber(dI),center=vec3(dJ),GM=tonumber(dK)},dA)end;local MapPosition={}MapPosition.__index=MapPosition;MapPosition.__tostring=function(dL)return e('::pos{%d,%d,%s,%s,%s}',dL.systemId,dL.bodyId,dv(dL.latitude*dt),dv(dL.longitude*dt),dv(dL.altitude))end;MapPosition.__eq=function(dD,dE)return dD.bodyId==dE.bodyId and dD.systemId==dE.systemId and ck(dD.latitude,dE.latitude)and ck(dD.altitude,dE.altitude)and(ck(dD.longitude,dE.longitude)or ck(dD.latitude,math.pi/2)or ck(dD.latitude,-math.pi/2))end;local function dM(dN,dH,dO,dP,dQ)local dG=dN;if dm(dN)and not dP and not dQ and not dH and not dO then dG,dH,dO,dP,dQ=n(dN,du)assert(dG,'Argument 1 (position string) is malformed.')else assert(dj(dG),'Argument 1 (systemId) must be a number:'..type(dG))assert(dj(dH),'Argument 2 (bodyId) must be a number:'..type(dH))assert(dj(dO),'Argument 3 (latitude) must be in degrees:'..type(dO))assert(dj(dP),'Argument 4 (longitude) must be in degrees:'..type(dP))assert(dj(dQ),'Argument 5 (altitude) must be in meters:'..type(dQ))end;dG=tonumber(dG)dH=tonumber(dH)dO=tonumber(dO)dP=tonumber(dP)dQ=tonumber(dQ)if dH==0 then return setmetatable({latitude=dO,longitude=dP,altitude=dQ,bodyId=dH,systemId=dG},MapPosition)end;return setmetatable({latitude=ds*q(dO,-90,90),longitude=ds*(dP%360),altitude=dQ,bodyId=dH,systemId=dG},MapPosition)end;local dR={}dR.__index=dR;dR.__tostring=function(dx,dB)local dS=dB and dB..'  'local dT={}local dC={}for c_ in pairs(dx)do table.insert(dC,c_)end;table.sort(dC)for _,dU in ipairs(dC)do bdy=dx[dU]local dV=dA.__tostring(bdy,dS)if dB then table.insert(dT,e('[%s]={\n%s\n%s}',dU,dV,dB))else table.insert(dT,e('  [%s]=%s',dU,dV))end end;if dB then return e('\n%s%s%s',dB,table.concat(dT,',\n'..dB),dB)end;return e('{\n%s\n}',table.concat(dT,',\n'))end;local function dW(dX)local b0={}local pid;for _,d0 in pairs(dX)do local dY=d0.planetarySystemId;if type(dY)~='number'then error('Invalid planetary system ID: '..tostring(dY))elseif pid and dY~=pid then error('Mistringmatch planetary system IDs: '..dY..' and '..pid)end;local dZ=d0.bodyId;if type(dZ)~='number'then error('Invalid body ID: '..tostring(dZ))elseif b0[dZ]then error('Duplicate body ID: '..tostring(dZ))end;setmetatable(d0.center,getmetatable(vec3.unit_x))b0[dZ]=setmetatable(d0,dA)pid=dY end;return setmetatable(b0,dR)end;b4={}local function d_(dX)return setmetatable({galaxyAtlas=dX or{}},b4)end;b4.__index=function(dl,i)if type(i)=='number'then local system=dl.galaxyAtlas[i]return dW(system)end;return rawget(b4,i)end;b4.__pairs=function(dx)return function(dl,c_)local e0,nv=next(dl,c_)return e0,nv and dW(nv)end,dx.galaxyAtlas,nil end;b4.__tostring=function(dx)local e1={}for _,e2 in pairs(dx or{})do local e3=e2:getPlanetarySystemId()local e4=dR.__tostring(e2,'    ')table.insert(e1,e('  [%s]={%s\n  }',e3,e4))end;return e('{\n%s\n}\n',table.concat(e1,',\n'))end;b4.BodyParameters=dF;b4.MapPosition=dM;b4.PlanetarySystem=dW;function b4.createBodyParameters(e5,dH,e6,e7,e8,e9,ea)assert(dj(e5),'Argument 1 (planetarySystemId) must be a number:'..type(e5))assert(dj(dH),'Argument 2 (bodyId) must be a number:'..type(dH))assert(dj(e6),'Argument 3 (surfaceArea) must be a number:'..type(e6))assert(dk(e7),'Argument 4 (aPosition) must be an array or vec3:'..type(e7))assert(dk(e8),'Argument 5 (verticalAtPosition) must be an array or vec3:'..type(e8))assert(dj(e9),'Argument 6 (altitude) must be in meters:'..type(e9))assert(dj(ea),'Argument 7 (gravityAtPosition) must be number:'..type(ea))local dI=math.sqrt(e6/4/math.pi)local ah=dI+e9;local eb=vec3(e7)+ah*vec3(e8)local dK=ea*ah*ah;return dF(e5,dH,dI,eb,dK)end;b4.isMapPosition=dq;function b4:getPlanetarySystem(dN)if i==nil then i=0 end;if nv==nil then nv=0 end;local e5=dN;if dq(dN)then e5=dN.systemId end;if type(e5)=='number'then local system=self.galaxyAtlas[i]if system then if getmetatable(nv)~=dR then system=dW(system)end;return system end end end;function dR:castIntersections(ec,cI,ed,ee)local ed=ed or function(ef)return 1.05*ef.radius end;local eg={}if ee then for _,i in ipairs(ee)do eg[i]=self[i]end else ee={}for c_,ef in pairs(self)do table.insert(ee,c_)eg[c_]=ef end end;local function eh(ei,ej)local d2=eg[ei].center-ec;local d3=eg[ej].center-ec;return d2:len()<d3:len()end;table.sort(ee,eh)local ek=cI:normalize()for i,dY in ipairs(ee)do local ef=eg[dY]local el=ef.center-ec;local dI=ed(ef)local em=el:dot(ek)local en=em^2-(el:len2()-dI^2)if en>=0 then local eo=math.sqrt(en)local ep=em+eo;local eq=em-eo;if eq>0 then return ef,ep,eq elseif ep>0 then return ef,ep,nil end end end;return nil,nil,nil end;function dR:closestBody(er)assert(type(er)=='table','Invalid coordinates.')local es,ef;local et=vec3(er)for _,eu in pairs(self)do local ev=(eu.center-et):len2()if(not ef or ev<es)and eu.name~="Space"then ef=eu;es=ev end end;return ef end;function dR:convertToBodyIdAndWorldCoordinates(dN)local ew=dN;if dm(dN)then ew=dM(dN)end;if ew.bodyId==0 then return 0,vec3(ew.latitude,ew.longitude,ew.altitude)end;local eu=self:getBodyParameters(ew)if eu then return ew.bodyId,eu:convertToWorldCoordinates(ew)end end;function dR:getBodyParameters(dN)local dH=dN;if dq(dN)then dH=dN.bodyId end;assert(dj(dH),'Argument 1 (bodyId) must be a number:'..type(dH))return self[dH]end;function dR:getPlanetarySystemId()local _,d0=next(self)return d0 and d0.planetarySystemId end;function dA:convertToMapPosition(dJ)assert(dk(dJ),'Argument 1 (worldCoordinates) must be an array or vec3:'..type(dJ))local ex=vec3(dJ)if self.bodyId==0 then return setmetatable({latitude=ex.x,longitude=ex.y,altitude=ex.z,bodyId=0,systemId=self.planetarySystemId},MapPosition)end;local ey=ex-self.center;local ah=ey:len()local dQ=ah-self.radius;local dO=0;local dP=0;if not ck(ah,0)then local ez=m(ey.y,ey.x)dP=ez>=0 and ez or 2*math.pi+ez;dO=math.pi/2-math.acos(ey.z/ah)end;return setmetatable({latitude=dO,longitude=dP,altitude=dQ,bodyId=self.bodyId,systemId=self.planetarySystemId},MapPosition)end;function dA:convertToWorldCoordinates(dN)local ew=dm(dN)and dM(dN)or dN;if ew.bodyId==0 then return vec3(ew.latitude,ew.longitude,ew.altitude)end;assert(dq(ew),'Argument 1 (mapPosition) is not an instance of "MapPosition".')assert(ew.systemId==self.planetarySystemId,'Argument 1 (mapPosition) has a different planetary system ID.')assert(ew.bodyId==self.bodyId,'Argument 1 (mapPosition) has a different planetary body ID.')local eA=math.cos(ew.latitude)return self.center+(self.radius+ew.altitude)*vec3(eA*math.cos(ew.longitude),eA*math.sin(ew.longitude),math.sin(ew.latitude))end;function dA:getAltitude(dJ)return(vec3(dJ)-self.center):len()-self.radius end;function dA:getDistance(dJ)return(vec3(dJ)-self.center):len()end;function dA:getGravity(dJ)local eB=self.center-vec3(dJ)local eC=eB:len2()return self.GM/eC*eB/math.sqrt(eC)end;return setmetatable(b4,{__call=function(_,...)return d_(...)end})end;local function eD()local b6={}local eE=30000000/3600;local eF=eE*eE;local eG=100;local function eH(d0)return 1/math.sqrt(1-d0*d0/eF)end;function b6.computeAccelerationTime(eI,eJ,eK)local eL=eE*math.asin(eI/eE)return(eE*math.asin(eK/eE)-eL)/eJ end;function b6.computeDistanceAndTime(eI,eK,eM,eN,eO,eP)eO=eO or 0;eP=eP or 0;local eQ=eI<=eK;local eR=eN*(eQ and 1 or-1)/eM;local eS=-eP/eM;local eT=eR+eS;if eQ and eT<=0 or not eQ and eT>=0 then return-1,-1 end;local eU,eV=0,0;if eR~=0 and eO>0 then local eL=math.asin(eI/eE)local eW=math.pi*(eR/2+eS)local eX=eR*eO;local eY=eE*math.pi;local d0=function(dl)local eZ=(eW*dl-eX*math.sin(math.pi*dl/2/eO)+eY*eL)/eY;local e_=math.tan(eZ)return eE*e_/math.sqrt(e_*e_+1)end;local f0=eQ and function(dn)return dn>=eK end or function(dn)return dn<=eK end;eV=2*eO;if f0(d0(eV))then local f1=0;while c(eV-f1)>0.5 do local dl=(eV+f1)/2;if f0(d0(dl))then eV=dl else f1=dl end end end;local f2=eI;local f3=eV/eG;for f4=1,eG do local f5=d0(f4*f3)eU=eU+(f5+f2)*f3/2;f2=f5 end;if eV<2*eO then return eU,eV end;eI=f2 end;local eL=eE*math.asin(eI/eE)local A=(eE*math.asin(eK/eE)-eL)/eT;local f6=eF*math.cos(eL/eE)/eT;local ah=f6-eF*math.cos((eT*A+eL)/eE)/eT;return ah+eU,A+eV end;function b6.computeTravelTime(eI,eJ,ah)if ah==0 then return 0 end;if eJ>0 then local eL=eE*math.asin(eI/eE)local f6=eF*math.cos(eL/eE)/eJ;return(eE*math.acos(eJ*(f6-ah)/eF)-eL)/eJ end;if eI==0 then return-1 end;assert(eI>0,'Acceleration and initial speed are both zero.')return ah/eI end;function b6.lorentz(d0)return eH(d0)end;return b6 end;local function f7()local vec3=require('cpml.vec3')local dg=dg()local function dm(dn)return type(dn)=='string'end;local function dk(dl)return type(dl)=='table'end;Kepler={}Kepler.__index=Kepler;function Kepler:escapeAndOrbitalSpeed(dQ)assert(self.body)local ah=dQ+self.body.radius;if not ck(ah,0)then local orbit=math.sqrt(self.body.GM/ah)return math.sqrt(2)*orbit,orbit end;return nil,nil end;function Kepler:orbitalParameters(dN,f8)assert(self.body)assert(dk(dN)or dm(dN))assert(dk(f8))local db=(dm(dN)or dg.isMapPosition(dN))and self.body:convertToWorldCoordinates(dN)or vec3(dN)local d0=vec3(f8)local f9=db-self.body.center;local d3=d0:len2()local fa=f9:len()local fb=self.body.GM;local fc=((d3-fb/fa)*f9-f9:dot(d0)*d0)/fb;local cl=fb/(2*fb/fa-d3)local fd=fc:len()local ek=fc:normalize()local fe=cl*(1-fd)local ff=cl*(1+fd)local fg=fe*ek+self.body.center;local fh=fd<=1 and-ff*ek+self.body.center or nil;local fi=math.sqrt(cl*fb*(1-fd*fd))local fj=fh and 2*math.pi*math.sqrt(cl^3/fb)local fk=math.acos(fc:dot(f9)/(fd*fa))if f9:dot(d0)<0 then fk=-(fk-2*math.pi)end;local fl=math.acos((math.cos(fk)+fd)/(1+fd*math.cos(fk)))local fm=fl;if fm<0 then fm=fm+2*math.pi end;local fn=fm-fd*math.sin(fm)local fo=0;local fp=0;local fq=0;if fj~=nil then fo=fn/(2*math.pi/fj)fp=fj-fo;fq=fp+fj/2;if fk-math.pi>0 then fp=fo;fq=fp+fj/2 end;if fq>fj then fq=fq-fj end end;return{periapsis={position=fg,speed=fi/fe,circularOrbitSpeed=math.sqrt(fb/fe),altitude=fe-self.body.radius},apoapsis=fh and{position=fh,speed=fi/ff,circularOrbitSpeed=math.sqrt(fb/ff),altitude=ff-self.body.radius},currentVelocity=d0,currentPosition=db,eccentricity=fd,period=fj,eccentricAnomaly=fl,meanAnomaly=fn,timeToPeriapsis=fp,timeToApoapsis=fq}end;local function fr(fs)local eu=dg.BodyParameters(fs.planetarySystemId,fs.bodyId,fs.radius,fs.center,fs.GM)return setmetatable({body=eu},Kepler)end;return setmetatable(Kepler,{__call=function(_,...)return fr(...)end})end;local function ft()local fu=0;local function fv(fw)local dI=500000;local fx,fy,fz=math.huge;local fA=false;local fB=vec3({13771471,7435803,-128971})local fC=18000000;fx=vec3(fw):dist(fB)if fx<fC then return true,c(fx-fC),"Safe Zone",0 end;fy=vec3(fw):dist(vec3(planet.center))if fy<dI then fA=true end;if c(fy-dI)<c(fx-fC)then return fA,c(fy-dI),planet.name,planet.bodyId else return fA,c(fx-fC),"Safe Zone",0 end end;local function fD(d0)if aI==1920 then return d0 else return x(aI*d0/1920,0)end end;local function fE(d0)if aJ==1080 then return d0 else return x(aJ*d0/1080,0)end end;local function fF()return w()==0 and userControlScheme~="keyboard"and l()==0 end;local function fG()local fH="TRAVEL"if not bN then fH="CRUISE"end;if Autopilot then fH="AUTOPILOT"end;return fH end;local function fI(fJ,aZ,cb,fK,fL,fM,fN,fO)local fP=1;local fQ=2;local fR=3;local fS=4;local fT=5;local fU=6;local fV=""local fW=0;local fX=fuelY;local fY=fuelY+5;if not BarFuelDisplay then fY=fY+5 end;if l()==1 and not RemoteHud then fX=fX-50;fY=fY-50 end;if fL=="ATMO"then fV="atmofueltank"elseif fL=="SPACE"then fV="spacefueltank"else fV="rocketfueltank"end;fW=_G[fV.."_size"]if#fM>0 then for i=1,#fM do local fZ=string.sub(fM[i][fQ],1,12)local f_=0;for g0=1,fW do if fM[i][fQ]==f(unit[fV.."_"..g0].getData()).name then f_=g0;break end end;if aZ or fN[i]==nil or fO[i]==nil then local g1=0;local g2=0;local g3=0;local g4=0;local g5=p()if f_~=0 then fO[i]=f(unit[fV.."_"..f_].getData()).percentage;fN[i]=f(unit[fV.."_"..f_].getData()).timeLeft;if fN[i]=="n/a"then fN[i]=0 end else g3=k(fM[i][fP])-fM[i][fS]g1=fM[i][fR]fO[i]=d(0.5+g3*100/g1)g2=fM[i][fT]g4=fM[i][fU]if g2<=g3 then fN[i]=0 else fN[i]=d(0.5+g3/((g2-g3)/(g5-g4)))end;fM[i][fT]=g3;fM[i][fU]=g5 end end;if fZ==fK then fZ=e("%s %d",fL,i)end;if f_==0 then fZ=fZ.." *"end;local g6;if fN[i]==0 then g6=""else g6=cR(fN[i])end;if fO[i]~=nil then local g7=d(fO[i]*2.55)local g8=e("rgb(%d,%d,%d)",255-g7,g7,0)local ce=""if g6~=""and fN[i]<120 or fO[i]<5 then if aZ then ce=[[class="red"]]end end;if BarFuelDisplay then table.insert(fJ,e([[
                                            <g class="pdim">                        
                                            <rect fill=grey class="bar" x="%d" y="%d" width="100" height="13"></rect></g>
                                            <g class="bar txtstart">
                                            <rect fill=%s width="%d" height="13" x="%d" y="%d"></rect>
                                            <text fill=black x="%d" y="%d">%s%% %s</text>
                                            </g>]],cb,fY,g8,fO[i],cb,fY,cb+2,fY+10,fO[i],g6))fJ[#fJ+1]=ca(cb,fX,fZ,ce.."txtstart pdim txtfuel")fX=fX-30;fY=fY-30 else fJ[#fJ+1]=ca(cb,fX,fZ,ce.." pdim txtfuel")fJ[#fJ+1]=ca(cb,fY,e("%d%% %s",fO[i],g6),"pdim txtfuel","fill:"..g8)fX=fX+30;fY=fY+30 end end end end end;local function g9(fJ,dQ)if dQ<200000 and not ap or dQ and ap then local ga=0;if c(bH)>1 then ga=45*math.log(c(bH),10)if bH<0 then ga=-ga end end;fJ[#fJ+1]=e([[
                                <g class="pbright txt txtvspd" transform="translate(%d %d) scale(0.6)">
                                        <text x="31" y="-41">1000</text>
                                        <text x="-10" y="-65">100</text>
                                        <text x="-54" y="-45">10</text>
                                        <text x="-73" y="3">O</text>
                                        <text x="-56" y="52">-10</text>
                                        <text x="-14" y="72">-100</text>
                                        <text x="29" y="50">-1000</text>
                                        <text x="85" y="0" class="txtvspdval txtend">%d m/s</text>
                                    <g class="linethick">
                                        <path d="m-41 75 2.5-4.4m17 12 1.2-4.9m20 7.5v-10m-75-34 4.4-2.5m-12-17 4.9-1.2m17 40 7-7m-32-53h10m34-75 2.5 4.4m17-12 1.2 4.9m20-7.5v10m-75 34 4.4 2.5m-12 17 4.9 1.2m17-40 7 7m-32 53h10m116 75-2.5-4.4m-17 12-1.2-4.9m40-17-7-7m-12-128-2.5 4.4m-17-12-1.2 4.9m40 17-7 7"/>
                                        <circle r="90" />
                                    </g>
                                    <path transform="rotate(%d)" d="m-0.094-7c-22 2.2-45 4.8-67 7 23 1.7 45 5.6 67 7 4.4-0.068 7.8-4.9 6.3-9.1-0.86-2.9-3.7-5-6.8-4.9z" />
                                </g>
                            ]],vSpdMeterX,vSpdMeterY,d(bH),d(ga))end;return fJ end;local function gb(gc)local gd=-bG;gc=gc-gc:project_on(gd)local ge=vec3(0,0,1)ge=ge-ge:project_on(gd)local gf=ge:cross(gd)local ga=ge:angle_between(gc)*constants.rad2deg;if gc:dot(gf)<0 then ga=360-ga end;return ga end;local function gg(fJ,centerX,centerY,gh,gi,cw)local gj=circleRad;local gk=20;local gl=d(gh)if cw then for i=-45,45,5 do local gm=i;fJ[#fJ+1]=e([[<g transform="rotate(%f,%d,%d)">]],gm,centerX,centerY)len=5;if i%15==0 then len=15 elseif i%10==0 then len=10 end;fJ[#fJ+1]=e([[<line x1=%d y1=%d x2=%d y2="%d"/></g>]],centerX,centerY+gj+gk-len,centerX,centerY+gj+gk)end;fJ[#fJ+1]=ca(centerX,centerY+gj+gk-35,gi,"pdim txt txtmid")fJ[#fJ+1]=ca(centerX,centerY+gj+gk-25,gl.." deg","pdim txt txtmid")fJ[#fJ+1]=e([[<g transform="rotate(%f,%d,%d)">]],-gh,centerX,centerY)fJ[#fJ+1]=e([[<<polygon points="%d,%d %d,%d %d,%d"/>]],centerX-5,centerY+gj+gk-20,centerX+5,centerY+gj+gk-20,centerX,centerY+gj+gk-15)fJ[#fJ+1]="</g>"end;local gn=gl;if cw then gn=gb(bC)end;local go=20;local gp=d(gn)local gq=0;local gr=centerY+gj+gk+20;local gs=centerX;if gi~="YAW"then gr=fE(130)gs=fD(960)end;local gt=[[<path class="txttick line" d="]]local gu=d(gp-(go+10)-gp%5+0.5)for i=gu+60,gu,-5 do local cb=gs-(-i*5+gn*5)if i%10==0 then gq=10;local num=i;if num==360 then num=0 elseif num>360 then num=num-360 elseif num<0 then num=num+360 end;fJ[#fJ+1]=ca(cb+5,gr-12,num)elseif i%5==0 then gq=5 end;if gq==10 then gt=e([[%s M %f %f v %d]],gt,cb,gr-5,gq)else gt=e([[%s M %f %f v %d]],gt,cb,gr-2.5,gq)end end;fJ[#fJ+1]=gt..[["/>]]fJ[#fJ+1]=e([[<<polygon points="%d,%d %d,%d %d,%d"/>]],gs-5,gr+10,gs+5,gr+10,gs,gr+5)if cw then gi="HDG"end;fJ[#fJ+1]=ca(gs,gr+25,gp.."deg","pdim txt txtmid","")fJ[#fJ+1]=ca(gs,gr+35,gi,"pdim txt txtmid","")end;local function gv(fJ,gw,gh,centerX,centerY,cw,gx,f5)local gj=circleRad;local gy=d(gj*3/5)if gj>0 then local gz=d(gw)local len=0;local gt=e([[<path transform="rotate(%f,%d,%d)" class="dim line" d="]],-1*gh,centerX,centerY)if not ap then gt=e([[<path transform="rotate(0,%d,%d)" class="dim line" d="]],centerX,centerY)end;fJ[#fJ+1]=e([[<clipPath id="cut"><circle r="%f" cx="%d" cy="%d"/></clipPath>]],gj-1,centerX,centerY)fJ[#fJ+1]=[[<g class="dim txttick" clip-path="url(#cut)">]]for i=d(gz-30-gz%5+0.5),d(gz+30+gz%5+0.5),5 do if i%10==0 then len=30 elseif i%5==0 then len=20 end;local cc=centerY+-i*5+gw*5;if len==30 then gt=e([[%s M %d %f h %d]],gt,centerX-gy-len,cc,len)if ap then fJ[#fJ+1]=e([[<g path transform="rotate(%f,%d,%d)" class="pdim txt txtmid"><text x="%d" y="%f">%d</text></g>]],-1*gh,centerX,centerY,centerX-gy+10,cc,i)fJ[#fJ+1]=e([[<g path transform="rotate(%f,%d,%d)" class="pdim txt txtmid"><text x="%d" y="%f">%d</text></g>]],-1*gh,centerX,centerY,centerX+gy-10,cc,i)if i==0 or i==180 or i==-180 then fJ[#fJ+1]=e([[<path transform="rotate(%f,%d,%d)" d="m %d,%f %d,0" stroke-width="1" style="fill:none;stroke:#F5B800;" />]],-1*gh,centerX,centerY,centerX-gy+20,cc,gy*2-40)end else fJ[#fJ+1]=ca(centerX-gy+10,cc,i,"pdim txt txtmid")fJ[#fJ+1]=ca(centerX+gy-10,cc,i,"pdim txt txtmid")end;gt=e([[%s M %d %f h %d]],gt,centerX+gy,cc,len)else gt=e([[%s M %d %f h %d]],gt,centerX-gy-len,cc,len)gt=e([[%s M %d %f h %d]],gt,centerX+gy,cc,len)end end;fJ[#fJ+1]=gt..[["/>]]local gA="PITCH"if not cw then gA="REL PITCH"end;if gw>90 and not ap then gw=90-(gw-90)elseif gw<-90 and not ap then gw=-90-(gw+90)end;if gj>200 then if ap then if f5>O then fJ[#fJ+1]=ca(centerX,centerY-15,"Yaw","pdim txt txtmid")fJ[#fJ+1]=ca(centerX,centerY+20,gx,"pdim txt txtmid")end;fJ[#fJ+1]=e([[<g transform="rotate(%f,%d,%d)">]],-gh,centerX,centerY)else fJ[#fJ+1]=e([[<g transform="rotate(0,%d,%d)">]],centerX,centerY)end;fJ[#fJ+1]=e([[<<polygon points="%d,%d %d,%d %d,%d"/> class="pdim txtend"><text x="%d" y="%f">%d</text>]],centerX-gy+25,centerY-5,centerX-gy+20,centerY,centerX-gy+25,centerY+5,centerX-gy+50,centerY+4,gz)fJ[#fJ+1]=e([[<<polygon points="%d,%d %d,%d %d,%d"/> class="pdim txtend"><text x="%d" y="%f">%d</text>]],centerX+gy-25,centerY-5,centerX+gy-20,centerY,centerX+gy-25,centerY+5,centerX+gy-30,centerY+4,gz)fJ[#fJ+1]="</g>"end;local gB=d(gj/3)fJ[#fJ+1]=e([[<path d="m %d,%d %d,0" stroke-width="2" style="fill:none;stroke:#F5B800;" />]],centerX-gB,centerY,gj-gB)if not ap and cw then fJ[#fJ+1]=e([[<path transform="rotate(%f,%d,%d)" d="m %d,%f %d,0" stroke-width="1" style="fill:none;stroke:#F5B800;" />]],-1*gh,centerX,centerY,centerX-gy+10,centerY,gy*2-20)end;fJ[#fJ+1]="</g>"if gj<200 then if ap and f5>O then fJ[#fJ+1]=ca(centerX,centerY-gj,gA,"pdim txt txtmid")fJ[#fJ+1]=ca(centerX,centerY-gj+10,gz,"pdim txt txtmid")fJ[#fJ+1]=ca(centerX,centerY-15,"Yaw","pdim txt txtmid")fJ[#fJ+1]=ca(centerX,centerY+20,gx,"pdim txt txtmid")else fJ[#fJ+1]=ca(centerX,centerY-gj,gA,"pdim txt txtmid")fJ[#fJ+1]=ca(centerX,centerY-gj+15,gz,"pdim txt txtmid")end end end end;local function gC(fJ,dQ,cw)local gD=altMeterX;local gE=altMeterY;local gF=78;local gG=19;local gH=an;if an~=-1 then fJ[#fJ+1]=ca(gD+gF,gE+gG+20,e("AGL: %.1fm",an),"pdim altsm txtend")end;if cw and(dQ<200000 and not ap or dQ and ap)then table.insert(fJ,e([[
                                <g class="pdim">                        
                                    <rect class="line" x="%d" y="%d" width="%d" height="%d"/> 
                                    <clipPath id="alt"><rect class="line" x="%d" y="%d" width="%d" height="%d"/></clipPath>
                                    <g clip-path="url(#alt)">]],gD-1,gE-4,gF+2,gG+6,gD+1,gE-1,gF-4,gG))local cz=0;local gI=1;local gJ=0;local gK=dQ<0;local gL=9;if gK then gL=0 end;local dQ=c(dQ)while cz<6 do local gM=11;local gN=16;local gO=9;local gP=14;local ce="altsm"if cz>2 then gN=gN+3;gM=gM+2;gP=gP+2;gO=gO-6;ce="altbig"end;if gK then ce=ce.." red"end;local gQ=dQ/gI%10;local gR=d(gQ)local gS=d((gR+1)%10)local gT=gJ;if cz==0 then gT=gQ-gR;if gK then gT=1-gT end end;if gK and(cz==0 or gJ~=0)then local gU=gS;gS=gR;gR=gU end;local gV=gN*(gT-1)local gW=gV+gN;local cb=gD+gO+(6-cz)*gM;local cc=gE+gP;fJ[#fJ+1]=ca(cb,cc+gV,gS,ce)fJ[#fJ+1]=ca(cb,cc+gW,gR,ce)cz=cz+1;gI=gI*10;if gR==gL then gJ=gT else gJ=0 end end;table.insert(fJ,[[</g></g>]])end end;local function gX(f8)f8=vec3(f8)local gY=-math.deg(m(f8.y,f8.z))+180;gY=gY-90;if gY<0 then gY=360+gY end;if gY>180 then gY=-180+gY-180 end;return-gY end;local function gZ(f8)f8=vec3(f8)local gn=math.deg(m(f8.y,f8.x))-90;if gn<-180 then gn=360+gn end;return gn end;local function g_(fJ,f8,f5,centerX,centerY)if f5>5 and not ap or f5>O then local gj=circleRad;local h0=20;local h1=20;local h2=vec3(f8)local h3=gX(h2)local h4=gZ(h2)local h5=14;local h6=h5/2;local h7=-h4/h1*gj;local h8=h3/h0*gj;local cb=centerX+h7;local cc=centerY+h8;local ah=math.sqrt(h7^2+h8^2)local h9=[[<circle
                            cx="]]..cb..[["
                            cy="]]..cc..[["
                            r="]]..h6/h5 ..[["
                            style="fill:#d7fe00;stroke:none;fill-opacity:1"/>
                        <circle
                            cx="]]..cb..[["
                            cy="]]..cc..[["
                            r="]]..h6 ..[["
                            style="stroke:#d7fe00;stroke-opacity:1;fill:none" />
                        <path
                            d="M ]]..cb-h5 ..[[,]]..cc..[[ h ]]..h6 ..[["
                            style="stroke:#d7fe00;stroke-opacity:1" />
                        <path
                            d="M ]]..cb+h6 ..[[,]]..cc..[[ h ]]..h6 ..[["
                            style="stroke:#d7fe00;stroke-opacity:1" />
                        <path
                            d="M ]]..cb..[[,]]..cc-h5 ..[[ v ]]..h6 ..[["
                            style="stroke:#d7fe00;stroke-opacity:1" />]]if ah<gj then fJ[#fJ+1]=h9 else local ga=m(h8,h7)local ha=4;local hb=centerX+gj*math.cos(ga)local hc=centerY+gj*math.sin(ga)fJ[#fJ+1]=e('<g transform="rotate(%f %f %f)"><rect x="%f" y="%f" width="%f" height="%f" stroke="#d7fe00" fill="#d7fe00" /><path d="M %f %f l %f %f l %f %f z" fill="#d7fe00" stroke="#d7fe00"></g>',ga*180/math.pi,hb,hc,hb-ha,hc-ha/2,ha*2,ha,hb+ha,hc-ha,ha,ha,-ha,ha)end;if not ap then h3=gX(-h2)h4=gZ(-h2)h7=-h4/h1*gj;h8=h3/h0*gj;cb=centerX+h7;cc=centerY+h8;ah=math.sqrt(h7^2+h8^2)if ah<gj then local hd=[[<circle
                                    cx="]]..cb..[["
                                    cy="]]..cc..[["
                                    r="]]..h6 ..[["
                                    style="stroke:#d7fe00;stroke-opacity:1;fill:none" />
                                <path
                                    d="M ]]..cb..[[,]]..cc-h5 ..[[ v ]]..h6 ..[["
                                    style="stroke:#d7fe00;stroke-opacity:1" id="l"/>
                                <use
                                    xlink:href="#l"
                                    transform="rotate(120,]]..cb..[[,]]..cc..[[)" />
                                <use
                                    xlink:href="#l"
                                    transform="rotate(-120,]]..cb..[[,]]..cc..[[)" />
                                <path
                                    d="M ]]..cb-h6 ..[[,]]..cc..[[ h ]]..h5 ..[["
                                    style="stroke-width:0.5;stroke:#d7fe00;stroke-opacity:1"
                                    transform="rotate(-45,]]..cb..[[,]]..cc..[[)" id="c"/>
                                <use
                                    xlink:href="#c"
                                    transform="rotate(-90,]]..cb..[[,]]..cc..[[)"/>]]fJ[#fJ+1]=hd end end end end;local function he(fJ,fH,hf,hg)hf=d(hf+0.5)local fX=throtPosY+10;local fY=throtPosY+20;if l()==1 and not RemoteHud then fX=55;fY=65 end;local hh="CRUISE"local unit="km/h"local ch=hg;if fH=="TRAVEL"or fH=="AUTOPILOT"then hh="THROT"unit="%"ch=hf;local hi="dim"if hf<0 then hi="red"end;fJ[#fJ+1]=e([[<g class="%s">
                                <path class="linethick" d="M %d %d L %d %d L %d %d L %d %d"/>
                                <g transform="translate(0 %.0f)">
                                    <polygon points="%d,%d %d,%d %d,%d"/>
                                </g>]],hi,throtPosX-7,throtPosY-50,throtPosX,throtPosY-50,throtPosX,throtPosY+50,throtPosX-7,throtPosY+50,1-c(hf),throtPosX-10,throtPosY+50,throtPosX-15,throtPosY+53,throtPosX-15,throtPosY+47)end;fJ[#fJ+1]=ca(throtPosX+10,fX,hh,"pbright txtstart")fJ[#fJ+1]=ca(throtPosX+10,fY,e("%.0f %s",ch,unit),"pbright txtstart")if ap and AtmoSpeedAssist and bN and I then hf=d(J*100+0.5)local hi="red"if hf<0 then hi="red"end;fJ[#fJ+1]=e([[<g class="%s">
                                <g transform="translate(0 %d)">
                                    <polygon points="%d,%d %d,%d %d,%d"/>
                                </g></g>]],hi,1-c(hf),throtPosX-10,throtPosY+50,throtPosX-15,throtPosY+53,throtPosX-15,throtPosY+47)fJ[#fJ+1]=ca(throtPosX+10,fX+40,"LIMIT","pbright txtstart")fJ[#fJ+1]=ca(throtPosX+10,fY+40,hf.."%","pbright txtstart")end;if ap and AtmoSpeedAssist or Reentry then fJ[#fJ+1]=ca(throtPosX+10,fX-40,"LIMIT: "..bl.." km/h","dim txtstart")elseif not ap and Autopilot then fJ[#fJ+1]=ca(throtPosX+10,fX-40,"LIMIT: "..d(MaxGameVelocity*3.6+0.5).." km/h","dim txtstart")end end;local function hj(fJ,hk)local hl=throtPosY-10;local hm=throtPosX+10;fJ[#fJ+1]=ca(0,0,"","pdim txt txtend")if l()==1 and not RemoteHud then hl=75 end;fJ[#fJ+1]=ca(hm,hl,d(hk).." km/h","pbright txtbig txtstart")end;local function hn(fJ)fJ[#fJ+1]=ca(fD(1900),fE(1070),e("ARCH Hud Version: %.3f",VERSION_NUMBER),"hudver")fJ[#fJ+1]=[[<g class="warnings">]]if unit.isMouseControlActivated()==1 then fJ[#fJ+1]=ca(fD(960),fE(550),"Warning: Invalid Control Scheme Detected","warnings")fJ[#fJ+1]=ca(fD(960),fE(600),"Keyboard Scheme must be selected","warnings")fJ[#fJ+1]=ca(fD(960),fE(650),"Set your preferred scheme in Lua Parameters instead","warnings")end;local ho=fD(960)local hp=fE(860)local hq=fE(880)local hr=fE(900)local hs=fE(960)local ht=fE(200)local hu=fE(250)local hv=fE(960)if l()==1 and not RemoteHud then hp=fE(135)hq=fE(155)hr=fE(175)ht=fE(115)hu=fE(95)end;if BrakeIsOn then fJ[#fJ+1]=ca(ho,hp,"Brake Engaged","warnings")elseif H>0 then fJ[#fJ+1]=ca(ho,hp,"Auto-Brake Engaged","warnings","opacity:"..H)end;if ap and bg and an==-1 then if not Autopilot and not VectorToTarget and not BrakeLanding and not bL and not VertTakeOff and not AutoTakeoff then fJ[#fJ+1]=ca(ho,ht+50,"** STALL WARNING **","warnings")bY("stall","SW",2)end end;if bX then fJ[#fJ+1]=ca(ho,ht+70,"Flight Assist in Progress","warnings")end;if aw then fJ[#fJ+1]=ca(ho,hv,"Gyro Enabled","warnings")end;if GearExtended then if Q then fJ[#fJ+1]=ca(ho,hq,"Gear Extended","warn")else fJ[#fJ+1]=ca(ho,hq,"Landed (G: Takeoff)","warnings")end;local hw=cn(a:getTargetGroundAltitude())fJ[#fJ+1]=ca(ho,hr,"Hover Height: "..hw,"warn")end;if a5 then fJ[#fJ+1]=ca(ho,hs+20,"ROCKET BOOST ENABLED","warn")end;if antigrav and not ExternalAGG and bL and AntigravTargetAltitude~=nil then if c(ar-antigrav.getBaseAltitude())<501 then fJ[#fJ+1]=ca(ho,ht+15,e("AGG On - Target Altitude: %d Singularity Altitude: %d",d(AntigravTargetAltitude),d(antigrav.getBaseAltitude())),"warn")else fJ[#fJ+1]=ca(ho,ht+15,e("AGG On - Target Altitude: %d Singluarity Altitude: %d",d(AntigravTargetAltitude),d(antigrav.getBaseAltitude())),"warnings")end elseif Autopilot and AutopilotTargetName~="None"then fJ[#fJ+1]=ca(ho,ht+20,"Autopilot "..AutopilotStatus,"warn")elseif LockPitch~=nil then fJ[#fJ+1]=ca(ho,ht+20,e("LockedPitch: %d",d(LockPitch)),"warn")elseif Y then fJ[#fJ+1]=ca(ho,ht+20,"Follow Mode Engaged","warn")elseif Reentry then fJ[#fJ+1]=ca(ho,ht+20,"Re-entry in Progress","warn")end;local hx,ep,eq=b5:getPlanetarySystem(0):castIntersections(bI,bE:normalize(),function(ef)if ef.noAtmosphericDensityAltitude>0 then return ef.radius+ef.noAtmosphericDensityAltitude else return ef.radius+ef.surfaceMaxAltitude*1.5 end end)local hy=ep;if eq~=nil and ep~=nil then hy=math.min(eq,ep)end;if AltitudeHold or VertTakeOff then local hw=cn(HoldAltitude,2)if VertTakeOff then if bL then hw=cn(antigrav.getBaseAltitude(),2).." AGG singularity height"end;fJ[#fJ+1]=ca(ho,ht,"VTO to "..hw,"warn")elseif AutoTakeoff and not IntoOrbit then if al then fJ[#fJ+1]=ca(ho,ht,"Takeoff to "..AutopilotTargetName,"warn")else fJ[#fJ+1]=ca(ho,ht,"Takeoff to "..hw,"warn")end;if BrakeIsOn and not VertTakeOff then fJ[#fJ+1]=ca(ho,ht+50,"Throttle Up and Disengage Brake For Takeoff","crit")end else fJ[#fJ+1]=ca(ho,ht,"Altitude Hold: "..hw,"warn")end end;if VertTakeOff and(antigrav~=nil and antigrav)then if aq>0.1 then fJ[#fJ+1]=ca(ho,ht+20,"Beginning ascent","warn")elseif aq<0.09 and aq>0.05 then fJ[#fJ+1]=ca(ho,ht+20,"Aligning trajectory","warn")elseif aq<0.05 then fJ[#fJ+1]=ca(ho,ht+20,"Leaving atmosphere","warn")end end;if IntoOrbit then if bn~=nil then fJ[#fJ+1]=ca(ho,ht,bn,"warn")end end;if IntruderAlertSystem and safeMass==-1 then fJ[#fJ+1]=ca(ho,ht+70,"POSSIBLE INTRUDER ALERT - MASS GAIN OF "..bJ.."kg DETECTED","warnings")bY("alarm","AL",2)end;if BrakeLanding then if StrongBrakes then fJ[#fJ+1]=ca(ho,ht,"Brake-Landing","warnings")else fJ[#fJ+1]=ca(ho,ht,"Coast-Landing","warnings")end end;if ProgradeIsOn then fJ[#fJ+1]=ca(ho,ht,"Prograde Alignment","crit")end;if RetrogradeIsOn then fJ[#fJ+1]=ca(ho,ht,"Retrograde Alignment","crit")end;if hy~=nil and aq==0 then local hw=cn(hy)local travelTime=b6.computeTravelTime(bF,0,hy)local hz="Collision"if hx.noAtmosphericDensityAltitude>0 then hz="Atmosphere"end;fJ[#fJ+1]=ca(ho,hu+20,hx.name.." "..hz.." "..cR(travelTime).." In "..hw,"crit")end;if VectorToTarget and not IntoOrbit then fJ[#fJ+1]=ca(ho,ht+35,VectorStatus,"warn")end;fJ[#fJ+1]="</g>"return fJ end;local function hA(f5)return d(x(f5*3.6,0)+0.5).." km/h"end;local function hB(fJ)local hC=OrbitMapX;local hD=OrbitMapY;local hE=OrbitMapSize;local hF=4;local hG=15;local cb=0;local cc=0;local hH,hI,hJ,hK;local function hL(type)local hM,A,f5,hN;if type=="Periapsis"then hM=orbit.periapsis.altitude;A=orbit.timeToPeriapsis;f5=orbit.periapsis.speed;hN=35 else hM=orbit.apoapsis.altitude;A=orbit.timeToApoapsis;f5=orbit.apoapsis.speed;hN=-35 end;fJ[#fJ+1]=e([[<line class="pdim op30 linethick" x1="%f" y1="%f" x2="%f" y2="%f"/>]],cb+hN,cc-5,hC+hE/2-hH+hK,cc-5)fJ[#fJ+1]=ca(cb,cc,type)cc=cc+hG;local hw=cn(hM)fJ[#fJ+1]=ca(cb,cc,hw)cc=cc+hG;fJ[#fJ+1]=ca(cb,cc,cR(A))cc=cc+hG;fJ[#fJ+1]=ca(cb,cc,hA(f5))end;if orbit~=nil and aq<0.2 and planet~=nil and orbit.apoapsis~=nil and orbit.periapsis~=nil and orbit.period~=nil and orbit.apoapsis.speed>5 and DisplayOrbit then hD=hD+hF;cb=hC+hE+hC/2+hF;cc=hD+hE/2+5+hF;hH=hE/4;hK=0;fJ[#fJ+1]=[[<g class="pbright txtorb txtmid">]]fJ[#fJ+1]=e('<rect width="%f" height="%d" rx="10" ry="10" x="%d" y="%d" style="fill:rgb(0,0,100);stroke-width:4;stroke:white;fill-opacity:0.3;" />',hE+hC*2,hE+hD,hF,hF)if orbit.periapsis~=nil and orbit.apoapsis~=nil then hJ=(orbit.apoapsis.altitude+orbit.periapsis.altitude+planet.radius*2)/(hH*2)hI=(planet.radius+orbit.periapsis.altitude+(orbit.apoapsis.altitude-orbit.periapsis.altitude)/2)/hJ*(1-orbit.eccentricity)hK=hH-orbit.periapsis.altitude/hJ-planet.radius/hJ;local hO=""if orbit.periapsis.altitude<=0 then hO='redout'end;fJ[#fJ+1]=e([[<ellipse class="%s line" cx="%f" cy="%f" rx="%f" ry="%f"/>]],hO,hC+hE/2+hK+hF,hD+hE/2+hF,hH,hI)fJ[#fJ+1]=e('<circle cx="%f" cy="%f" r="%f" stroke="white" stroke-width="3" fill="blue" />',hC+hE/2+hF,hD+hE/2+hF,planet.radius/hJ)end;if orbit.apoapsis~=nil and orbit.apoapsis.speed<MaxGameVelocity and orbit.apoapsis.speed>1 then hL("Apoapsis")end;cc=hD+hE/2+5+hF;cb=hC-hC/2+10+hF;if orbit.periapsis~=nil and orbit.periapsis.speed<MaxGameVelocity and orbit.periapsis.speed>1 then hL("Periapsis")end;fJ[#fJ+1]=ca(hC+hE/2+hF,planet.name,20+hF,"txtorbbig")if orbit.period~=nil and orbit.periapsis~=nil and orbit.apoapsis~=nil and orbit.apoapsis.speed>1 then local hP=orbit.timeToApoapsis/orbit.period*2*math.pi;local hQ=hH*math.cos(hP)local hR=hI*math.sin(hP)fJ[#fJ+1]=e('<circle cx="%f" cy="%f" r="5" stroke="white" stroke-width="3" fill="white" />',hC+hE/2+hQ+hK+hF,hD+hE/2+hR+hF)end;fJ[#fJ+1]=[[</g>]]return fJ else return fJ end end;local function hS()if radarPanelID~=nil and aj==0 then s(radarPanelID)radarPanelID=nil;if perisPanelID~=nil then s(perisPanelID)perisPanelID=nil end else if aj==1 then s(radarPanelID)radarPanelID=nil;_autoconf.displayCategoryPanel(radar,radar_size,L_TEXT("ui_lua_widget_periscope", "Periscope"),"periscope")perisPanelID=_autoconf.panels[_autoconf.panels_size]end;placeRadar=true;if radarPanelID==nil and placeRadar then _autoconf.displayCategoryPanel(radar,radar_size,L_TEXT("ui_lua_widget_radar", "Radar"),"radar")radarPanelID=_autoconf.panels[_autoconf.panels_size]placeRadar=false end;aj=0 end end;local function hT(fJ)local cb=30;local cc=275;local hU={"Alt-1: Increment Interplanetary Helper","Alt-2: Decrement Interplanetary Helper","Alt-3: Toggle Vanilla Widget view"}local hV={"","------------------IN ATMO-----------------","Alt-4: Autopilot in atmo to target","Alt-4-4: Autopilot to LowOrbitHeight over atmosphere and orbit to target","Alt-6: Altitude hold at current altitude","Alt-6-6: Altitude Hold at 11% atmosphere"}local hW={"","------------------NO ATMO-----------------","Alt-4 (Alt < 100k): Autopilot to Orbit and land","Alt-4 (Alt > 100k): Autopilot to target","Alt-6: Orbit at current altitude","Alt-6-6: Orbit at LowOrbitHeight over atmosphere"}local hX={"","------------------ALWAYS--------------------","Alt-5: Lock Pitch at current pitch","Alt-7: Toggle InHud Sounds","Alt-8: Toggle ground stabilization (underwater flight)","Alt-9: Activate Gyroscope","","CTRL: Toggle Brakes on and off, cancels active AP","LeftAlt: Tap to shift freelook on and off","Shift: Hold while not in freelook to see Buttons","Type /commands or /help in lua chat to see text commands"}if ap then c0(hU,hV)table.insert(hU,"--------------CONDITIONAL-----------------")if VertTakeOff then table.insert(hU,"Hit Alt-6 before exiting Atmosphere during VTO to hold in level flight")end;if an~=-1 then if antigrav then if bL then table.insert(hU,"Alt-6: AGG is on, will takeoff to AGG Height")else table.insert(hU,"Turn on AGG to takeoff to AGG Height")end end;if VertTakeOffEngine then table.insert(hU,"Alt-6: Begins Vertical Takeoff.")else table.insert(hU,"Alt-4/Alt-6: Autotakeoff if below hoverheight")end else table.insert(hU,"G: Begin BrakeLanding or Land")end else c0(hU,hW)end;if AltitudeHold then table.insert(hU,"Alt-Spacebar/Alt-C will raise/lower target height")end;c0(hU,hX)for i=1,#hU do cc=cc+12;fJ[#fJ+1]=ca(cb,cc,hU[i],"pdim txttick txtstart")end end;local function hY(hZ,h_)local i0;local i1=(h_-hZ):normalize()local f9=(bI-hZ):dot(i1)/i1:dot(i1)if f9<=0.then return(bI-hZ):len()elseif f9>=(h_-hZ):len()then return(bI-h_):len()end;local i2=hZ+f9*i1;i0=(i2-bI):len()return i0 end;local function i3()local i0;local i4=nil;local i5=nil;local i6=nil;for c_,i7 in pairs(b0[0])do if i7.hasAtmosphere then local ah=hY(planet.center,i7.center)if i4==nil or ah<i4 then i5=i7;i4=ah;i6=planet end;if aa and aa.hasAtmosphere and aa.name~=planet.name then local ev=hY(aa.center,i7.center)if ev<i4 then i5=i7;i4=ev;i6=aa end end end end;local i8=fD(1770)local i9=fE(330)if i4 then local ia="txttick "local ib=500000;if i4<i5.radius+ib or i4<i6.radius+ib then if bU then ia="txttick red "else ia="txttick orange "end end;i0=cn(i4,2)bW=ca(i8,i9,"Pipe ("..i6.name.."--"..i5.name.."): "..i0,ia.."pbright txtmid")end end;local ic={}function ic.HUDPrologue(fJ)bU,fu,_,_=fv(bI)if not bU then D=PvPR;F=PvPG;E=PvPB else D=SafeR;F=SafeG;E=SafeB end;ay=[[rgb(]]..d(D+0.5)..","..d(F+0.5)..","..d(E+0.5)..[[)]]az=[[rgb(]]..d(D*0.9+0.5)..","..d(F*0.9+0.5)..","..d(E*0.9+0.5)..[[)]]local id=ay;local ie=az;local ig=ay;local ih=az;if fF()and not brightHud then id=[[rgb(]]..d(D*0.4+0.5)..","..d(F*0.4+0.5)..","..d(E*0.3+0.5)..[[)]]ie=[[rgb(]]..d(D*0.3+0.5)..","..d(F*0.3+0.5)..","..d(E*0.2+0.5)..[[)]]end;fJ[#fJ+1]=e([[
                        <head>
                            <style>
                                body {margin: 0}
                                svg {position:absolute;top:0;left:0;font-family:Montserrat;} 
                                .txt {font-size:10px;font-weight:bold;}
                                .txttick {font-size:12px;font-weight:bold;}
                                .txtbig {font-size:14px;font-weight:bold;}
                                .altsm {font-size:16px;font-weight:normal;}
                                .altbig {font-size:21px;font-weight:normal;}
                                .line {stroke-width:2px;fill:none}
                                .linethick {stroke-width:3px;fill:none}
                                .warnings {font-size:26px;fill:red;text-anchor:middle;font-family:Bank}
                                .warn {fill:orange;font-size:24px}
                                .crit {fill:darkred;font-size:28px}
                                .bright {fill:%s;stroke:%s}
                                .pbright {fill:%s;stroke:%s}
                                .dim {fill:%s;stroke:%s}
                                .pdim {fill:%s;stroke:%s}
                                .red {fill:red;stroke:red}
                                .orange {fill:orange;stroke:orange}
                                .redout {fill:none;stroke:red}
                                .op30 {opacity:0.3}
                                .op10 {opacity:0.1}
                                .txtstart {text-anchor:start}
                                .txtend {text-anchor:end}
                                .txtmid {text-anchor:middle}
                                .txtvspd {font-family:sans-serif;font-weight:normal}
                                .txtvspdval {font-size:20px}
                                .txtfuel {font-size:11px;font-weight:bold}
                                .txtorb {font-size:12px}
                                .txtorbbig {font-size:18px}
                                .hudver {font-size:10px;font-weight:bold;fill:red;text-anchor:end;font-family:Bank}
                                .msg {font-size:40px;fill:red;text-anchor:middle;font-weight:normal}
                                .cursor {stroke:white}
                            </style>
                        </head>
                        <body>
                            <svg height="100%%" width="100%%" viewBox="0 0 %d %d">
                            ]],id,id,ig,ig,ie,ie,ih,ih,aI,aJ)return fJ end;function ic.DrawVerticalSpeed(fJ,dQ)g9(fJ,dQ)end;function ic.UpdateHud(fJ)local dQ=ar;local f8=core.getVelocity()local f5=vec3(f8):len()local gY=bO;local ii=bP;local gh=ii;local gw=bO;local hf=d(unit.getThrottle())local hk=f5*3.6;local hg=unit.getAxisCommandValue(0)local ij=fD(1770)local ik=fE(310)if AtmoSpeedAssist and bN then hg=G;hf=G*100 end;local fH=fG()local gi="ROLL"local cw=unit.getClosestPlanetInfluence()>0;if hf==nil then hf=0 end;if not cw then if f5>5 then gY=gX(f8)ii=gZ(f8)else gY=0;ii=0 end;gi="YAW"end;if fu>50000 and not ap then local il;if fu>200000 then il=x(fu/200000,2).." su"else il=x(fu/1000,1).." km"end;fJ[#fJ+1]=ca(ij,ik,"PvP Boundary: "..il,"pbright txtbig txtmid")end;fJ[#fJ+1]=ai;fJ[#fJ+1]=aD;fJ[#fJ+1]=bV;if bW~=""then fJ[#fJ+1]=bW end;if a_%aU==0 then aZ=true end;if fuelX~=0 and fuelY~=0 then fI(fJ,aZ,fuelX,"Atmospheric ","ATMO",aN,aX,aY)fI(fJ,aZ,fuelX+120,"Space fuel t","SPACE",aO,aV,aW)fI(fJ,aZ,fuelX+240,"Rocket fuel ","ROCKET",aP,aS,aT)end;if aZ then aZ=false;a_=0 end;a_=a_+1;g9(fJ,dQ)if l()==0 or RemoteHud then if not fF()or brightHud then if cw then gg(fJ,centerX,centerY,gh,gi,cw)gv(fJ,gw,gh,centerX,centerY,cw,d(gZ(f8)),f5)else gg(fJ,centerX,centerY,ii,gi,cw)gv(fJ,gY,ii,centerX,centerY,cw,d(ii),f5)end;gC(fJ,dQ,cw)g_(fJ,f8,f5,centerX,centerY)end end;he(fJ,fH,hf,hg)hj(fJ,hk)hn(fJ)hB(fJ)if showHelp then hT(fJ)end;return fJ end;function ic.HUDEpilogue(fJ)fJ[#fJ+1]="</svg>"return fJ end;function ic.ExtraData(fJ)local im=fD(1240)local io=fE(55)local ip=io+10;local iq;local ir=0;local fH=fG()if VertTakeOffEngine then fH=fH.."-VERTICAL"end;if TurnBurn then fH="TB-"..fH end;if not stablized then fH=fH.."-DeCoupled"end;local is=vec3(core.getWorldAcceleration()):len()/9.80665;iq=core.g()fJ[#fJ+1]=[[<g class="pdim txt txtend">]]if l()==1 and not RemoteHud then im=fD(1120)io=fE(55)ip=io+10 elseif ap then local it=fD(770)fJ[#fJ+1]=ca(it,io,"ATMOSPHERE","pdim txt txtend")fJ[#fJ+1]=ca(it,ip,e("%.2f",aq),"pdim txt txtend","")end;fJ[#fJ+1]=ca(im,io,"GRAVITY","pdim txt txtend")fJ[#fJ+1]=ca(im,ip,e("%.2f",iq/9.80665),"pdim txt txtend")fJ[#fJ+1]=ca(im,io+20,"ACCEL","pdim txt txtend")fJ[#fJ+1]=ca(im,ip+20,e("%.2f",is),"pdim txt txtend")fJ[#fJ+1]=ca(fD(960),fE(180),fH,"txtbig txtmid")end;function ic.DrawOdometer(fJ,ab,TotalDistanceTravelled,ac)local iq;local iu=0;local iv=0;local ir=0;if ap then ir=LastMaxBrakeInAtmo else ir=LastMaxBrake end;maxThrust=a:maxForceForward()iq=core.g()if iq>0.1 then iv=au*iq;iu=maxThrust/iq end;fJ[#fJ+1]=e([[
                        <g class="pbright txt">
                        <path class="linethick" d="M %d 0 L %d %d Q %d %d %d %d L %d 0"/>]],fD(660),fD(700),fE(35),fD(960),fE(55),fD(1240),fE(35),fD(1280))if l()==0 or RemoteHud then fJ[#fJ+1]=ca(fD(700),fE(20),e("Trip: %.2f km",ab),"txtstart")fJ[#fJ+1]=ca(fD(700),fE(30),e("Lifetime: %.2f kSU",TotalDistanceTravelled/200000),"txtstart")fJ[#fJ+1]=ca(fD(830),fE(20),"Trip Time: "..cR(ac),"txtstart")fJ[#fJ+1]=ca(fD(830),fE(30),"Total Time: "..cR(TotalFlightTime),"txtstart")fJ[#fJ+1]=ca(fD(970),fE(20),e("Mass: %.2f Tons",au/1000),"txtstart")fJ[#fJ+1]=ca(fD(1240),fE(10),e("Max Brake: %.2f kN",ir/1000),"txtend")fJ[#fJ+1]=ca(fD(1240),fE(30),e("Max Thrust: %.2f kN",maxThrust/1000),"txtend")if iq>0.1 then fJ[#fJ+1]=ca(fD(970),fE(30),e("Max Mass: %.2f Tons",iu/1000),"txtstart")fJ[#fJ+1]=ca(fD(1240),fE(20),e("Req Thrust: %.2f kN",iv/1000),"txtend")else fJ[#fJ+1]=ca(fD(970),fE(30),"Max Mass: n/a","txtstart")fJ[#fJ+1]=ca(fD(1240),fE(20),"Req Thrust: n/a","txtend")end end;fJ[#fJ+1]="</g>"return fJ end;function ic.DrawWarnings(fJ)return hn(fJ)end;function ic.DisplayOrbitScreen(fJ)return hB(fJ)end;function ic.DisplayMessage(fJ,hw)if hw~="empty"then local cc=310;for iw in string.gmatch(hw,"([^\n]+)")do cc=cc+35;fJ[#fJ+1]=ca("50%",cc,iw,"msg")end end;if ag~=0 then unit.setTimer("msgTick",ag)ag=0 end end;function ic.DrawDeadZone(fJ)fJ[#fJ+1]=e([[<circle class="dim line" style="fill:none" cx="50%%" cy="50%%" r="%d"/>]],DeadZone)end;function ic.UpdatePipe()if ap then bW=""return end;i3()end;function ic.UpdateRadar()local function ix(iy,iz,iA,iB,iC,iD,iE,iF)iz,iB,iD,iF=vec3(iz),vec3(iB),vec3(iD),vec3(iF)local iG,iH,iI=iy*iy,iA*iA,iC*iC;local d3=iB-iz;local iJ=d3:normalize()local iK=d3:len()local d4=iD-iz;local iL=(d4-d4:project_on(iJ)):normalize()local iM,iN=d4:dot(iJ),d4:dot(iL)local iO=iM*iM+iN*iN;local iP=iJ:cross(iL)local cb=(iG-iH+iK*iK)/(2*iK)local cc=(iG-iI+iO-2*iM*cb)/(2*iN)local dr=iG-cb^2-cc^2;local iQ=math.sqrt(dr)local iR=iz+iJ*cb+iL*cc+iP*iQ;local iS=iz+iJ*cb+iL*cc-iP*iQ;if math.abs((iF-iR):len()-iE)<math.abs((iF-iS):len()-iE)then return iR else return iS end end;local function iT(iU,fa)local iV=iU.pts;local cz=#iV;local iW=iU.ref;local iX=getTrueWorldPos()if cz>4 then local iY=iV[cz]local iZ=iV[cz-1]local i_=iV[cz-2]local j0=iV[cz-3]local db=ix(iY[1],iY[2],iZ[1],iZ[2],i_[1],i_[2],j0[1],j0[2])local cb,cc,iQ=db.x,db.y,db.z;if cb==cb then cb=cb+iW[1]cc=cc+iW[2]iQ=iQ+iW[3]iU.ref=iX;iU.x,iU.y,iU.z=cb,cc,iQ;if iU.name=="Alioth Base"then system.print(iU.name..' rdrD: '..fa..' ::pos{0,0,'..cb..','..cc..','..iQ..'}')end end;iU.pts={}else local j1={iX[1]-iW[1],iX[2]-iW[2],iX[3]-iW[3]}iU.pts[cz+1]={fa,j1}end end;if radar_1 then local j2=radar_1.getEntries()local j3=radar_1.getData()local j4=j3:gmatch('{"constructId[^}]*}[^}]*}')local j5=fD(1770)local j6=fE(350)if#j2>0 then local j7={}local j8=0;local iX=getTrueWorldPos()for d0 in j4 do local dY,ah=d0:match([[{"constructId":"([%d%.]*)","distance":([%d%.]*)]])ah=tonumber(ah)if radar_1.hasMatchingTransponder(dY)==1 then table.insert(j7,dY)end;if j8<100 and ah>0 and radar_1.getConstructType(dY)=="static"then local fZ=radar_1.getConstructName(dY)dY=tostring(dY)local iU=contacts[dY]if iU==nil then contacts[dY]={}contacts[dY].pts={}contacts[dY].ref=iX;contacts[dY].name=fZ else iT(iU,ah)end;j8=j8+1 end end;local j9=j3:find('identifiedConstructs":%[%]')if j9==nil and perisPanelID==nil then aj=1;hS()end;if j9~=nil and perisPanelID~=nil then hS()end;if radarPanelID==nil then hS()end;bV=ca(j5,j6,"Radar: "..#j2 .." contacts","pbright txtbig txtmid")if#j7>0 then local cc=fE(15)local cb=fD(1370)bV=bV..ca(cb,cc,"Friendlies In Range","pbright txtbig txtmid")for c_,d0 in pairs(j7)do cc=cc+20;bV=bV..ca(cb,cc,radar_1.getConstructName(d0),"pdim txtmid")end end else local ja;ja=j3:find('worksInEnvironment":false')if ja then bV=ca(j5,j6,"Radar: Jammed","pbright txtbig txtmid")else bV=ca(j5,j6,"Radar: No Contacts","pbright txtbig txtmid")end;if radarPanelID~=nil then aj=0;hS()end end end end;function ic.DrawSettings(fJ)if#bR>0 then local cb=fD(640)local cc=fE(200)fJ[#fJ+1]=[[<g class="pbright txtvspd txtstart">]]for c_,d0 in pairs(bR)do fJ[#fJ+1]=ca(cb,cc,d0 ..": ".._G[d0])cc=cc+20;if c_%12==0 then cb=cb+fD(350)cc=fE(200)end end;fJ[#fJ+1]=ca(fD(640),fE(200)+260,"To Change: In Lua Chat, enter /G VariableName Value")fJ[#fJ+1]="</g>"end;return fJ end;return ic end;local function jb()local function jc()local function jd(je,jf)return je.name<jf.name end;bT={}for c_,d0 in pairs(b0[0])do bT[#bT+1]={name=d0.name,index=c_}end;table.sort(bT,jd)end;local df={}function df.UpdateAtlasLocationsList()jc()end;function df.UpdateAutopilotTarget()if AutopilotTargetIndex==0 then AutopilotTargetName="None"aa=nil;CustomTarget=nil;return true end;local jg=bT[AutopilotTargetIndex].index;local jh=b0[0][jg]if jh.center then AutopilotTargetName=jh.name;aa=b5[0][jg]if CustomTarget~=nil then if aq==0 then if t(widgetMaxBrakeTimeText,widgetMaxBrakeTime)~=1 then u(widgetMaxBrakeTimeText,widgetMaxBrakeTime)end;if t(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)~=1 then u(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)end;if t(widgetCurBrakeTimeText,widgetCurBrakeTime)~=1 then u(widgetCurBrakeTimeText,widgetCurBrakeTime)end;if t(widgetCurBrakeDistanceText,widgetCurBrakeDistance)~=1 then u(widgetCurBrakeDistanceText,widgetCurBrakeDistance)end;if t(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)~=1 then u(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)end end;if t(widgetMaxMassText,widgetMaxMass)~=1 then u(widgetMaxMassText,widgetMaxMass)end;if t(widgetTravelTimeText,widgetTravelTime)~=1 then u(widgetTravelTimeText,widgetTravelTime)end;if t(widgetTargetOrbitText,widgetTargetOrbit)~=1 then u(widgetTargetOrbitText,widgetTargetOrbit)end end;CustomTarget=nil else CustomTarget=jh;for _,d0 in pairs(b5[0])do if d0.name==CustomTarget.planetname then aa=d0;AutopilotTargetName=CustomTarget.name;break end end;if t(widgetMaxMassText,widgetMaxMass)~=1 then u(widgetMaxMassText,widgetMaxMass)end;if t(widgetTravelTimeText,widgetTravelTime)~=1 then u(widgetTravelTimeText,widgetTravelTime)end end;if CustomTarget==nil then AutopilotTargetCoords=vec3(aa.center)else AutopilotTargetCoords=CustomTarget.position end;if aa.planetname~="Space"then if aa.hasAtmosphere then AutopilotTargetOrbit=d(aa.radius*(TargetOrbitRadius-1)+aa.noAtmosphericDensityAltitude)else AutopilotTargetOrbit=d(aa.radius*(TargetOrbitRadius-1)+aa.surfaceMaxAltitude)end else AutopilotTargetOrbit=1000 end;if CustomTarget~=nil and CustomTarget.planetname=="Space"then AutopilotEndSpeed=0 else _,AutopilotEndSpeed=b8(aa):escapeAndOrbitalSpeed(AutopilotTargetOrbit)end;AutopilotPlanetGravity=0;AutopilotAccelerating=false;AutopilotBraking=false;AutopilotCruising=false;Autopilot=false;AutopilotRealigned=false;AutopilotStatus="Aligning"return true end;function df.adjustAutopilotTargetIndex(gd)if not Autopilot and not VectorToTarget and not al and not IntoOrbit then if gd==nil then AutopilotTargetIndex=AutopilotTargetIndex+1;if AutopilotTargetIndex>#bT then AutopilotTargetIndex=0 end else AutopilotTargetIndex=AutopilotTargetIndex-1;if AutopilotTargetIndex<0 then AutopilotTargetIndex=#bT end end;if AutopilotTargetIndex==0 then ba.UpdateAutopilotTarget()else local jg=bT[AutopilotTargetIndex].index;local jh=b0[0][jg]if jh.name=="Space"or iphCondition=="Custom Only"and jh.center or iphCondition=="No Moons"and string.find(jh.name,"Moon")~=nil then if gd==nil then ba.adjustAutopilotTargetIndex()else ba.adjustAutopilotTargetIndex(1)end else ba.UpdateAutopilotTarget()end end else a0="Disengage autopilot before changing Interplanetary Helper"bY("iph","AP")end end;function df.findAtlasIndex(ji)for c_,d0 in pairs(ji)do if d0.name and d0.name==CustomTarget.name then return c_ end end;return-1 end;for c_,d0 in pairs(SavedLocations)do table.insert(b0[0],d0)end;jc()df.UpdateAutopilotTarget()return df end;local function jj()local jk={}local jl={vec3(bE),-vec3(bE),vec3(bB),-vec3(bB),vec3(bD),-vec3(bD)}local function jm(f5)local jn=AutopilotEndSpeed;if not Autopilot then jn=0 end;if not ap then return b6.computeDistanceAndTime(f5,jn,au,0,0,LastMaxBrake-AutopilotPlanetGravity*au)else if LastMaxBrakeInAtmo and LastMaxBrakeInAtmo>0 then return b6.computeDistanceAndTime(f5,jn,au,0,0,LastMaxBrakeInAtmo-AutopilotPlanetGravity*au)else return 0,0 end end end;local function jo(f5)local jn=AutopilotEndSpeed;if not Autopilot then jn=0 end;return b6.computeDistanceAndTime(f5,jn,au,a:maxForceForward(),warmup,LastMaxBrake-AutopilotPlanetGravity*au)end;function jk.GetAutopilotBrakeDistanceAndTime(f5)return jm(f5)end;function jk.GetAutopilotTBBrakeDistanceAndTime(f5)return jo(f5)end;local function jp(jq,jr,js)jr=jr:project_on_plane(jq)js=js:project_on_plane(jq)return m(jr:cross(js):dot(jq),jr:dot(js))end;local function jt()local function ju()local jv=-1;local jw=-1;if vBooster then jv=vBooster.distance()end;if hover then jw=hover.distance()end;if jv~=-1 and jw~=-1 then if jv<jw then return jv else return jw end elseif jv~=-1 then return jv elseif jw~=-1 then return jw else return-1 end end;local jx=ju()local jy=-1;if telemeter_1 then jy=telemeter_1.getDistance()end;if jx~=-1 and jy~=-1 then if jx<jy then return jx else return jy end elseif jx~=-1 then return jx else return jy end end;local function jz(planet,er,jA)local function jB(jC,dJ)local ex=vec3(dJ)if jC.bodyId==0 then return setmetatable({latitude=ex.x,longitude=ex.y,altitude=ex.z,bodyId=0,systemId=jC.planetarySystemId},MapPosition)end;local ey=ex-jC.center;local ah=ey:len()local dQ=ah-jC.radius;local dO=0;local dP=0;if not ck(ah,0)then local ez=m(ey.y,ey.x)dP=ez>=0 and ez or 2*math.pi+ez;dO=math.pi/2-math.acos(ey.z/ah)end;return setmetatable({latitude=math.deg(dO),longitude=math.deg(dP),altitude=dQ,bodyId=jC.bodyId,systemId=jC.planetarySystemId},MapPosition)end;local jD=jB(planet,er)jD="::pos{"..jD.systemId..","..jD.bodyId..","..jD.latitude..","..jD.longitude..","..jD.altitude.."}"if jA then return jD else system.setWaypoint(jD)return true end end;function jk.showWayPoint(planet,er,jA)return jz(planet,er,jA)end;function jk.APTick()ap=j()>0;aq=j()ar=core.getAltitude()an=jt()A=p()bh=A;if antigrav then bL=antigrav.getState()==1 end;local jE=1;local jF=1;local jG=A-bh;local jH=-math.deg(jp(bB,bE,bC))local jI=math.deg(jp(bD,bE,bC))local gd=bG*-1;bg=ap and jH<-YawStallAngle or jH>YawStallAngle or jI<-PitchStallAngle or jI>PitchStallAngle;local jJ=system.getMouseDeltaX()local jK=system.getMouseDeltaY()if InvertMouse and not Z then jK=-jK end;T=0;X=0;S=0;sys=b5[0]planet=sys:closestBody(core.getConstructWorldPos())kepPlanet=b8(planet)orbit=kepPlanet:orbitalParameters(core.getConstructWorldPos(),bE)if ar==0 then ar=(bI-planet.center):len()-planet.radius end;local iq=planet:getGravity(core.getConstructWorldPos()):len()*au;bi=0;b7=core.getMaxKinematicsParametersAlongAxis("ground",core.getConstructOrientationUp())[1]if w()==0 then if l()==1 and Z then if not bc then ae=ae+jJ;af=af+jK end else ae=0;af=0 end else ae=ae+jJ;af=af+jK;ah=math.sqrt(ae*ae+af*af)if not Z and l()==0 then if userControlScheme=="virtual joystick"then if ae>0 and ae>DeadZone then T=T-(ae-DeadZone)*MouseXSensitivity elseif ae<0 and ae<DeadZone*-1 then T=T-(ae+DeadZone)*MouseXSensitivity else T=0 end;if af>0 and af>DeadZone then S=S-(af-DeadZone)*MouseYSensitivity elseif af<0 and af<DeadZone*-1 then S=S-(af+DeadZone)*MouseYSensitivity else S=0 end else ae=0;af=0;if userControlScheme=="mouse"then S=(-utils.smoothstep(jK,-100,100)+0.5)*2*jE;T=(-utils.smoothstep(jJ,-100,100)+0.5)*2*jF end end end end;local jL=bF>8334;if bF>SpaceSpeedLimit/3.6 and not ap and not Autopilot and not jL then a0="Space Speed Engine Shutoff reached"cg(0)end;if not jL and LastIsWarping then if not BrakeIsOn then cC()end;if Autopilot then cu()end end;LastIsWarping=jL;if ap and aq>0.09 then if bF>bl/3.6 and not AtmoSpeedAssist and not ax then BrakeIsOn=true;ax=true elseif not AtmoSpeedAssist and ax then if bF<bl/3.6 then BrakeIsOn=false;ax=false end end end;if BrakeIsOn then W=1 else W=0 end;if ProgradeIsOn then if ak then BrakeIsOn=false;local jM=false;if CustomTarget~=nil then jM=cD(CustomTarget.position-bI,0.1)else jM=cD(vec3(bE),0.01)end;be=true;if jM then cj(d(bl))if(c(bP)<2 or c(bO)>85)and bF>=bl/3.6-1 then BrakeIsOn=false;ProgradeIsOn=false;P=true;ak=false;am=true;Autopilot=false;cP()end elseif ap and AtmoSpeedAssist then cg(1)end elseif bF>O then cD(vec3(bE),0.01)end end;if RetrogradeIsOn then if ap then RetrogradeIsOn=false elseif bF>O then cD(-vec3(bE))end end;if not ProgradeIsOn and ak and not IntoOrbit then if aq==0 then P=true;cP()ak=false;am=true else ak=false;cu()end end;if am and CustomTarget~=nil and(ar<HoldAltitude+250 and ar>HoldAltitude-250)and bF*3.6>bl-250 and c(bH)<25 and aq>=0.1 and(CustomTarget.position-bI):len()>2000+ar then cu()am=false end;if VertTakeOff then be=true;local jN=HoldAltitude;if bH<-30 then a0="Unable to achieve lift. Safety Landing."ad=0;be=autoRollPreference;VertTakeOff=false;BrakeLanding=true elseif not ExternalAGG and bL or HoldAltitude<planet.spaceEngineMinAltitude then if bL then jN=antigrav.getBaseAltitude()end;if ar<jN-100 then bm=0;ad=15;BrakeIsOn=false elseif bH>0 then BrakeIsOn=true;ad=0 elseif bH<-30 then BrakeIsOn=true;ad=15 elseif ar>=jN then if bL then if Autopilot or VectorToTarget then cq()else BrakeIsOn=true;VertTakeOff=false end;a0="Takeoff complete. Singularity engaged"bY("aggLk","AG")else BrakeIsOn=false;a0="VTO complete. Engaging Horizontal Flight"bY("vtoc","VT")cq()end;ad=0 end else if aq>0.08 then bm=0;BrakeIsOn=false;ad=20 elseif aq<0.08 and aq>0 then BrakeIsOn=false;if by then bm=0;ad=20 else ad=0;bm=36;cj(3500)end else be=autoRollPreference;IntoOrbit=true;bw=false;CancelIntoOrbit=false;bq=false;bo=nil;bp=nil;if bv==nil then bv=planet end;bu=jN;bt=true;VertTakeOff=false end end;if bm~=nil then if vTpitchPID==nil then vTpitchPID=pid.new(2*0.01,0,2*0.1)end;local jO=q(bm-bO,-PitchStallAngle*0.80,PitchStallAngle*0.80)vTpitchPID:inject(jO)local jP=q(vTpitchPID:get(),-1,1)S=jP end end;if IntoOrbit then local cM;local jQ=false;local jR=cn(bu)if bv==nil then bv=planet;if VectorToTarget then bv=aa end end;if not bt then bu=d(bv.radius+bv.surfaceMaxAltitude+LowOrbitHeight)if bv.hasAtmosphere then bu=d(bv.radius+bv.noAtmosphericDensityAltitude+LowOrbitHeight)end;bt=true end;if bs.VectorToTarget then cM=CustomTarget.position-bI end;local jS,jT=b8(bv):escapeAndOrbitalSpeed((bI-bv.center):len()-bv.radius)local jU=bP;if not bq then local jV=false;local jW=false;cg(0)bp=0;bn="Aligning to orbital path - OrbitHeight: "..jR;if bs.VectorToTarget then cD(cM:normalize():project_on_plane(bG))jQ=bC:dot(cM:project_on_plane(bB):normalize())>0.95 else cD(bE)jQ=jH<0.5;if bF<150 then jQ=true end end;S=0;bo=0;if bO<=bo+1 and bO>=bo-1 then jV=true else jV=false end;if jU<=bp+1 and jU>=bp-1 then jW=true else jW=false end;if jV and jW and jQ then bo=nil;bp=nil;bq=true end else if bs.VectorToTarget then cD(cM:normalize():project_on_plane(bG))elseif bF>150 then cD(bE)end;S=0;if bs.VectorToTarget then local a6,_=b6.computeDistanceAndTime(bF,bl/3.6,au,0,0,LastMaxBrake)if bw and cM:len()>15000+a6+ar then bn="Orbiting to Target"if ar-100<=bv.noAtmosphericDensityAltitude or travelTime>orbit.timeToPeriapsis and orbit.periapsis.altitude<bv.noAtmosphericDensityAltitude then bw=false end elseif bw or cM:len()<15000+a6+ar then a0="Orbit complete, proceeding with reentry"bY("orCom","OB")AutopilotTargetCoords=CustomTarget.position;P=true;am=true;bs.VectorToTarget,bs.AutopilotAlign=false,false;cr()cP()end end;if orbit.periapsis~=nil and orbit.apoapsis~=nil and orbit.eccentricity<1 and ar>bu*0.9 and ar<bu*1.4 then if orbit.apoapsis~=nil then if orbit.periapsis.altitude>=bu*0.99 and orbit.apoapsis.altitude>=bu*0.99 and orbit.periapsis.altitude<orbit.apoapsis.altitude and orbit.periapsis.altitude*1.05>=orbit.apoapsis.altitude or bw then if bw then BrakeIsOn=false;cg(0)bo=0;if not bs.VectorToTarget then a0="Orbit complete"bY("orCom","OB")cr()end else bA=bA+1;if bA>=2 then bw=true end end else bn="Adjusting Orbit - OrbitHeight: "..jR;br=true;cj(jT*3.6+1)if VSpdPID==nil then VSpdPID=pid.new(0.5,0,10*0.1)end;local jX=bH;local jY=ar-bu;local jZ=c(jY)if bH<10 and c(bO)<10 and jZ<100 then jX=bH*2 end;if jX<10 and c(bO)<10 and jZ<100 then jX=jX*2 end;if jX<5 and c(bO)<5 and jZ<100 then jX=jX*4 end;VSpdPID:inject(jX)bo=q(-VSpdPID:get(),-90,90)if OrbitAltPID==nil then OrbitAltPID=pid.new(0.15,0,5*0.1)end;OrbitAltPID:inject(jY)bo=q(bo-q(OrbitAltPID:get(),-15,15),-90,90)end end else local j_=2.75;local k0=c(o(jS*j_))local k1=k0%50;if k1>0 then k0=k0-k1+50 end;BrakeIsOn=false;if ar<bu*0.8 then bn="Escaping planet gravity - OrbitHeight: "..jR;bo=utils.map(bH,200,0,-15,80)elseif ar>=bu*0.8 and ar<bu*1.15 then bn="Approaching orbital corridor - OrbitHeight: "..jR;k0=k0*0.75;bo=utils.map(bH,100,-100,-15,65)elseif ar>=bu*1.15 and ar<bu*1.5 then bn="Approaching orbital corridor - OrbitHeight: "..jR;k0=k0*0.75;if bH<0 or br then bo=utils.map(ar,bu*1.5,bu*1.01,-30,0)else bo=utils.map(ar,bu*0.99,bu*1.5,0,30)end elseif ar>bu*1.5 then bn="Reentering orbital corridor - OrbitHeight: "..jR;bo=-65;local k2=utils.map(bH,-150,-400,1,0.55)k0=k0*k2 end;cj(d(k0))end end;if bo~=nil then if OrbitPitchPID==nil then OrbitPitchPID=pid.new(1*0.01,0,5*0.1)end;local k3=bo-bO;OrbitPitchPID:inject(k3)local k4=q(OrbitPitchPID:get(),-0.5,0.5)S=k4 end end;if Autopilot and aq==0 and not ak then local function k5(k6,orbit)system.print(k6)BrakeIsOn=false;AutopilotBraking=false;Autopilot=false;TargetSet=false;AutopilotStatus="Aligning"cg(0)N=false;a0=k6;bY("apCom","AP")if orbit or ak then if orbit and AutopilotTargetOrbit~=nil and not ak then if not ar or ar==0 then return end;bu=ar;bt=true end;cr()end end;local k7,k8=AutopilotTargetCoords,false;if CustomTarget~=nil and CustomTarget.planetname~="Space"then AutopilotRealigned=true;if not TargetSet then local k9=(CustomTarget.position-aa.center):normalize()local ka=k9:project_on_plane((aa.center-bI):normalize()):normalize()local kb=aa.center+ka*(aa.radius+AutopilotTargetOrbit)local kc=CustomTarget.position+(CustomTarget.position-aa.center):normalize()*(AutopilotTargetOrbit-aa:getAltitude(CustomTarget.position))if(bI-kb):len()<(bI-kc):len()then k7=kb else k7=kc;AutopilotEndSpeed=0 end;AutopilotTargetCoords=k7;bb.showWayPoint(aa,AutopilotTargetCoords)k8=true;TargetSet=true end;AutopilotPlanetGravity=0 elseif CustomTarget~=nil and CustomTarget.planetname=="Space"then AutopilotPlanetGravity=0;k8=true;TargetSet=true;AutopilotRealigned=true;k7=CustomTarget.position+(bI-CustomTarget.position)*AutopilotTargetOrbit elseif CustomTarget==nil then AutopilotPlanetGravity=0;if not TargetSet then local k9=(bI+bE*100000-aa.center):normalize()local ka=k9:project_on_plane((aa.center-bI):normalize()):normalize()if ka:len()<1 then k9=(bI+bC*100000-aa.center):normalize()ka=k9:project_on_plane((aa.center-bI):normalize()):normalize()end;k7=aa.center+ka*(aa.radius+AutopilotTargetOrbit)AutopilotTargetCoords=k7;TargetSet=true;k8=true;AutopilotRealigned=true;bb.showWayPoint(aa,AutopilotTargetCoords)end end;AutopilotDistance=(vec3(k7)-bI):len()local hx,ep,eq=b5:getPlanetarySystem(0):castIntersections(bI,bE:normalize(),function(ef)if ef.noAtmosphericDensityAltitude>0 then return ef.radius+ef.noAtmosphericDensityAltitude else return ef.radius+ef.surfaceMaxAltitude*1.5 end end)local hy=ep;if eq~=nil and ep~=nil then hy=math.min(eq,ep)end;if hy~=nil and hy<AutopilotDistance and hx.name==aa.name then AutopilotDistance=hy end;local jM=true;local kd=(aa.center-(bI+vec3(bE):normalize()*AutopilotDistance)):len()-aa.radius;local hw=cn(kd)t(widgetTrajectoryAltitudeText,'{"label": "Projected Altitude", "value": "'..hw..'"}')local a6,a7;if not TurnBurn then a6,a7=jm(bF)else a6,a7=jo(bF)end;if bF>300 and AutopilotAccelerating then local cM=vec3(k7)-bI;local ke=q(math.deg(jp(bB,bE:normalize(),cM:normalize()))*bF/500,-90,90)local kf=q(math.deg(jp(bD,bE:normalize(),cM:normalize()))*bF/500,-90,90)if c(ke)<20 and c(kf)<20 then ke=ke*2;kf=kf*2 end;if c(ke)<2 and c(kf)<2 then ke=ke*2;kf=kf*2 end;local jH=-math.deg(jp(bB,bC,bE:normalize()))local jI=-math.deg(jp(bD,bC,bE:normalize()))if apPitchPID==nil then apPitchPID=pid.new(2*0.01,0,2*0.1)end;apPitchPID:inject(kf-jI)local kg=q(apPitchPID:get(),-1,1)S=S+kg;if apYawPID==nil then apYawPID=pid.new(2*0.01,0,2*0.1)end;apYawPID:inject(ke-jH)local kh=q(apYawPID:get(),-1,1)T=T+kh;k8=true;if c(ke)>2 or c(kf)>2 then if AutopilotStatus~="Adjusting Trajectory"then AutopilotStatus="Adjusting Trajectory"bY("apAdj","AP")end else if AutopilotStatus~="Accelerating"then AutopilotStatus="Accelerating"bY("apAcc","AP")end end end;if kd<AutopilotTargetOrbit*1.5 then if CustomTarget~=nil and CustomTarget.planetname=="Space"then AutopilotEndSpeed=0 elseif CustomTarget==nil then _,AutopilotEndSpeed=b8(aa):escapeAndOrbitalSpeed(kd)end end;if not AutopilotCruising and not AutopilotBraking and not k8 then jM=cD((k7-bI):normalize())elseif TurnBurn and(AutopilotBraking or AutopilotCruising)then jM=cD(-vec3(bE):normalize())end;if AutopilotAccelerating then if not N then BrakeIsOn=false;cg(AutopilotInterplanetaryThrottle)G=x(AutopilotInterplanetaryThrottle,2)N=true end;local ki=unit.getThrottle()if AtmoSpeedAssist then ki=G end;if vec3(core.getVelocity()):len()>=MaxGameVelocity or ki==0 and N then AutopilotAccelerating=false;if AutopilotStatus~="Cruising"then bY("apCru","AP")AutopilotStatus="Cruising"end;AutopilotCruising=true;cg(0)end;if AutopilotDistance<=a6 then AutopilotAccelerating=false;if AutopilotStatus~="Braking"then bY("apBrk","AP")AutopilotStatus="Braking"end;AutopilotBraking=true;cg(0)N=false end elseif AutopilotBraking then if AutopilotStatus~="Orbiting to Target"then BrakeIsOn=true;W=1 end;if TurnBurn then cg(1,true)end;local _,jT=b8(aa):escapeAndOrbitalSpeed((bI-planet.center):len()-planet.radius)local cM;if CustomTarget~=nil then cM=CustomTarget.position-bI end;if CustomTarget~=nil and CustomTarget.planetname=="Space"and bF<50 then k5("Autopilot complete, arrived at space location")BrakeIsOn=true;W=1 elseif CustomTarget~=nil and CustomTarget.planetname~="Space"and bF<=jT and(orbit.apoapsis==nil or orbit.periapsis==nil or orbit.apoapsis.altitude<=0 or orbit.periapsis.altitude<=0)then k5("Autopilot complete, commencing reentry")AutopilotTargetCoords=CustomTarget.position;ak=true;bb.showWayPoint(aa,AutopilotTargetCoords)elseif orbit.periapsis~=nil and orbit.periapsis.altitude>0 and orbit.eccentricity<1 or AutopilotStatus=="Circularizing"then if AutopilotStatus~="Circularizing"then bY("apCir","AP")AutopilotStatus="Circularizing"end;if bF<=jT then if CustomTarget~=nil then if bE:normalize():dot(cM:normalize())>0.4 then if AutopilotStatus~="Orbiting to Target"then bY("apOrb","OB")AutopilotStatus="Orbiting to Target"end;if not WaypointSet then BrakeIsOn=false;bb.showWayPoint(aa,CustomTarget.position)WaypointSet=true end else k5("Autopilot complete, proceeding with reentry")AutopilotTargetCoords=CustomTarget.position;ak=true;bb.showWayPoint(aa,CustomTarget.position)WaypointSet=false end else k5("Autopilot completed, setting orbit",true)W=0 end end elseif AutopilotStatus=="Circularizing"then k5("Autopilot complete, fixing Orbit",true)end elseif AutopilotCruising then if AutopilotDistance<=a6 then AutopilotAccelerating=false;if AutopilotStatus~="Braking"then bY("apBrk","AP")AutopilotStatus="Braking"end;AutopilotBraking=true end;local ki=unit.getThrottle()if AtmoSpeedAssist then ki=G end;if ki>0 then AutopilotAccelerating=true;if AutopilotStatus~="Accelerating"then AutopilotStatus="Accelerating"bY("apAcc","AP")end;AutopilotCruising=false end else if jM then if not AutopilotRealigned and CustomTarget==nil or not AutopilotRealigned and CustomTarget~=nil and CustomTarget.planetname~="Space"then if not ak then AutopilotTargetCoords=vec3(aa.center)+(AutopilotTargetOrbit+aa.radius)*bD;AutopilotShipUp=bB;AutopilotShipRight=bD end;AutopilotRealigned=true elseif jM then AutopilotAccelerating=true;if AutopilotStatus~="Accelerating"then AutopilotStatus="Accelerating"bY("apAcc","AP")end;if not N then cg(AutopilotInterplanetaryThrottle,true)G=x(AutopilotInterplanetaryThrottle,2)N=true;BrakeIsOn=false end end end end elseif Autopilot and(CustomTarget~=nil and CustomTarget.planetname~="Space"and aq>0)then a0="Autopilot complete, proceeding with reentry"bY("apCom","AP")AutopilotTargetCoords=CustomTarget.position;BrakeIsOn=false;AutopilotBraking=false;Autopilot=false;TargetSet=false;AutopilotStatus="Aligning"W=0;cg(0)N=false;ProgradeIsOn=true;ak=true;bb.showWayPoint(aa,CustomTarget.position)end;if Y then be=true;local kf=0;local db=bI+vec3(unit.getMasterPlayerRelativePosition())local kj=db-bI;local kk=vec3(kj):project_on(bC):len()local kl=vec3(kj):project_on(bD):len()local ah=math.sqrt(kk*kk+kl*kl)cD(kj:normalize())local km=40;local kn=ah<km;local ko=100;local kp=q((ah-km)/2,10,ko)S=0;local jM=c(T)<0.1;if jM and bF<kp and not kn then BrakeIsOn=false;kf=-20 else BrakeIsOn=true;kf=0 end;local kq=0;if c(kf-bO)>kq then if pitchPID==nil then pitchPID=pid.new(2*0.01,0,2*0.1)end;pitchPID:inject(kf-bO)local kg=pitchPID:get()S=kg end end;if AltitudeHold or BrakeLanding or Reentry or VectorToTarget or LockPitch~=nil then local cw=unit.getClosestPlanetInfluence()>0;local kr=HoldAltitude-ar;local ks=500+bF;local kt=1;if AutoTakeoff then kt=q(bF/100,0.1,1)end;local kf=(utils.smoothstep(kr,-ks,ks)-0.5)*2*MaxPitch*kt;if not Reentry and not ak and not VectorToTarget and bC:dot(bE:normalize())<0.99 then kf=(utils.smoothstep(kr,-ks*q(20-19*aq*10,1,20),ks*q(20-19*aq*10,1,20))-0.5)*2*MaxPitch*q(2-aq*10,1,2)*kt end;if not AltitudeHold then kf=0 end;if LockPitch~=nil then if cw and not IntoOrbit then kf=LockPitch else LockPitch=nil end end;be=true;local ku=S;if Reentry then local kv=d(bl)local kw,kx=b6.computeDistanceAndTime(bF,kv/3.6,au,0,0,LastMaxBrake-planet.gravity*9.8*au)local ky=ar-(planet.noAtmosphericDensityAltitude+5000)if not bN and ar>planet.noAtmosphericDensityAltitude+5000 and bF<=kv/3.6 and bF>kv/3.6-10 and c(bE:normalize():dot(bC))>0.9 then cg(0)elseif bN and bF>kv/3.6 and(kw>-1 and ky<=kw or ar<=planet.noAtmosphericDensityAltitude+5000)then BrakeIsOn=true else BrakeIsOn=false end;cj(kv,true)if not P then kf=-80;if aq>0.02 then a0="PARACHUTE DEPLOYED"Reentry=false;BrakeLanding=true;kf=0;be=autoRollPreference end elseif planet.noAtmosphericDensityAltitude>0 and ar>planet.noAtmosphericDensityAltitude+5000 then be=true elseif ar<=planet.noAtmosphericDensityAltitude+5000 then cj(kv)if not bN and r:getTargetSpeed(axisCommandId.longitudinal)==bl then P=false;Reentry=false;be=true end end end;if bF>O and not al and not VectorToTarget and not BrakeLanding and ForceAlignment then cD(vec3(bE))end;if bX or(VectorToTarget or al)and AutopilotTargetIndex>0 and aq>0.01 then local cM;if bX then if type(bX)=="table"then cM=bX elseif bX<3 and bX>0 then cM=-bG:cross(bE)*5000 elseif bX>=3 then cM=bG:cross(bE)*5000 elseif bX==0 then cM=bE*25000 end elseif CustomTarget~=nil then cM=CustomTarget.position-bI else cM=aa.center-bI end;local ke=math.deg(jp(bG:normalize(),bE,cM))*2;local kz=math.rad(c(bP))if bF>minRollVelocity and aq>0.01 then local kA=q(90-kf*2,-90,90)bi=q(ke*2,-kA,kA)local kB=ke;ke=q(q(ke,-YawStallAngle*0.80,YawStallAngle*0.80)*math.cos(kz)+4*(bO-kf)*math.sin(math.rad(bP)),-YawStallAngle*0.80,YawStallAngle*0.80)kf=q(q(kf*math.cos(kz),-PitchStallAngle*0.80,PitchStallAngle*0.80)+c(q(c(kB)*math.sin(kz),-PitchStallAngle*0.80,PitchStallAngle*0.80)),-PitchStallAngle*0.80,PitchStallAngle*0.80)else bi=0;ke=q(ke,-YawStallAngle*0.80,YawStallAngle*0.80)end;local kC=jH-ke;if(type(bX)=="table"or bX==0)and c(kC)<=0.0001 then if bX==0 then cs()end;bX=nil;bY("180Off","BR")return end;if not bg and bF>minRollVelocity and aq>0.01 then if yawPID==nil then yawPID=pid.new(2*0.01,0,2*0.1)end;yawPID:inject(kC)local kh=q(yawPID:get(),-1,1)T=T+kh elseif ap and an>-1 or bF<minRollVelocity then cD(cM)elseif bg and aq>0.01 then if(jH<-YawStallAngle or jH>YawStallAngle)and aq>0.01 then cD(bE)end;if(jI<-PitchStallAngle or jI>PitchStallAngle)and aq>0.01 then kf=q(bO-jI,bO-PitchStallAngle*0.80,bO+PitchStallAngle*0.80)end end;if CustomTarget~=nil and not al then local jN=planet:getAltitude(CustomTarget.position)local ky=math.sqrt(cM:len()^2-(ar-jN)^2)local kD=LastMaxBrakeInAtmo;if kD then kD=kD*q(bF/100,0.1,1)*aq else kD=LastMaxBrake end;if aq<0.01 then kD=LastMaxBrake end;local kE=bE:len()-c(bH)local kF=vec3(core.getWorldAirFrictionAcceleration())local kG=math.sqrt(kF:len()-kF:project_on(gd):len())*au;if bF>100 then a6,a7=b6.computeDistanceAndTime(bF,100,au,0,0,kD+kG)local kH,kI=b6.computeDistanceAndTime(100,0,au,0,0,kD/2)a6=a6+kH else a6,a7=b6.computeDistanceAndTime(bF,0,au,0,0,kD/2)end;StrongBrakes=true;if collisionAlertStatus=="active"or not al and not Reentry and ky<=a6+bF*jG/2 and(bE:project_on_plane(bG):normalize():dot(cM:project_on_plane(bG):normalize())>0.99 or VectorStatus=="Finalizing Approach")then VectorStatus="Finalizing Approach"cg(0)if AltitudeHold then cs()VectorToTarget=true end;BrakeIsOn=true elseif not AutoTakeoff then BrakeIsOn=false end;if collisionAlertStatus=="active"or VectorStatus=="Finalizing Approach"and(kE<0.1 or ky<0.1 or LastDistanceToTarget~=nil and LastDistanceToTarget<ky)then if not bL then bY("bklOn","BL")BrakeLanding=true end;VectorToTarget=false;VectorStatus="Proceeding to Waypoint"collisionAlertStatus=false end;LastDistanceToTarget=ky end elseif VectorToTarget and aq==0 and HoldAltitude>planet.noAtmosphericDensityAltitude and not(al or Reentry)then if CustomTarget~=nil and aa.name==planet.name then local cM=CustomTarget.position-bI;local jN=planet:getAltitude(CustomTarget.position)local ky=math.sqrt(cM:len()^2-(ar-jN)^2)local kD=LastMaxBrakeInAtmo;if kD then a6,a7=b6.computeDistanceAndTime(bF,0,au,0,0,kD/2)StrongBrakes=true;if ky<=a6+bF*jG/2 and bE:project_on_plane(bG):normalize():dot(cM:project_on_plane(bG):normalize())>0.99 then if planet.hasAtmosphere then BrakeIsOn=false;ProgradeIsOn=false;P=true;ak=false;am=true;Autopilot=false;cP()end end;LastDistanceToTarget=ky end end end;if aq==0 and(AltitudeHold and HoldAltitude>planet.noAtmosphericDensityAltitude)and not(al or IntoOrbit or Reentry)then if not bw and not IntoOrbit then bu=HoldAltitude;bt=true;if VectorToTarget then bs.VectorToTarget=true end;cr()VectorToTarget=false;bq=true end end;if bg and aq>0.01 and an==-1 and bF>minRollVelocity and VectorStatus~="Finalizing Approach"then cD(bE)kf=q(bO-jI,bO-PitchStallAngle*0.80,bO+PitchStallAngle*0.80)end;S=ku;local jy=-1;if BrakeLanding then kf=0;local kJ=false;local kK=30;if b7~=nil and b7>0 then local kL=q(aq,0.4,2)local kD=LastMaxBrakeInAtmo*q(bF/100,0.1,1)*kL;local kM=b7*kL+kD-iq;local kN=kD/2-iq;local kO=bF-math.sqrt(c(kN/2)*20/(0.5*au))*utils.sign(kN)if kO<0 then kO=0 end;local kP;if bF>100 then local kQ,_=b6.computeDistanceAndTime(bF,100,au,0,0,kD)local kR,_=b6.computeDistanceAndTime(100,0,au,0,0,math.sqrt(kD))kP=kQ+kR else kP=b6.computeDistanceAndTime(bF,0,au,0,0,math.sqrt(kD))end;if kP<20 then BrakeIsOn=false else local kS=0;if kO>100 then local kT,_=b6.computeDistanceAndTime(kO,100,au,0,0,kM)local kU,_=b6.computeDistanceAndTime(100,0,au,0,0,b7*kL+math.sqrt(kD)-iq)kS=kT+kU else kS,_=b6.computeDistanceAndTime(kO,0,au,0,0,b7*kL+math.sqrt(kD)-iq)end;kS=(kS+15+bF*jG)*1.1;local kV=CustomTarget~=nil and planet:getAltitude(CustomTarget.position)>0 and CustomTarget.safe;if kV then local jN=planet:getAltitude(CustomTarget.position)local kW=ar-jN-100;local cM=CustomTarget.position-bI;local kX=math.sqrt(cM:len()^2-(ar-jN)^2)if kX>100 then kV=false elseif kW<=kS or kS==-1 then BrakeIsOn=true;kJ=true else BrakeIsOn=false;kJ=true end end;if not kV and CalculateBrakeLandingSpeed then if kS>=kK then BrakeIsOn=true else BrakeIsOn=false end;kJ=true end end end;if not bN then cg(0)end;r:setTargetGroundAltitude(500)r:activateGroundEngineAltitudeStabilization(500)stablized=true;jy=an;if jy>-1 then be=autoRollPreference;if bF<1 or bE:normalize():dot(bG)<0 then BrakeLanding=false;AltitudeHold=false;GearExtended=true;if Q then a.control.extendLandingGears()bY("grOut","LG",1)end;r:setTargetGroundAltitude(LandingGearGroundHeight)ad=0;BrakeIsOn=true else BrakeIsOn=true end elseif StrongBrakes and bE:normalize():dot(-gd)<0.999 then BrakeIsOn=true elseif bH<-brakeLandingRate and not kJ then BrakeIsOn=true elseif not kJ then BrakeIsOn=false end end;if AutoTakeoff or al then local hx,eq,ep;if AutopilotTargetCoords~=nil then hx,eq,ep=b5:getPlanetarySystem(0):castIntersections(bI,(AutopilotTargetCoords-bI):normalize(),function(ef)return ef.radius+ef.noAtmosphericDensityAltitude end)end;if bL then if ar>=HoldAltitude-50 then AutoTakeoff=false;if not Autopilot and not VectorToTarget then BrakeIsOn=true;cg(0)end else HoldAltitude=antigrav.getBaseAltitude()end elseif c(kf)<15 and ar/HoldAltitude>0.75 then AutoTakeoff=false;if not al then if bN and not AtmoSpeedAssist then a.control.cancelCurrentControlMasterMode()end elseif al and bF<O then Autopilot=true;al=false;AltitudeHold=false;AutoTakeoff=false;cg(0)elseif al then cg(0)BrakeIsOn=true end elseif al and aq==0 and aa~=nil and(hx==nil or hx.name==aa.name)then Autopilot=true;al=false;AltitudeHold=false;AutoTakeoff=false;if not bN then cg(0)end;AutopilotAccelerating=true end end;local kY=an>-1;local kZ=bO;if(VectorToTarget or al or bX)and not kY and bF>minRollVelocity and aq>0.01 then local kz=math.rad(c(bP))kZ=bO*c(math.cos(kz))+jI*math.sin(kz)end;local k_=q(kf-kZ,-PitchStallAngle*0.80,PitchStallAngle*0.80)if aq<0.01 and VectorToTarget then k_=q(kf-kZ,-85,MaxPitch)elseif aq<0.01 then k_=q(kf-kZ,-MaxPitch,MaxPitch)end;if c(bP)<5 or VectorToTarget or bX or BrakeLanding or kY or AltitudeHold then if pitchPID==nil then pitchPID=pid.new(5*0.01,0,5*0.1)end;pitchPID:inject(k_)local kg=pitchPID:get()S=S+kg end end;if antigrav~=nil and(antigrav and not ExternalAGG and ar<200000)then if AntigravTargetAltitude==nil or AntigravTargetAltitude<1000 then AntigravTargetAltitude=1000 end;if desiredBaseAltitude~=AntigravTargetAltitude then desiredBaseAltitude=AntigravTargetAltitude;antigrav.setBaseAltitude(desiredBaseAltitude)end end end;an=jt()return jk end;function script.onStart()local function l0()local function l1(l2)local l3=dbHud_1.hasKey;for c_,d0 in pairs(l2)do if l3(d0)then local cJ=f(dbHud_1.getStringValue(d0))if cJ~=nil then _G[d0]=cJ;aK=true end end end end;if dbHud_1 then if not useTheseSettings then l1(c3())coroutine.yield()l1(b)else l1(b)a0="Updated user preferences used.  Will be saved when you exit seat.\nToggle off useTheseSettings to use saved values"ag=5;aK=false end;coroutine.yield()if aK then a0="Loaded Saved Variables"L=x(ResolutionX/2,0)M=x(ResolutionY/2,0)aI=ResolutionX;aJ=ResolutionY;BrakeToggleStatus=BrakeToggleDefault;userControlScheme=string.lower(userControlScheme)be=autoRollPreference;bl=AtmoSpeedLimit;ay=[[rgb(]]..d(D+0.5)..","..d(F+0.5)..","..d(E+0.5)..[[)]]az=[[rgb(]]..d(D*0.9+0.5)..","..d(F*0.9+0.5)..","..d(E*0.9+0.5)..[[)]]elseif not useTheseSettings then a0="No Saved Variables Found - Exit HUD to save settings"end else a0="No databank found. Attach one to control unit and rerun \nthe autoconfigure to save preferences and locations"end;if LastStartTime+180<A then LastMaxBrakeInAtmo=0 end;LastStartTime=A;userControlScheme=string.lower(userControlScheme)if string.find("keyboard virtual joystick mouse",userControlScheme)==nil then a0="Invalid User Control Scheme selected.\nChange userControlScheme in Lua Parameters to keyboard, mouse, or virtual joystick\nOr use shift and button in screen"ag=7 end;if antigrav and not ExternalAGG then if AntigravTargetAltitude==nil then AntigravTargetAltitude=ar end;antigrav.setBaseAltitude(AntigravTargetAltitude)end;if safeMass==0 then safeMass=au end;VectorStatus="Proceeding to Waypoint"end;local function l4()local function l5(l6,l7)if l6>l7 then l7=l6 end;local l8,l9=0,0;if ContainerOptimization>0 then l8=ContainerOptimization*0.05 end;if FuelTankOptimization>0 then l9=FuelTankOptimization*0.05 end;l7=l7*(1-(l8+l9))return l7 end;local la=core.getElementNameById;local lb=fuelX~=0 and fuelY~=0;for c_ in pairs(as)do local type=core.getElementTypeById(as[c_])if n(type,'^.*Atmospheric Engine$')then if n(tostring(core.getElementTagsById(as[c_])),'^.*vertical.*$')then bK=true end end;if n(type,'^.*Space Engine$')then bz=true;if n(tostring(core.getElementTagsById(as[c_])),'^.*vertical.*$')then local lc=core.getElementRotationById(as[c_])if lc[4]<0 then if o(-lc[4],0.1)==0.5 then bx=true end else if o(lc[4],0.1)==0.5 then by=true end end end end;if type=="Landing Gear"then Q=true end;if type=="Dynamic Core Unit"then local ld=h(as[c_])if ld>10000 then C=128 elseif ld>1000 then C=64 elseif ld>150 then C=32 end end;aQ=aQ+h(as[c_])if lb and(type=="Atmospheric Fuel Tank"or type=="Space Fuel Tank"or type=="Rocket Fuel Tank")then local ld=h(as[c_])local le=k(as[c_])local l6=0;local g5=p()if type=="Atmospheric Fuel Tank"then local l7=400;local lf=35.03;if ld>10000 then l7=51200;lf=5480 elseif ld>1300 then l7=6400;lf=988.67 elseif ld>150 then l7=1600;lf=182.67 end;l6=le-lf;if fuelTankHandlingAtmo>0 then l7=l7+l7*fuelTankHandlingAtmo*0.2 end;l7=l5(l6,l7)aN[#aN+1]={as[c_],la(as[c_]),l7,lf,l6,g5}end;if type=="Rocket Fuel Tank"then local l7=320;local lf=173.42;if ld>65000 then l7=40000;lf=25740 elseif ld>6000 then l7=5120;lf=4720 elseif ld>700 then l7=640;lf=886.72 end;l6=le-lf;if fuelTankHandlingRocket>0 then l7=l7+l7*fuelTankHandlingRocket*0.1 end;l7=l5(l6,l7)aP[#aP+1]={as[c_],la(as[c_]),l7,lf,l6,g5}end;if type=="Space Fuel Tank"then local l7=2400;local lf=182.67;if ld>10000 then l7=76800;lf=5480 elseif ld>1300 then l7=9600;lf=988.67 end;l6=le-lf;if fuelTankHandlingSpace>0 then l7=l7+l7*fuelTankHandlingSpace*0.2 end;l7=l5(l6,l7)aO[#aO+1]={as[c_],la(as[c_]),l7,lf,l6,g5}end end end;if not bK then VertTakeOff,VertTakeOffEngine=false,false end end;local function lg()if gyro~=nil then aw=gyro.getState()==1 end;if not stablized then r:deactivateGroundEngineAltitudeStabilization()end;if userControlScheme~="keyboard"then v(1)else v(0)end;if door and(ap or not ap and ar<10000)then for _,d0 in pairs(door)do d0.toggle()end end;if switch then for _,d0 in pairs(switch)do d0.toggle()end end;if forcefield and(ap or not ap==0 and ar<10000)then for _,d0 in pairs(forcefield)do d0.toggle()end end;if antigrav then bL=antigrav.getState()==1;if bL and not ExternalAGG then antigrav.show()end end;if l()==1 and RemoteFreeze then system.freeze(1)else system.freeze(0)end;if Q then GearExtended=a.control.isAnyLandingGearExtended()==1;if GearExtended then a.control.extendLandingGears()else a.control.retractLandingGears()end end;if an~=-1 or not ap and vec3(core.getVelocity()):len()<50 then BrakeIsOn=true;GearExtended=true;if Q then a.control.extendLandingGears()end else BrakeIsOn=false end;r:setTargetGroundAltitude(bf)if ap and an~=-1 then b7=core.getMaxKinematicsParametersAlongAxis("ground",core.getConstructOrientationUp())[1]end;WasInAtmo=ap end;local function lh(li,lj,lk,ll,cb,cc,lm,ln,lo,lp)local lq={enableName=li,disableName=lj,width=lk,height=ll,x=cb,y=cc,toggleVar=lm,toggleFunction=ln,drawCondition=lo,hovered=false}if lp then table.insert(aH,lq)else table.insert(aG,lq)end;return lq end;local function lr(ls)if not bQ then showHandlingVariables=false;showHudVariables=false;showPhysicsVariables=false;showHud=true;return elseif ls=="handling"then showHandlingVariables=not showHandlingVariables;showHudVariables=false;showPhysicsVariables=false elseif ls=="hud"then showHudVariables=not showHudVariables;showHandlingVariables=false;showPhysicsVariables=false elseif ls=="physics"then showPhysicsVariables=not showPhysicsVariables;showHandlingVariables=false;showHudVariables=false end;if showPhysicsVariables or showHudVariables or showHandlingVariables then bR=c3(ls)showHud=false else bR={}showHud=true end end;local function lt()bQ=not bQ;if bQ then aF=aH;a0="Hold SHIFT to see Settings"bS=showHud else aF=aG;a0="Hold SHIFT to see Control Buttons"lr()showHud=bS end end;local function lu(d0)_G[d0]=not _G[d0]if _G[d0]then a0=d0 .." set to true"else a0=d0 .." set to false"end;if d0=="showHud"then bS=_G[d0]elseif d0=="BrakeToggleDefault"then BrakeToggleStatus=BrakeToggleDefault elseif d0=="Cockpit"then system.showScreen(0)dbHud_1.setStringValue("content","")end end;local function lv()local lw=50;local lx=340;local cb=500;local cc=aJ/2-400;local ly=0;for c_,d0 in pairs(c3("boolean"))do if type(_G[d0])=="boolean"then lh(d0,d0,lx,lw,cb,cc,function()return _G[d0]end,function()lu(d0)end,function()return true end,true)cc=cc+lw+20;if ly==9 then cb=cb+lx+20;cc=aJ/2-400;ly=0 else ly=ly+1 end end end;lh("Control View","Control View",lx,lw,10,aJ/2-500,function()return true end,lt,function()return true end,true)lh("View Handling Settings",'Hide Handling Settings',lx,lw,10,aJ/2-(500-lw),function()return showHandlingVariables end,function()lr("handling")end,function()return true end,true)lh("View Hud Settings",'Hide Hud Settings',lx,lw,10,aJ/2-(500-lw*2),function()return showHudVariables end,function()lr("hud")end,function()return true end,true)lh("View Physics Settings",'Hide Physics Settings',lx,lw,10,aJ/2-(500-lw*3),function()return showPhysicsVariables end,function()lr("physics")end,function()return true end,true)end;local function lz()local function lA()if dbHud_1 then local position=bI;local fZ=planet.name..". "..#SavedLocations;if radar_1 then local dY,_=radar_1.getData():match('"constructId":"([0-9]*)","distance":([%d%.]*)')if dY~=nil and dY~=""then fZ=fZ.." "..radar_1.getConstructName(dY)end end;local cA={}cA={position=position,name=fZ,atmosphere=planet.atmosphericDensityAboveSurface,planetname=planet.name,gravity=planet.gravity,safe=true}SavedLocations[#SavedLocations+1]=cA;table.insert(b0[0],cA)ba.UpdateAtlasLocationsList()a0="Location saved as "..fZ else a0="Databank must be installed to save locations"end end;local function lB()TurnBurn=not TurnBurn end;local function lC(lD)if lD==1 then ProgradeIsOn=not ProgradeIsOn;RetrogradeIsOn=false else RetrogradeIsOn=not RetrogradeIsOn;ProgradeIsOn=false end;Autopilot=false;AltitudeHold=false;Y=false;BrakeLanding=false;LockPitch=nil;Reentry=false;AutoTakeoff=false end;local function lE()lC(1)end;local function lF()local cz=-1;cz=ba.findAtlasIndex(b0[0])if cz>-1 then table.remove(b0[0],cz)end;cz=-1;cz=ba.findAtlasIndex(SavedLocations)if cz~=-1 then a0=CustomTarget.name.." saved location cleared"table.remove(SavedLocations,cz)end;ba.adjustAutopilotTargetIndex()ba.UpdateAtlasLocationsList()end;local function lG()local fZ=AutopilotTargetName;if fZ==nil then local hw=cn((bI-CustomTarget.position):len())fZ=CustomTarget.name.." "..hw end;if fZ==nil then fZ="None"end;return"Engage Autopilot: "..fZ end;local function lH()local fZ=AutopilotTargetName;if fZ==nil then fZ=CustomTarget.name end;if fZ==nil then fZ="None"end;return"Disable Autopilot: "..fZ end;local function lI()if safeMass>0 then a0="Safe Mass set to "..x(au,2).." kg"else a0="Intruder Detection reset\nSafe Mass set to "..x(au,2).." kg"ag=5;bJ=0 end;safeMass=au end;local lw=50;local lx=260;local lJ=lh("Enable Brake Toggle","Disable Brake Toggle",lx,lw,aI/2-lx/2,aJ/2+350,function()return BrakeToggleStatus end,function()BrakeToggleStatus=not BrakeToggleStatus;if BrakeToggleStatus then a0="Brakes in Toggle Mode"else a0="Brakes in Default Mode"end end)lh("Align Prograde","Disable Prograde",lx,lw,aI/2-lx/2-50-lJ.width,aJ/2-lw+380,function()return ProgradeIsOn end,lE)lh("Align Retrograde","Disable Retrograde",lx,lw,aI/2-lx/2+lJ.width+50,aJ/2-lw+380,function()return RetrogradeIsOn end,lC,function()return aq==0 end)local lK=lh(lG,lH,600,60,aI/2-600/2,aJ/2-60/2-400,function()return Autopilot end,cu)lh("Save Position","Save Position",200,lK.height,lK.x+lK.width+30,lK.y,function()return false end,lA,function()return AutopilotTargetIndex==0 or CustomTarget==nil end)lh("Update Position","Update Position",200,lK.height,lK.x+lK.width+30,lK.y,function()return false end,cx,function()return AutopilotTargetIndex>0 and CustomTarget~=nil end)lh("Clear Position","Clear Position",200,lK.height,lK.x-200-30,lK.y,function()return true end,lF,function()return AutopilotTargetIndex>0 and CustomTarget~=nil end)lw=60;lx=300;local cb=10;local cc=aJ/2-500;lh("Show Help","Hide Help",lx,lw,cb,cc,function()return showHelp end,function()showHelp=not showHelp end)cc=cc+lw+20;lh("View Settings","View Settings",lx,lw,cb,cc,function()return true end,lt)local cc=aJ/2-300;lh("Enable Turn and Burn","Disable Turn and Burn",lx,lw,cb,cc,function()return TurnBurn end,lB)lh("Horizontal Takeoff Mode","Vertical Takeoff Mode",lx,lw,cb+lx+20,cc,function()return VertTakeOffEngine end,function()VertTakeOffEngine=not VertTakeOffEngine;if VertTakeOffEngine then a0="Vertical Takeoff Mode"else a0="Horizontal Takeoff Mode"end end,function()return bK end)cc=cc+lw+20;lh("Show Orbit Display","Hide Orbit Display",lx,lw,cb,cc,function()return DisplayOrbit end,function()DisplayOrbit=not DisplayOrbit;if DisplayOrbit then a0="Orbit Display Enabled"else a0="Orbit Display Disabled"end end)lh("Engage Orbiting","Cancel Orbiting",lx,lw,cb+lx+20,cc,function()return IntoOrbit end,cr,function()return aq==0 and unit.getClosestPlanetInfluence()>0 end)cc=cc+lw+20;lh("Glide Re-Entry","Cancel Glide Re-Entry",lx,lw,cb,cc,function()return Reentry end,function()ak=true;lE()end,function()return planet.hasAtmosphere and not ap end)lh("Parachute Re-Entry","Cancel Parachute Re-Entry",lx,lw,cb+lx+20,cc,function()return Reentry end,cP,function()return planet.hasAtmosphere and not ap end)cc=cc+lw+20;lh("Engage Follow Mode","Disable Follow Mode",lx,lw,cb,cc,function()return Y end,ct,function()return l()==1 end)lh("Enable Repair Arrows","Disable Repair Arrows",lx,lw,cb+lx+20,cc,function()return aR end,function()aR=not aR;if aR then a0="Repair Arrows Enabled"else a0="Repair Arrows Diabled"end end,function()return l()==1 end)cc=cc+lw+20;if not ExternalAGG then lh("Enable AGG","Disable AGG",lx,lw,cb,cc,function()return bL end,cQ,function()return antigrav~=nil end)end;lh("Reset Intruder Alert","Set Safe Mass",lx,lw,cb+lx+20,cc,function()return safeMass>0 end,lI,function()return IntruderAlertSystem end)cc=cc+lw+20;lh(function()return e("Switch IPH Mode - Current: %s",iphCondition)end,function()return e("IPH Mode: %s",iphCondition)end,lx*2,lw,cb,cc,function()return false end,function()if iphCondition=="All"then iphCondition="Custom Only"elseif iphCondition=="Custom Only"then iphCondition="No Moons"else iphCondition="All"end;a0="IPH Mode: "..iphCondition end)cc=cc+lw+20;lh(function()return e("Toggle Control Scheme - Current: %s",userControlScheme)end,function()return e("Control Scheme: %s",userControlScheme)end,lx*2,lw,cb,cc,function()return false end,function()if userControlScheme=="keyboard"then userControlScheme="mouse"elseif userControlScheme=="mouse"then userControlScheme="virtual joystick"else userControlScheme="keyboard"end;a0="New Control Scheme: "..userControlScheme end)end;SetupComplete=false;beginSetup=coroutine.create(function()r:setupCustomTargetSpeedRanges(axisCommandId.longitudinal,{1000,5000,10000,20000,30000})l0()coroutine.yield()l4()coroutine.yield()bb=jj()lg()lv()lz()aF=aG;coroutine.yield()b0=df()b4=dg()b5=b4(df())b6=eD()b8=f7()b9=ft()ba=jb()bb=jj()coroutine.yield()unit.hide()system.showScreen(1)collectgarbage("collect")coroutine.yield()unit.setTimer("apTick",apTickRate)unit.setTimer("hudTick",hudTickRate)unit.setTimer("oneSecond",1)unit.setTimer("tenthSecond",1/10)unit.setTimer("fiveSecond",5)bY("start","SU")end)end;function script.onStop()_autoconf.hideCategoryPanels()if antigrav~=nil and not ExternalAGG then antigrav.hide()end;if warpdrive~=nil then warpdrive.hide()end;core.hide()a.control.switchOffHeadlights()if door and(aq>0 or aq==0 and ar<10000)then for _,d0 in pairs(door)do d0.toggle()end end;if switch then for _,d0 in pairs(switch)do d0.toggle()end end;if forcefield and(aq>0 or aq==0 and ar<10000)then for _,d0 in pairs(forcefield)do d0.toggle()end end;safeMass=au;cW()if button then button.activate()end;if SetWaypointOnExit then bb.showWayPoint(planet,bI)end;bY("stop","SU")end;function script.onTick(lL)if lL=="contact"then if not contactTimer then contactTimer=0 end;if A>contactTimer+10 then a0="Radar Contact"bY("rdrCon","RC")contactTimer=A end;unit.stopTimer("contact")elseif lL=="tenthSecond"then local function lM()local lN=system.createData;local lO=system.createWidget;panelInterplanetary=system.createWidgetPanel("Interplanetary Helper")interplanetaryHeader=lO(panelInterplanetary,"value")interplanetaryHeaderText=lN('{"label": "Target Planet", "value": "N/A", "unit":""}')u(interplanetaryHeaderText,interplanetaryHeader)widgetDistance=lO(panelInterplanetary,"value")widgetDistanceText=lN('{"label": "distance", "value": "N/A", "unit":""}')u(widgetDistanceText,widgetDistance)widgetTravelTime=lO(panelInterplanetary,"value")widgetTravelTimeText=lN('{"label": "Travel Time", "value": "N/A", "unit":""}')u(widgetTravelTimeText,widgetTravelTime)widgetMaxMass=lO(panelInterplanetary,"value")widgetMaxMassText=lN('{"label": "Maximum Mass", "value": "N/A", "unit":""}')u(widgetMaxMassText,widgetMaxMass)widgetTargetOrbit=lO(panelInterplanetary,"value")widgetTargetOrbitText=lN('{"label": "Target Altitude", "value": "N/A", "unit":""}')u(widgetTargetOrbitText,widgetTargetOrbit)widgetCurBrakeDistance=lO(panelInterplanetary,"value")widgetCurBrakeDistanceText=lN('{"label": "Cur Brake distance", "value": "N/A", "unit":""}')widgetCurBrakeTime=lO(panelInterplanetary,"value")widgetCurBrakeTimeText=lN('{"label": "Cur Brake Time", "value": "N/A", "unit":""}')widgetMaxBrakeDistance=lO(panelInterplanetary,"value")widgetMaxBrakeDistanceText=lN('{"label": "Max Brake distance", "value": "N/A", "unit":""}')widgetMaxBrakeTime=lO(panelInterplanetary,"value")widgetMaxBrakeTimeText=lN('{"label": "Max Brake Time", "value": "N/A", "unit":""}')widgetTrajectoryAltitude=lO(panelInterplanetary,"value")widgetTrajectoryAltitudeText=lN('{"label": "Projected Altitude", "value": "N/A", "unit":""}')if not ap then u(widgetCurBrakeDistanceText,widgetCurBrakeDistance)u(widgetCurBrakeTimeText,widgetCurBrakeTime)u(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)u(widgetMaxBrakeTimeText,widgetMaxBrakeTime)u(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)end end;local function lP()s(panelInterplanetary)panelInterplanetary=nil end;local function lQ()if not Autopilot then if CustomTarget==nil or CustomTarget.planetname~=planet.name then AutopilotDistance=(aa.center-bI):len()else AutopilotDistance=(CustomTarget.position-bI):len()end end;local f5=bF;local ki=unit.getThrottle()/100;if AtmoSpeedAssist then ki=G end;local lR,lS=b6.computeDistanceAndTime(bF,MaxGameVelocity,au,a:maxForceForward()*ki,warmup,0)local a6,a7;if not TurnBurn then a6,a7=bb.GetAutopilotBrakeDistanceAndTime(MaxGameVelocity)else a6,a7=bb.GetAutopilotTBBrakeDistanceAndTime(MaxGameVelocity)end;local _,lT;if not TurnBurn and f5>0 then _,lT=bb.GetAutopilotBrakeDistanceAndTime(f5)else _,lT=bb.GetAutopilotTBBrakeDistanceAndTime(f5)end;local lU=0;local lV=0;if AutopilotCruising or not Autopilot and f5>5 then lV=b6.computeTravelTime(f5,0,AutopilotDistance)elseif a6+lR<AutopilotDistance then lU=AutopilotDistance-(a6+lR)lV=b6.computeTravelTime(8333.0556,0,lU)else local lW=(AutopilotDistance-a6)/lR;lR=AutopilotDistance-a6;lS=lS*lW end;if CustomTarget~=nil and CustomTarget.planetname==planet.name and not Autopilot then return lV elseif AutopilotBraking then return lT elseif AutopilotCruising then return lV+lT else return lS+a7+lV end end;local function lX(iq,lY)if iq==nil then iq=core.g()end;iq=x(iq,5)if lY~=nil and lY or(aM==nil or aM~=iq)then local f8=core.getVelocity()local f5=vec3(f8):len()local lZ=f(unit.getData()).maxBrake;if lZ~=nil and lZ>0 and ap then lZ=lZ/q(f5/100,0.1,1)lZ=lZ/aq;if aq>0.10 then if LastMaxBrakeInAtmo then LastMaxBrakeInAtmo=(LastMaxBrakeInAtmo+lZ)/2 else LastMaxBrakeInAtmo=lZ end end end;if lZ~=nil and lZ>0 then LastMaxBrake=lZ end;aM=iq end end;lX(nil,true)if aq>0 and not WasInAtmo then if not bN and AtmoSpeedAssist and(AltitudeHold or Reentry)then cg(1)K=false end end;if bM~=nil then if r:getTargetSpeed(axisCommandId.longitudinal)~=bM then cj(bM,TRUE)else bM=nil end end;if AutopilotTargetName~="None"then if panelInterplanetary==nil then lM()end;if AutopilotTargetName~=nil then local l_=CustomTarget~=nil;local m0=LastMaxBrakeInAtmo/aa:getGravity(aa.center+vec3(0,0,1)*aa.radius):len()t(interplanetaryHeaderText,'{"label": "Target", "value": "'..AutopilotTargetName..'", "unit":""}')travelTime=lQ()if l_ and not Autopilot then ah=(bI-CustomTarget.position):len()else ah=(AutopilotTargetCoords-bI):len()end;if not TurnBurn then a6,a7=bb.GetAutopilotBrakeDistanceAndTime(bF)a8,a9=bb.GetAutopilotBrakeDistanceAndTime(MaxGameVelocity)else a6,a7=bb.GetAutopilotTBBrakeDistanceAndTime(bF)a8,a9=bb.GetAutopilotTBBrakeDistanceAndTime(MaxGameVelocity)end;local hw=cn(ah)t(widgetDistanceText,'{"label": "distance", "value": "'..hw..'"}')t(widgetTravelTimeText,'{"label": "Travel Time", "value": "'..cR(travelTime)..'", "unit":""}')hw=cn(a6)t(widgetCurBrakeDistanceText,'{"label": "Cur Brake distance", "value": "'..hw..'"}')t(widgetCurBrakeTimeText,'{"label": "Cur Brake Time", "value": "'..cR(a7)..'", "unit":""}')hw=cn(a8)t(widgetMaxBrakeDistanceText,'{"label": "Max Brake distance", "value": "'..hw..'"}')t(widgetMaxBrakeTimeText,'{"label": "Max Brake Time", "value": "'..cR(a9)..'", "unit":""}')t(widgetMaxMassText,'{"label": "Maximum Mass", "value": "'..e("%.2f",m0/1000)..'", "unit":" Tons"}')hw=cn(AutopilotTargetOrbit)t(widgetTargetOrbitText,'{"label": "Target Orbit", "value": "'..hw..'"}')if aq>0 and not WasInAtmo then system.removeDataFromWidget(widgetMaxBrakeTimeText,widgetMaxBrakeTime)system.removeDataFromWidget(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)system.removeDataFromWidget(widgetCurBrakeTimeText,widgetCurBrakeTime)system.removeDataFromWidget(widgetCurBrakeDistanceText,widgetCurBrakeDistance)system.removeDataFromWidget(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)WasInAtmo=true end;if aq==0 and WasInAtmo then if t(widgetMaxBrakeTimeText,widgetMaxBrakeTime)==1 then u(widgetMaxBrakeTimeText,widgetMaxBrakeTime)end;if t(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)==1 then u(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)end;if t(widgetCurBrakeTimeText,widgetCurBrakeTime)==1 then u(widgetCurBrakeTimeText,widgetCurBrakeTime)end;if t(widgetCurBrakeDistanceText,widgetCurBrakeDistance)==1 then u(widgetCurBrakeDistanceText,widgetCurBrakeDistance)end;if t(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)==1 then u(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)end;WasInAtmo=false end end else lP()end;if warpdrive~=nil then if f(warpdrive.getData()).destination~="Unknown"and f(warpdrive.getData()).distance>400000 then warpdrive.show()showWarpWidget=true else warpdrive.hide()showWarpWidget=false end end elseif lL=="oneSecond"then local function m1(fJ)local m2=0;aD=""local m3=aQ;local m4=0;local m5=0;local m6=0;local g7=0;local g8=""local m7=core.getElementHitPointsById;for c_ in pairs(as)do local ld=0;local m8=0;m8=h(as[c_])ld=m7(as[c_])m4=m4+ld;if ld<m8 then if ld==0 then m6=m6+1 else m5=m5+1 end;if aR and#aA==0 then position=vec3(core.getElementPositionById(as[c_]))local cb=position.x-C;local cc=position.y-C;local iQ=position.z-C;table.insert(aA,core.spawnArrowSticker(cb,cc,iQ+1,"down"))table.insert(aA,core.spawnArrowSticker(cb,cc,iQ+1,"down"))core.rotateSticker(aA[2],0,0,90)table.insert(aA,core.spawnArrowSticker(cb+1,cc,iQ,"north"))table.insert(aA,core.spawnArrowSticker(cb+1,cc,iQ,"north"))core.rotateSticker(aA[4],90,90,0)table.insert(aA,core.spawnArrowSticker(cb-1,cc,iQ,"south"))table.insert(aA,core.spawnArrowSticker(cb-1,cc,iQ,"south"))core.rotateSticker(aA[6],90,-90,0)table.insert(aA,core.spawnArrowSticker(cb,cc-1,iQ,"east"))table.insert(aA,core.spawnArrowSticker(cb,cc-1,iQ,"east"))core.rotateSticker(aA[8],90,0,90)table.insert(aA,core.spawnArrowSticker(cb,cc+1,iQ,"west"))table.insert(aA,core.spawnArrowSticker(cb,cc+1,iQ,"west"))core.rotateSticker(aA[10],-90,0,90)table.insert(aA,as[c_])end elseif aR and#aA>0 and aA[11]==as[c_]then for g0 in pairs(aA)do core.deleteSticker(aA[g0])end;aA={}end end;m2=d(m4/m3*100)if m2<100 then fJ[#fJ+1]=ca(0,0,"","pbright txt")g7=d(m2*2.55)g8=e("rgb(%d,%d,%d)",255-g7,g7,0)if m2<100 then fJ[#fJ+1]=ca("50%",1035,"Elemental Integrity: "..m2 .."%","txtbig txtmid","fill:"..g8)if m6>0 then fJ[#fJ+1]=ca("50%",1055,"Disabled Modules: "..m6 .." Damaged Modules: "..m5,"txtbig txtmid","fill:"..g8)elseif m5>0 then fJ[#fJ+1]=ca("50%",1055,"Damaged Modules: "..m5,"txtbig txtmid","fill:"..g8)end end end end;local function m9()if weapon then if WeaponPanelID==nil and(radarPanelID~=nil or GearExtended)then _autoconf.displayCategoryPanel(weapon,weapon_size,L_TEXT("ui_lua_widget_weapon", "Weapons"),"weapon",true)WeaponPanelID=_autoconf.panels[_autoconf.panels_size]elseif WeaponPanelID~=nil and radarPanelID==nil and not GearExtended then s(WeaponPanelID)WeaponPanelID=nil end end end;local function ma()local g5=p()local hk=bF;local mb=g5-at;if hk>1.38889 then hk=hk/1000;local mc=hk*(g5-at)TotalDistanceTravelled=TotalDistanceTravelled+mc;ab=ab+mc end;ac=ac+mb;TotalFlightTime=TotalFlightTime+mb;at=g5 end;local function md()if safeMass>0 then if au>safeMass+50 then bJ=d(au-safeMass)safeMass=-1 elseif au<safeMass then safeMass=au end elseif safeMass==-1 then safeMass=-2 else safeMass=-1 end end;if IntruderAlertSystem then md()end;ma()b9.UpdateRadar()b9.UpdatePipe()m9()local fJ={}b9.ExtraData(fJ)if ShowOdometer then fJ=b9.DrawOdometer(fJ,ab,TotalDistanceTravelled,ac)end;if ShouldCheckDamage then m1(fJ)end;ai=table.concat(fJ,"")collectgarbage("collect")elseif lL=="fiveSecond"then if not UseSatNav then return end;ao=dbHud_1.getStringValue("SPBAutopilotTargetName")if ao~=nil and ao~=""and ao~="SatNavNotChanged"then local cJ=f(dbHud_1.getStringValue("SavedLocations"))if cJ~=nil then _G["SavedLocations"]=cJ;local cz=-1;local cA;for c_,d0 in pairs(SavedLocations)do if d0.name and d0.name=="SatNav Location"then cz=c_;break end end;if cz~=-1 then cA=SavedLocations[cz]cz=-1;for c_,d0 in pairs(b0[0])do if d0.name and d0.name=="SatNav Location"then cz=c_;break end end;if cz>-1 then b0[0][cz]=cA end;ba.UpdateAtlasLocationsList()a0=cA.name.." position updated"end end;for i=1,#bT do if bT[i].name==ao then AutopilotTargetIndex=i;system.print("Index = "..AutopilotTargetIndex.." "..bT[i].name)ba.UpdateAutopilotTarget()dbHud_1.setStringValue("SPBAutopilotTargetName","SatNavNotChanged")break end end end elseif lL=="msgTick"then local fJ={}b9.DisplayMessage(fJ,"empty")a0="empty"unit.stopTimer("msgTick")ag=3 elseif lL=="animateTick"then bd=true;bc=false;ae=0;af=0;unit.stopTimer("animateTick")elseif lL=="hudTick"then local function me(fJ)local mf=d(q(ah/(aI/4)*255,0,255))fJ[#fJ+1]=e("<line x1='0' y1='0' x2='%fpx' y2='%fpx' style='stroke:rgb(%d,%d,%d);stroke-width:2;transform:translate(50%%, 50%%)' />",ae,af,d(D+0.5)+mf,d(F+0.5)-mf,d(E+0.5)-mf)end;local function mg()for _,d0 in pairs(aF)do if d0.hovered then if not d0.drawCondition or d0.drawCondition()then d0.toggleFunction()end;d0.hovered=false end end end;local function mh()local function mi(mj,mk,cb,cc,lk,ll)if mj>cb and mj<cb+lk and mk>cc and mk<cc+ll then return true else return false end end;local cb=ae+aI/2;local cc=af+aJ/2;for _,d0 in pairs(aF)do d0.hovered=mi(cb,cc,d0.x,d0.y,d0.width,d0.height)end end;local function ml(fJ)local function mm(fJ,mn,hover,cb,cc,eZ,mo,mp,mq,mr,ms)if type(mr)=="function"then mr=mr()end;if type(ms)=="function"then ms=ms()end;fJ[#fJ+1]=e("<rect x='%f' y='%f' width='%f' height='%f' fill='",cb,cc,eZ,mo)if mn then fJ[#fJ+1]=e("%s'",mp)else fJ[#fJ+1]=mq end;if hover then fJ[#fJ+1]=" style='stroke:white; stroke-width:2'"else fJ[#fJ+1]=" style='stroke:black; stroke-width:1'"end;fJ[#fJ+1]="></rect>"fJ[#fJ+1]=e("<text x='%f' y='%f' font-size='24' fill='",cb+eZ/2,cc+mo/2+5)if mn then fJ[#fJ+1]="black"else fJ[#fJ+1]="white"end;fJ[#fJ+1]="' text-anchor='middle' font-family='Montserrat'>"if mn then fJ[#fJ+1]=e("%s</text>",mr)else fJ[#fJ+1]=e("%s</text>",ms)end end;local mt="rgb(50,50,50)'"local mu="rgb(210,200,200)"local mv=mm;for _,d0 in pairs(aF)do local lj=d0.disableName;local li=d0.enableName;if type(lj)=="function"then lj=lj()end;if type(li)=="function"then li=li()end;if not d0.drawCondition or d0.drawCondition()then mv(fJ,d0.toggleVar(),d0.hovered,d0.x,d0.y,d0.width,d0.height,mu,mt,lj,li)end end end;local fJ={}b9.HUDPrologue(fJ)if showHud then b9.UpdateHud(fJ)else if AlwaysVSpd then b9.DrawVerticalSpeed(fJ,ar)end;b9.DisplayOrbitScreen(fJ)b9.DrawWarnings(fJ)end;if bQ and bR~={}then b9.DrawSettings(fJ)end;b9.HUDEpilogue(fJ)fJ[#fJ+1]=e([[<svg width="100%%" height="100%%" style="position:absolute;top:0;left:0"  viewBox="0 0 %d %d">]],aI,aJ)if a0~="empty"then b9.DisplayMessage(fJ,a0)end;if l()==0 and userControlScheme=="virtual joystick"then if DisplayDeadZone then b9.DrawDeadZone(fJ)end end;if w()==0 then if l()==1 and Z then if not AltIsOn then mh()ml(fJ)end;if not bc and not bd then local mw=table.concat(fJ,"")fJ={}fJ[#fJ+1]=e("<style>@keyframes test { from { opacity: 0; } to { opacity: 1; } }  body { animation-name: test; animation-duration: 0.5s; }</style><body><svg width='100%%' height='100%%' position='absolute' top='0' left='0'><rect width='100%%' height='100%%' x='0' y='0' position='absolute' style='fill:rgb(6,5,26);'/></svg><svg width='50%%' height='50%%' style='position:absolute;top:30%%;left:25%%' viewbox='0 0 %d %d'>",aI,aJ)fJ[#fJ+1]=mw;fJ[#fJ+1]="</body>"bc=true;fJ[#fJ+1]=[[</svg></body>]]unit.setTimer("animateTick",0.5)local content=table.concat(fJ,"")system.setScreen(content)elseif bd then local mw=table.concat(fJ,"")fJ={}fJ[#fJ+1]=e("<body style='background-color:rgb(6,5,26)'><svg width='50%%' height='50%%' style='position:absolute;top:30%%;left:25%%' viewbox='0 0 %d %d'>",aI,aJ)fJ[#fJ+1]=mw;fJ[#fJ+1]="</body>"end;if not bc then fJ[#fJ+1]=e([[<g transform="translate(%d %d)"><circle class="cursor" cx="%fpx" cy="%fpx" r="5"/></g>]],L,M,ae,af)end else mg()end else if not Z and l()==0 then mg()if ah>DeadZone then if DisplayDeadZone then me(fJ)end end elseif not AltIsOn then mh()ml(fJ)end;fJ[#fJ+1]=e([[<g transform="translate(%d %d)"><circle class="cursor" cx="%fpx" cy="%fpx" r="5"/></g>]],L,M,ae,af)end;fJ[#fJ+1]=[[</svg></body>]]content=table.concat(fJ,"")if not DidLogOutput then system.logInfo(LastContent)DidLogOutput=true end elseif lL=="apTick"then bb.APTick()end end;function script.onFlush()local function mx(my,kp)local mz=vec3()local mA=vec3()if my==axisCommandId.longitudinal then mz=vec3(core.getConstructOrientationForward())mA=bC elseif my==axisCommandId.vertical then mz=vec3(core.getConstructOrientationUp())mA=bB elseif my==axisCommandId.lateral then mz=vec3(core.getConstructOrientationRight())mA=bD else return vec3()end;local mB=vec3(core.getWorldGravity())local mC=mB:dot(mA)local mD=vec3(core.getWorldAirFrictionAcceleration())local mE=mD:dot(mA)local mF=vec3(core.getVelocity())local mG=mF:dot(mz)local mH=kp*constants.kph2m;if targetSpeedPID2==nil then targetSpeedPID2=pid.new(10,0,10.0)end;targetSpeedPID2:inject(mH-mG)local mI=targetSpeedPID2:get()local mJ=(mI-mE-mC)*mA;return mJ end;local function mK(my,kp)local mz=vec3()local mA=vec3()if my==axisCommandId.longitudinal then mz=vec3(core.getConstructOrientationForward())mA=bC elseif my==axisCommandId.vertical then mz=vec3(core.getConstructOrientationUp())mA=bB elseif my==axisCommandId.lateral then mz=vec3(core.getConstructOrientationRight())mA=bD else return vec3()end;local mB=vec3(core.getWorldGravity())local mC=mB:dot(mA)local mD=vec3(core.getWorldAirFrictionAcceleration())local mE=mD:dot(mA)local mF=vec3(core.getVelocity())local mG=mF:dot(mz)local mH=kp*constants.kph2m;if targetSpeedPID==nil then targetSpeedPID=pid.new(10,0,10.0)end;targetSpeedPID:inject(mH-mG)local mI=targetSpeedPID:get()local mJ=(mI-mE-mC)*mA;return mJ end;local function mL(mM,gc,jf)local mN=mM:cross(jf):normalize_inplace()local gY=math.acos(q(mN:dot(-gc),-1,1))*constants.rad2deg;if mN:cross(-gc):dot(jf)<0 then gY=-gY end;return gY end;if antigrav and not ExternalAGG then if not bL and antigrav.getBaseAltitude()~=AntigravTargetAltitude then antigrav.setBaseAltitude(AntigravTargetAltitude)end end;bN=r:getAxisCommandType(0)==axisCommandType.byThrottle;if bN and K then cg(0)K=false elseif not bN and not K then G=0;K=true end;pitchSpeedFactor=math.max(pitchSpeedFactor,0.01)yawSpeedFactor=math.max(yawSpeedFactor,0.01)rollSpeedFactor=math.max(rollSpeedFactor,0.01)torqueFactor=math.max(torqueFactor,0.01)brakeSpeedFactor=math.max(brakeSpeedFactor,0.01)brakeFlatFactor=math.max(brakeFlatFactor,0.01)autoRollFactor=math.max(autoRollFactor,0.01)turnAssistFactor=math.max(turnAssistFactor,0.01)local mO=q(R+S+system.getControlDeviceForwardInput(),-1,1)local mP=q(U+X+system.getControlDeviceYawInput(),-1,1)local mQ=q(V+T-system.getControlDeviceLeftRightInput(),-1,1)local mR=W;bG=vec3(core.getWorldVertical())if bG==nil or bG:len()==0 then bG=(planet.center-bI):normalize()end;bB=vec3(core.getConstructWorldOrientationUp())bC=vec3(core.getConstructWorldOrientationForward())bD=vec3(core.getConstructWorldOrientationRight())bE=vec3(core.getWorldVelocity())bI=vec3(core.getConstructWorldPos())au=core.getConstructMass()bF=vec3(bE):len()bH=-bG:dot(bE)bP=getRoll(bG,bC,bD)local mS=bP/180*math.pi;local mT=math.cos(mS)local mU=math.sin(mS)bO=mL(bG,bC,bD*mT+bB*mU)local mV=bE:normalize()local mW=c(bP)local mX=utils.sign(bP)local mY=vec3(core.getWorldAngularVelocity())local mZ=mO*pitchSpeedFactor*bD+mP*rollSpeedFactor*bC+mQ*yawSpeedFactor*bB;if be==true and bG:len()>0.01 then local m_=c(bi-bP)if((ProgradeIsOn or Reentry or BrakeLanding or ak or AltitudeHold or IntoOrbit)and m_>0 or aq>0.0 and m_<autoRollRollThreshold and autoRollPreference)and mP==0 and c(bO)<85 then local n0=bi;local n1=autoRollFactor;if aq==0 then n1=n1/4;bi=0;n0=0 end;if rollPID==nil then rollPID=pid.new(n1*0.01,0,n1*0.1)end;rollPID:inject(n0-bP)local n2=rollPID:get()mZ=mZ+n2*bC end end;if bG:len()>0.01 and aq>0.0 then local n3=20.0;if turnAssist==true and mW>n3 and mO==0 and mQ==0 then local n4=turnAssistFactor*0.1;local n5=turnAssistFactor*0.025;local n6=(mW-n3)/(180-n3)*180;local n7=0;if n6<90 then n7=n6/90 elseif n6<180 then n7=(180-n6)/90 end;n7=n7*n7;local n8=-mX*n5*(1.0-n7)local n9=n4*n7;mZ=mZ+n9*bD+n8*bB end end;local na=1;local nb=0;local nc=1;if system.getMouseWheel()>0 then if AltIsOn then if aq>0 or Reentry then bl=q(bl+speedChangeLarge,0,AtmoSpeedLimit)elseif Autopilot then MaxGameVelocity=q(MaxGameVelocity+speedChangeLarge/3.6*100,0,8333.00)end elseif av then local nd=G;G=x(q(G+speedChangeLarge/100,-1,1),2)if G>=0 and nd<0 then G=0;av=false end end elseif system.getMouseWheel()<0 then if AltIsOn then if aq>0 or Reentry then bl=q(bl-speedChangeLarge,0,AtmoSpeedLimit)elseif Autopilot then MaxGameVelocity=q(MaxGameVelocity-speedChangeLarge/3.6*100,0,8333.00)end elseif av then local nd=G;G=x(q(G-speedChangeLarge/100,-1,1),2)if G<=0 and nd>0 then G=0;av=false end end else av=true end;H=0;if ap and AtmoSpeedAssist and bN then if throttlePID==nil then throttlePID=pid.new(0.5,0,1)end;throttlePID:inject(bl/3.6-bE:dot(bC))local ne=throttlePID:get()J=q(ne,-1,1)if J<G and aq>0.005 then I=true;r:setThrottleCommand(axisCommandId.longitudinal,q(J,0.01,1))else I=false;r:setThrottleCommand(axisCommandId.longitudinal,G)end;if brakePID==nil then brakePID=pid.new(1*0.01,0,1*0.1)end;brakePID:inject(bE:len()-bl/3.6)local nf=q(brakePID:get(),0,1)if aq>0 and bH<-80 or aq>0.005 then H=nf end;if H>0 then if I and J==0.01 then r:setThrottleCommand(axisCommandId.longitudinal,0)end else J=q(J,0.01,1)end;local ng=''local nh=vec3()local ni=mx(axisCommandId.vertical,ad*1000)a:setEngineForceCommand("vertical airfoil , vertical ground ",ni,nb)local nj='thrust analog longitudinal 'if ExtraLongitudeTags~="none"then nj=nj..ExtraLongitudeTags end;local nk=r:getAxisCommandType(axisCommandId.longitudinal)local nl=r:composeAxisAccelerationFromThrottle(nj,axisCommandId.longitudinal)local nm=mK(axisCommandId.lateral,LeftAmount*1000)ng=ng..' , '.."lateral airfoil , lateral ground "nh=nh+nm;if nh:len()>constants.epsilon then a:setEngineForceCommand(ng,nh,nb,'','','',nc)end;a:setEngineForceCommand(nj,nl,na)local nn='thrust analog vertical fueled 'local no='thrust analog lateral fueled 'if ExtraLateralTags~="none"then no=no..ExtraLateralTags end;if ExtraVerticalTags~="none"then nn=nn..ExtraVerticalTags end;if ad~=0 or BrakeLanding and BrakeIsOn or not GearExtended and not stablized then a:setEngineForceCommand(nn,ni,na)else a:setEngineForceCommand(nn,vec3(),na)end;if LeftAmount~=0 then a:setEngineForceCommand(no,nm,na)else a:setEngineForceCommand(no,vec3(),na)end;if mR==0 then mR=H end;local np=-mR*(brakeSpeedFactor*bE+brakeFlatFactor*mV)a:setEngineForceCommand('brake',np)else if AtmoSpeedAssist then r:setThrottleCommand(axisCommandId.longitudinal,G)end;local kp=unit.getAxisCommandValue(0)if not bN then if brakePID==nil then brakePID=pid.new(1*0.01,0,1*0.1)end;brakePID:inject(bE:len()-kp/3.6)local nf=q(brakePID:get(),0,1)mR=q(mR+nf,0,1)end;local np=-mR*(brakeSpeedFactor*bE+brakeFlatFactor*mV)a:setEngineForceCommand('brake',np)local ng=''local nh=vec3()local nq=false;local nj='thrust analog longitudinal 'if ExtraLongitudeTags~="none"then nj=nj..ExtraLongitudeTags end;local nk=r:getAxisCommandType(axisCommandId.longitudinal)if nk==axisCommandType.byThrottle then local nl=r:composeAxisAccelerationFromThrottle(nj,axisCommandId.longitudinal)a:setEngineForceCommand(nj,nl,na)elseif nk==axisCommandType.byTargetSpeed then local nl=r:composeAxisAccelerationFromTargetSpeed(axisCommandId.longitudinal)ng=ng..' , '..nj;nh=nh+nl;if r:getTargetSpeed(axisCommandId.longitudinal)==0 or r:getCurrentToTargetDeltaSpeed(axisCommandId.longitudinal)<-r:getTargetSpeedCurrentStep(axisCommandId.longitudinal)*0.5 then nq=true end end;local no='thrust analog lateral 'if ExtraLateralTags~="none"then no=no..ExtraLateralTags end;local nr=r:getAxisCommandType(axisCommandId.lateral)if nr==axisCommandType.byThrottle then local ns=r:composeAxisAccelerationFromThrottle(no,axisCommandId.lateral)a:setEngineForceCommand(no,ns,na)elseif nr==axisCommandType.byTargetSpeed then local nm=r:composeAxisAccelerationFromTargetSpeed(axisCommandId.lateral)ng=ng..' , '..no;nh=nh+nm end;local nn='thrust analog vertical 'if ExtraVerticalTags~="none"then nn=nn..ExtraVerticalTags end;local nt=r:getAxisCommandType(axisCommandId.vertical)if nt==axisCommandType.byThrottle then local ni=r:composeAxisAccelerationFromThrottle(nn,axisCommandId.vertical)if ad~=0 or BrakeLanding and BrakeIsOn then a:setEngineForceCommand(nn,ni,na,'airfoil','ground','',nc)else a:setEngineForceCommand(nn,vec3(),na)a:setEngineForceCommand('airfoil vertical',ni,na,'airfoil','','',nc)a:setEngineForceCommand('ground vertical',ni,na,'ground','','',nc)end elseif nt==axisCommandType.byTargetSpeed then if ad<0 then a:setEngineForceCommand('hover',vec3(),na)end;local nu=r:composeAxisAccelerationFromTargetSpeed(axisCommandId.vertical)ng=ng..' , '..nn;nh=nh+nu end;if nh:len()>constants.epsilon then if W~=0 or nq or c(mV:dot(bC))<0.8 then ng=ng..', brake'end;a:setEngineForceCommand(ng,nh,nb,'','','',nc)end end;local nw=torqueFactor*(mZ-mY)local nx=vec3(core.getWorldAirFrictionAngularAcceleration())nw=nw-nx;a:setEngineTorqueCommand('torque',nw,na,'airfoil','','',nc)a:setBoosterCommand('rocket_engine')if a5 and not VanillaRockets then local f5=vec3(core.getVelocity()):len()local ny=0.15;if not bN then local nz=r:getTargetSpeed(axisCommandId.longitudinal)if f5*3.6>nz*(1-ny)and IsRocketOn then IsRocketOn=false;a:toggleBoosters()elseif f5*3.6<nz*(1-ny)and not IsRocketOn then IsRocketOn=true;a:toggleBoosters()end else local ki=unit.getThrottle()if AtmoSpeedAssist then ki=G*100 end;local kp=ki/100;if j==0 then kp=kp*MaxGameVelocity;if f5>=kp*(1-ny)and IsRocketOn then IsRocketOn=false;a:toggleBoosters()elseif f5<kp*(1-ny)and not IsRocketOn then IsRocketOn=true;a:toggleBoosters()end else local kv=d(bl)kp=kp*kv/3.6;if f5>=kp*(1-ny)and IsRocketOn then IsRocketOn=false;a:toggleBoosters()elseif f5<kp*(1-ny)and not IsRocketOn then IsRocketOn=true;a:toggleBoosters()end end end end end;function script.onUpdate()if not SetupComplete then local _,cJ=coroutine.resume(beginSetup)if cJ then SetupComplete=true end else a:update()if not bc and content~=LastContent then if not Cockpit then system.setScreen(content)else dbHud_1.setStringValue("content",content)end end;LastContent=content end end;function script.onActionStart(nA)local z=1;local function nB(nC)local function nD(nE,nC)local nF={planet.surfaceMaxAltitude+100,planet.spaceEngineMinAltitude-50,planet.noAtmosphericDensityAltitude+LowOrbitHeight,planet.radius*(TargetOrbitRadius-1)+planet.noAtmosphericDensityAltitude}local nG=nE;for _,d0 in ipairs(nF)do if nC and nG>d0 then nE=d0 elseif nE<d0 and not nC then nE=d0;break end end;return nE end;if nC then z=-1 end;if not ExternalAGG and bL then if Z and nC then AntigravTargetAltitude=1000 elseif AntigravTargetAltitude~=nil then AntigravTargetAltitude=AntigravTargetAltitude+z*a2;if AntigravTargetAltitude<1000 then AntigravTargetAltitude=1000 end;if AltitudeHold and AntigravTargetAltitude<HoldAltitude+10 and AntigravTargetAltitude>HoldAltitude-10 then HoldAltitude=AntigravTargetAltitude end else AntigravTargetAltitude=desiredBaseAltitude+z*100 end elseif AltitudeHold or VertTakeOff or IntoOrbit then if IntoOrbit then if Z then bu=nD(bu,nC)else bu=bu+z*a1 end;if bu<planet.noAtmosphericDensityAltitude then bu=planet.noAtmosphericDensityAltitude end else if Z and ap then HoldAltitude=nD(HoldAltitude,nC)else HoldAltitude=HoldAltitude+z*a1 end end else r:updateTargetGroundAltitudeFromActionStart(z*1.0)end end;local function nH(nC)if nC then z=-1 end;if not Z then if AtmoSpeedAssist and not AltIsOn then G=q(G+z*speedChangeLarge/100,-1,1)else r:updateCommandFromActionStart(axisCommandId.longitudinal,z*speedChangeLarge)end else if nC then z=1 else z=nil end;ba.adjustAutopilotTargetIndex(z)end end;local function nI(nJ)if not ap then a0="Flight Assist in Atmo only"return end;local dl=type(nJ)if bX==nil then if dl=="table"then if Autopilot or VectorToTarget then cu()end;bY("180On","BR")elseif dl==1 then bY("bnkLft","BR")else bY("bnkRht","BR")end;if not AltitudeHold and not Autopilot and not VectorToTarget then cs()if dl~="table"then nJ=nJ+1 end end;bX=nJ elseif dl=="table"then bY("180Off","BR")bX=nil end end;if nA=="gear"then GearExtended=not GearExtended;if GearExtended then VectorToTarget=false;LockPitch=nil;cg(0)if vBooster or hover then if ap and an==-1 then bY("bklOn","BL")StrongBrakes=true;Reentry=false;AutoTakeoff=false;VertTakeOff=false;AltitudeHold=false;BrakeLanding=true;be=true;GearExtended=false else if Q then bY("grOut","LG",1)a.control.extendLandingGears()end;r:setTargetGroundAltitude(LandingGearGroundHeight)if ap then BrakeIsOn=true end end end;if Q and not BrakeLanding and not(vBooster or hover)then bY("grOut","LG",1)a.control.extendLandingGears()end else if Q then bY("grIn","LG",1)a.control.retractLandingGears()end;r:setTargetGroundAltitude(TargetHoverHeight)end elseif nA=="light"then if a.control.isAnyHeadlightSwitchedOn()==1 then a.control.switchOffHeadlights()else a.control.switchOnHeadlights()end elseif nA=="forward"then R=R-1 elseif nA=="backward"then if AltIsOn then nI(-bE*5000)else R=R+1 end elseif nA=="left"then if AltIsOn then nI(1)else U=U-1 end elseif nA=="right"then if AltIsOn then nI(3)else U=U+1 end elseif nA=="yawright"then V=V-1 elseif nA=="yawleft"then V=V+1 elseif nA=="straferight"then r:updateCommandFromActionStart(axisCommandId.lateral,1.0)LeftAmount=1 elseif nA=="strafeleft"then r:updateCommandFromActionStart(axisCommandId.lateral,-1.0)LeftAmount=-1 elseif nA=="up"then ad=ad+1;r:deactivateGroundEngineAltitudeStabilization()r:updateCommandFromActionStart(axisCommandId.vertical,1.0)elseif nA=="down"then ad=ad-1;r:deactivateGroundEngineAltitudeStabilization()r:updateCommandFromActionStart(axisCommandId.vertical,-1.0)elseif nA=="groundaltitudeup"then nB()elseif nA=="groundaltitudedown"then nB(true)elseif nA=="option1"then ba.adjustAutopilotTargetIndex()toggleView=false elseif nA=="option2"then ba.adjustAutopilotTargetIndex(1)toggleView=false elseif nA=="option3"then local function nK()aE=not aE;if not aE then bY("wid","DH")unit.show()core.show()if atmofueltank_size>0 then _autoconf.displayCategoryPanel(atmofueltank,atmofueltank_size,L_TEXT("ui_lua_widget_atmofuel", "Atmo Fuel"),"fuel_container")fuelPanelID=_autoconf.panels[_autoconf.panels_size]end;if spacefueltank_size>0 then _autoconf.displayCategoryPanel(spacefueltank,spacefueltank_size,L_TEXT("ui_lua_widget_spacefuel", "Space Fuel"),"fuel_container")spacefuelPanelID=_autoconf.panels[_autoconf.panels_size]end;if rocketfueltank_size>0 then _autoconf.displayCategoryPanel(rocketfueltank,rocketfueltank_size,L_TEXT("ui_lua_widget_rocketfuel", "Rocket Fuel"),"fuel_container")rocketfuelPanelID=_autoconf.panels[_autoconf.panels_size]end else bY("hud","DH")unit.hide()core.hide()if fuelPanelID~=nil then s(fuelPanelID)fuelPanelID=nil end;if spacefuelPanelID~=nil then s(spacefuelPanelID)spacefuelPanelID=nil end;if rocketfuelPanelID~=nil then s(rocketfuelPanelID)rocketfuelPanelID=nil end end end;if hideHudOnToggleWidgets then if showHud then showHud=false else showHud=true end end;nK()toggleView=false elseif nA=="option4"then bX=nil;cu()toggleView=false elseif nA=="option5"then local function nL()if LockPitch==nil then bY("lkPOn","LP")LockPitch=bO;AutoTakeoff=false;AltitudeHold=false;BrakeLanding=false else bY("lkPOff","LP")LockPitch=nil end end;nL()toggleView=false elseif nA=="option6"then cs()toggleView=false elseif nA=="option7"then sounds=not sounds;if sounds then a0="All HUD sounds enabled"else a0="All HUD sounds disabled"end;toggleView=false elseif nA=="option8"then stablized=not stablized;if not stablized then a0="DeCoupled Mode - Ground Stabilization off"r:deactivateGroundEngineAltitudeStabilization()bY("gsOff","GS")else a0="Coupled Mode - Ground Stabilization on"r:activateGroundEngineAltitudeStabilization(currentGroundAltitudeStabilization)a:setEngineForceCommand('hover',vec3(),1)bY("gsOn","GS")end;toggleView=false elseif nA=="option9"then if gyro~=nil then gyro.toggle()aw=gyro.getState()==1;if aw then bY("gyOn","GA")else bY("gyOff","GA")end end;toggleView=false elseif nA=="lshift"then if AltIsOn then Z=true;return end;if w()==1 then Z=true;PrevViewLock=w()v(1)elseif l()==1 and ShiftShowsRemoteButtons then Z=true;bd=false;bc=false end elseif nA=="brake"then if BrakeToggleStatus then cC()elseif not BrakeIsOn then cC()else BrakeIsOn=true end elseif nA=="lalt"then toggleView=true;AltIsOn=true;if l()==0 and not freeLookToggle and userControlScheme=="keyboard"then v(1)end elseif nA=="booster"then if VanillaRockets then a:toggleBoosters()elseif not a5 then if not IsRocketOn then a:toggleBoosters()IsRocketOn=true end;a5=true else if IsRocketOn then a:toggleBoosters()IsRocketOn=false end;a5=false end elseif nA=="stopengines"then local function nM()if A-B<1.5 then bY("clear","CA")AutopilotAccelerating=false;AutopilotBraking=false;AutopilotCruising=false;Autopilot=false;AutopilotRealigned=false;AutopilotStatus="Aligning"RetrogradeIsOn=false;ProgradeIsOn=false;bX=nil;AltitudeHold=false;Reentry=false;BrakeLanding=false;BrakeIsOn=false;AutoTakeoff=false;VertTakeOff=false;Y=false;N=false;ak=false;al=false;P=false;be=autoRollPreference;VectorToTarget=false;TurnBurn=false;aw=false;LockPitch=nil;IntoOrbit=false end end;nM()B=A;if r:getAxisCommandType(0)~=axisCommandType.byTargetSpeed then if G~=0 then r:resetCommand(axisCommandId.longitudinal)cg(0)else cg(100)end else if r:getTargetSpeed(axisCommandId.longitudinal)~=0 then r:resetCommand(axisCommandId.longitudinal)else if ap then cj(AtmoSpeedLimit)else cj(MaxGameVelocity*3.6)end end end elseif nA=="speedup"then nH()elseif nA=="speeddown"then nH(true)elseif nA=="antigravity"and not ExternalAGG then if antigrav~=nil then cQ()end end end;function script.onActionStop(nA)local function nN()if not ExternalAGG and bL then a4=a2 end;if AltitudeHold or VertTakeOff or IntoOrbit then a3=a1 end end;if nA=="forward"then R=0 elseif nA=="backward"then R=0 elseif nA=="left"then if bX==2 then bX=0 else bX=nil end;U=0 elseif nA=="right"then if bX==4 then bX=0 else bX=nil end;U=0 elseif nA=="yawright"then V=0 elseif nA=="yawleft"then V=0 elseif nA=="straferight"then r:updateCommandFromActionStop(axisCommandId.lateral,-1.0)LeftAmount=0 elseif nA=="strafeleft"then r:updateCommandFromActionStop(axisCommandId.lateral,1.0)LeftAmount=0 elseif nA=="up"then ad=0;r:updateCommandFromActionStop(axisCommandId.vertical,-1.0)if stablized then r:activateGroundEngineAltitudeStabilization(currentGroundAltitudeStabilization)a:setEngineForceCommand('hover',vec3(),1)end elseif nA=="down"then ad=0;r:updateCommandFromActionStop(axisCommandId.vertical,1.0)if stablized then r:activateGroundEngineAltitudeStabilization(currentGroundAltitudeStabilization)a:setEngineForceCommand('hover',vec3(),1)end elseif nA=="groundaltitudeup"then nN()toggleView=false elseif nA=="groundaltitudedown"then nN()toggleView=false elseif nA=="lshift"then if w()==1 then ae=0;af=0;v(PrevViewLock)elseif l()==1 and ShiftShowsRemoteButtons then bd=false;bc=false end;Z=false elseif nA=="brake"then if not BrakeToggleStatus then if BrakeIsOn then cC()else BrakeIsOn=false end end elseif nA=="lalt"then if l()==0 and freeLookToggle then if toggleView then if w()==1 then v(0)else v(1)end else toggleView=true end elseif l()==0 and not freeLookToggle and userControlScheme=="keyboard"then v(0)end;AltIsOn=false end end;function script.onActionLoop(nA)local z=1;local function nO(nC)if nC then z=-1 end;if not ExternalAGG and bL then if AntigravTargetAltitude~=nil then AntigravTargetAltitude=AntigravTargetAltitude+z*a4;if AntigravTargetAltitude<1000 then AntigravTargetAltitude=1000 end;if AltitudeHold and AntigravTargetAltitude<HoldAltitude+10 and AntigravTargetAltitude>HoldAltitude-10 then HoldAltitude=AntigravTargetAltitude end;a4=a4*1.05;BrakeIsOn=false else AntigravTargetAltitude=desiredBaseAltitude+z*100;BrakeIsOn=false end elseif AltitudeHold or VertTakeOff or IntoOrbit then if IntoOrbit then bu=bu+z*a3;if bu<planet.noAtmosphericDensityAltitude then bu=planet.noAtmosphericDensityAltitude end else HoldAltitude=HoldAltitude+z*a3 end;a3=a3*1.05 else r:updateTargetGroundAltitudeFromActionLoop(z*1.0)end end;local function nP(nC)if nC then z=-1 end;if not Z then if AtmoSpeedAssist and not AltIsOn then G=q(G+z*speedChangeSmall/100,-1,1)else r:updateCommandFromActionLoop(axisCommandId.longitudinal,z*speedChangeSmall)end end end;if nA=="groundaltitudeup"then if not Z then nO()end elseif nA=="groundaltitudedown"then if not Z then nO(true)end elseif nA=="speedup"then nP()elseif nA=="speeddown"then nP(true)end end;function script.onInputText(cd)local function nQ()for c_,d0 in pairs(c3())do dbHud_1.setStringValue(d0,g(nil))end;for c_,d0 in pairs(b)do if d0~="SavedLocations"then dbHud_1.setStringValue(d0,g(nil))end end;a0="Databank wiped except Save Locations. New variables will save after re-enter seat and exit"ag=5;aK=false end;local function nR(fZ,db)local nS=false;local du='::pos{'..num..','..num..','..num..','..num..','..num..'}'local dG,dH,dO,dP,dQ=n(db,du)for _,d0 in pairs(b5[0])do if d0.name==fZ then dP=math.rad(dP)dO=math.rad(dO)local planet=b0[tonumber(dG)][tonumber(dH)]local eA=math.cos(dO)local nT=vec3(eA*math.cos(dP),eA*math.sin(dP),math.sin(dO))return planet.center+(planet.radius+dQ)*nT end end;return fZ.." not found"end;local function nU(nV,planet,db,gU)local function nW(db)local num=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local du='::pos{'..num..','..num..','..num..','..num..','..num..'}'local dG,dH,dO,dP,dQ=n(db,du)if dG=="0"and dH=="0"then return vec3(tonumber(dO),tonumber(dP),tonumber(dQ))end;dP=math.rad(dP)dO=math.rad(dO)local planet=b0[tonumber(dG)][tonumber(dH)]local eA=math.cos(dO)local nT=vec3(eA*math.cos(dP),eA*math.sin(dP),math.sin(dO))return planet.center+(planet.radius+dQ)*nT end;if dbHud_1 or gU then local cA={}local position=nW(db)if planet.name=="Space"then cA={position=position,name=nV,atmosphere=0,planetname=planet.name,gravity=planet.gravity}else cA={position=position,name=nV,atmosphere=planet.atmosphericDensityAboveSurface,planetname=planet.name,gravity=planet.gravity}end;if not gU then SavedLocations[#SavedLocations+1]=cA else for c_,d0 in pairs(b0[0])do if d0.name and nV==d0.name then table.remove(b0[0],c_)end end end;table.insert(b0[0],cA)ba.UpdateAtlasLocationsList()else a0="Databank must be installed to save permanent locations"end end;local i;local nX,nY=nil,nil;local nZ="Command List:\n/commands \n/setname <newname> - Updates current selected saved position name\n/G VariableName newValue - Updates global variable to new value\n".."/G dump - shows all variables updatable by /G\n/agg <targetheight> - Manually set agg target height\n".."/addlocation SafeZoneCenter ::pos{0,0,13771471,7435803,-128971} - adds a saved location by waypoint, not as accurate as making one at location\n".."/::pos{0,0,13771471,7435803,-128971} - adds a temporary waypoint that is not saved to databank with name 0Temp\n".."/copydatabank - copies dbHud databank to a blank databank\n".."/iphWP - displays current IPH target's ::pos waypoint in lua chat"i=string.find(cd," ")nX=cd;if i~=nil then nX=string.sub(cd,0,i-1)nY=string.sub(cd,i+1)end;if nX=="/help"or nX=="/commands"then for iw in string.gmatch(nZ,"([^\n]+)")do system.print(iw)end;return elseif nX=="/setname"then if nY==nil or nY==""then a0="Usage: ah-setname Newname"return end;if AutopilotTargetIndex>0 and CustomTarget~=nil then cx(nY)else a0="Select a saved target to rename first"end elseif nX=="/addlocation"or string.find(cd,"::pos")~=nil then local gU=false;local nV="0-Temp"if nY==nil or nY==""then nY=nX;gU=true end;i=string.find(nY,"::")if not gU then nV=string.sub(nY,1,i-2)end;local db=string.sub(nY,i)local num=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local du='::pos{'..num..','..num..','..num..','..num..','..num..'}'local dG,dH,dO,dP,dQ=n(db,du)local planet=b0[tonumber(dG)][tonumber(dH)]if planet.name=="Space"then local n_=vec3(tonumber(dO),tonumber(dP),tonumber(dQ))local dL=sys:closestBody(n_)if(n_-dL.center):len()<dL.radius+dL.noAtmosphericDensityAltitude then planet=dL end end;nU(nV,planet,db,gU)a0="Added "..nV.." to saved locations,\nplanet "..planet.name.." at "..db;ag=5 elseif nX=="/agg"then if nY==nil or nY==""then a0="Usage: /agg targetheight"return end;nY=tonumber(nY)if nY<1000 then nY=1000 end;AntigravTargetAltitude=nY;a0="AGG Target Height set to "..nY elseif nX=="/G"then if nY==nil or nY==""then a0="Usage: /G VariableName variablevalue\n/G dump - shows all variables"return end;if nY=="dump"then for c_,d0 in pairs(c3())do if type(_G[d0])=="boolean"then if _G[d0]==true then system.print(d0 .." true")else system.print(d0 .." false")end elseif _G[d0]==nil then system.print(d0 .." nil")else system.print(d0 .." ".._G[d0])end end;return end;i=string.find(nY," ")local o0=string.sub(nY,0,i-1)local o1=string.sub(nY,i+1)for c_,d0 in pairs(c3())do if d0==o0 then a0="Variable "..o0 .." changed to "..o1;local o2=type(_G[d0])if o2=="number"then o1=tonumber(o1)elseif o2=="boolean"then if string.lower(o1)=="true"then o1=true else o1=false end end;_G[d0]=o1;return end end;a0="No such global variable: "..o0 elseif nX=="/copydatabank"then if dbHud_2 then cW(true)else a0="Spare Databank required to copy databank"end elseif nX=="/iphWP"then if AutopilotTargetIndex>0 then system.print(bb.showWayPoint(aa,AutopilotTargetCoords,true))a0="::pos waypoint shown in lua chat"else a0="No target selected in IPH"end end end;function script.onEnter(dY)if radar_1 and not ap and not bU then unit.setTimer("contact",0.1)end end;script.onStart()
        
        
        -- error handling code added by wrap.lua
        end, __wrap_lua__traceback)
        if not ok then
          __wrap_lua__error(message)
          if not script then script = {} end
        end
    stop:
      lua: |
        if not __wrap_lua__stopped and script.onStop then
          local ok, message = xpcall(script.onStop,__wrap_lua__traceback,unit)
          if not ok then __wrap_lua__error(message) end
        end
    tick(timerId):
      lua: |
        if not __wrap_lua__stopped and script.onTick then
          local ok, message = xpcall(script.onTick,__wrap_lua__traceback,timerId,unit)
          if not ok then __wrap_lua__error(message) end
        end
  system:
    actionStart(action):
      lua: |
        if not __wrap_lua__stopped and script.onActionStart then
          local ok, message = xpcall(script.onActionStart,__wrap_lua__traceback,action,system)
          if not ok then __wrap_lua__error(message) end
        end
    actionStop(action):
      lua: |
        if not __wrap_lua__stopped and script.onActionStop then
          local ok, message = xpcall(script.onActionStop,__wrap_lua__traceback,action,system)
          if not ok then __wrap_lua__error(message) end
        end
    actionLoop(action):
      lua: |
        if not __wrap_lua__stopped and script.onActionLoop then
          local ok, message = xpcall(script.onActionLoop,__wrap_lua__traceback,action,system)
          if not ok then __wrap_lua__error(message) end
        end
    update:
      lua: |
        if not __wrap_lua__stopped and script.onUpdate then
          local ok, message = xpcall(script.onUpdate,__wrap_lua__traceback,system)
          if not ok then __wrap_lua__error(message) end
        end
    flush:
      lua: |
        if not __wrap_lua__stopped and script.onFlush then
          local ok, message = xpcall(script.onFlush,__wrap_lua__traceback,system)
          if not ok then __wrap_lua__error(message) end
        end
    inputText(text):
      lua: |
        if not __wrap_lua__stopped and script.onInputText then
          local ok, message = xpcall(script.onInputText,__wrap_lua__traceback,text,system)
          if not ok then __wrap_lua__error(message) end
        end
  radar_1:
    enter(id):
      lua: |
        local radar = radar_1
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_1
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_2:
    enter(id):
      lua: |
        local radar = radar_2
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_2
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_3:
    enter(id):
      lua: |
        local radar = radar_3
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_3
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_4:
    enter(id):
      lua: |
        local radar = radar_4
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_4
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_5:
    enter(id):
      lua: |
        local radar = radar_5
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_5
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_6:
    enter(id):
      lua: |
        local radar = radar_6
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_6
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_7:
    enter(id):
      lua: |
        local radar = radar_7
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_7
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_8:
    enter(id):
      lua: |
        local radar = radar_8
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_8
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_9:
    enter(id):
      lua: |
        local radar = radar_9
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_9
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_10:
    enter(id):
      lua: |
        local radar = radar_10
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_10
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
