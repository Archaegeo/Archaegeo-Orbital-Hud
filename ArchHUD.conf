name: ArchHud - Archaegeo v1.358 (Minified)
slots:
  core:
    class: CoreUnit
  radar:
    class: RadarPVPUnit
    select: manual
  antigrav:
    class: AntiGravityGeneratorUnit
  warpdrive:
    class: WarpDriveUnit
  gyro:
    class: GyroUnit
  weapon:
    class: WeaponUnit
    select: manual
  dbHud:
    class: databank
    select: manual
  telemeter:
    class: TelemeterUnit
    select: manual
  vBooster:
    class: VerticalBooster
  hover:
    class: Hovercraft
  door:
    class: DoorUnit
    select: manual
  switch:
    class: ManualSwitchUnit
    select: manual
  forcefield:
    class: ForceFieldUnit
    select: manual
  atmofueltank:
    class: AtmoFuelContainer
    select: manual
  spacefueltank:
    class: SpaceFuelContainer
    select: manual
  rocketfueltank:
    class: RocketFuelContainer
    select: manual
handlers:
  unit:
    start:
      lua: |
        -- error handling code added by wrap.lua
        __wrap_lua__stopped = false
        __wrap_lua__stopOnError = false
        __wrap_lua__rethrowErrorAlways = false
        __wrap_lua__rethrowErrorIfStopped = true
        __wrap_lua__printError = true
        __wrap_lua__showErrorOnScreens = true
        
        function __wrap_lua__error (message)
          if __wrap_lua__stopped then return end
        
          -- make the traceback more readable and escape HTML syntax characters
          message = tostring(message):gsub('"%-%- |STDERROR%-EVENTHANDLER[^"]*"', 'chunk'):gsub("&", "&amp;"):gsub("<", "&lt;"):gsub(">", "&gt;")
        
          local unit = unit or self or {}
        
          if __wrap_lua__showErrorOnScreens then
            for _, value in pairs(unit) do
              if type(value) == "table" and value.setCenteredText and value.setHTML then -- value is a screen
                if message:match("\n") then
                  value.setHTML([[
        <pre style="color: white; background-color: black; font-family: Consolas,monospace; font-size: 4vh; white-space: pre-wrap; margin: 1em">
        Error: ]] .. message .. [[
        </pre>]])
                else
                  value.setCenteredText(message)
                end
              end
            end
          end
        
          if __wrap_lua__printError and system and system.print then
            system.print("Error: " .. message:gsub("\n", "<br>"))
          end
        
          if __wrap_lua__stopOnError then
            __wrap_lua__stopped = true
          end
        
          if __wrap_lua__stopped and unit and unit.exit then
            unit.exit()
          end
        
          if __wrap_lua__rethrowErrorAlways or (__wrap_lua__stopped and __wrap_lua__rethrowErrorIfStopped) then
            error(message)
          end
        end
        
        -- in case traceback is removed or renamed
        __wrap_lua__traceback = traceback or (debug and debug.traceback) or function (arg1, arg2) return arg2 or arg1 end
        
        local ok, message = xpcall(function ()
        
        -- script code
        
        useTheseSettings = false --export:
        userControlScheme = "virtual joystick" --export:
        soundFolder = "archHUD" --export:
        freeLookToggle = true --export:
        BrakeToggleDefault = true --export:
        RemoteFreeze = false --export:
        RemoteHud = true --export:
        brightHud = false --export:
        VanillaRockets = false --export:
        InvertMouse = false --export:
        autoRollPreference = false --export:
        turnAssist = true --export:
        ExternalAGG = false --export:
        UseSatNav = false --export:
        ShouldCheckDamage = true --export:
        CalculateBrakeLandingSpeed = false --export:
        AtmoSpeedAssist = true --export:
        ForceAlignment = false --export:
        DisplayDeadZone = true --export:
        showHud = true --export: 
        ShowOdometer = true --export:
        hideHudOnToggleWidgets = true --export:
        ShiftShowsRemoteButtons = true --export:
        DisplayOrbit = true --export: 
        SetWaypointOnExit = false --export:
        IntruderAlertSystem = false --export:
        AlwaysVSpd = false --export:
        BarFuelDisplay = true --export:
        showHelp = true --export:
        Cockpit = false --export:
        voices = true --export:
        alerts = true --export:
        CollisionSystem = true --export:
        YawStallAngle = 35 --export:
        PitchStallAngle = 35 --export:
        brakeLandingRate = 30 --export:
        MaxPitch = 30 --export:
        LockPitchTarget = 0 --export:
        TargetOrbitRadius = 1.4 --export:
        LowOrbitHeight = 1000 --export:
        AtmoSpeedLimit = 1050 --export:
        SpaceSpeedLimit = 30000 --export:
        AutoTakeoffAltitude = 1000 --export:
        TargetHoverHeight = 50 --export:
        LandingGearGroundHeight = 0 --export:
        ReEntryHeight = 5000 --export:
        MaxGameVelocity = 8333.00 --export:
        AutopilotInterplanetaryThrottle = 1.0 --export:
        warmup = 32 --export:
        fuelTankHandlingAtmo = 0 --export:
        fuelTankHandlingSpace = 0 --export:
        fuelTankHandlingRocket = 0 --export:
        ContainerOptimization = 0 --export:
        FuelTankOptimization = 0 --export:
        ResolutionX = 1920 --export:
        ResolutionY = 1080 --export:
        circleRad = 400 --export:
        SafeR = 130 --export:
        SafeG = 224 --export:
        SafeB = 255 --export:
        PvPR = 255 --export:
        PvPG = 0 --export:
        PvPB = 0 --export:
        centerX = 960 --export:
        centerY = 540 --export:
        throtPosX = 1300 --export:
        throtPosY = 540 --export:
        vSpdMeterX = 1525  --export:
        vSpdMeterY = 325 --export:
        altMeterX = 550  --export:
        altMeterY = 540 --export:
        fuelX = 30 --export:
        fuelY = 700 --export:
        DeadZone = 50 --export:
        OrbitMapSize = 250 --export:
        OrbitMapX = 75 --export:
        OrbitMapY = 0 --export:
        soundVolume = 100 --export:
        speedChangeLarge = 5 --export:
        speedChangeSmall = 1 --export:
        MouseXSensitivity = 0.003 --export:
        MouseYSensitivity = 0.003 --export:
        autoRollFactor = 2 --export:
        rollSpeedFactor = 1.5 --export:
        autoRollRollThreshold = 180 --export:
        minRollVelocity = 150 --export:
        turnAssistFactor = 2 --export:
        TrajectoryAlignmentStrength = 0.002 --export:
        torqueFactor = 2 --export:
        pitchSpeedFactor = 0.8 --export:
        yawSpeedFactor = 1 --export:
        brakeSpeedFactor = 3 --export:
        brakeFlatFactor = 1 --export:
        DampingMultiplier = 40 --export:
        apTickRate = 0.0166667 --export:
        hudTickRate = 0.0666667 --export:
        ExtraLongitudeTags = "none" --export:
        ExtraLateralTags = "none" --export:
        ExtraVerticalTags = "none" --export:
        local a=Navigator.new(system,core,unit)script={}VERSION_NUMBER=1.358;BrakeToggleStatus=BrakeToggleDefault;VertTakeOffEngine=false;BrakeIsOn=false;RetrogradeIsOn=false;ProgradeIsOn=false;Autopilot=false;TurnBurn=false;AltitudeHold=false;BrakeLanding=false;AutoTakeoff=false;Reentry=false;VertTakeOff=false;HoldAltitude=1000;AutopilotAccelerating=false;AutopilotRealigned=false;AutopilotBraking=false;AutopilotCruising=false;AutopilotEndSpeed=0;AutopilotStatus="Aligning"AutopilotPlanetGravity=0;PrevViewLock=1;AutopilotTargetName="None"AutopilotTargetCoords=nil;AutopilotTargetIndex=0;GearExtended=nil;TotalDistanceTravelled=0.0;TotalFlightTime=0;SavedLocations={}VectorToTarget=false;LocationIndex=0;LastMaxBrake=0;LockPitch=nil;LastMaxBrakeInAtmo=0;AntigravTargetAltitude=1000;LastStartTime=0;SpaceTarget=false;LeftAmount=0;IntoOrbit=false;safeMass=0;iphCondition="All"stablized=true;local b={"VertTakeOff","VertTakeOffEngine","SpaceTarget","BrakeToggleStatus","BrakeIsOn","RetrogradeIsOn","ProgradeIsOn","Autopilot","TurnBurn","AltitudeHold","BrakeLanding","Reentry","AutoTakeoff","HoldAltitude","AutopilotAccelerating","AutopilotBraking","AutopilotCruising","AutopilotRealigned","AutopilotEndSpeed","AutopilotStatus","AutopilotPlanetGravity","PrevViewLock","AutopilotTargetName","AutopilotTargetCoords","AutopilotTargetIndex","TotalDistanceTravelled","TotalFlightTime","SavedLocations","VectorToTarget","LocationIndex","LastMaxBrake","LockPitch","LastMaxBrakeInAtmo","AntigravTargetAltitude","LastStartTime","safeMass","iphCondition","stablized"}local c=math.abs;local d=math.floor;local e=string.format;local f=json.decode;local g=json.encode;local h=core.getElementMaxHitPointsById;local j=unit.getAtmosphereDensity;local k=core.getElementMassById;local l=a.control.isRemoteControlled;local m=math.atan;local n=string.match;local o=utils.round;local p=system.getTime;local vec3=vec3;local q=utils.clamp;local r=a.axisCommandManager;local s=system.destroyWidgetPanel;local t=system.updateData;local u=system.addDataToWidget;local v=system.lockView;local w=system.isViewLocked;local z=math.sqrt;local A=tonumber;local core=core;local function B(C,D)local mult=10^(D or 0)return d(C*mult+0.5)/mult end;local E=p()local F=p()local G=16;local H=13;local I=SafeR;local J=SafeB;local K=SafeG;local L=0;local M=0;local N=false;local O=0;local P=false;local Q=false;local R=55;local S=false;local T=false;local U=0;local V=0;local W=0;local X=0;local Y=0;local Z=0;local a0=0;local a1=false;local a2=false;local a3="empty"local a4=5;local a5=5;local a6=a4;local a7=a5;local a8=false;local a9,aa=0;local ab,ac=0;local ad=nil;local ae=0;local af=0;local ag=0;local ah=0;local ai=0;local aj=3;local ak=0;local al=""local am=0;local an=false;local ao=false;local ap=false;local aq=-1;local ar=""local as=j()>0;local at=j()local au=core.getAltitude()local av=core.getElementIdList()local aw=p()local ax=core.getConstructMass()local ay=false;local az=nil;local aA=[[rgb(]]..d(I+0.5)..","..d(K+0.5)..","..d(J+0.5)..[[)]]local aB=[[rgb(]]..d(I*0.9+0.5)..","..d(K*0.9+0.5)..","..d(J*0.9+0.5)..[[)]]local aC={}local aD=0;local aE=0;local aF=""local aG=true;local aH={}local aI=ResolutionX;local aJ=ResolutionY;local aK={}local aL={}local aM={}local aN=0;local aO=false;local aP={}local aQ={}local aR=d(1/apTickRate)*2;local aS={}local aT={}local aU={}local aV={}local aW=false;local aX=0;local aY=nil;local aZ=nil;local a_=nil;local b0=nil;local b1=nil;local b2=nil;local b3=nil;local b4=nil;local b5=nil;local b6=nil;local b7=nil;local b8=nil;local b9=false;local ba=false;local bb=autoRollPreference;local bc=LandingGearGroundHeight;local bd=false;local be=p()local bf=0;local bg=0;local bh=0;local bi=AtmoSpeedLimit;local bj=0;local bk=nil;local bl=0;local bm=0;local bn=false;local bo=false;local bp={VectorToTarget=false}local bq=false;local br=0;local bs=nil;local bt=false;local bu=false;local bv=false;local bw=false;local bx=0;local by=vec3(core.getConstructWorldOrientationUp())local bz=vec3(core.getConstructWorldOrientationForward())local bA=vec3(core.getConstructWorldOrientationRight())local bB=vec3(core.getWorldVelocity())local bC=vec3(bB):len()local bD=vec3(core.getWorldVertical())local bE=-bD:dot(bB)local bF=vec3(core.getConstructWorldPos())local bG=0;local bH=false;local bI=false;local bJ=nil;local bK=true;local bL=0;local bM=0;local bN=false;local bO={}local bP=showHud;local bQ={}local bR=false;local bS=""local bT=""local bU=nil;local bV={}local bW=unit.getClosestPlanetInfluence()>0;local bX=false;local bY=nil;timeCount=0;totalTime=0;local function bZ(b_)local c0,c1,c2=b2:getPlanetarySystem(0):castIntersections(bF,b_,function(c3)if c3.noAtmosphericDensityAltitude>0 then return c3.radius+c3.noAtmosphericDensityAltitude else return c3.radius+c3.surfaceMaxAltitude*1.5 end end)local c4=c1;if c2~=nil and c1~=nil then c4=math.min(c2,c1)end;if c4~=nil then return c0,c4 else return nil,nil end end;local function c5(c6,c7,type)if type==nil and not voices or type~=nil and not alerts or soundFolder=="archHUD"then return end;if type~=nil then if type==2 then system.logInfo("sound_loop|audiopacks/"..soundFolder.."/"..c6 .."|"..c7 .."|"..soundVolume)else system.logInfo("sound_notification|audiopacks/"..soundFolder.."/"..c6 .."|"..c7 .."|"..soundVolume)end else system.logInfo("sound_q|audiopacks/"..soundFolder.."/"..c6 .."|"..c7 .."|"..soundVolume)end end;local function c8(c9,ca)for i=1,#ca do c9[#c9+1]=ca[i]end;return c9 end;local function cb(cc)local cd={}local ce={"userControlScheme","soundFolder","freeLookToggle","BrakeToggleDefault","RemoteFreeze","brightHud","RemoteHud","VanillaRockets","InvertMouse","autoRollPreference","turnAssist","ExternalAGG","UseSatNav","ShouldCheckDamage","CalculateBrakeLandingSpeed","AtmoSpeedAssist","ForceAlignment","DisplayDeadZone","showHud","ShowOdometer","hideHudOnToggleWidgets","ShiftShowsRemoteButtons","DisplayOrbit","SetWaypointOnExit","IntruderAlertSystem","AlwaysVSpd","BarFuelDisplay","showHelp","Cockpit","voices","alerts","CollisionSystem"}local cf={"YawStallAngle","PitchStallAngle","brakeLandingRate","MaxPitch","LockPitchTarget","TargetOrbitRadius","LowOrbitHeight","AtmoSpeedLimit","SpaceSpeedLimit","AutoTakeoffAltitude","TargetHoverHeight","LandingGearGroundHeight","ReEntryHeight","MaxGameVelocity","AutopilotInterplanetaryThrottle","warmup","fuelTankHandlingAtmo","fuelTankHandlingSpace","fuelTankHandlingRocket","ContainerOptimization","FuelTankOptimization"}local cg={"ResolutionX","ResolutionY","circleRad","SafeR","SafeG","SafeB","PvPR","PvPG","PvPB","centerX","centerY","throtPosX","throtPosY","vSpdMeterX","vSpdMeterY","altMeterX","altMeterY","fuelX","fuelY","DeadZone","OrbitMapSize","OrbitMapX","OrbitMapY","soundVolume"}local ch={"speedChangeLarge","speedChangeSmall","MouseXSensitivity","MouseYSensitivity","autoRollFactor","rollSpeedFactor","autoRollRollThreshold","minRollVelocity","turnAssistFactor","TrajectoryAlignmentStrength","torqueFactor","pitchSpeedFactor","yawSpeedFactor","brakeSpeedFactor","brakeFlatFactor","DampingMultiplier","apTickRate","hudTickRate","ExtraLongitudeTags","ExtraLateralTags","ExtraVerticalTags"}if not cc then c8(cd,ce)c8(cd,cf)c8(cd,cg)c8(cd,ch)return cd elseif cc=="boolean"then return ce elseif cc=="handling"then return cf elseif cc=="hud"then return cg elseif cc=="physics"then return ch end end;local function ci(x,y,cj,ck,cl)if ck==nil then ck=""end;if cl==nil then cl=""end;return e([[<text class="%s" x=%s y=%s style="%s">%s</text>]],ck,x,y,cl,cj)end;local function cm(cn,co)if r:getAxisCommandType(0)~=axisCommandType.byThrottle and not co then a.control.cancelCurrentControlMasterMode()end;r:setThrottleCommand(axisCommandId.longitudinal,cn)L=q(B(cn*100,0)/100,-1,1)end;local function cp(cn,co)if r:getAxisCommandType(0)~=axisCommandType.byTargetSpeed and not co then a.control.cancelCurrentControlMasterMode()end;r:setTargetSpeedCommand(axisCommandId.longitudinal,cn)bJ=cn end;local function cq(cr,cs)if cr==0 then return c(cs)<1e-09 end;if cs==0 then return c(cr)<1e-09 end;return c(cr-cs)<math.max(c(cr),c(cs))*epsilon end;local function ct(ak,cu)local cv=ak>100000;if cu==nil then cu=1 end;if cv then return B(ak/1000/200,cu).."SU"elseif ak<1000 then return B(ak,cu).."M"else return B(ak/1000,cu).."KM"end end;local function cw()AltitudeHold=false;if VertTakeOff then StrongBrakes=true;Reentry=false;AutoTakeoff=false;BrakeLanding=true;bb=true;ag=0;if as and aq==-1 then BrakeLanding=false;AltitudeHold=true;ag=0;a:setEngineForceCommand('thrust analog vertical fueled ',vec3(),1)cp(d(bi))end else bt=false;GearExtended=false;a.control.retractLandingGears()r:setTargetGroundAltitude(TargetHoverHeight)BrakeIsOn=true end;VertTakeOff=not VertTakeOff end;local function cx()bt=false;bl=nil;bm=nil;bx=0;if at==0 then if IntoOrbit then c5("orOff","AP")IntoOrbit=false;bn=false;bs=nil;bb=autoRollPreference;if AltitudeHold then AltitudeHold=false;AutoTakeoff=false end;bp.VectorToTarget=false;bp.AutopilotAlign=false;bq=false elseif bW then c5("orOn","AP")IntoOrbit=true;bb=true;if bs==nil then bs=planet end;if AltitudeHold then AltitudeHold=false;AutoTakeoff=false end else a3="Unable to engage auto-orbit, not near a planet"end else IntoOrbit=false;bn=false;bs=nil;bb=autoRollPreference;if AltitudeHold then AltitudeHold=false end;bp.VectorToTarget=false;bp.AutopilotAlign=false;bq=false end end;local function cy()if E-bg<1.5 then if planet.hasAtmosphere then if at>0 then HoldAltitude=planet.spaceEngineMinAltitude-50;c5("11","EP")else if bW then HoldAltitude=planet.noAtmosphericDensityAltitude+LowOrbitHeight;br=HoldAltitude;bq=true;if not IntoOrbit then cx()end;bn=true end end;bg=-1;if AltitudeHold or IntoOrbit or VertTakeOff then return end end else bg=E end;if bW and at==0 then br=au;bq=true;bn=true;cx()if IntoOrbit then bg=E else bg=0 end;return end;AltitudeHold=not AltitudeHold;BrakeLanding=false;Reentry=false;if AltitudeHold then Autopilot=false;ProgradeIsOn=false;RetrogradeIsOn=false;a1=false;bb=true;LockPitch=nil;bt=false;if aq==-1 then c5("altOn","AH")AutoTakeoff=false;if bg>-1 then if unit.getClosestPlanetInfluence()>0 then HoldAltitude=au end end;if VertTakeOff then cw()end else c5("lfs","LS")AutoTakeoff=true;if bg>-1 then HoldAltitude=au+AutoTakeoffAltitude end;GearExtended=false;a.control.retractLandingGears()BrakeIsOn=true;r:setTargetGroundAltitude(TargetHoverHeight)if VertTakeOffEngine and bH then cw()end end;if ao then HoldAltitude=100000 end else c5("altOff","AH")if IntoOrbit then cx()end;if VertTakeOff then cw()end;bb=autoRollPreference;AutoTakeoff=false;VectorToTarget=false;bg=0 end end;local function cz()local function cA(SpaceTarget)bX=false;VectorToTarget=not VectorToTarget;if VectorToTarget then TurnBurn=false;if not AltitudeHold and not SpaceTarget then cy()end end;VectorStatus="Proceeding to Waypoint"end;if E-bh<1.5 and at>0 then if not bw then a3="No space engines detected, Orbital Hop not supported"return end;if planet.hasAtmosphere then if at>0 then HoldAltitude=planet.noAtmosphericDensityAltitude+LowOrbitHeight;c5("orH","OH")end;bh=-1;if Autopilot or VectorToTarget or IntoOrbit then return end end else bh=E end;TargetSet=false;if AutopilotTargetIndex>0 and not Autopilot and not VectorToTarget and not ao and not IntoOrbit then b7.UpdateAutopilotTarget()b8.showWayPoint(ad,AutopilotTargetCoords)if CustomTarget~=nil then LockPitch=nil;SpaceTarget=CustomTarget.planetname=="Space"if SpaceTarget then c5("apSpc","AP")if at~=0 then ao=true;cy()else Autopilot=true end elseif planet.name==CustomTarget.planetname then StrongBrakes=true;if at>0 then if not VectorToTarget then c5("vtt","AP")cA(SpaceTarget)end else c5("apOn","AP")if not(ad.name==planet.name and bW)then bt=false;Autopilot=true elseif not as then if IntoOrbit then cx()end;br=planet.noAtmosphericDensityAltitude+LowOrbitHeight;bq=true;bp.AutopilotAlign=true;bp.VectorToTarget=true;bn=false;if not IntoOrbit then cx()end end end else c5("apP","AP")RetrogradeIsOn=false;ProgradeIsOn=false;if at~=0 then ao=true;cy()else Autopilot=true end end elseif at==0 then if CustomTarget==nil and(ad.name==planet.name and bW)and not IntoOrbit then WaypointSet=false;bt=false;bn=false;cx()else c5("apP","AP")Autopilot=true;RetrogradeIsOn=false;ProgradeIsOn=false;AutopilotRealigned=false;a1=false;AltitudeHold=false;BrakeLanding=false;Reentry=false;AutoTakeoff=false;Q=false;LockPitch=nil;WaypointSet=false end else c5("apP","AP")ao=true;cy()end else c5("apOff","AP")ao=false;Autopilot=false;AutopilotRealigned=false;VectorToTarget=false;Q=false;AutoTakeoff=false;AltitudeHold=false;VectorToTarget=false;HoldAltitude=au;TargetSet=false;Reentry=false;if IntoOrbit then cx()end end end;local function cB()BrakeIsOn=not BrakeIsOn;if BrakeLanding then BrakeLanding=false;bb=autoRollPreference end;if BrakeIsOn then c5("bkOn","B",1)VectorToTarget=false;AutoTakeoff=false;Reentry=false;ProgradeIsOn=false;BrakeLanding=false;AutoLanding=false;bU=nil;if not bI then AltitudeHold=false;LockPitch=nil end;if VertTakeOff then cw()end;if IntoOrbit then cx()end;bb=autoRollPreference;an=false;ap=false;ag=0 else c5("bkOff","B",1)end end;local function cC(b_,cD,cE)local function cF(b_,cG)b_=vec3(b_)cG=vec3(cG):normalize()local cH=b_*cG;return cH.x+cH.y+cH.z end;local cI=0.001;local cJ=1;if not as or not bd or aq~=-1 or bC<R then if cE==nil then cE=DampingMultiplier end;if cD==nil then cD=cI end;b_=vec3(b_):normalize()local cK=vec3()-b_;local cL=-cF(cK,core.getConstructWorldOrientationRight())*cJ;local cM=-cF(cK,core.getConstructWorldOrientationUp())*cJ;if aD==0 then aD=cL/2 end;if aE==0 then aE=cM/2 end;if c(cL)<0.1 then W=W-cL*2 else W=W-(cL+(cL-aD)*cE)end;if c(cM)<0.1 then V=V+cM*2 else V=V+cM+(cM-aE)*cE end;aD=cL;aE=cM;if c(cL)<cD and c(cM)<cD then return true end;return false elseif bd and aq==-1 then b_=bB;if cE==nil then cE=DampingMultiplier end;if cD==nil then cD=cI end;b_=vec3(b_):normalize()local cK=bz-b_;local cL=-cF(cK,core.getConstructWorldOrientationRight())*cJ;local cM=-cF(cK,core.getConstructWorldOrientationUp())*cJ;if aD==0 then aD=cL/2 end;if aE==0 then aE=cM/2 end;if c(cL)<0.1 then W=W-cL*5 else W=W-(cL+(cL-aD)*cE)end;if c(cM)<0.1 then V=V+cM*5 else V=V+cM+(cM-aE)*cE end;aD=cL;aE=cM;if c(cL)<cD and c(cM)<cD then return true end;return false end end;local function cN()if Reentry then a3="Re-Entry cancelled"c5("reOff","RE")Reentry=false;bb=autoRollPreference;AltitudeHold=false elseif not planet.hasAtmosphere then a3="Re-Entry requirements not met: you must start out of atmosphere\n and within a planets gravity well over a planet with atmosphere"aj=5 elseif not S then Reentry=true;if r:getAxisCommandType(0)~=controlMasterModeId.cruise then a.control.cancelCurrentControlMasterMode()end;bb=true;BrakeIsOn=false;a3="Beginning Parachute Re-Entry - Strap In.  Target speed: "..bi;c5("par","RE")else Reentry=true;AltitudeHold=true;bb=true;BrakeIsOn=false;HoldAltitude=planet.surfaceMaxAltitude+ReEntryHeight;if HoldAltitude>planet.spaceEngineMinAltitude then HoldAltitude=planet.spaceEngineMinAltitude-planet.spaceEngineMinAltitude/10 end;local cj=ct(HoldAltitude)a3="Beginning Re-entry.  Target speed: "..bi.." Target Altitude: "..cj;c5("glide","RE")cp(d(bi))end;AutoTakeoff=false end;local function cO()if antigrav and not ExternalAGG then if bI then c5("aggOff","AG")antigrav.deactivate()antigrav.hide()else if AntigravTargetAltitude==nil then AntigravTargetAltitude=au end;if AntigravTargetAltitude<1000 then AntigravTargetAltitude=1000 end;c5("aggOn","AG")antigrav.activate()antigrav.show()end end end;local function cP(cQ)local cR=0;local cS=0;local cT=0;if cQ<60 then cQ=d(cQ)elseif cQ<3600 then cR=d(cQ/60)cQ=d(cQ%60)elseif cQ<86400 then cS=d(cQ/3600)cR=d(cQ%3600/60)else cT=d(cQ/86400)cS=d(cQ%86400/3600)end;if cT>0 then return cT.."d "..cS.."h "elseif cS>0 then return cS.."h "..cR.."m "elseif cR>0 then return cR.."m "..cQ.."s"elseif cQ>0 then return cQ.."s"else return"0s"end end;local function cU(cV)local function cW(cX)for cY,cZ in pairs(cX)do dbHud_1.setStringValue(cZ,g(_G[cZ]))if cV and dbHud_2 then dbHud_2.setStringValue(cZ,g(_G[cZ]))end end end;if dbHud_1 then cW(b)cW(cb())system.print("Saved Variables to Datacore")if cV and dbHud_2 then a3="Databank copied.  Remove copy when ready."end end end;local function c_()return{[0]={[0]={GM=0,bodyId=0,center={x=0,y=0,z=0},name='Space',planetarySystemId=0,radius=0,hasAtmosphere=false,gravity=0,noAtmosphericDensityAltitude=0,surfaceMaxAltitude=0},[2]={name="Alioth",description="Alioth is the planet selected by the arkship for landfall; it is a typical goldilocks planet where humanity may rebuild in the coming decades. The arkship geological survey reports mountainous regions alongside deep seas and lush forests. This is where it all starts.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9401,atmosphericEngineMaxAltitude=5580,biosphere="Forest",classification="Mesoplanet",bodyId=2,GM=157470826617,gravity=1.0082568597356114,fullAtmosphericDensityMaxAltitude=-10,habitability="High",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=6272,numSatellites=2,positionFromSun=2,center={x=-8,y=-8,z=-126303},radius=126067.8984375,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=3410,surfaceArea=199718780928,surfaceAverageAltitude=200,surfaceMaxAltitude=1100,surfaceMinAltitude=-330,systemZone="High",territories=259472,type="Planet",waterLevel=0,planetarySystemId=0},[21]={name="Alioth Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=21,GM=2118960000,gravity=0.24006116402380084,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=457933,y=-1509011,z=115524},radius=30000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=0,surfaceArea=11309733888,surfaceAverageAltitude=140,surfaceMaxAltitude=200,surfaceMinAltitude=10,systemZone=nil,territories=14522,type="",waterLevel=nil,planetarySystemId=0},[22]={name="Alioth Moon 4",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=22,GM=2165833514,gravity=0.2427018259886451,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=-1692694,y=729681,z=-411464},radius=30330,safeAreaEdgeAltitude=500000,size="L",spaceEngineMinAltitude=0,surfaceArea=11559916544,surfaceAverageAltitude=-15,surfaceMaxAltitude=-5,surfaceMinAltitude=-50,systemZone=nil,territories=14522,type="",waterLevel=nil,planetarySystemId=0},[5]={name="Feli",description="Feli is easily identified by its massive and deep crater. Outside of the crater, the arkship geological survey reports a fairly bland and uniform planet, it also cannot explain the existence of the crater. Feli is particular for having an extremely small atmosphere, allowing life to develop in the deeper areas of its crater but limiting it drastically on the actual surface.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.5488,atmosphericEngineMaxAltitude=66725,biosphere="Barren",classification="Mesoplanet",bodyId=5,GM=16951680000,gravity=0.4801223280476017,fullAtmosphericDensityMaxAltitude=30,habitability="Low",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=78500,numSatellites=1,positionFromSun=5,center={x=-43534464,y=22565536,z=-48934464},radius=41800,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=42800,surfaceArea=21956466688,surfaceAverageAltitude=18300,surfaceMaxAltitude=18500,surfaceMinAltitude=46,systemZone="Low",territories=27002,type="Planet",waterLevel=nil,planetarySystemId=0},[50]={name="Feli Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=50,GM=499917600,gravity=0.11202853997062348,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=-43902841.78,y=22261034.7,z=-48862386},radius=14000,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=0,surfaceArea=2463008768,surfaceAverageAltitude=800,surfaceMaxAltitude=900,surfaceMinAltitude=0,systemZone=nil,territories=3002,type="",waterLevel=nil,planetarySystemId=0},[120]={name="Ion",description="Ion is nothing more than an oversized ice cube frozen through and through. It is a largely inhospitable planet due to its extremely low temperatures. The arkship geological survey reports extremely rough mountainous terrain with little habitable land.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9522,atmosphericEngineMaxAltitude=10480,biosphere="Ice",classification="Hypopsychroplanet",bodyId=120,GM=7135606629,gravity=0.36009174603570127,fullAtmosphericDensityMaxAltitude=-30,habitability="Average",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=17700,numSatellites=2,positionFromSun=12,center={x=2865536.7,y=-99034464,z=-934462.02},radius=44950,safeAreaEdgeAltitude=500000,size="XS",spaceEngineMinAltitude=6410,surfaceArea=25390383104,surfaceAverageAltitude=500,surfaceMaxAltitude=1300,surfaceMinAltitude=250,systemZone="Average",territories=32672,type="Planet",waterLevel=nil,planetarySystemId=0},[121]={name="Ion Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=121,GM=106830900,gravity=0.08802242599860607,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=2472916.8,y=-99133747,z=-1133582.8},radius=11000,safeAreaEdgeAltitude=500000,size="XS",spaceEngineMinAltitude=0,surfaceArea=1520530944,surfaceAverageAltitude=100,surfaceMaxAltitude=200,surfaceMinAltitude=3,systemZone=nil,territories=1922,type="",waterLevel=nil,planetarySystemId=0},[122]={name="Ion Moon 2",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=122,GM=176580000,gravity=0.12003058201190042,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=2995424.5,y=-99275010,z=-1378480.7},radius=15000,safeAreaEdgeAltitude=500000,size="XS",spaceEngineMinAltitude=0,surfaceArea=2827433472,surfaceAverageAltitude=-1900,surfaceMaxAltitude=-1400,surfaceMinAltitude=-2100,systemZone=nil,territories=3632,type="",waterLevel=nil,planetarySystemId=0},[9]={name="Jago",description="Jago is a water planet. The large majority of the planet&apos;s surface is covered by large oceans dotted by small areas of landmass across the planet. The arkship geological survey reports deep seas across the majority of the planet with sub 15 percent coverage of solid ground.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9835,atmosphericEngineMaxAltitude=9695,biosphere="Water",classification="Mesoplanet",bodyId=9,GM=18606274330,gravity=0.5041284298678057,fullAtmosphericDensityMaxAltitude=-90,habitability="Very High",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=10900,numSatellites=0,positionFromSun=9,center={x=-94134462,y=12765534,z=-3634464},radius=61590,safeAreaEdgeAltitude=500000,size="XL",spaceEngineMinAltitude=5900,surfaceArea=47668367360,surfaceAverageAltitude=0,surfaceMaxAltitude=1200,surfaceMinAltitude=-500,systemZone="Very High",territories=60752,type="Planet",waterLevel=0,planetarySystemId=0},[100]={name="Lacobus",description="Lacobus is an ice planet that also features large bodies of water. The arkship geological survey reports deep oceans alongside a frozen and rough mountainous environment. Lacobus seems to feature regional geothermal activity allowing for the presence of water on the surface.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.7571,atmosphericEngineMaxAltitude=11120,biosphere="Ice",classification="Psychroplanet",bodyId=100,GM=13975172474,gravity=0.45611622622739767,fullAtmosphericDensityMaxAltitude=-20,habitability="Average",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=12510,numSatellites=3,positionFromSun=10,center={x=98865536,y=-13534464,z=-934461.99},radius=55650,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=6790,surfaceArea=38917074944,surfaceAverageAltitude=800,surfaceMaxAltitude=1660,surfaceMinAltitude=250,systemZone="Average",territories=50432,type="Planet",waterLevel=0,planetarySystemId=0},[102]={name="Lacobus Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=102,GM=444981600,gravity=0.14403669598391783,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=99180968,y=-13783862,z=-926156.4},radius=18000,safeAreaEdgeAltitude=500000,size="XL",spaceEngineMinAltitude=0,surfaceArea=4071504128,surfaceAverageAltitude=150,surfaceMaxAltitude=300,surfaceMinAltitude=10,systemZone=nil,territories=5072,type="",waterLevel=nil,planetarySystemId=0},[103]={name="Lacobus Moon 2",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=103,GM=211503600,gravity=0.11202853997062348,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=99250052,y=-13629215,z=-1059341.4},radius=14000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=0,surfaceArea=2463008768,surfaceAverageAltitude=-1380,surfaceMaxAltitude=-1280,surfaceMinAltitude=-1880,systemZone=nil,territories=3002,type="",waterLevel=nil,planetarySystemId=0},[101]={name="Lacobus Moon 3",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=101,GM=264870000,gravity=0.12003058201190042,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=98905288.17,y=-13950921.1,z=-647589.53},radius=15000,safeAreaEdgeAltitude=500000,size="L",spaceEngineMinAltitude=0,surfaceArea=2827433472,surfaceAverageAltitude=500,surfaceMaxAltitude=820,surfaceMinAltitude=3,systemZone=nil,territories=3632,type="",waterLevel=nil,planetarySystemId=0},[1]={name="Madis",description="Madis is a barren wasteland of a rock; it sits closest to the sun and temperatures reach extreme highs during the day. The arkship geological survey reports long rocky valleys intermittently separated by small ravines.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.8629,atmosphericEngineMaxAltitude=7165,biosphere="Barren",classification="hyperthermoplanet",bodyId=1,GM=6930729684,gravity=0.36009174603570127,fullAtmosphericDensityMaxAltitude=220,habitability="Low",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=8050,numSatellites=3,positionFromSun=1,center={x=17465536,y=22665536,z=-34464},radius=44300,safeAreaEdgeAltitude=500000,size="XS",spaceEngineMinAltitude=4480,surfaceArea=24661377024,surfaceAverageAltitude=750,surfaceMaxAltitude=850,surfaceMinAltitude=670,systemZone="Low",territories=30722,type="Planet",waterLevel=nil,planetarySystemId=0},[10]={name="Madis Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=10,GM=78480000,gravity=0.08002039003323584,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=17448118.224,y=22966846.286,z=143078.82},radius=10000,safeAreaEdgeAltitude=500000,size="XL",spaceEngineMinAltitude=0,surfaceArea=1256637056,surfaceAverageAltitude=210,surfaceMaxAltitude=420,surfaceMinAltitude=0,systemZone=nil,territories=1472,type="",waterLevel=nil,planetarySystemId=0},[11]={name="Madis Moon 2",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=11,GM=237402000,gravity=0.09602446196397631,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=17194626,y=22243633.88,z=-214962.81},radius=12000,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=0,surfaceArea=1809557376,surfaceAverageAltitude=-700,surfaceMaxAltitude=300,surfaceMinAltitude=-2900,systemZone=nil,territories=1922,type="",waterLevel=nil,planetarySystemId=0},[12]={name="Madis Moon 3",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=12,GM=265046609,gravity=0.12003058201190042,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=17520614,y=22184730,z=-309989.99},radius=15000,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=0,surfaceArea=2827433472,surfaceAverageAltitude=700,surfaceMaxAltitude=1100,surfaceMinAltitude=0,systemZone=nil,territories=3632,type="",waterLevel=nil,planetarySystemId=0},[26]={name="Sanctuary",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9666,atmosphericEngineMaxAltitude=6935,biosphere="",classification="",bodyId=26,GM=68234043600,gravity=1.0000000427743831,fullAtmosphericDensityMaxAltitude=-30,habitability="",hasAtmosphere=true,isSanctuary=true,noAtmosphericDensityAltitude=7800,numSatellites=0,positionFromSun=0,center={x=-1404835,y=562655,z=-285074},radius=83400,safeAreaEdgeAltitude=0,size="L",spaceEngineMinAltitude=4230,surfaceArea=87406149632,surfaceAverageAltitude=80,surfaceMaxAltitude=500,surfaceMinAltitude=-60,systemZone=nil,territories=111632,type="",waterLevel=0,planetarySystemId=0},[6]={name="Sicari",description="Sicari is a typical desert planet; it has survived for millenniums and will continue to endure. While not the most habitable of environments it remains a relatively untouched and livable planet of the Alioth sector. The arkship geological survey reports large flatlands alongside steep plateaus.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.897,atmosphericEngineMaxAltitude=7725,biosphere="Desert",classification="Mesoplanet",bodyId=6,GM=10502547741,gravity=0.4081039739797361,fullAtmosphericDensityMaxAltitude=-625,habitability="Average",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=8770,numSatellites=0,positionFromSun=6,center={x=52765536,y=27165538,z=52065535},radius=51100,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=4480,surfaceArea=32813432832,surfaceAverageAltitude=130,surfaceMaxAltitude=220,surfaceMinAltitude=50,systemZone="Average",territories=41072,type="Planet",waterLevel=nil,planetarySystemId=0},[7]={name="Sinnen",description="Sinnen is a an empty and rocky hell. With no atmosphere to speak of it is one of the least hospitable planets in the sector. The arkship geological survey reports mostly flatlands alongside deep ravines which look to have once been riverbeds. This planet simply looks to have dried up and died, likely from solar winds.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9226,atmosphericEngineMaxAltitude=10335,biosphere="Desert",classification="Mesoplanet",bodyId=7,GM=13033380591,gravity=0.4401121421448438,fullAtmosphericDensityMaxAltitude=-120,habitability="Average",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=11620,numSatellites=1,positionFromSun=7,center={x=58665538,y=29665535,z=58165535},radius=54950,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=6270,surfaceArea=37944188928,surfaceAverageAltitude=317,surfaceMaxAltitude=360,surfaceMinAltitude=23,systemZone="Average",territories=48002,type="Planet",waterLevel=nil,planetarySystemId=0},[70]={name="Sinnen Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=70,GM=396912600,gravity=0.1360346539426409,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=58969616,y=29797945,z=57969449},radius=17000,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=0,surfaceArea=3631681280,surfaceAverageAltitude=-2050,surfaceMaxAltitude=-1950,surfaceMinAltitude=-2150,systemZone=nil,territories=4322,type="",waterLevel=nil,planetarySystemId=0},[110]={name="Symeon",description="Symeon is an ice planet mysteriously split at the equator by a band of solid desert. Exactly how this phenomenon is possible is unclear but some sort of weather anomaly may be responsible. The arkship geological survey reports a fairly diverse mix of flat-lands alongside mountainous formations.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9559,atmosphericEngineMaxAltitude=6920,biosphere="Ice, Desert",classification="Hybrid",bodyId=110,GM=9204742375,gravity=0.3920998898971822,fullAtmosphericDensityMaxAltitude=-30,habitability="High",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=7800,numSatellites=0,positionFromSun=11,center={x=14165536,y=-85634465,z=-934464.3},radius=49050,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=4230,surfaceArea=30233462784,surfaceAverageAltitude=39,surfaceMaxAltitude=450,surfaceMinAltitude=126,systemZone="High",territories=38882,type="Planet",waterLevel=nil,planetarySystemId=0},[4]={name="Talemai",description="Talemai is a planet in the final stages of an Ice Age. It seems likely that the planet was thrown into tumult by a cataclysmic volcanic event which resulted in its current state. The arkship geological survey reports large mountainous regions across the entire planet.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.8776,atmosphericEngineMaxAltitude=9685,biosphere="Barren",classification="Psychroplanet",bodyId=4,GM=14893847582,gravity=0.4641182439650478,fullAtmosphericDensityMaxAltitude=-78,habitability="Average",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=10890,numSatellites=3,positionFromSun=4,center={x=-13234464,y=55765536,z=465536},radius=57500,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=5890,surfaceArea=41547563008,surfaceAverageAltitude=580,surfaceMaxAltitude=610,surfaceMinAltitude=520,systemZone="Average",territories=52922,type="Planet",waterLevel=nil,planetarySystemId=0},[42]={name="Talemai Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=42,GM=264870000,gravity=0.12003058201190042,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=-13058408,y=55781856,z=740177.76},radius=15000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=0,surfaceArea=2827433472,surfaceAverageAltitude=720,surfaceMaxAltitude=850,surfaceMinAltitude=0,systemZone=nil,territories=3632,type="",waterLevel=nil,planetarySystemId=0},[40]={name="Talemai Moon 2",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=40,GM=141264000,gravity=0.09602446196397631,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=-13503090,y=55594325,z=769838.64},radius=12000,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=0,surfaceArea=1809557376,surfaceAverageAltitude=250,surfaceMaxAltitude=450,surfaceMinAltitude=0,systemZone=nil,territories=1922,type="",waterLevel=nil,planetarySystemId=0},[41]={name="Talemai Moon 3",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=41,GM=106830900,gravity=0.08802242599860607,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=-12800515,y=55700259,z=325207.84},radius=11000,safeAreaEdgeAltitude=500000,size="XS",spaceEngineMinAltitude=0,surfaceArea=1520530944,surfaceAverageAltitude=190,surfaceMaxAltitude=400,surfaceMinAltitude=0,systemZone=nil,territories=1922,type="",waterLevel=nil,planetarySystemId=0},[8]={name="Teoma",description="[REDACTED] The arkship geological survey [REDACTED]. This planet should not be here.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.7834,atmosphericEngineMaxAltitude=5580,biosphere="Forest",classification="Mesoplanet",bodyId=8,GM=18477723600,gravity=0.48812434578525177,fullAtmosphericDensityMaxAltitude=15,habitability="High",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=6280,numSatellites=0,positionFromSun=8,center={x=80865538,y=54665536,z=-934463.94},radius=62000,safeAreaEdgeAltitude=500000,size="L",spaceEngineMinAltitude=3420,surfaceArea=48305131520,surfaceAverageAltitude=700,surfaceMaxAltitude=1100,surfaceMinAltitude=-200,systemZone="High",territories=60752,type="Planet",waterLevel=0,planetarySystemId=0},[3]={name="Thades",description="Thades is a scorched desert planet. Perhaps it was once teaming with life but now all that remains is ash and dust. The arkship geological survey reports a rocky mountainous planet bisected by a massive unnatural ravine; something happened to this planet.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.03552,atmosphericEngineMaxAltitude=32180,biosphere="Desert",classification="Thermoplanet",bodyId=3,GM=11776905000,gravity=0.49612641213015557,fullAtmosphericDensityMaxAltitude=150,habitability="Low",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=32800,numSatellites=2,positionFromSun=3,center={x=29165536,y=10865536,z=65536},radius=49000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=21400,surfaceArea=30171856896,surfaceAverageAltitude=13640,surfaceMaxAltitude=13690,surfaceMinAltitude=370,systemZone="Low",territories=38882,type="Planet",waterLevel=nil,planetarySystemId=0},[30]={name="Thades Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=30,GM=211564034,gravity=0.11202853997062348,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=29214402,y=10907080.695,z=433858.2},radius=14000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=0,surfaceArea=2463008768,surfaceAverageAltitude=60,surfaceMaxAltitude=300,surfaceMinAltitude=0,systemZone=nil,territories=3002,type="",waterLevel=nil,planetarySystemId=0},[31]={name="Thades Moon 2",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=31,GM=264870000,gravity=0.12003058201190042,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=29404193,y=10432768,z=19554.131},radius=15000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=0,surfaceArea=2827433472,surfaceAverageAltitude=70,surfaceMaxAltitude=350,surfaceMinAltitude=0,systemZone=nil,territories=3632,type="",waterLevel=nil,planetarySystemId=0}}}end;local function d0()local function d1(d2)return type(d2)=='number'end;local function d3(d2)return type(A(d2))=='number'end;local function d4(d5)return type(d5)=='table'end;local function d6(d7)return type(d7)=='string'end;local function d8(cZ)return d4(cZ)and d1(cZ.x and cZ.y and cZ.z)end;local function d9(da)return d4(da)and d1(da.latitude and da.longitude and da.altitude and da.bodyId and da.systemId)end;local db=math.pi/180;local dc=180/math.pi;local epsilon=1e-10;local C=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local dd='::pos{'..C..','..C..','..C..','..C..','..C..'}'local utils=require('cpml.utils')local vec3=require('cpml.vec3')local function de(d2)local cH=string.gsub(string.reverse(e('%.4f',d2)),'^0*%.?','')return cH==''and'0'or string.reverse(cH)end;local function df(dg)if d8(dg)then return e('{x=%.3f,y=%.3f,z=%.3f}',dg.x,dg.y,dg.z)end;if d4(dg)and not getmetatable(dg)then local dh={}local di=next(dg)if type(di)=='nil'or di==1 then dh=dg else for cY,cZ in pairs(dg)do local cn=df(cZ)if type(cY)=='number'then table.insert(dh,e('[%s]=%s',cY,cn))else table.insert(dh,e('%s=%s',cY,cn))end end end;return e('{%s}',table.concat(dh,','))end;if d6(dg)then return e("'%s'",dg:gsub("'",[[\']]))end;return tostring(dg)end;local dj={}dj.__index=dj;dj.__tostring=function(dg,dk)local dl={}for cY in pairs(dg)do table.insert(dl,cY)end;table.sort(dl)local dh={}for _,cY in ipairs(dl)do local cn=df(dg[cY])if type(cY)=='number'then table.insert(dh,e('[%s]=%s',cY,cn))else table.insert(dh,e('%s=%s',cY,cn))end end;if dk then return e('%s%s',dk,table.concat(dh,',\n'..dk))end;return e('{%s}',table.concat(dh,','))end;dj.__eq=function(dm,dn)return dm.planetarySystemId==dn.planetarySystemId and dm.bodyId==dn.bodyId and cq(dm.radius,dn.radius)and cq(dm.center.x,dn.center.x)and cq(dm.center.y,dn.center.y)and cq(dm.center.z,dn.center.z)and cq(dm.GM,dn.GM)end;local function dp(dq,dr,ds,dt,du)assert(d3(dq),'Argument 1 (planetarySystemId) must be a number:'..type(dq))assert(d3(dr),'Argument 2 (bodyId) must be a number:'..type(dr))assert(d3(ds),'Argument 3 (radius) must be a number:'..type(ds))assert(d4(dt),'Argument 4 (worldCoordinates) must be a array or vec3.'..type(dt))assert(d3(du),'Argument 5 (GM) must be a number:'..type(du))return setmetatable({planetarySystemId=A(dq),bodyId=A(dr),radius=A(ds),center=vec3(dt),GM=A(du)},dj)end;local MapPosition={}MapPosition.__index=MapPosition;MapPosition.__tostring=function(dv)return e('::pos{%d,%d,%s,%s,%s}',dv.systemId,dv.bodyId,de(dv.latitude*dc),de(dv.longitude*dc),de(dv.altitude))end;MapPosition.__eq=function(dm,dn)return dm.bodyId==dn.bodyId and dm.systemId==dn.systemId and cq(dm.latitude,dn.latitude)and cq(dm.altitude,dn.altitude)and(cq(dm.longitude,dn.longitude)or cq(dm.latitude,math.pi/2)or cq(dm.latitude,-math.pi/2))end;local function dw(dx,dr,dy,dz,dA)local dq=dx;if d6(dx)and not dz and not dA and not dr and not dy then dq,dr,dy,dz,dA=n(dx,dd)assert(dq,'Argument 1 (position string) is malformed.')else assert(d3(dq),'Argument 1 (systemId) must be a number:'..type(dq))assert(d3(dr),'Argument 2 (bodyId) must be a number:'..type(dr))assert(d3(dy),'Argument 3 (latitude) must be in degrees:'..type(dy))assert(d3(dz),'Argument 4 (longitude) must be in degrees:'..type(dz))assert(d3(dA),'Argument 5 (altitude) must be in meters:'..type(dA))end;dq=A(dq)dr=A(dr)dy=A(dy)dz=A(dz)dA=A(dA)if dr==0 then return setmetatable({latitude=dy,longitude=dz,altitude=dA,bodyId=dr,systemId=dq},MapPosition)end;return setmetatable({latitude=db*q(dy,-90,90),longitude=db*(dz%360),altitude=dA,bodyId=dr,systemId=dq},MapPosition)end;local dB={}dB.__index=dB;dB.__tostring=function(dg,dk)local dC=dk and dk..'  'local dD={}local dl={}for cY in pairs(dg)do table.insert(dl,cY)end;table.sort(dl)for _,dE in ipairs(dl)do bdy=dg[dE]local dF=dj.__tostring(bdy,dC)if dk then table.insert(dD,e('[%s]={\n%s\n%s}',dE,dF,dk))else table.insert(dD,e('  [%s]=%s',dE,dF))end end;if dk then return e('\n%s%s%s',dk,table.concat(dD,',\n'..dk),dk)end;return e('{\n%s\n}',table.concat(dD,',\n'))end;local function dG(dH)local aY={}local pid;for _,cZ in pairs(dH)do local dI=cZ.planetarySystemId;if type(dI)~='number'then error('Invalid planetary system ID: '..tostring(dI))elseif pid and dI~=pid then error('Mistringmatch planetary system IDs: '..dI..' and '..pid)end;local dJ=cZ.bodyId;if type(dJ)~='number'then error('Invalid body ID: '..tostring(dJ))elseif aY[dJ]then error('Duplicate body ID: '..tostring(dJ))end;setmetatable(cZ.center,getmetatable(vec3.unit_x))aY[dJ]=setmetatable(cZ,dj)pid=dI end;return setmetatable(aY,dB)end;b1={}local function dK(dH)return setmetatable({galaxyAtlas=dH or{}},b1)end;b1.__index=function(d5,i)if type(i)=='number'then local system=d5.galaxyAtlas[i]return dG(system)end;return rawget(b1,i)end;b1.__pairs=function(dg)return function(d5,cY)local dL,nv=next(d5,cY)return dL,nv and dG(nv)end,dg.galaxyAtlas,nil end;b1.__tostring=function(dg)local dM={}for _,dN in pairs(dg or{})do local dO=dN:getPlanetarySystemId()local dP=dB.__tostring(dN,'    ')table.insert(dM,e('  [%s]={%s\n  }',dO,dP))end;return e('{\n%s\n}\n',table.concat(dM,',\n'))end;b1.BodyParameters=dp;b1.MapPosition=dw;b1.PlanetarySystem=dG;function b1.createBodyParameters(dQ,dr,dR,dS,dT,dU,dV)assert(d3(dQ),'Argument 1 (planetarySystemId) must be a number:'..type(dQ))assert(d3(dr),'Argument 2 (bodyId) must be a number:'..type(dr))assert(d3(dR),'Argument 3 (surfaceArea) must be a number:'..type(dR))assert(d4(dS),'Argument 4 (aPosition) must be an array or vec3:'..type(dS))assert(d4(dT),'Argument 5 (verticalAtPosition) must be an array or vec3:'..type(dT))assert(d3(dU),'Argument 6 (altitude) must be in meters:'..type(dU))assert(d3(dV),'Argument 7 (gravityAtPosition) must be number:'..type(dV))local ds=z(dR/4/math.pi)local ak=ds+dU;local dW=vec3(dS)+ak*vec3(dT)local du=dV*ak*ak;return dp(dQ,dr,ds,dW,du)end;b1.isMapPosition=d9;function b1:getPlanetarySystem(dx)if i==nil then i=0 end;if nv==nil then nv=0 end;local dQ=dx;if d9(dx)then dQ=dx.systemId end;if type(dQ)=='number'then local system=self.galaxyAtlas[i]if system then if getmetatable(nv)~=dB then system=dG(system)end;return system end end end;function dB:sizeCalculator(c3)return 1.05*c3.radius end;function dB:castIntersections(dX,cG,dY,dZ,d_,e0)local e1={}local e2=d_ or self;for _,c3 in pairs(e2)do table.insert(e1,c3)end;if not e0 then table.sort(e1,function(e3,e4)return(e3.center-dX):len()<(e4.center-dX):len()end)end;local e5=cG:normalize()for _,c3 in ipairs(e1)do local e6=c3.center-dX;local ds=self:sizeCalculator(c3)local e7=e6:dot(e5)local e8=e7^2-(e6:len2()-ds^2)if e8>=0 then local e9=z(e8)local c1=e7+e9;local c2=e7-e9;if c2>0 then return c3,c1,c2 elseif c1>0 then return c3,c1,nil end end end;return nil,nil,nil end;function dB:closestBody(ea)assert(type(ea)=='table','Invalid coordinates.')local eb,c3;local ec=vec3(ea)for _,ed in pairs(self)do local ee=(ed.center-ec):len2()if(not c3 or ee<eb)and ed.name~="Space"then c3=ed;eb=ee end end;return c3 end;function dB:convertToBodyIdAndWorldCoordinates(dx)local ef=dx;if d6(dx)then ef=dw(dx)end;if ef.bodyId==0 then return 0,vec3(ef.latitude,ef.longitude,ef.altitude)end;local ed=self:getBodyParameters(ef)if ed then return ef.bodyId,ed:convertToWorldCoordinates(ef)end end;function dB:getBodyParameters(dx)local dr=dx;if d9(dx)then dr=dx.bodyId end;assert(d3(dr),'Argument 1 (bodyId) must be a number:'..type(dr))return self[dr]end;function dB:getPlanetarySystemId()local _,cZ=next(self)return cZ and cZ.planetarySystemId end;function dj:convertToMapPosition(dt)assert(d4(dt),'Argument 1 (worldCoordinates) must be an array or vec3:'..type(dt))local eg=vec3(dt)if self.bodyId==0 then return setmetatable({latitude=eg.x,longitude=eg.y,altitude=eg.z,bodyId=0,systemId=self.planetarySystemId},MapPosition)end;local eh=eg-self.center;local ak=eh:len()local dA=ak-self.radius;local dy=0;local dz=0;if not cq(ak,0)then local ei=m(eh.y,eh.x)dz=ei>=0 and ei or 2*math.pi+ei;dy=math.pi/2-math.acos(eh.z/ak)end;return setmetatable({latitude=dy,longitude=dz,altitude=dA,bodyId=self.bodyId,systemId=self.planetarySystemId},MapPosition)end;function dj:convertToWorldCoordinates(dx)local ef=d6(dx)and dw(dx)or dx;if ef.bodyId==0 then return vec3(ef.latitude,ef.longitude,ef.altitude)end;assert(d9(ef),'Argument 1 (mapPosition) is not an instance of "MapPosition".')assert(ef.systemId==self.planetarySystemId,'Argument 1 (mapPosition) has a different planetary system ID.')assert(ef.bodyId==self.bodyId,'Argument 1 (mapPosition) has a different planetary body ID.')local ej=math.cos(ef.latitude)return self.center+(self.radius+ef.altitude)*vec3(ej*math.cos(ef.longitude),ej*math.sin(ef.longitude),math.sin(ef.latitude))end;function dj:getAltitude(dt)return(vec3(dt)-self.center):len()-self.radius end;function dj:getDistance(dt)return(vec3(dt)-self.center):len()end;function dj:getGravity(dt)local ek=self.center-vec3(dt)local el=ek:len2()return self.GM/el*ek/z(el)end;return setmetatable(b1,{__call=function(_,...)return dK(...)end})end;local function em()local b3={}local en=30000000/3600;local eo=en*en;local ep=100;local function eq(cZ)return 1/z(1-cZ*cZ/eo)end;function b3.computeAccelerationTime(er,es,et)local eu=en*math.asin(er/en)return(en*math.asin(et/en)-eu)/es end;function b3.computeDistanceAndTime(er,et,ev,ew,ex,ey)ex=ex or 0;ey=ey or 0;local ez=er<=et;local eA=ew*(ez and 1 or-1)/ev;local eB=-ey/ev;local eC=eA+eB;if ez and eC<=0 or not ez and eC>=0 then return-1,-1 end;local eD,eE=0,0;if eA~=0 and ex>0 then local eu=math.asin(er/en)local eF=math.pi*(eA/2+eB)local eG=eA*ex;local eH=en*math.pi;local cZ=function(d5)local eI=(eF*d5-eG*math.sin(math.pi*d5/2/ex)+eH*eu)/eH;local eJ=math.tan(eI)return en*eJ/z(eJ*eJ+1)end;local eK=ez and function(d7)return d7>=et end or function(d7)return d7<=et end;eE=2*ex;if eK(cZ(eE))then local eL=0;while c(eE-eL)>0.5 do local d5=(eE+eL)/2;if eK(cZ(d5))then eE=d5 else eL=d5 end end end;local eM=er;local eN=eE/ep;for eO=1,ep do local eP=cZ(eO*eN)eD=eD+(eP+eM)*eN/2;eM=eP end;if eE<2*ex then return eD,eE end;er=eM end;local eu=en*math.asin(er/en)local E=(en*math.asin(et/en)-eu)/eC;local eQ=eo*math.cos(eu/en)/eC;local ak=eQ-eo*math.cos((eC*E+eu)/en)/eC;return ak+eD,E+eE end;function b3.computeTravelTime(er,es,ak)if ak==0 then return 0 end;if es>0 then local eu=en*math.asin(er/en)local eQ=eo*math.cos(eu/en)/es;return(en*math.acos(es*(eQ-ak)/eo)-eu)/es end;if er==0 then return-1 end;assert(er>0,'Acceleration and initial speed are both zero.')return ak/er end;function b3.lorentz(cZ)return eq(cZ)end;return b3 end;local function eR()local vec3=require('cpml.vec3')local d0=d0()local function d6(d7)return type(d7)=='string'end;local function d4(d5)return type(d5)=='table'end;Kepler={}Kepler.__index=Kepler;function Kepler:escapeAndOrbitalSpeed(dA)assert(self.body)local ak=dA+self.body.radius;if not cq(ak,0)then local orbit=z(self.body.GM/ak)return z(2)*orbit,orbit end;return nil,nil end;function Kepler:orbitalParameters(dx,eS)assert(self.body)assert(d4(dx)or d6(dx))assert(d4(eS))local eT=(d6(dx)or d0.isMapPosition(dx))and self.body:convertToWorldCoordinates(dx)or vec3(dx)local cZ=vec3(eS)local eU=eT-self.body.center;local eV=cZ:len2()local eW=eU:len()local eX=self.body.GM;local eY=((eV-eX/eW)*eU-eU:dot(cZ)*cZ)/eX;local cr=eX/(2*eX/eW-eV)local eZ=eY:len()local e5=eY:normalize()local e_=cr*(1-eZ)local f0=cr*(1+eZ)local f1=e_*e5+self.body.center;local f2=eZ<=1 and-f0*e5+self.body.center or nil;local f3=z(cr*eX*(1-eZ*eZ))local f4=f2 and 2*math.pi*z(cr^3/eX)local f5=math.acos(eY:dot(eU)/(eZ*eW))if eU:dot(cZ)<0 then f5=-(f5-2*math.pi)end;local f6=math.acos((math.cos(f5)+eZ)/(1+eZ*math.cos(f5)))local f7=f6;if f7<0 then f7=f7+2*math.pi end;local f8=f7-eZ*math.sin(f7)local f9=0;local fa=0;local fb=0;if f4~=nil then f9=f8/(2*math.pi/f4)fa=f4-f9;fb=fa+f4/2;if f5-math.pi>0 then fa=f9;fb=fa+f4/2 end;if fb>f4 then fb=fb-f4 end end;return{periapsis={position=f1,speed=f3/e_,circularOrbitSpeed=z(eX/e_),altitude=e_-self.body.radius},apoapsis=f2 and{position=f2,speed=f3/f0,circularOrbitSpeed=z(eX/f0),altitude=f0-self.body.radius},currentVelocity=cZ,currentPosition=eT,eccentricity=eZ,period=f4,eccentricAnomaly=f6,meanAnomaly=f8,timeToPeriapsis=fa,timeToApoapsis=fb}end;local function fc(fd)local ed=d0.BodyParameters(fd.planetarySystemId,fd.bodyId,fd.radius,fd.center,fd.GM)return setmetatable({body=ed},Kepler)end;return setmetatable(Kepler,{__call=function(_,...)return fc(...)end})end;local function fe()local ff=0;local function fg(fh)local ds=500000;local fi,fj,fk=math.huge;local fl=false;local fm=vec3({13771471,7435803,-128971})local fn=18000000;fi=vec3(fh):dist(fm)if fi<fn then return true,c(fi-fn),"Safe Zone",0 end;fj=vec3(fh):dist(vec3(planet.center))if fj<ds then fl=true end;if c(fj-ds)<c(fi-fn)then return fl,c(fj-ds),planet.name,planet.bodyId else return fl,c(fi-fn),"Safe Zone",0 end end;local function fo(cZ)if aI==1920 then return cZ else return B(aI*cZ/1920,0)end end;local function fp(cZ)if aJ==1080 then return cZ else return B(aJ*cZ/1080,0)end end;local function fq()return w()==0 and userControlScheme~="keyboard"and l()==0 end;local function fr()local fs="TRAVEL"if not bK then fs="CRUISE"end;if Autopilot then fs="AUTOPILOT"end;return fs end;local function ft(fu,aW,x,fv,fw,fx,fy,fz)local fA=1;local fB=2;local fC=3;local fD=4;local fE=5;local fF=6;local fG=""local fH=0;local fI=fuelY;local fJ=fuelY+5;if not BarFuelDisplay then fJ=fJ+5 end;if l()==1 and not RemoteHud then fI=fI-50;fJ=fJ-50 end;if fw=="ATMO"then fG="atmofueltank"elseif fw=="SPACE"then fG="spacefueltank"else fG="rocketfueltank"end;fH=_G[fG.."_size"]if#fx>0 then for i=1,#fx do local fK=string.sub(fx[i][fB],1,12)local fL=0;for fM=1,fH do if fx[i][fB]==f(unit[fG.."_"..fM].getData()).name then fL=fM;break end end;if aW or fy[i]==nil or fz[i]==nil then local fN=0;local fO=0;local fP=0;local fQ=0;local fR=p()if fL~=0 then fz[i]=f(unit[fG.."_"..fL].getData()).percentage;fy[i]=f(unit[fG.."_"..fL].getData()).timeLeft;if fy[i]=="n/a"then fy[i]=0 end else fP=k(fx[i][fA])-fx[i][fD]fN=fx[i][fC]fz[i]=d(0.5+fP*100/fN)fO=fx[i][fE]fQ=fx[i][fF]if fO<=fP then fy[i]=0 else fy[i]=d(0.5+fP/((fO-fP)/(fR-fQ)))end;fx[i][fE]=fP;fx[i][fF]=fR end end;if fK==fv then fK=e("%s %d",fw,i)end;if fL==0 then fK=fK.." *"end;local fS;if fy[i]==0 then fS=""else fS=cP(fy[i])end;if fz[i]~=nil then local fT=d(fz[i]*2.55)local fU=e("rgb(%d,%d,%d)",255-fT,fT,0)local ck=""if fS~=""and fy[i]<120 or fz[i]<5 then if aW then ck=[[class="red"]]end end;if BarFuelDisplay then table.insert(fu,e([[
                                            <g class="pdim">                        
                                            <rect fill=grey class="bar" x="%d" y="%d" width="100" height="13"></rect></g>
                                            <g class="bar txtstart">
                                            <rect fill=%s width="%d" height="13" x="%d" y="%d"></rect>
                                            <text fill=black x="%d" y="%d">%s%% %s</text>
                                            </g>]],x,fJ,fU,fz[i],x,fJ,x+2,fJ+10,fz[i],fS))fu[#fu+1]=ci(x,fI,fK,ck.."txtstart pdim txtfuel")fI=fI-30;fJ=fJ-30 else fu[#fu+1]=ci(x,fI,fK,ck.." pdim txtfuel")fu[#fu+1]=ci(x,fJ,e("%d%% %s",fz[i],fS),"pdim txtfuel","fill:"..fU)fI=fI+30;fJ=fJ+30 end end end end end;local function fV(fu,dA)if dA<200000 and not as or dA and as then local fW=0;if c(bE)>1 then fW=45*math.log(c(bE),10)if bE<0 then fW=-fW end end;fu[#fu+1]=e([[
                                <g class="pbright txt txtvspd" transform="translate(%d %d) scale(0.6)">
                                        <text x="55" y="-41">1000</text>
                                        <text x="10" y="-65">100</text>
                                        <text x="-45" y="-45">10</text>
                                        <text x="-73" y="3">O</text>
                                        <text x="-45" y="52">-10</text>
                                        <text x="10" y="72">-100</text>
                                        <text x="55" y="50">-1000</text>
                                        <text x="85" y="0" class="txtvspdval txtend">%d m/s</text>
                                    <g class="linethick">
                                        <path d="m-41 75 2.5-4.4m17 12 1.2-4.9m20 7.5v-10m-75-34 4.4-2.5m-12-17 4.9-1.2m17 40 7-7m-32-53h10m34-75 2.5 4.4m17-12 1.2 4.9m20-7.5v10m-75 34 4.4 2.5m-12 17 4.9 1.2m17-40 7 7m-32 53h10m116 75-2.5-4.4m-17 12-1.2-4.9m40-17-7-7m-12-128-2.5 4.4m-17-12-1.2 4.9m40 17-7 7"/>
                                        <circle r="90" />
                                    </g>
                                    <path transform="rotate(%d)" d="m-0.094-7c-22 2.2-45 4.8-67 7 23 1.7 45 5.6 67 7 4.4-0.068 7.8-4.9 6.3-9.1-0.86-2.9-3.7-5-6.8-4.9z" />
                                </g>
                            ]],vSpdMeterX,vSpdMeterY,d(bE),d(fW))end;return fu end;local function fX(fY)local fZ=-bD;fY=fY-fY:project_on(fZ)local f_=vec3(0,0,1)f_=f_-f_:project_on(fZ)local g0=f_:cross(fZ)local fW=f_:angle_between(fY)*constants.rad2deg;if fY:dot(g0)<0 then fW=360-fW end;return fW end;local function g1(fu,centerX,centerY,g2,g3,bW)local g4=circleRad;local g5=20;local g6=d(g2)if bW then for i=-45,45,5 do local g7=i;fu[#fu+1]=e([[<g transform="rotate(%f,%d,%d)">]],g7,centerX,centerY)len=5;if i%15==0 then len=15 elseif i%10==0 then len=10 end;fu[#fu+1]=e([[<line x1=%d y1=%d x2=%d y2="%d"/></g>]],centerX,centerY+g4+g5-len,centerX,centerY+g4+g5)end;fu[#fu+1]=ci(centerX,centerY+g4+g5-35,g3,"pdim txt txtmid")fu[#fu+1]=ci(centerX,centerY+g4+g5-25,g6 .." deg","pdim txt txtmid")fu[#fu+1]=e([[<g transform="rotate(%f,%d,%d)">]],-g2,centerX,centerY)fu[#fu+1]=e([[<<polygon points="%d,%d %d,%d %d,%d"/>]],centerX-5,centerY+g4+g5-20,centerX+5,centerY+g4+g5-20,centerX,centerY+g4+g5-15)fu[#fu+1]="</g>"end;local g8=g6;if bW then g8=fX(bz)end;local g9=20;local ga=d(g8)local gb=0;local gc=centerY+g4+g5+20;local gd=centerX;if g3~="YAW"then gc=fp(130)gd=fo(960)end;local ge=[[<path class="txttick line" d="]]local gf=d(ga-(g9+10)-ga%5+0.5)for i=gf+60,gf,-5 do local x=gd-(-i*5+g8*5)if i%10==0 then gb=10;local C=i;if C==360 then C=0 elseif C>360 then C=C-360 elseif C<0 then C=C+360 end;fu[#fu+1]=ci(x+5,gc-12,C)elseif i%5==0 then gb=5 end;if gb==10 then ge=e([[%s M %f %f v %d]],ge,x,gc-5,gb)else ge=e([[%s M %f %f v %d]],ge,x,gc-2.5,gb)end end;fu[#fu+1]=ge..[["/>]]fu[#fu+1]=e([[<<polygon points="%d,%d %d,%d %d,%d"/>]],gd-5,gc+10,gd+5,gc+10,gd,gc+5)if bW then g3="HDG"end;fu[#fu+1]=ci(gd,gc+25,ga.."deg","pdim txt txtmid","")fu[#fu+1]=ci(gd,gc+35,g3,"pdim txt txtmid","")end;local function gg(fu,gh,g2,centerX,centerY,bW,gi,eP)local g4=circleRad;local gj=d(g4*3/5)if g4>0 then local gk=d(gh)local len=0;local ge=e([[<path transform="rotate(%f,%d,%d)" class="dim line" d="]],-1*g2,centerX,centerY)if not as then ge=e([[<path transform="rotate(0,%d,%d)" class="dim line" d="]],centerX,centerY)end;fu[#fu+1]=e([[<clipPath id="cut"><circle r="%f" cx="%d" cy="%d"/></clipPath>]],g4-1,centerX,centerY)fu[#fu+1]=[[<g class="dim txttick" clip-path="url(#cut)">]]for i=d(gk-30-gk%5+0.5),d(gk+30+gk%5+0.5),5 do if i%10==0 then len=30 elseif i%5==0 then len=20 end;local y=centerY+-i*5+gh*5;if len==30 then ge=e([[%s M %d %f h %d]],ge,centerX-gj-len,y,len)if as then fu[#fu+1]=e([[<g path transform="rotate(%f,%d,%d)" class="pdim txt txtmid"><text x="%d" y="%f">%d</text></g>]],-1*g2,centerX,centerY,centerX-gj+10,y,i)fu[#fu+1]=e([[<g path transform="rotate(%f,%d,%d)" class="pdim txt txtmid"><text x="%d" y="%f">%d</text></g>]],-1*g2,centerX,centerY,centerX+gj-10,y,i)if i==0 or i==180 or i==-180 then fu[#fu+1]=e([[<path transform="rotate(%f,%d,%d)" d="m %d,%f %d,0" stroke-width="1" style="fill:none;stroke:#F5B800;" />]],-1*g2,centerX,centerY,centerX-gj+20,y,gj*2-40)end else fu[#fu+1]=ci(centerX-gj+10,y,i,"pdim txt txtmid")fu[#fu+1]=ci(centerX+gj-10,y,i,"pdim txt txtmid")end;ge=e([[%s M %d %f h %d]],ge,centerX+gj,y,len)else ge=e([[%s M %d %f h %d]],ge,centerX-gj-len,y,len)ge=e([[%s M %d %f h %d]],ge,centerX+gj,y,len)end end;fu[#fu+1]=ge..[["/>]]local gl="PITCH"if not bW then gl="REL PITCH"end;if gh>90 and not as then gh=90-(gh-90)elseif gh<-90 and not as then gh=-90-(gh+90)end;if g4>200 then if as then if eP>R then fu[#fu+1]=ci(centerX,centerY-15,"Yaw","pdim txt txtmid")fu[#fu+1]=ci(centerX,centerY+20,gi,"pdim txt txtmid")end;fu[#fu+1]=e([[<g transform="rotate(%f,%d,%d)">]],-g2,centerX,centerY)else fu[#fu+1]=e([[<g transform="rotate(0,%d,%d)">]],centerX,centerY)end;fu[#fu+1]=e([[<<polygon points="%d,%d %d,%d %d,%d"/> class="pdim txtend"><text x="%d" y="%f">%d</text>]],centerX-gj+25,centerY-5,centerX-gj+20,centerY,centerX-gj+25,centerY+5,centerX-gj+50,centerY+4,gk)fu[#fu+1]=e([[<<polygon points="%d,%d %d,%d %d,%d"/> class="pdim txtend"><text x="%d" y="%f">%d</text>]],centerX+gj-25,centerY-5,centerX+gj-20,centerY,centerX+gj-25,centerY+5,centerX+gj-30,centerY+4,gk)fu[#fu+1]="</g>"end;local gm=d(g4/3)fu[#fu+1]=e([[<path d="m %d,%d %d,0" stroke-width="2" style="fill:none;stroke:#F5B800;" />]],centerX-gm,centerY,g4-gm)if not as and bW then fu[#fu+1]=e([[<path transform="rotate(%f,%d,%d)" d="m %d,%f %d,0" stroke-width="1" style="fill:none;stroke:#F5B800;" />]],-1*g2,centerX,centerY,centerX-gj+10,centerY,gj*2-20)end;fu[#fu+1]="</g>"if g4<200 then if as and eP>R then fu[#fu+1]=ci(centerX,centerY-g4,gl,"pdim txt txtmid")fu[#fu+1]=ci(centerX,centerY-g4+10,gk,"pdim txt txtmid")fu[#fu+1]=ci(centerX,centerY-15,"Yaw","pdim txt txtmid")fu[#fu+1]=ci(centerX,centerY+20,gi,"pdim txt txtmid")else fu[#fu+1]=ci(centerX,centerY-g4,gl,"pdim txt txtmid")fu[#fu+1]=ci(centerX,centerY-g4+15,gk,"pdim txt txtmid")end end end end;local function gn(fu,dA,bW)local go=altMeterX;local gp=altMeterY;local gq=78;local gr=19;local gs=aq;if aq~=-1 then fu[#fu+1]=ci(go+gq,gp+gr+20,e("AGL: %.1fm",aq),"pdim altsm txtend")end;if bW and(dA<200000 and not as or dA and as)then table.insert(fu,e([[
                                <g class="pdim">                        
                                    <rect class="line" x="%d" y="%d" width="%d" height="%d"/> 
                                    <clipPath id="alt"><rect class="line" x="%d" y="%d" width="%d" height="%d"/></clipPath>
                                    <g clip-path="url(#alt)">]],go-1,gp-4,gq+2,gr+6,go+1,gp-1,gq-4,gr))local gt=0;local gu=1;local gv=0;local gw=dA<0;local gx=dA<planet.surfaceMaxAltitude;local gy=9;if gw then gy=0 end;local dA=c(dA)while gt<6 do local gz=11;local gA=16;local gB=9;local gC=14;local ck="altsm"if gt>2 then gA=gA+3;gz=gz+2;gC=gC+2;gB=gB-6;ck="altbig"end;if gw then ck=ck.." red"elseif gx then ck=ck.." orange"end;local gD=dA/gu%10;local gE=d(gD)local gF=d((gE+1)%10)local gG=gv;if gt==0 then gG=gD-gE;if gw then gG=1-gG end end;if gw and(gt==0 or gv~=0)then local gH=gF;gF=gE;gE=gH end;local gI=gA*(gG-1)local gJ=gI+gA;local x=go+gB+(6-gt)*gz;local y=gp+gC;fu[#fu+1]=ci(x,y+gI,gF,ck)fu[#fu+1]=ci(x,y+gJ,gE,ck)gt=gt+1;gu=gu*10;if gE==gy then gv=gG else gv=0 end end;table.insert(fu,[[</g></g>]])end end;local function gK(eS)eS=vec3(eS)local gL=-math.deg(m(eS.y,eS.z))+180;gL=gL-90;if gL<0 then gL=360+gL end;if gL>180 then gL=-180+gL-180 end;return-gL end;local function gM(eS)eS=vec3(eS)local g8=math.deg(m(eS.y,eS.x))-90;if g8<-180 then g8=360+g8 end;return g8 end;local function gN(fu,eS,eP,centerX,centerY)if eP>5 and not as or eP>R then local g4=circleRad;local gO=20;local gP=20;local gQ=vec3(eS)local gR=gK(gQ)local gS=gM(gQ)local gT=14;local gU=gT/2;local gV=-gS/gP*g4;local gW=gR/gO*g4;local x=centerX+gV;local y=centerY+gW;local ak=z(gV^2+gW^2)local gX=[[<circle
                            cx="]]..x..[["
                            cy="]]..y..[["
                            r="]]..gU/gT..[["
                            style="fill:#d7fe00;stroke:none;fill-opacity:1"/>
                        <circle
                            cx="]]..x..[["
                            cy="]]..y..[["
                            r="]]..gU..[["
                            style="stroke:#d7fe00;stroke-opacity:1;fill:none" />
                        <path
                            d="M ]]..x-gT..[[,]]..y..[[ h ]]..gU..[["
                            style="stroke:#d7fe00;stroke-opacity:1" />
                        <path
                            d="M ]]..x+gU..[[,]]..y..[[ h ]]..gU..[["
                            style="stroke:#d7fe00;stroke-opacity:1" />
                        <path
                            d="M ]]..x..[[,]]..y-gT..[[ v ]]..gU..[["
                            style="stroke:#d7fe00;stroke-opacity:1" />]]if ak<g4 then fu[#fu+1]=gX else local fW=m(gW,gV)local gY=4;local gZ=centerX+g4*math.cos(fW)local g_=centerY+g4*math.sin(fW)fu[#fu+1]=e('<g transform="rotate(%f %f %f)"><rect x="%f" y="%f" width="%f" height="%f" stroke="#d7fe00" fill="#d7fe00" /><path d="M %f %f l %f %f l %f %f z" fill="#d7fe00" stroke="#d7fe00"></g>',fW*180/math.pi,gZ,g_,gZ-gY,g_-gY/2,gY*2,gY,gZ+gY,g_-gY,gY,gY,-gY,gY)end;if not as then gR=gK(-gQ)gS=gM(-gQ)gV=-gS/gP*g4;gW=gR/gO*g4;x=centerX+gV;y=centerY+gW;ak=z(gV^2+gW^2)if ak<g4 then local h0=[[<circle
                                    cx="]]..x..[["
                                    cy="]]..y..[["
                                    r="]]..gU..[["
                                    style="stroke:#d7fe00;stroke-opacity:1;fill:none" />
                                <path
                                    d="M ]]..x..[[,]]..y-gT..[[ v ]]..gU..[["
                                    style="stroke:#d7fe00;stroke-opacity:1" id="l"/>
                                <use
                                    xlink:href="#l"
                                    transform="rotate(120,]]..x..[[,]]..y..[[)" />
                                <use
                                    xlink:href="#l"
                                    transform="rotate(-120,]]..x..[[,]]..y..[[)" />
                                <path
                                    d="M ]]..x-gU..[[,]]..y..[[ h ]]..gT..[["
                                    style="stroke-width:0.5;stroke:#d7fe00;stroke-opacity:1"
                                    transform="rotate(-45,]]..x..[[,]]..y..[[)" id="c"/>
                                <use
                                    xlink:href="#c"
                                    transform="rotate(-90,]]..x..[[,]]..y..[[)"/>]]fu[#fu+1]=h0 end end end end;local function h1(fu,fs,h2,h3)h2=d(h2+0.5)local fI=throtPosY+10;local fJ=throtPosY+20;if l()==1 and not RemoteHud then fI=55;fJ=65 end;local h4="CRUISE"local unit="km/h"local cn=h3;if fs=="TRAVEL"or fs=="AUTOPILOT"then h4="THROT"unit="%"cn=h2;local h5="dim"if h2<0 then h5="red"end;fu[#fu+1]=e([[<g class="%s">
                                <path class="linethick" d="M %d %d L %d %d L %d %d L %d %d"/>
                                <g transform="translate(0 %.0f)">
                                    <polygon points="%d,%d %d,%d %d,%d"/>
                                </g>]],h5,throtPosX-7,throtPosY-50,throtPosX,throtPosY-50,throtPosX,throtPosY+50,throtPosX-7,throtPosY+50,1-c(h2),throtPosX-10,throtPosY+50,throtPosX-15,throtPosY+53,throtPosX-15,throtPosY+47)end;fu[#fu+1]=ci(throtPosX+10,fI,h4,"pbright txtstart")fu[#fu+1]=ci(throtPosX+10,fJ,e("%.0f %s",cn,unit),"pbright txtstart")if as and AtmoSpeedAssist and bK and N then h2=d(O*100+0.5)local h5="red"if h2<0 then h5="red"end;fu[#fu+1]=e([[<g class="%s">
                                <g transform="translate(0 %d)">
                                    <polygon points="%d,%d %d,%d %d,%d"/>
                                </g></g>]],h5,1-c(h2),throtPosX-10,throtPosY+50,throtPosX-15,throtPosY+53,throtPosX-15,throtPosY+47)fu[#fu+1]=ci(throtPosX+10,fI+40,"LIMIT","pbright txtstart")fu[#fu+1]=ci(throtPosX+10,fJ+40,h2 .."%","pbright txtstart")end;if as and AtmoSpeedAssist or Reentry then fu[#fu+1]=ci(throtPosX+10,fI-40,"LIMIT: "..bi.." km/h","dim txtstart")elseif not as and Autopilot then fu[#fu+1]=ci(throtPosX+10,fI-40,"LIMIT: "..d(MaxGameVelocity*3.6+0.5).." km/h","dim txtstart")end end;local function h6(fu,h7)local h8=throtPosY-10;local h9=throtPosX+10;fu[#fu+1]=ci(0,0,"","pdim txt txtend")if l()==1 and not RemoteHud then h8=75 end;fu[#fu+1]=ci(h9,h8,d(h7).." km/h","pbright txtbig txtstart")end;local function ha(fu)fu[#fu+1]=ci(fo(1900),fp(1070),e("ARCH Hud Version: %.3f",VERSION_NUMBER),"hudver")fu[#fu+1]=[[<g class="warnings">]]if unit.isMouseControlActivated()==1 then fu[#fu+1]=ci(fo(960),fp(550),"Warning: Invalid Control Scheme Detected","warnings")fu[#fu+1]=ci(fo(960),fp(600),"Keyboard Scheme must be selected","warnings")fu[#fu+1]=ci(fo(960),fp(650),"Set your preferred scheme in Lua Parameters instead","warnings")end;local hb=fo(960)local hc=fp(860)local hd=fp(880)local he=fp(900)local hf=fp(960)local hg=fp(200)local hh=fp(250)local hi=fp(960)if l()==1 and not RemoteHud then hc=fp(135)hd=fp(155)he=fp(175)hg=fp(115)hh=fp(95)end;if BrakeIsOn then fu[#fu+1]=ci(hb,hc,"Brake Engaged","warnings")elseif M>0 then fu[#fu+1]=ci(hb,hc,"Auto-Brake Engaged","warnings","opacity:"..M)end;if as and bd and aq==-1 then if not Autopilot and not VectorToTarget and not BrakeLanding and not bI and not VertTakeOff and not AutoTakeoff then fu[#fu+1]=ci(hb,hg+50,"** STALL WARNING **","warnings")c5("stall","SW",2)end end;if bU then fu[#fu+1]=ci(hb,hg+90,"Flight Assist in Progress","warnings")end;if az then fu[#fu+1]=ci(hb,hi,"Gyro Enabled","warnings")end;if GearExtended then if T then fu[#fu+1]=ci(hb,hd,"Gear Extended","warn")else fu[#fu+1]=ci(hb,hd,"Landed (G: Takeoff)","warnings")end;local hj=ct(a:getTargetGroundAltitude())fu[#fu+1]=ci(hb,he,"Hover Height: "..hj,"warn")end;if a8 then fu[#fu+1]=ci(hb,hf+20,"ROCKET BOOST ENABLED","warn")end;if antigrav and not ExternalAGG and bI and AntigravTargetAltitude~=nil then if c(au-antigrav.getBaseAltitude())<501 then fu[#fu+1]=ci(hb,hg+15,e("AGG On - Target Altitude: %d Singularity Altitude: %d",d(AntigravTargetAltitude),d(antigrav.getBaseAltitude())),"warn")else fu[#fu+1]=ci(hb,hg+15,e("AGG On - Target Altitude: %d Singluarity Altitude: %d",d(AntigravTargetAltitude),d(antigrav.getBaseAltitude())),"warnings")end elseif Autopilot and AutopilotTargetName~="None"then fu[#fu+1]=ci(hb,hg+20,"Autopilot "..AutopilotStatus,"warn")elseif LockPitch~=nil then fu[#fu+1]=ci(hb,hg+20,e("LockedPitch: %d",d(LockPitch)),"warn")elseif a1 then fu[#fu+1]=ci(hb,hg+20,"Follow Mode Engaged","warn")elseif Reentry then fu[#fu+1]=ci(hb,hg+20,"Re-entry in Progress","warn")end;if AltitudeHold or VertTakeOff then local hj=ct(HoldAltitude,2)if VertTakeOff then if bI then hj=ct(antigrav.getBaseAltitude(),2).." AGG singularity height"end;fu[#fu+1]=ci(hb,hg,"VTO to "..hj,"warn")elseif AutoTakeoff and not IntoOrbit then if ao then fu[#fu+1]=ci(hb,hg,"Takeoff to "..AutopilotTargetName,"warn")else fu[#fu+1]=ci(hb,hg,"Takeoff to "..hj,"warn")end;if BrakeIsOn and not VertTakeOff then fu[#fu+1]=ci(hb,hg+50,"Throttle Up and Disengage Brake For Takeoff","crit")end else fu[#fu+1]=ci(hb,hg,"Altitude Hold: "..hj,"warn")end end;if VertTakeOff and(antigrav~=nil and antigrav)then if at>0.1 then fu[#fu+1]=ci(hb,hg+20,"Beginning ascent","warn")elseif at<0.09 and at>0.05 then fu[#fu+1]=ci(hb,hg+20,"Aligning trajectory","warn")elseif at<0.05 then fu[#fu+1]=ci(hb,hg+20,"Leaving atmosphere","warn")end end;if IntoOrbit then if bk~=nil then fu[#fu+1]=ci(hb,hg,bk,"warn")end end;if IntruderAlertSystem and safeMass==-1 then fu[#fu+1]=ci(hb,hg+70,"POSSIBLE INTRUDER ALERT - MASS GAIN OF "..bG.."kg DETECTED","warnings")c5("alarm","AL",2)end;if BrakeLanding then if StrongBrakes then fu[#fu+1]=ci(hb,hg,"Brake-Landing","warnings")else fu[#fu+1]=ci(hb,hg,"Coast-Landing","warnings")end end;if ProgradeIsOn then fu[#fu+1]=ci(hb,hg,"Prograde Alignment","crit")end;if RetrogradeIsOn then fu[#fu+1]=ci(hb,hg,"Retrograde Alignment","crit")end;if bX then local type;if string.find(bX,"COLLISION")then type="warnings"else type="crit"end;fu[#fu+1]=ci(hb,hh+20,bX,type)elseif at==0 then local c0,c4=bZ(bB:normalize())if c4~=nil then local hj=ct(c4)local travelTime=b3.computeTravelTime(bC,0,c4)local hk="Collision"if c0.noAtmosphericDensityAltitude>0 then hk="Atmosphere"end;fu[#fu+1]=ci(hb,hh+20,c0.name.." "..hk.." "..cP(travelTime).." In "..hj,"crit")end end;if VectorToTarget and not IntoOrbit then fu[#fu+1]=ci(hb,hg+35,VectorStatus,"warn")end;fu[#fu+1]="</g>"return fu end;local function hl(eP)return d(B(eP*3.6,0)+0.5).." km/h"end;local function hm(fu)local hn=OrbitMapX;local ho=OrbitMapY;local hp=OrbitMapSize;local hq=4;local hr=15;local x=0;local y=0;local hs,ht,hu,hv;local function hw(type)local hx,E,eP,hy;if type=="Periapsis"then hx=orbit.periapsis.altitude;E=orbit.timeToPeriapsis;eP=orbit.periapsis.speed;hy=35 else hx=orbit.apoapsis.altitude;E=orbit.timeToApoapsis;eP=orbit.apoapsis.speed;hy=-35 end;fu[#fu+1]=e([[<line class="pdim op30 linethick" x1="%f" y1="%f" x2="%f" y2="%f"/>]],x+hy,y-5,hn+hp/2-hs+hv,y-5)fu[#fu+1]=ci(x,y,type)y=y+hr;local hj=ct(hx)fu[#fu+1]=ci(x,y,hj)y=y+hr;fu[#fu+1]=ci(x,y,cP(E))y=y+hr;fu[#fu+1]=ci(x,y,hl(eP))end;if orbit~=nil and at<0.2 and planet~=nil and orbit.apoapsis~=nil and orbit.periapsis~=nil and orbit.period~=nil and orbit.apoapsis.speed>5 and DisplayOrbit then ho=ho+hq;x=hn+hp+hn/2+hq;y=ho+hp/2+5+hq;hs=hp/4;hv=0;fu[#fu+1]=[[<g class="pbright txtorb txtmid">]]fu[#fu+1]=e('<rect width="%f" height="%d" rx="10" ry="10" x="%d" y="%d" style="fill:rgb(0,0,100);stroke-width:4;stroke:white;fill-opacity:0.3;" />',hp+hn*2,hp+ho,hq,hq)if orbit.periapsis~=nil and orbit.apoapsis~=nil then hu=(orbit.apoapsis.altitude+orbit.periapsis.altitude+planet.radius*2)/(hs*2)ht=(planet.radius+orbit.periapsis.altitude+(orbit.apoapsis.altitude-orbit.periapsis.altitude)/2)/hu*(1-orbit.eccentricity)hv=hs-orbit.periapsis.altitude/hu-planet.radius/hu;local hz=""if orbit.periapsis.altitude<=0 then hz='redout'end;fu[#fu+1]=e([[<ellipse class="%s line" cx="%f" cy="%f" rx="%f" ry="%f"/>]],hz,hn+hp/2+hv+hq,ho+hp/2+hq,hs,ht)fu[#fu+1]=e('<circle cx="%f" cy="%f" r="%f" stroke="white" stroke-width="3" fill="blue" />',hn+hp/2+hq,ho+hp/2+hq,planet.radius/hu)end;if orbit.apoapsis~=nil and orbit.apoapsis.speed<MaxGameVelocity and orbit.apoapsis.speed>1 then hw("Apoapsis")end;y=ho+hp/2+5+hq;x=hn-hn/2+10+hq;if orbit.periapsis~=nil and orbit.periapsis.speed<MaxGameVelocity and orbit.periapsis.speed>1 then hw("Periapsis")end;fu[#fu+1]=ci(hn+hp/2+hq,planet.name,20+hq,"txtorbbig")if orbit.period~=nil and orbit.periapsis~=nil and orbit.apoapsis~=nil and orbit.apoapsis.speed>1 then local hA=orbit.timeToApoapsis/orbit.period*2*math.pi;local hB=hs*math.cos(hA)local hC=ht*math.sin(hA)fu[#fu+1]=e('<circle cx="%f" cy="%f" r="5" stroke="white" stroke-width="3" fill="white" />',hn+hp/2+hB+hv+hq,ho+hp/2+hC+hq)end;fu[#fu+1]=[[</g>]]return fu else return fu end end;local hD;local function hE()if radarPanelID~=nil and am==0 then s(radarPanelID)radarPanelID=nil;if hD~=nil then s(hD)hD=nil end else if am==1 then s(radarPanelID)radarPanelID=nil;_autoconf.displayCategoryPanel(radar,radar_size,L_TEXT("ui_lua_widget_periscope", "Periscope"),"periscope")hD=_autoconf.panels[_autoconf.panels_size]end;placeRadar=true;if radarPanelID==nil and placeRadar then _autoconf.displayCategoryPanel(radar,radar_size,L_TEXT("ui_lua_widget_radar", "Radar"),"radar")radarPanelID=_autoconf.panels[_autoconf.panels_size]placeRadar=false end;am=0 end end;local function hF(fu)local x=30;local y=275;local hG={"Alt-1: Increment Interplanetary Helper","Alt-2: Decrement Interplanetary Helper","Alt-3: Toggle Vanilla Widget view"}local hH={"","------------------IN ATMO-----------------","Alt-4: Autopilot in atmo to target","Alt-4-4: Autopilot to LowOrbitHeight over atmosphere and orbit to target","Alt-6: Altitude hold at current altitude","Alt-6-6: Altitude Hold at 11% atmosphere","Alt-Q/E: Hard Bankroll left/right till released","Alt-S: 180 deg bank turn"}local hI={"","------------------NO ATMO-----------------","Alt-4 (Alt < 100k): Autopilot to Orbit and land","Alt-4 (Alt > 100k): Autopilot to target","Alt-6: Orbit at current altitude","Alt-6-6: Orbit at LowOrbitHeight over atmosphere"}local hJ={"","------------------ALWAYS--------------------","Alt-5: Lock Pitch at current pitch","Alt-7: Toggle Collision System on and offset","Alt-8: Toggle ground stabilization (underwater flight)","Alt-9: Activate Gyroscope","","CTRL: Toggle Brakes on and off, cancels active AP","LeftAlt: Tap to shift freelook on and off","Shift: Hold while not in freelook to see Buttons","Type /commands or /help in lua chat to see text commands"}if as then c8(hG,hH)table.insert(hG,"--------------CONDITIONAL-----------------")if VertTakeOff then table.insert(hG,"Hit Alt-6 before exiting Atmosphere during VTO to hold in level flight")end;if aq~=-1 then if antigrav then if bI then table.insert(hG,"Alt-6: AGG is on, will takeoff to AGG Height")else table.insert(hG,"Turn on AGG to takeoff to AGG Height")end end;if VertTakeOffEngine then table.insert(hG,"Alt-6: Begins Vertical Takeoff.")else table.insert(hG,"Alt-4/Alt-6: Autotakeoff if below hoverheight")end else table.insert(hG,"G: Begin BrakeLanding or Land")end else c8(hG,hI)end;if AltitudeHold then table.insert(hG,"Alt-Spacebar/Alt-C will raise/lower target height")end;c8(hG,hJ)for i=1,#hG do y=y+12;fu[#fu+1]=ci(x,y,hG[i],"pdim txttick txtstart")end end;local function hK(hL,hM)local hN;local hO=(hM-hL):normalize()local eU=(bF-hL):dot(hO)/hO:dot(hO)if eU<=0.then return(bF-hL):len()elseif eU>=(hM-hL):len()then return(bF-hM):len()end;local hP=hL+eU*hO;hN=(hP-bF):len()return hN end;local function hQ()local hN;local hR=nil;local hS=nil;local hT=nil;for cY,hU in pairs(aY[0])do if hU.hasAtmosphere then local ak=hK(planet.center,hU.center)if hR==nil or ak<hR then hS=hU;hR=ak;hT=planet end;if ad and ad.hasAtmosphere and ad.name~=planet.name then local ee=hK(ad.center,hU.center)if ee<hR then hS=hU;hR=ee;hT=ad end end end end;local hV=fo(1770)local hW=fp(330)if hR then local hX="txttick "local hY=500000;if hR<hS.radius+hY or hR<hT.radius+hY then if bR then hX="txttick red "else hX="txttick orange "end end;hN=ct(hR,2)bT=ci(hV,hW,"Pipe ("..hT.name.."--"..hS.name.."): "..hN,hX.."pbright txtmid")end end;local hZ=fo(1770)local h_=fp(350)local i0=fp(15)local i1=fo(1370)local i2,i3;local i4={}local i5={XS=13,S=27,M=55,L=110,XL=221}local i6={}local i7={}function i7.HUDPrologue(fu)bR,ff,_,_=fg(bF)if not bR then I=PvPR;K=PvPG;J=PvPB else I=SafeR;K=SafeG;J=SafeB end;aA=[[rgb(]]..d(I+0.5)..","..d(K+0.5)..","..d(J+0.5)..[[)]]aB=[[rgb(]]..d(I*0.9+0.5)..","..d(K*0.9+0.5)..","..d(J*0.9+0.5)..[[)]]local i8=aA;local i9=aB;local ia=aA;local ib=aB;if fq()and not brightHud then i8=[[rgb(]]..d(I*0.4+0.5)..","..d(K*0.4+0.5)..","..d(J*0.3+0.5)..[[)]]i9=[[rgb(]]..d(I*0.3+0.5)..","..d(K*0.3+0.5)..","..d(J*0.2+0.5)..[[)]]end;fu[#fu+1]=e([[
                        <head>
                            <style>
                                body {margin: 0}
                                svg {position:absolute;top:0;left:0;font-family:Montserrat;} 
                                .txt {font-size:10px;font-weight:bold;}
                                .txttick {font-size:12px;font-weight:bold;}
                                .txtbig {font-size:14px;font-weight:bold;}
                                .altsm {font-size:16px;font-weight:normal;}
                                .altbig {font-size:21px;font-weight:normal;}
                                .line {stroke-width:2px;fill:none}
                                .linethick {stroke-width:3px;fill:none}
                                .warnings {font-size:26px;fill:red;text-anchor:middle;font-family:Bank}
                                .warn {fill:orange;font-size:24px}
                                .crit {fill:darkred;font-size:28px}
                                .bright {fill:%s;stroke:%s}
                                .pbright {fill:%s;stroke:%s}
                                .dim {fill:%s;stroke:%s}
                                .pdim {fill:%s;stroke:%s}
                                .red {fill:red;stroke:red}
                                .orange {fill:orange;stroke:orange}
                                .redout {fill:none;stroke:red}
                                .op30 {opacity:0.3}
                                .op10 {opacity:0.1}
                                .txtstart {text-anchor:start}
                                .txtend {text-anchor:end}
                                .txtmid {text-anchor:middle}
                                .txtvspd {font-family:sans-serif;font-weight:normal}
                                .txtvspdval {font-size:20px}
                                .txtfuel {font-size:11px;font-weight:bold}
                                .txtorb {font-size:12px}
                                .txtorbbig {font-size:18px}
                                .hudver {font-size:10px;font-weight:bold;fill:red;text-anchor:end;font-family:Bank}
                                .msg {font-size:40px;fill:red;text-anchor:middle;font-weight:normal}
                                .cursor {stroke:white}
                            </style>
                        </head>
                        <body>
                            <svg height="100%%" width="100%%" viewBox="0 0 %d %d">
                            ]],i8,i8,ia,ia,i9,i9,ib,ib,aI,aJ)return fu end;function i7.DrawVerticalSpeed(fu,dA)fV(fu,dA)end;function i7.UpdateHud(fu)local dA=au;local eS=core.getVelocity()local eP=vec3(eS):len()local gL=bL;local ic=bM;local g2=ic;local gh=bL;local h2=d(unit.getThrottle())local h7=eP*3.6;local h3=unit.getAxisCommandValue(0)local id=fo(1770)local ie=fp(310)if AtmoSpeedAssist and bK then h3=L;h2=L*100 end;local fs=fr()local g3="ROLL"if h2==nil then h2=0 end;if not bW then if eP>5 then gL=gK(eS)ic=gM(eS)else gL=0;ic=0 end;g3="YAW"end;if ff>50000 and not as then local ig;if ff>200000 then ig=B(ff/200000,2).." su"else ig=B(ff/1000,1).." km"end;fu[#fu+1]=ci(id,ie,"PvP Boundary: "..ig,"pbright txtbig txtmid")end;fu[#fu+1]=al;fu[#fu+1]=aF;fu[#fu+1]=bS;if bT~=""then fu[#fu+1]=bT end;if aX%aR==0 then aW=true end;if fuelX~=0 and fuelY~=0 then ft(fu,aW,fuelX,"Atmospheric ","ATMO",aK,aU,aV)ft(fu,aW,fuelX+120,"Space fuel t","SPACE",aL,aS,aT)ft(fu,aW,fuelX+240,"Rocket fuel ","ROCKET",aM,aP,aQ)end;if aW then aW=false;aX=0 end;aX=aX+1;fV(fu,dA)if l()==0 or RemoteHud then if not fq()or brightHud then if bW then g1(fu,centerX,centerY,g2,g3,bW)gg(fu,gh,g2,centerX,centerY,bW,d(gM(eS)),eP)else g1(fu,centerX,centerY,ic,g3,bW)gg(fu,gL,ic,centerX,centerY,bW,d(ic),eP)end;gn(fu,dA,bW)gN(fu,eS,eP,centerX,centerY)end end;h1(fu,fs,h2,h3)h6(fu,h7)ha(fu)hm(fu)if showHelp then hF(fu)end;return fu end;function i7.HUDEpilogue(fu)fu[#fu+1]="</svg>"return fu end;function i7.ExtraData(fu)local ih=fo(1240)local ii=fp(55)local ij=ii+10;local ik;local il=0;local fs=fr()if VertTakeOffEngine then fs=fs.."-VERTICAL"end;if CollisionSystem and not AutoTakeoff and not BrakeLanding and bC>20 then fs=fs.."-COLLISION ON"end;if TurnBurn then fs="TB-"..fs end;if not stablized then fs=fs.."-DeCoupled"end;local im=vec3(core.getWorldAcceleration()):len()/9.80665;ik=core.g()fu[#fu+1]=[[<g class="pdim txt txtend">]]if l()==1 and not RemoteHud then ih=fo(1120)ii=fp(55)ij=ii+10 elseif as then local io=fo(770)fu[#fu+1]=ci(io,ii,"ATMOSPHERE","pdim txt txtend")fu[#fu+1]=ci(io,ij,e("%.2f",at),"pdim txt txtend","")end;fu[#fu+1]=ci(ih,ii,"GRAVITY","pdim txt txtend")fu[#fu+1]=ci(ih,ij,e("%.2f",ik/9.80665),"pdim txt txtend")fu[#fu+1]=ci(ih,ii+20,"ACCEL","pdim txt txtend")fu[#fu+1]=ci(ih,ij+20,e("%.2f",im),"pdim txt txtend")fu[#fu+1]=ci(fo(960),fp(180),fs,"txtbig txtmid")end;function i7.DrawOdometer(fu,ae,TotalDistanceTravelled,af)local ik;local ip=0;local iq=0;local il=0;if as then il=LastMaxBrakeInAtmo else il=LastMaxBrake end;maxThrust=a:maxForceForward()ik=core.g()if ik>0.1 then iq=ax*ik;ip=maxThrust/ik end;fu[#fu+1]=e([[
                        <g class="pbright txt">
                        <path class="linethick" d="M %d 0 L %d %d Q %d %d %d %d L %d 0"/>]],fo(660),fo(700),fp(35),fo(960),fp(55),fo(1240),fp(35),fo(1280))if l()==0 or RemoteHud then fu[#fu+1]=ci(fo(700),fp(20),e("Trip: %.2f km",ae),"txtstart")fu[#fu+1]=ci(fo(700),fp(30),e("Lifetime: %.2f kSU",TotalDistanceTravelled/200000),"txtstart")fu[#fu+1]=ci(fo(830),fp(20),"Trip Time: "..cP(af),"txtstart")fu[#fu+1]=ci(fo(830),fp(30),"Total Time: "..cP(TotalFlightTime),"txtstart")fu[#fu+1]=ci(fo(970),fp(20),e("Mass: %.2f Tons",ax/1000),"txtstart")fu[#fu+1]=ci(fo(1240),fp(10),e("Max Brake: %.2f kN",il/1000),"txtend")fu[#fu+1]=ci(fo(1240),fp(30),e("Max Thrust: %.2f kN",maxThrust/1000),"txtend")if ik>0.1 then fu[#fu+1]=ci(fo(970),fp(30),e("Max Mass: %.2f Tons",ip/1000),"txtstart")fu[#fu+1]=ci(fo(1240),fp(20),e("Req Thrust: %.2f kN",iq/1000),"txtend")else fu[#fu+1]=ci(fo(970),fp(30),"Max Mass: n/a","txtstart")fu[#fu+1]=ci(fo(1240),fp(20),"Req Thrust: n/a","txtend")end end;fu[#fu+1]="</g>"return fu end;function i7.DrawWarnings(fu)return ha(fu)end;function i7.DisplayOrbitScreen(fu)return hm(fu)end;function i7.DisplayMessage(fu,hj)if hj~="empty"then local y=310;for ir in string.gmatch(hj,"([^\n]+)")do y=y+35;fu[#fu+1]=ci("50%",y,ir,"msg")end end;if aj~=0 then unit.setTimer("msgTick",aj)aj=0 end end;function i7.DrawDeadZone(fu)fu[#fu+1]=e([[<circle class="dim line" style="fill:none" cx="50%%" cy="50%%" r="%d"/>]],DeadZone)end;function i7.UpdatePipe()if as then bT=""return end;hQ()end;function i7.UpdateRadarRoutine()local function is(it,iu,iv,iw,ix,iy,iz,iA)iu,iw,iy,iA=vec3(iu),vec3(iw),vec3(iy),vec3(iA)local iB,iC,iD=it*it,iv*iv,ix*ix;local eV=iw-iu;local iE=eV:normalize()local iF=eV:len()local iG=iy-iu;local iH=(iG-iG:project_on(iE)):normalize()local iI,iJ=iG:dot(iE),iG:dot(iH)local iK=iI*iI+iJ*iJ;local iL=iE:cross(iH)local x=(iB-iC+iF*iF)/(2*iF)local y=(iB-iD+iK-2*iI*x)/(2*iJ)local da=iB-x^2-y^2;local iM=z(da)local iN=iu+iE*x+iH*y+iL*iM;local iO=iu+iE*x+iH*y-iL*iM;if c((iA-iN):len()-iz)<c((iA-iO):len()-iz)then return iN else return iO end end;local function iP()local function iQ()local iR=core.getConstructWorldOrientationRight()local eV=core.getConstructWorldOrientationForward()local iG=core.getConstructWorldOrientationUp()local iS=library.systemResolution3(iR,eV,iG,{1,0,0})local iT=library.systemResolution3(iR,eV,iG,{0,1,0})local iU=library.systemResolution3(iR,eV,iG,{0,0,1})return function(iV)return library.systemResolution3(iS,iT,iU,iV)end end;local iW=iQ()local iX=core.getConstructWorldPos()local eT=core.getElementPositionById(1)local iY={eT[1]-G,eT[2]-G,eT[3]-G}local iZ=iW(iY)local i_={iX[1]-iZ[1],iX[2]-iZ[2],iX[3]-iZ[3]}return i_ end;local function j0(j1,eW,j2)local j3=j1.pts;local gt=#j3;local j4=j1.ref;if gt>3 then local j5,j6,j7,j8=j3[gt],j3[gt-1],j3[gt-2],j3[gt-3]j1.ref=j2;local eT=is(j5[1],j5[2],j6[1],j6[2],j7[1],j7[2],j8[1],j8[2])local x,y,iM=eT.x,eT.y,eT.z;if x==x and y==y and iM==iM then x=x+j4[1]y=y+j4[2]iM=iM+j4[3]local j9=vec3(x,y,iM)if not j1.lastPos then j1.center=j9 elseif(j1.lastPos-j9):len()<2 then j1.center=j9;j1.skipCalc=true end;j1.lastPos=j9 end;j1.pts={}else local ja={j2[1]-j4[1],j2[2]-j4[2],j2[3]-j4[3]}j3[gt+1]={eW,ja}end end;if radar_1 then local jb=#radar_1.getEntries()local jc=radar_1.getData()local jd=jc:gmatch('{"constructId[^}]*}[^}]*}')if jb>0 then local j2=iP()local je,jf,jg=0,0,0;for cZ in jd do local dI,ak,jh=cZ:match([[{"constructId":"([%d%.]*)","distance":([%d%.]*).-"size":"(%a+)"]])local ji=i5[jh]ak=A(ak)if radar_1.hasMatchingTransponder(dI)==1 then table.insert(i4,dI)end;local jj=radar_1.getConstructType(dI)if CollisionSystem then if ji>27 or jj=="static"or jj=="space"then jg=jg+1;local fK=radar_1.getConstructName(dI)local j1=bV[dI]if j1==nil then ji=ji+H;bV[dI]={pts={},ref=j2,name=fK,i=0,radius=ji,skipCalc=false}j1=bV[dI]end;if not j1.skipCalc then j0(j1,ak,j2)jf=jf+1 end;if j1.center then table.insert(i6,j1)end end;je=je+1;if bW and je>700 or jf>70 or(not bW and je>300 or jf>30)then coroutine.yield()je,jf=0,0 end end end;local jk=#i6;if jk>0 and bC>20 then local c3,jl,jm,jn;local jo=0;local jp=b2:getPlanetarySystem(0)jn=bB:normalize()while jo<jk do coroutine.yield()local jq={table.unpack(i6,jo,math.min(jo+75,jk))}c3,jl,jm=jp:castIntersections(bF,jn,nil,nil,jq,true)if c3 and jm then bY={c3,jl,jm}break end;jo=jo+75 end;if not c3 then bY=nil end else bY=nil end;i6={}local jr=jc:find('identifiedConstructs":%[%]')if jr==nil and hD==nil then am=1;hE()end;if jr~=nil and hD~=nil then hE()end;if radarPanelID==nil then hE()end;if CollisionSystem then i2=jk.."/"..jg.." Plotted : "..jb-jg.." Ignored"else i2="Radar Contacts: "..jb end;bS=ci(hZ,h_,i2,"pbright txtbig txtmid")if#i4>0 then bS=bS..ci(x,y,"Friendlies In Range","pbright txtbig txtmid")for cY,cZ in pairs(i4)do i0=i0+20;bS=bS..ci(i1,i0,radar_1.getConstructName(cZ),"pdim txtmid")end;i4={}end else local js;js=jc:find('worksInEnvironment":false')if js then bS=ci(hZ,h_,"Radar: Jammed","pbright txtbig txtmid")else bS=ci(hZ,h_,"Radar: No Contacts","pbright txtbig txtmid")end;if radarPanelID~=nil then am=0;hE()end end end end;function i7.UpdateRadar()local jt=coroutine.status(UpdateRadarCoroutine)if jt=="suspended"then local cn,ju=coroutine.resume(UpdateRadarCoroutine)if ju then system.print("ERROR UPDATE RADAR: "..ju)end elseif jt=="dead"then UpdateRadarCoroutine=coroutine.create(i7.UpdateRadarRoutine)local cn,ju=coroutine.resume(UpdateRadarCoroutine)end end;function i7.DrawSettings(fu)if#bO>0 then local x=fo(640)local y=fp(200)fu[#fu+1]=[[<g class="pbright txtvspd txtstart">]]for cY,cZ in pairs(bO)do fu[#fu+1]=ci(x,y,cZ..": ".._G[cZ])y=y+20;if cY%12==0 then x=x+fo(350)y=fp(200)end end;fu[#fu+1]=ci(fo(640),fp(200)+260,"To Change: In Lua Chat, enter /G VariableName Value")fu[#fu+1]="</g>"end;return fu end;UpdateRadarCoroutine=coroutine.create(i7.UpdateRadarRoutine)return i7 end;local function jv()local function jw(position)local dv=sys:closestBody(position)if(position-dv.center):len()>dv.radius+dv.noAtmosphericDensityAltitude then dv=aY[0][0]end;return dv end;local function jx()local function jy(jz,jA)return jz.name<jA.name end;bQ={}for cY,cZ in pairs(aY[0])do bQ[#bQ+1]={name=cZ.name,index=cY}end;table.sort(bQ,jy)end;local function jB(jC)for cY,cZ in pairs(jC)do if cZ.name and cZ.name==CustomTarget.name then return cY end end;return-1 end;local function jD()if AutopilotTargetIndex==0 then AutopilotTargetName="None"ad=nil;CustomTarget=nil;return true end;local jE=bQ[AutopilotTargetIndex].index;local jF=aY[0][jE]if jF.center then AutopilotTargetName=jF.name;ad=b2[0][jE]if CustomTarget~=nil then if at==0 then if t(widgetMaxBrakeTimeText,widgetMaxBrakeTime)~=1 then u(widgetMaxBrakeTimeText,widgetMaxBrakeTime)end;if t(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)~=1 then u(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)end;if t(widgetCurBrakeTimeText,widgetCurBrakeTime)~=1 then u(widgetCurBrakeTimeText,widgetCurBrakeTime)end;if t(widgetCurBrakeDistanceText,widgetCurBrakeDistance)~=1 then u(widgetCurBrakeDistanceText,widgetCurBrakeDistance)end;if t(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)~=1 then u(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)end end;if t(widgetMaxMassText,widgetMaxMass)~=1 then u(widgetMaxMassText,widgetMaxMass)end;if t(widgetTravelTimeText,widgetTravelTime)~=1 then u(widgetTravelTimeText,widgetTravelTime)end;if t(widgetTargetOrbitText,widgetTargetOrbit)~=1 then u(widgetTargetOrbitText,widgetTargetOrbit)end end;CustomTarget=nil else CustomTarget=jF;for _,cZ in pairs(b2[0])do if cZ.name==CustomTarget.planetname then ad=cZ;AutopilotTargetName=CustomTarget.name;break end end;if t(widgetMaxMassText,widgetMaxMass)~=1 then u(widgetMaxMassText,widgetMaxMass)end;if t(widgetTravelTimeText,widgetTravelTime)~=1 then u(widgetTravelTimeText,widgetTravelTime)end end;if CustomTarget==nil then AutopilotTargetCoords=vec3(ad.center)else AutopilotTargetCoords=CustomTarget.position end;if ad.planetname~="Space"then if ad.hasAtmosphere then AutopilotTargetOrbit=d(ad.radius*(TargetOrbitRadius-1)+ad.noAtmosphericDensityAltitude)else AutopilotTargetOrbit=d(ad.radius*(TargetOrbitRadius-1)+ad.surfaceMaxAltitude)end else AutopilotTargetOrbit=1000 end;if CustomTarget~=nil and CustomTarget.planetname=="Space"then AutopilotEndSpeed=0 else _,AutopilotEndSpeed=b5(ad):escapeAndOrbitalSpeed(AutopilotTargetOrbit)end;AutopilotPlanetGravity=0;AutopilotAccelerating=false;AutopilotBraking=false;AutopilotCruising=false;Autopilot=false;AutopilotRealigned=false;AutopilotStatus="Aligning"return true end;local function jG(fZ)if not Autopilot and not VectorToTarget and not ao and not IntoOrbit then if fZ==nil then AutopilotTargetIndex=AutopilotTargetIndex+1;if AutopilotTargetIndex>#bQ then AutopilotTargetIndex=0 end else AutopilotTargetIndex=AutopilotTargetIndex-1;if AutopilotTargetIndex<0 then AutopilotTargetIndex=#bQ end end;if AutopilotTargetIndex==0 then jD()else local jE=bQ[AutopilotTargetIndex].index;local jF=aY[0][jE]if jF.name=="Space"or iphCondition=="Custom Only"and jF.center or iphCondition=="No Moons"and string.find(jF.name,"Moon")~=nil then if fZ==nil then jG()else jG(1)end else jD()end end else a3="Disengage autopilot before changing Interplanetary Helper"c5("iph","AP")end end;local function jH()local gt=-1;gt=jB(aY[0])if gt>-1 then table.remove(aY[0],gt)end;gt=-1;gt=jB(SavedLocations)if gt~=-1 then a3=CustomTarget.name.." saved location cleared"table.remove(SavedLocations,gt)end;jG()jx()end;local function jI(fK,position,gH,fl)if dbHud_1 or gH then local dv=jw(position)local ik=dv.gravity;local jJ=dv.atmosphericDensityAboveSurface;if fl then jJ=at;ik=unit.getClosestPlanetInfluence()end;local jK={position=position,name=fK,atmosphere=jJ,planetname=dv.name,gravity=ik,safe=fl}if not gH then SavedLocations[#SavedLocations+1]=jK else for cY,cZ in pairs(aY[0])do if cZ.name and fK==cZ.name then table.remove(aY[0],cY)end end end;table.insert(aY[0],jK)jx()jD()a3="Location saved as "..fK.."("..dv.name..")"else a3="Databank must be installed to save permanent locations"end end;local c_={}function c_.UpdateAtlasLocationsList()jx()end;function c_.UpdateAutopilotTarget()jD()end;function c_.adjustAutopilotTargetIndex(fZ)jG(fZ)end;function c_.findAtlasIndex(jC)jB(jC)end;function c_.UpdatePosition(jL)local gt=jB(SavedLocations)if gt~=-1 then if jL~=nil then SavedLocations[gt].name=jL else local jM=SavedLocations[gt]jH()jI(jM.name,bF,false,true)end;a3=SavedLocations[gt].name.." position updated ("..SavedLocations[gt].planetname..")"else a3="Name Not Found"end end;function c_.AddNewLocation(fK,position,gH,fl)jI(fK,position,gH,fl)end;function c_.ClearCurrentPosition()jH()end;for cY,cZ in pairs(SavedLocations)do table.insert(aY[0],cZ)end;jx()c_.UpdateAutopilotTarget()return c_ end;local function jN()local jO={}local function jP(eP)local jQ=AutopilotEndSpeed;if not Autopilot then jQ=0 end;if not as then return b3.computeDistanceAndTime(eP,jQ,ax,0,0,LastMaxBrake-AutopilotPlanetGravity*ax)else if LastMaxBrakeInAtmo and LastMaxBrakeInAtmo>0 then return b3.computeDistanceAndTime(eP,jQ,ax,0,0,LastMaxBrakeInAtmo-AutopilotPlanetGravity*ax)else return 0,0 end end end;local function jR(eP)local jQ=AutopilotEndSpeed;if not Autopilot then jQ=0 end;return b3.computeDistanceAndTime(eP,jQ,ax,a:maxForceForward(),warmup,LastMaxBrake-AutopilotPlanetGravity*ax)end;local jS=false;function jO.GetAutopilotBrakeDistanceAndTime(eP)return jP(eP)end;function jO.GetAutopilotTBBrakeDistanceAndTime(eP)return jR(eP)end;local function jT(jU,jV,jW)jV=jV:project_on_plane(jU)jW=jW:project_on_plane(jU)return m(jV:cross(jW):dot(jU),jV:dot(jW))end;local function jX()local function jY()local jZ=-1;local j_=-1;if vBooster then jZ=vBooster.distance()end;if hover then j_=hover.distance()end;if jZ~=-1 and j_~=-1 then if jZ<j_ then return jZ else return j_ end elseif jZ~=-1 then return jZ elseif j_~=-1 then return j_ else return-1 end end;local k0=jY()local k1=-1;if telemeter_1 then k1=telemeter_1.getDistance()end;if k0~=-1 and k1~=-1 then if k0<k1 then return k0 else return k1 end elseif k0~=-1 then return k0 else return k1 end end;local function k2(planet,ea,k3)local function k4(k5,dt)local eg=vec3(dt)if k5.bodyId==0 then return setmetatable({latitude=eg.x,longitude=eg.y,altitude=eg.z,bodyId=0,systemId=k5.planetarySystemId},MapPosition)end;local eh=eg-k5.center;local ak=eh:len()local dA=ak-k5.radius;local dy=0;local dz=0;if not cq(ak,0)then local ei=m(eh.y,eh.x)dz=ei>=0 and ei or 2*math.pi+ei;dy=math.pi/2-math.acos(eh.z/ak)end;return setmetatable({latitude=math.deg(dy),longitude=math.deg(dz),altitude=dA,bodyId=k5.bodyId,systemId=k5.planetarySystemId},MapPosition)end;local k6=k4(planet,ea)k6="::pos{"..k6.systemId..","..k6.bodyId..","..k6.latitude..","..k6.longitude..","..k6.altitude.."}"if k3 then return k6 else system.setWaypoint(k6)return true end end;local k7=false;function jO.showWayPoint(planet,ea,k3)return k2(planet,ea,k3)end;function jO.APTick()local function k8()if bY and not BrakeLanding then local c3=bY[1]local jl,jm=bY[2],bY[3]local k9=math.min(jl,jm or jl)local ka=k9/bC;if(AltitudeHold or VectorToTarget or LockPitch or Autopilot)and not AutoTakeoff and(a9*1.5>k9 or ka<1)then BrakeIsOn=true;cm(0)if AltitudeHold then cy()end;if LockPitch then ToggleLockPitch()end;a3="Autopilot Cancelled due to possible collision"if VectorToTarget or Autopilot then cz()end;StrongBrakes=true;BrakeLanding=true;bb=true end;if ka<11 then bX=c3.name.." COLLISION "..cP(ka).." / "..ct(k9,2)else bX=c3.name.." collision "..cP(ka)end;if ka<6 then c5("alarm","AL",2)end else bX=false end end;as=j()>0;at=j()au=core.getAltitude()aq=jX()E=p()be=E;bW=unit.getClosestPlanetInfluence()>0;if CollisionSystem then k8()end;if antigrav then bI=antigrav.getState()==1 end;local kb=1;local kc=1;local kd=E-be;local ke=-math.deg(jT(by,bB,bz))local kf=math.deg(jT(bA,bB,bz))local fZ=bD*-1;bd=as and ke<-YawStallAngle or ke>YawStallAngle or kf<-PitchStallAngle or kf>PitchStallAngle;local kg=system.getMouseDeltaX()local kh=system.getMouseDeltaY()if InvertMouse and not a2 then kh=-kh end;W=0;a0=0;V=0;sys=b2[0]planet=sys:closestBody(core.getConstructWorldPos())kepPlanet=b5(planet)orbit=kepPlanet:orbitalParameters(core.getConstructWorldPos(),bB)if au==0 then au=(bF-planet.center):len()-planet.radius end;local ik=planet:getGravity(core.getConstructWorldPos()):len()*ax;bf=0;b4=core.getMaxKinematicsParametersAlongAxis("ground",core.getConstructOrientationUp())[1]if w()==0 then if l()==1 and a2 then if not b9 then ah=ah+kg;ai=ai+kh end else ah=0;ai=0 end else ah=ah+kg;ai=ai+kh;ak=z(ah*ah+ai*ai)if not a2 and l()==0 then if userControlScheme=="virtual joystick"then if ah>0 and ah>DeadZone then W=W-(ah-DeadZone)*MouseXSensitivity elseif ah<0 and ah<DeadZone*-1 then W=W-(ah+DeadZone)*MouseXSensitivity else W=0 end;if ai>0 and ai>DeadZone then V=V-(ai-DeadZone)*MouseYSensitivity elseif ai<0 and ai<DeadZone*-1 then V=V-(ai+DeadZone)*MouseYSensitivity else V=0 end else ah=0;ai=0;if userControlScheme=="mouse"then V=(-utils.smoothstep(kh,-100,100)+0.5)*2*kb;W=(-utils.smoothstep(kg,-100,100)+0.5)*2*kc end end end end;local ki=bC>8334;if bC>SpaceSpeedLimit/3.6 and not as and not Autopilot and not ki then a3="Space Speed Engine Shutoff reached"cm(0)end;if not ki and LastIsWarping then if not BrakeIsOn then cB()end;if Autopilot then cz()end end;LastIsWarping=ki;if as and at>0.09 then if bC>bi/3.6 and not AtmoSpeedAssist and not jS then BrakeIsOn=true;jS=true elseif not AtmoSpeedAssist and jS then if bC<bi/3.6 then BrakeIsOn=false;jS=false end end end;if BrakeIsOn then Z=1 else Z=0 end;if ProgradeIsOn then if an then BrakeIsOn=false;local kj=false;if CustomTarget~=nil then kj=cC(CustomTarget.position-bF,0.1)else kj=cC(vec3(bB),0.01)end;bb=true;if kj then cp(d(bi))if(c(bM)<2 or c(bL)>85)and bC>=bi/3.6-1 then BrakeIsOn=false;ProgradeIsOn=false;S=true;an=false;ap=true;Autopilot=false;cN()end elseif as and AtmoSpeedAssist then cm(1)end elseif bC>R then cC(vec3(bB),0.01)end end;if RetrogradeIsOn then if as then RetrogradeIsOn=false elseif bC>R then cC(-vec3(bB))end end;if not ProgradeIsOn and an and not IntoOrbit then if at==0 then S=true;cN()an=false;ap=true else an=false;cz()end end;if ap and CustomTarget~=nil and(au<HoldAltitude+250 and au>HoldAltitude-250)and bC*3.6>bi-250 and c(bE)<25 and at>=0.1 and(CustomTarget.position-bF):len()>2000+au then cz()ap=false end;if VertTakeOff then bb=true;local kk=HoldAltitude;if bE<-30 then a3="Unable to achieve lift. Safety Landing."ag=0;bb=autoRollPreference;VertTakeOff=false;BrakeLanding=true elseif not ExternalAGG and bI or HoldAltitude<planet.spaceEngineMinAltitude then if bI then kk=antigrav.getBaseAltitude()end;if au<kk-100 then bj=0;ag=15;BrakeIsOn=false elseif bE>0 then BrakeIsOn=true;ag=0 elseif bE<-30 then BrakeIsOn=true;ag=15 elseif au>=kk then if bI then if Autopilot or VectorToTarget then cw()else BrakeIsOn=true;VertTakeOff=false end;a3="Takeoff complete. Singularity engaged"c5("aggLk","AG")else BrakeIsOn=false;a3="VTO complete. Engaging Horizontal Flight"c5("vtoc","VT")cw()end;ag=0 end else if at>0.08 then bj=0;BrakeIsOn=false;ag=20 elseif at<0.08 and at>0 then BrakeIsOn=false;if bv then bj=0;ag=20 else ag=0;bj=36;cp(3500)end else bb=autoRollPreference;IntoOrbit=true;bt=false;CancelIntoOrbit=false;bn=false;bl=nil;bm=nil;if bs==nil then bs=planet end;br=kk;bq=true;VertTakeOff=false end end;if bj~=nil then if vTpitchPID==nil then vTpitchPID=pid.new(2*0.01,0,2*0.1)end;local kl=q(bj-bL,-PitchStallAngle*0.80,PitchStallAngle*0.80)vTpitchPID:inject(kl)local km=q(vTpitchPID:get(),-1,1)V=km end end;if IntoOrbit then local cK;local kn=false;local ko=ct(br)if bs==nil then bs=planet;if VectorToTarget then bs=ad end end;if not bq then br=d(bs.radius+bs.surfaceMaxAltitude+LowOrbitHeight)if bs.hasAtmosphere then br=d(bs.radius+bs.noAtmosphericDensityAltitude+LowOrbitHeight)end;bq=true end;if bp.VectorToTarget then cK=CustomTarget.position-bF end;local kp,kq=b5(bs):escapeAndOrbitalSpeed((bF-bs.center):len()-bs.radius)local kr=bM;if not bn then local ks=false;local kt=false;cm(0)bm=0;bk="Aligning to orbital path - OrbitHeight: "..ko;if bp.VectorToTarget then cC(cK:normalize():project_on_plane(bD))kn=bz:dot(cK:project_on_plane(by):normalize())>0.95 else cC(bB)kn=ke<0.5;if bC<150 then kn=true end end;V=0;bl=0;if bL<=bl+1 and bL>=bl-1 then ks=true else ks=false end;if kr<=bm+1 and kr>=bm-1 then kt=true else kt=false end;if ks and kt and kn then bl=nil;bm=nil;bn=true end else if bp.VectorToTarget then cC(cK:normalize():project_on_plane(bD))elseif bC>150 then cC(bB)end;V=0;if bp.VectorToTarget then local a9,_=b3.computeDistanceAndTime(bC,bi/3.6,ax,0,0,LastMaxBrake)if bt and cK:len()>15000+a9+au then bk="Orbiting to Target"if au-100<=bs.noAtmosphericDensityAltitude or travelTime>orbit.timeToPeriapsis and orbit.periapsis.altitude<bs.noAtmosphericDensityAltitude then bt=false end elseif bt or cK:len()<15000+a9+au then a3="Orbit complete, proceeding with reentry"c5("orCom","OB")AutopilotTargetCoords=CustomTarget.position;S=true;ap=true;bp.VectorToTarget,bp.AutopilotAlign=false,false;cx()cN()end end;if orbit.periapsis~=nil and orbit.apoapsis~=nil and orbit.eccentricity<1 and au>br*0.9 and au<br*1.4 then if orbit.apoapsis~=nil then if orbit.periapsis.altitude>=br*0.99 and orbit.apoapsis.altitude>=br*0.99 and orbit.periapsis.altitude<orbit.apoapsis.altitude and orbit.periapsis.altitude*1.05>=orbit.apoapsis.altitude or bt then if bt then BrakeIsOn=false;cm(0)bl=0;if not bp.VectorToTarget then a3="Orbit complete"c5("orCom","OB")cx()end else bx=bx+1;if bx>=2 then bt=true end end else bk="Adjusting Orbit - OrbitHeight: "..ko;bo=true;cp(kq*3.6+1)if VSpdPID==nil then VSpdPID=pid.new(0.5,0,10*0.1)end;local ku=bE;local kv=au-br;local kw=c(kv)if bE<10 and c(bL)<10 and kw<100 then ku=bE*2 end;if ku<10 and c(bL)<10 and kw<100 then ku=ku*2 end;if ku<5 and c(bL)<5 and kw<100 then ku=ku*4 end;VSpdPID:inject(ku)bl=q(-VSpdPID:get(),-90,90)if OrbitAltPID==nil then OrbitAltPID=pid.new(0.15,0,5*0.1)end;OrbitAltPID:inject(kv)bl=q(bl-q(OrbitAltPID:get(),-15,15),-90,90)end end else local kx=2.75;local ky=c(o(kp*kx))local kz=ky%50;if kz>0 then ky=ky-kz+50 end;BrakeIsOn=false;if au<br*0.8 then bk="Escaping planet gravity - OrbitHeight: "..ko;bl=utils.map(bE,200,0,-15,80)elseif au>=br*0.8 and au<br*1.15 then bk="Approaching orbital corridor - OrbitHeight: "..ko;ky=ky*0.75;bl=utils.map(bE,100,-100,-15,65)elseif au>=br*1.15 and au<br*1.5 then bk="Approaching orbital corridor - OrbitHeight: "..ko;ky=ky*0.75;if bE<0 or bo then bl=utils.map(au,br*1.5,br*1.01,-30,0)else bl=utils.map(au,br*0.99,br*1.5,0,30)end elseif au>br*1.5 then bk="Reentering orbital corridor - OrbitHeight: "..ko;bl=-65;local kA=utils.map(bE,-150,-400,1,0.55)ky=ky*kA end;cp(d(ky))end end;if bl~=nil then if OrbitPitchPID==nil then OrbitPitchPID=pid.new(1*0.01,0,5*0.1)end;local kB=bl-bL;OrbitPitchPID:inject(kB)local kC=q(OrbitPitchPID:get(),-0.5,0.5)V=kC end end;if Autopilot and at==0 and not an then local function kD(i2,orbit)system.print(i2)BrakeIsOn=false;AutopilotBraking=false;Autopilot=false;TargetSet=false;AutopilotStatus="Aligning"cm(0)Q=false;a3=i2;c5("apCom","AP")if orbit or an then if orbit and AutopilotTargetOrbit~=nil and not an then if not au or au==0 then return end;br=au;bq=true end;cx()end end;local kE,kF=AutopilotTargetCoords,false;if CustomTarget~=nil and CustomTarget.planetname~="Space"then AutopilotRealigned=true;if not TargetSet then local kG=(CustomTarget.position-ad.center):normalize()local kH=kG:project_on_plane((ad.center-bF):normalize()):normalize()local kI=ad.center+kH*(ad.radius+AutopilotTargetOrbit)local kJ=CustomTarget.position+(CustomTarget.position-ad.center):normalize()*(AutopilotTargetOrbit-ad:getAltitude(CustomTarget.position))if(bF-kI):len()<(bF-kJ):len()then kE=kI else kE=kJ;AutopilotEndSpeed=0 end;AutopilotTargetCoords=kE;b8.showWayPoint(ad,AutopilotTargetCoords)kF=true;TargetSet=true end;AutopilotPlanetGravity=0 elseif CustomTarget~=nil and CustomTarget.planetname=="Space"then AutopilotPlanetGravity=0;kF=true;TargetSet=true;AutopilotRealigned=true;kE=CustomTarget.position+(bF-CustomTarget.position)*AutopilotTargetOrbit elseif CustomTarget==nil then AutopilotPlanetGravity=0;if not TargetSet then local kG=(bF+bB*100000-ad.center):normalize()local kH=kG:project_on_plane((ad.center-bF):normalize()):normalize()if kH:len()<1 then kG=(bF+bz*100000-ad.center):normalize()kH=kG:project_on_plane((ad.center-bF):normalize()):normalize()end;kE=ad.center+kH*(ad.radius+AutopilotTargetOrbit)AutopilotTargetCoords=kE;TargetSet=true;kF=true;AutopilotRealigned=true;b8.showWayPoint(ad,AutopilotTargetCoords)end end;AutopilotDistance=(vec3(kE)-bF):len()local c0,c1,c2=b2:getPlanetarySystem(0):castIntersections(bF,bB:normalize(),function(c3)if c3.noAtmosphericDensityAltitude>0 then return c3.radius+c3.noAtmosphericDensityAltitude else return c3.radius+c3.surfaceMaxAltitude*1.5 end end)local c4=c1;if c2~=nil and c1~=nil then c4=math.min(c2,c1)end;if c4~=nil and c4<AutopilotDistance and c0.name==ad.name then AutopilotDistance=c4 end;local kj=true;local kK=(ad.center-(bF+vec3(bB):normalize()*AutopilotDistance)):len()-ad.radius;local hj=ct(kK)t(widgetTrajectoryAltitudeText,'{"label": "Projected Altitude", "value": "'..hj..'"}')local a9,aa;if not TurnBurn then a9,aa=jP(bC)else a9,aa=jR(bC)end;if bC>300 and AutopilotAccelerating then local cK=vec3(kE)-bF;local kL=q(math.deg(jT(by,bB:normalize(),cK:normalize()))*bC/500,-90,90)local kM=q(math.deg(jT(bA,bB:normalize(),cK:normalize()))*bC/500,-90,90)if c(kL)<20 and c(kM)<20 then kL=kL*2;kM=kM*2 end;if c(kL)<2 and c(kM)<2 then kL=kL*2;kM=kM*2 end;local ke=-math.deg(jT(by,bz,bB:normalize()))local kf=-math.deg(jT(bA,bz,bB:normalize()))if apPitchPID==nil then apPitchPID=pid.new(2*0.01,0,2*0.1)end;apPitchPID:inject(kM-kf)local kN=q(apPitchPID:get(),-1,1)V=V+kN;if apYawPID==nil then apYawPID=pid.new(2*0.01,0,2*0.1)end;apYawPID:inject(kL-ke)local kO=q(apYawPID:get(),-1,1)W=W+kO;kF=true;if c(kL)>2 or c(kM)>2 then if AutopilotStatus~="Adjusting Trajectory"then AutopilotStatus="Adjusting Trajectory"c5("apAdj","AP")end else if AutopilotStatus~="Accelerating"then AutopilotStatus="Accelerating"c5("apAcc","AP")end end end;if kK<AutopilotTargetOrbit*1.5 then if CustomTarget~=nil and CustomTarget.planetname=="Space"then AutopilotEndSpeed=0 elseif CustomTarget==nil then _,AutopilotEndSpeed=b5(ad):escapeAndOrbitalSpeed(kK)end end;if Autopilot and not AutopilotAccelerating and not AutopilotCruising and not AutopilotBraking then local c0,c4=bZ((AutopilotTargetCoords-bF):normalize())if ad.name~=planet.name then if c0~=nil then a3="Collision with "..c0.name.." in "..ct(c4).."\nClear LOS to continue."aj=5;k7=true else k7=false;a3=""end end end;if not k7 then if not AutopilotCruising and not AutopilotBraking and not kF then kj=cC((kE-bF):normalize())elseif TurnBurn and(AutopilotBraking or AutopilotCruising)then kj=cC(-vec3(bB):normalize())end end;if AutopilotAccelerating then if not Q then BrakeIsOn=false;cm(AutopilotInterplanetaryThrottle)L=B(AutopilotInterplanetaryThrottle,2)Q=true end;local kP=unit.getThrottle()if AtmoSpeedAssist then kP=L end;if vec3(core.getVelocity()):len()>=MaxGameVelocity or kP==0 and Q then AutopilotAccelerating=false;if AutopilotStatus~="Cruising"then c5("apCru","AP")AutopilotStatus="Cruising"end;AutopilotCruising=true;cm(0)end;if AutopilotDistance<=a9 then AutopilotAccelerating=false;if AutopilotStatus~="Braking"then c5("apBrk","AP")AutopilotStatus="Braking"end;AutopilotBraking=true;cm(0)Q=false end elseif AutopilotBraking then if AutopilotStatus~="Orbiting to Target"then BrakeIsOn=true;Z=1 end;if TurnBurn then cm(1,true)end;local _,kq=b5(ad):escapeAndOrbitalSpeed((bF-planet.center):len()-planet.radius)local cK;if CustomTarget~=nil then cK=CustomTarget.position-bF end;if CustomTarget~=nil and CustomTarget.planetname=="Space"and bC<50 then kD("Autopilot complete, arrived at space location")BrakeIsOn=true;Z=1 elseif CustomTarget~=nil and CustomTarget.planetname~="Space"and bC<=kq and(orbit.apoapsis==nil or orbit.periapsis==nil or orbit.apoapsis.altitude<=0 or orbit.periapsis.altitude<=0)then kD("Autopilot complete, commencing reentry")AutopilotTargetCoords=CustomTarget.position;an=true;b8.showWayPoint(ad,AutopilotTargetCoords)elseif orbit.periapsis~=nil and orbit.periapsis.altitude>0 and orbit.eccentricity<1 or AutopilotStatus=="Circularizing"then if AutopilotStatus~="Circularizing"then c5("apCir","AP")AutopilotStatus="Circularizing"end;if bC<=kq then if CustomTarget~=nil then if bB:normalize():dot(cK:normalize())>0.4 then if AutopilotStatus~="Orbiting to Target"then c5("apOrb","OB")AutopilotStatus="Orbiting to Target"end;if not WaypointSet then BrakeIsOn=false;b8.showWayPoint(ad,CustomTarget.position)WaypointSet=true end else kD("Autopilot complete, proceeding with reentry")AutopilotTargetCoords=CustomTarget.position;an=true;b8.showWayPoint(ad,CustomTarget.position)WaypointSet=false end else kD("Autopilot completed, setting orbit",true)Z=0 end end elseif AutopilotStatus=="Circularizing"then kD("Autopilot complete, fixing Orbit",true)end elseif AutopilotCruising then if AutopilotDistance<=a9 then AutopilotAccelerating=false;if AutopilotStatus~="Braking"then c5("apBrk","AP")AutopilotStatus="Braking"end;AutopilotBraking=true end;local kP=unit.getThrottle()if AtmoSpeedAssist then kP=L end;if kP>0 then AutopilotAccelerating=true;if AutopilotStatus~="Accelerating"then AutopilotStatus="Accelerating"c5("apAcc","AP")end;AutopilotCruising=false end else if kj then if not AutopilotRealigned and CustomTarget==nil or not AutopilotRealigned and CustomTarget~=nil and CustomTarget.planetname~="Space"then if not an then AutopilotTargetCoords=vec3(ad.center)+(AutopilotTargetOrbit+ad.radius)*bA;AutopilotShipUp=by;AutopilotShipRight=bA end;AutopilotRealigned=true elseif kj and not k7 then AutopilotAccelerating=true;if AutopilotStatus~="Accelerating"then AutopilotStatus="Accelerating"c5("apAcc","AP")end;if not Q then cm(AutopilotInterplanetaryThrottle,true)L=B(AutopilotInterplanetaryThrottle,2)Q=true;BrakeIsOn=false end end end end elseif Autopilot and(CustomTarget~=nil and CustomTarget.planetname~="Space"and at>0)then a3="Autopilot complete, proceeding with reentry"c5("apCom","AP")AutopilotTargetCoords=CustomTarget.position;BrakeIsOn=false;AutopilotBraking=false;Autopilot=false;TargetSet=false;AutopilotStatus="Aligning"Z=0;cm(0)Q=false;ProgradeIsOn=true;an=true;b8.showWayPoint(ad,CustomTarget.position)end;if a1 then bb=true;local kM=0;local eT=bF+vec3(unit.getMasterPlayerRelativePosition())local kQ=eT-bF;local kR=vec3(kQ):project_on(bz):len()local kS=vec3(kQ):project_on(bA):len()local ak=z(kR*kR+kS*kS)cC(kQ:normalize())local kT=40;local kU=ak<kT;local kV=100;local kW=q((ak-kT)/2,10,kV)V=0;local kj=c(W)<0.1;if kj and bC<kW and not kU then BrakeIsOn=false;kM=-20 else BrakeIsOn=true;kM=0 end;local kX=0;if c(kM-bL)>kX then if pitchPID==nil then pitchPID=pid.new(2*0.01,0,2*0.1)end;pitchPID:inject(kM-bL)local kN=pitchPID:get()V=kN end end;if AltitudeHold or BrakeLanding or Reentry or VectorToTarget or LockPitch~=nil then local kY=LastMaxBrakeInAtmo;if kY then kY=kY*q(bC/100,0.1,1)*at else kY=LastMaxBrake end;if at<0.01 then kY=LastMaxBrake end;local kZ=vec3(core.getWorldAirFrictionAcceleration())local k_=z(kZ:len()-kZ:project_on(fZ):len())*ax;if bC>100 then a9,aa=b3.computeDistanceAndTime(bC,100,ax,0,0,kY+k_)local l0,l1=b3.computeDistanceAndTime(100,0,ax,0,0,kY/2)a9=a9+l0 else a9,aa=b3.computeDistanceAndTime(bC,0,ax,0,0,kY/2)end;local l2=HoldAltitude-au;local l3=500+bC;local l4=1;if AutoTakeoff then l4=q(bC/100,0.1,1)end;local kM=(utils.smoothstep(l2,-l3,l3)-0.5)*2*MaxPitch*l4;if not Reentry and not an and not VectorToTarget and bz:dot(bB:normalize())<0.99 then kM=(utils.smoothstep(l2,-l3*q(20-19*at*10,1,20),l3*q(20-19*at*10,1,20))-0.5)*2*MaxPitch*q(2-at*10,1,2)*l4 end;if not AltitudeHold then kM=0 end;if LockPitch~=nil then if bW and not IntoOrbit then kM=LockPitch else LockPitch=nil end end;bb=true;local l5=V;if Reentry then local l6=d(bi)local l7,l8=b3.computeDistanceAndTime(bC,l6/3.6,ax,0,0,LastMaxBrake-planet.gravity*9.8*ax)local l9=au-(planet.noAtmosphericDensityAltitude+5000)if not bK and au>planet.noAtmosphericDensityAltitude+5000 and bC<=l6/3.6 and bC>l6/3.6-10 and c(bB:normalize():dot(bz))>0.9 then cm(0)elseif bK and bC>l6/3.6 and(l7>-1 and l9<=l7 or au<=planet.noAtmosphericDensityAltitude+5000)then BrakeIsOn=true else BrakeIsOn=false end;cp(l6,true)if not S then kM=-80;if at>0.02 then a3="PARACHUTE DEPLOYED"Reentry=false;BrakeLanding=true;kM=0;bb=autoRollPreference end elseif planet.noAtmosphericDensityAltitude>0 and au>planet.noAtmosphericDensityAltitude+5000 then bb=true elseif au<=planet.noAtmosphericDensityAltitude+5000 then cp(l6)if not bK and r:getTargetSpeed(axisCommandId.longitudinal)==bi then S=false;Reentry=false;bb=true end end end;if bC>R and not ao and not VectorToTarget and not BrakeLanding and ForceAlignment then cC(vec3(bB))end;if bU or(VectorToTarget or ao)and AutopilotTargetIndex>0 and at>0.01 then local cK;if bU then if type(bU)=="table"then cK=bU elseif bU<3 and bU>0 then cK=-bD:cross(bB)*5000 elseif bU>=3 then cK=bD:cross(bB)*5000 elseif bU<0 then cK=bB*25000 end elseif CustomTarget~=nil then cK=CustomTarget.position-bF else cK=ad.center-bF end;local kL=math.deg(jT(bD:normalize(),bB,cK))*2;local la=math.rad(c(bM))if bC>minRollVelocity and at>0.01 then local lb=q(90-kM*2,-90,90)bf=q(kL*2,-lb,lb)local lc=kL;kL=q(q(kL,-YawStallAngle*0.80,YawStallAngle*0.80)*math.cos(la)+4*(bL-kM)*math.sin(math.rad(bM)),-YawStallAngle*0.80,YawStallAngle*0.80)kM=q(q(kM*math.cos(la),-PitchStallAngle*0.80,PitchStallAngle*0.80)+c(q(c(lc)*math.sin(la),-PitchStallAngle*0.80,PitchStallAngle*0.80)),-PitchStallAngle*0.80,PitchStallAngle*0.80)else bf=0;kL=q(kL,-YawStallAngle*0.80,YawStallAngle*0.80)end;local ld=ke-kL;if bU and c(ld)<=0.0001 and(type(bU)=="table"or type(bU)~="table"and bU<0 and c(bM)<1)then if bU==-2 then cy()end;bU=nil;c5("180Off","BR")return end;if not bd and bC>minRollVelocity and at>0.01 then if yawPID==nil then yawPID=pid.new(2*0.01,0,2*0.1)end;yawPID:inject(ld)local kO=q(yawPID:get(),-1,1)W=W+kO elseif as and aq>-1 or bC<minRollVelocity then cC(cK)elseif bd and at>0.01 then if(ke<-YawStallAngle or ke>YawStallAngle)and at>0.01 then cC(bB)end;if(kf<-PitchStallAngle or kf>PitchStallAngle)and at>0.01 then kM=q(bL-kf,bL-PitchStallAngle*0.80,bL+PitchStallAngle*0.80)end end;if CustomTarget~=nil and not ao then local kk=planet:getAltitude(CustomTarget.position)local l9=z(cK:len()^2-(au-kk)^2)local le=bB:len()-c(bE)StrongBrakes=true;if not ao and not Reentry and l9<=a9+bC*kd/2 and(bB:project_on_plane(bD):normalize():dot(cK:project_on_plane(bD):normalize())>0.99 or VectorStatus=="Finalizing Approach")then VectorStatus="Finalizing Approach"cm(0)if AltitudeHold then cy()VectorToTarget=true end;BrakeIsOn=true elseif not AutoTakeoff then BrakeIsOn=false end;if VectorStatus=="Finalizing Approach"and(le<0.1 or l9<0.1 or LastDistanceToTarget~=nil and LastDistanceToTarget<l9)then if not bI then c5("bklOn","BL")BrakeLanding=true end;VectorToTarget=false;VectorStatus="Proceeding to Waypoint"bX=false end;LastDistanceToTarget=l9 end elseif VectorToTarget and at==0 and HoldAltitude>planet.noAtmosphericDensityAltitude and not(ao or Reentry)then if CustomTarget~=nil and ad.name==planet.name then local cK=CustomTarget.position-bF;local kk=planet:getAltitude(CustomTarget.position)local l9=z(cK:len()^2-(au-kk)^2)local kY=LastMaxBrakeInAtmo;if kY then a9,aa=b3.computeDistanceAndTime(bC,0,ax,0,0,kY/2)StrongBrakes=true;if l9<=a9+bC*kd/2 and bB:project_on_plane(bD):normalize():dot(cK:project_on_plane(bD):normalize())>0.99 then if planet.hasAtmosphere then BrakeIsOn=false;ProgradeIsOn=false;S=true;an=false;ap=true;Autopilot=false;cN()end end;LastDistanceToTarget=l9 end end end;if at==0 and(AltitudeHold and HoldAltitude>planet.noAtmosphericDensityAltitude)and not(ao or IntoOrbit or Reentry)then if not bt and not IntoOrbit then br=HoldAltitude;bq=true;if VectorToTarget then bp.VectorToTarget=true end;cx()VectorToTarget=false;bn=true end end;if bd and at>0.01 and aq==-1 and bC>minRollVelocity and VectorStatus~="Finalizing Approach"then cC(bB)kM=q(bL-kf,bL-PitchStallAngle*0.80,bL+PitchStallAngle*0.80)end;V=l5;local k1=-1;if BrakeLanding then kM=0;local lf=false;local lg=30;if b4~=nil and b4>0 then local lh=q(at,0.4,2)local kY=LastMaxBrakeInAtmo*q(bC/100,0.1,1)*lh;local li=b4*lh+kY-ik;local lj=kY/2-ik;local lk=bC-z(c(lj/2)*20/(0.5*ax))*utils.sign(lj)if lk<0 then lk=0 end;local ll;if bC>100 then local lm,_=b3.computeDistanceAndTime(bC,100,ax,0,0,kY)local ln,_=b3.computeDistanceAndTime(100,0,ax,0,0,z(kY))ll=lm+ln else ll=b3.computeDistanceAndTime(bC,0,ax,0,0,z(kY))end;if ll<20 then BrakeIsOn=false else local lo=0;if lk>100 then local lp,_=b3.computeDistanceAndTime(lk,100,ax,0,0,li)local lq,_=b3.computeDistanceAndTime(100,0,ax,0,0,b4*lh+z(kY)-ik)lo=lp+lq else lo,_=b3.computeDistanceAndTime(lk,0,ax,0,0,b4*lh+z(kY)-ik)end;lo=(lo+15+bC*kd)*1.1;local lr=CustomTarget~=nil and planet:getAltitude(CustomTarget.position)>0 and CustomTarget.safe;if lr then local kk=planet:getAltitude(CustomTarget.position)local ls=au-kk-100;local cK=CustomTarget.position-bF;local lt=z(cK:len()^2-(au-kk)^2)if lt>100 then lr=false elseif ls<=lo or lo==-1 then BrakeIsOn=true;lf=true else BrakeIsOn=false;lf=true end end;if not lr and CalculateBrakeLandingSpeed then if lo>=lg then BrakeIsOn=true else BrakeIsOn=false end;lf=true end end end;if not bK then cm(0)end;r:setTargetGroundAltitude(500)r:activateGroundEngineAltitudeStabilization(500)stablized=true;k1=aq;if k1>-1 then bb=autoRollPreference;if bC<1 or bB:normalize():dot(bD)<0 then BrakeLanding=false;AltitudeHold=false;GearExtended=true;if T then a.control.extendLandingGears()c5("grOut","LG",1)end;r:setTargetGroundAltitude(LandingGearGroundHeight)ag=0;BrakeIsOn=true else BrakeIsOn=true end elseif StrongBrakes and bB:normalize():dot(-fZ)<0.999 then BrakeIsOn=true elseif bE<-brakeLandingRate and not lf then BrakeIsOn=true elseif not lf then BrakeIsOn=false end end;if AutoTakeoff or ao then local c0,c2,c1;if AutopilotTargetCoords~=nil then c0,c2,c1=b2:getPlanetarySystem(0):castIntersections(bF,(AutopilotTargetCoords-bF):normalize(),function(c3)return c3.radius+c3.noAtmosphericDensityAltitude end)end;if bI then if au>=HoldAltitude-50 then AutoTakeoff=false;if not Autopilot and not VectorToTarget then BrakeIsOn=true;cm(0)end else HoldAltitude=antigrav.getBaseAltitude()end elseif c(kM)<15 and au/HoldAltitude>0.75 then AutoTakeoff=false;if not ao then if bK and not AtmoSpeedAssist then a.control.cancelCurrentControlMasterMode()end elseif ao and bC<R then Autopilot=true;ao=false;AltitudeHold=false;AutoTakeoff=false;cm(0)elseif ao then cm(0)BrakeIsOn=true end elseif ao and at==0 and ad~=nil and(c0==nil or c0.name==ad.name)then Autopilot=true;ao=false;AltitudeHold=false;AutoTakeoff=false;if not bK then cm(0)end;AutopilotAccelerating=true end end;local lu=aq>-1;local lv=bL;if(VectorToTarget or ao or bU)and not lu and bC>minRollVelocity and at>0.01 then local la=math.rad(c(bM))lv=bL*c(math.cos(la))+kf*math.sin(la)end;local lw=q(kM-lv,-PitchStallAngle*0.80,PitchStallAngle*0.80)if at<0.01 and VectorToTarget then lw=q(kM-lv,-85,MaxPitch)elseif at<0.01 then lw=q(kM-lv,-MaxPitch,MaxPitch)end;if c(bM)<5 or VectorToTarget or bU or BrakeLanding or lu or AltitudeHold then if pitchPID==nil then pitchPID=pid.new(5*0.01,0,5*0.1)end;pitchPID:inject(lw)local kN=pitchPID:get()V=V+kN end end;if antigrav~=nil and(antigrav and not ExternalAGG and au<200000)then if AntigravTargetAltitude==nil or AntigravTargetAltitude<1000 then AntigravTargetAltitude=1000 end;if desiredBaseAltitude~=AntigravTargetAltitude then desiredBaseAltitude=AntigravTargetAltitude;antigrav.setBaseAltitude(desiredBaseAltitude)end end end;aq=jX()return jO end;function script.onStart()local lx={}local ly={}local lz=false;local function lA()local function lB(lC)local lD=dbHud_1.hasKey;for cY,cZ in pairs(lC)do if lD(cZ)then local cH=f(dbHud_1.getStringValue(cZ))if cH~=nil then _G[cZ]=cH;lz=true end end end end;if dbHud_1 then if not useTheseSettings then lB(cb())coroutine.yield()lB(b)else lB(b)a3="Updated user preferences used.  Will be saved when you exit seat.\nToggle off useTheseSettings to use saved values"aj=5;lz=false end;coroutine.yield()if lz then a3="Loaded Saved Variables"aI=ResolutionX;aJ=ResolutionY;BrakeToggleStatus=BrakeToggleDefault;userControlScheme=string.lower(userControlScheme)bb=autoRollPreference;bi=AtmoSpeedLimit;aA=[[rgb(]]..d(I+0.5)..","..d(K+0.5)..","..d(J+0.5)..[[)]]aB=[[rgb(]]..d(I*0.9+0.5)..","..d(K*0.9+0.5)..","..d(J*0.9+0.5)..[[)]]elseif not useTheseSettings then a3="No Saved Variables Found - Exit HUD to save settings"end else a3="No databank found. Attach one to control unit and rerun \nthe autoconfigure to save preferences and locations"end;if LastStartTime+180<E then LastMaxBrakeInAtmo=0 end;LastStartTime=E;userControlScheme=string.lower(userControlScheme)if string.find("keyboard virtual joystick mouse",userControlScheme)==nil then a3="Invalid User Control Scheme selected.\nChange userControlScheme in Lua Parameters to keyboard, mouse, or virtual joystick\nOr use shift and button in screen"aj=7 end;if antigrav and not ExternalAGG then if AntigravTargetAltitude==nil then AntigravTargetAltitude=au end;antigrav.setBaseAltitude(AntigravTargetAltitude)end;if safeMass==0 then safeMass=ax end;VectorStatus="Proceeding to Waypoint"end;local function lE()local function lF(lG,lH)if lG>lH then lH=lG end;local lI,lJ=0,0;if ContainerOptimization>0 then lI=ContainerOptimization*0.05 end;if FuelTankOptimization>0 then lJ=FuelTankOptimization*0.05 end;lH=lH*(1-(lI+lJ))return lH end;local lK=core.getElementNameById;local lL=fuelX~=0 and fuelY~=0;for cY in pairs(av)do local type=core.getElementTypeById(av[cY])if n(type,'^.*Atmospheric Engine$')then if n(tostring(core.getElementTagsById(av[cY])),'^.*vertical.*$')then bH=true end end;if n(type,'^.*Space Engine$')then bw=true;if n(tostring(core.getElementTagsById(av[cY])),'^.*vertical.*$')then local lM=core.getElementRotationById(av[cY])if lM[4]<0 then if o(-lM[4],0.1)==0.5 then bu=true end else if o(lM[4],0.1)==0.5 then bv=true end end end end;if type=="Landing Gear"then T=true end;if type=="Dynamic Core Unit"then local lN=h(av[cY])if lN>10000 then G=128;H=110 elseif lN>1000 then G=64;H=55 elseif lN>150 then G=32;H=27 end end;aN=aN+h(av[cY])if lL and(type=="Atmospheric Fuel Tank"or type=="Space Fuel Tank"or type=="Rocket Fuel Tank")then local lN=h(av[cY])local lO=k(av[cY])local lG=0;local fR=p()if type=="Atmospheric Fuel Tank"then local lH=400;local lP=35.03;if lN>10000 then lH=51200;lP=5480 elseif lN>1300 then lH=6400;lP=988.67 elseif lN>150 then lH=1600;lP=182.67 end;lG=lO-lP;if fuelTankHandlingAtmo>0 then lH=lH+lH*fuelTankHandlingAtmo*0.2 end;lH=lF(lG,lH)aK[#aK+1]={av[cY],lK(av[cY]),lH,lP,lG,fR}end;if type=="Rocket Fuel Tank"then local lH=320;local lP=173.42;if lN>65000 then lH=40000;lP=25740 elseif lN>6000 then lH=5120;lP=4720 elseif lN>700 then lH=640;lP=886.72 end;lG=lO-lP;if fuelTankHandlingRocket>0 then lH=lH+lH*fuelTankHandlingRocket*0.1 end;lH=lF(lG,lH)aM[#aM+1]={av[cY],lK(av[cY]),lH,lP,lG,fR}end;if type=="Space Fuel Tank"then local lH=2400;local lP=182.67;if lN>10000 then lH=76800;lP=5480 elseif lN>1300 then lH=9600;lP=988.67 end;lG=lO-lP;if fuelTankHandlingSpace>0 then lH=lH+lH*fuelTankHandlingSpace*0.2 end;lH=lF(lG,lH)aL[#aL+1]={av[cY],lK(av[cY]),lH,lP,lG,fR}end end end;if not bH then VertTakeOff,VertTakeOffEngine=false,false end end;local function lQ()if gyro~=nil then az=gyro.getState()==1 end;if not stablized then r:deactivateGroundEngineAltitudeStabilization()end;if userControlScheme~="keyboard"then v(1)else v(0)end;if door and(as or not as and au<10000)then for _,cZ in pairs(door)do cZ.toggle()end end;if switch then for _,cZ in pairs(switch)do cZ.toggle()end end;if forcefield and(as or not as==0 and au<10000)then for _,cZ in pairs(forcefield)do cZ.toggle()end end;if antigrav then bI=antigrav.getState()==1;if bI and not ExternalAGG then antigrav.show()end end;if l()==1 and RemoteFreeze then system.freeze(1)else system.freeze(0)end;if T then GearExtended=a.control.isAnyLandingGearExtended()==1;if GearExtended then a.control.extendLandingGears()else a.control.retractLandingGears()end end;if aq~=-1 or not as and vec3(core.getVelocity()):len()<50 then BrakeIsOn=true;GearExtended=true;if T then a.control.extendLandingGears()end else BrakeIsOn=false end;r:setTargetGroundAltitude(bc)if as and aq~=-1 then b4=core.getMaxKinematicsParametersAlongAxis("ground",core.getConstructOrientationUp())[1]end;WasInAtmo=as end;local function lR(lS,lT,lU,lV,x,y,lW,lX,lY,lZ)local l_={enableName=lS,disableName=lT,width=lU,height=lV,x=x,y=y,toggleVar=lW,toggleFunction=lX,drawCondition=lY,hovered=false}if lZ then table.insert(ly,l_)else table.insert(lx,l_)end;return l_ end;local function m0(m1)if not bN then showHandlingVariables=false;showHudVariables=false;showPhysicsVariables=false;showHud=true;return elseif m1=="handling"then showHandlingVariables=not showHandlingVariables;showHudVariables=false;showPhysicsVariables=false elseif m1=="hud"then showHudVariables=not showHudVariables;showHandlingVariables=false;showPhysicsVariables=false elseif m1=="physics"then showPhysicsVariables=not showPhysicsVariables;showHandlingVariables=false;showHudVariables=false end;if showPhysicsVariables or showHudVariables or showHandlingVariables then bO=cb(m1)showHud=false else bO={}showHud=true end end;local function m2()bN=not bN;if bN then aH=ly;a3="Hold SHIFT to see Settings"bP=showHud else aH=lx;a3="Hold SHIFT to see Control Buttons"m0()showHud=bP end end;local function m3(cZ)_G[cZ]=not _G[cZ]if _G[cZ]then a3=cZ.." set to true"else a3=cZ.." set to false"end;if cZ=="showHud"then bP=_G[cZ]elseif cZ=="BrakeToggleDefault"then BrakeToggleStatus=BrakeToggleDefault elseif cZ=="Cockpit"then system.showScreen(0)dbHud_1.setStringValue("content","")end end;local function m4()local m5=50;local m6=340;local x=500;local y=aJ/2-400;local m7=0;for cY,cZ in pairs(cb("boolean"))do if type(_G[cZ])=="boolean"then lR(cZ,cZ,m6,m5,x,y,function()return _G[cZ]end,function()m3(cZ)end,function()return true end,true)y=y+m5+20;if m7==9 then x=x+m6+20;y=aJ/2-400;m7=0 else m7=m7+1 end end end;lR("Control View","Control View",m6,m5,10,aJ/2-500,function()return true end,m2,function()return true end,true)lR("View Handling Settings",'Hide Handling Settings',m6,m5,10,aJ/2-(500-m5),function()return showHandlingVariables end,function()m0("handling")end,function()return true end,true)lR("View Hud Settings",'Hide Hud Settings',m6,m5,10,aJ/2-(500-m5*2),function()return showHudVariables end,function()m0("hud")end,function()return true end,true)lR("View Physics Settings",'Hide Physics Settings',m6,m5,10,aJ/2-(500-m5*3),function()return showPhysicsVariables end,function()m0("physics")end,function()return true end,true)end;local function m8()local function jI()local position=bF;local fK=planet.name..". "..#SavedLocations;if radar_1 then local dI,_=radar_1.getData():match('"constructId":"([0-9]*)","distance":([%d%.]*)')if dI~=nil and dI~=""then fK=fK.." "..radar_1.getConstructName(dI)end end;return b7.AddNewLocation(fK,position,false,true)end;local function m9()TurnBurn=not TurnBurn end;local function ma(mb)if mb==1 then ProgradeIsOn=not ProgradeIsOn;RetrogradeIsOn=false else RetrogradeIsOn=not RetrogradeIsOn;ProgradeIsOn=false end;Autopilot=false;AltitudeHold=false;a1=false;BrakeLanding=false;LockPitch=nil;Reentry=false;AutoTakeoff=false end;local function mc()ma(1)end;local function md()b7.UpdatePosition()end;local function jH()b7.ClearCurrentPosition()end;local function me()local fK=AutopilotTargetName;if fK==nil then local hj=ct((bF-CustomTarget.position):len())fK=CustomTarget.name.." "..hj end;if fK==nil then fK="None"end;return"Engage Autopilot: "..fK end;local function mf()local fK=AutopilotTargetName;if fK==nil then fK=CustomTarget.name end;if fK==nil then fK="None"end;return"Disable Autopilot: "..fK end;local function mg()if safeMass>0 then a3="Safe Mass set to "..B(ax,2).." kg"else a3="Intruder Detection reset\nSafe Mass set to "..B(ax,2).." kg"aj=5;bG=0 end;safeMass=ax end;local function mh()if l()==1 then a1=not a1;if a1 then Autopilot=false;RetrogradeIsOn=false;ProgradeIsOn=false;AltitudeHold=false;Reentry=false;BrakeLanding=false;AutoTakeoff=false;OldGearExtended=GearExtended;GearExtended=false;a.control.retractLandingGears()r:setTargetGroundAltitude(TargetHoverHeight)c5("folOn","F")else c5("folOff","F")BrakeIsOn=true;bb=autoRollPreference;GearExtended=OldGearExtended;if GearExtended then a.control.extendLandingGears()r:setTargetGroundAltitude(LandingGearGroundHeight)end end else a3="Follow Mode only works with Remote controller"a1=false end end;local m5=50;local m6=260;local mi=lR("Enable Brake Toggle","Disable Brake Toggle",m6,m5,aI/2-m6/2,aJ/2+350,function()return BrakeToggleStatus end,function()BrakeToggleStatus=not BrakeToggleStatus;if BrakeToggleStatus then a3="Brakes in Toggle Mode"else a3="Brakes in Default Mode"end end)lR("Align Prograde","Disable Prograde",m6,m5,aI/2-m6/2-50-mi.width,aJ/2-m5+380,function()return ProgradeIsOn end,mc)lR("Align Retrograde","Disable Retrograde",m6,m5,aI/2-m6/2+mi.width+50,aJ/2-m5+380,function()return RetrogradeIsOn end,ma,function()return at==0 end)local mj=lR(me,mf,600,60,aI/2-600/2,aJ/2-60/2-400,function()return Autopilot end,cz)lR("Save Position","Save Position",200,mj.height,mj.x+mj.width+30,mj.y,function()return false end,jI,function()return AutopilotTargetIndex==0 or CustomTarget==nil end)lR("Update Position","Update Position",200,mj.height,mj.x+mj.width+30,mj.y,function()return false end,md,function()return AutopilotTargetIndex>0 and CustomTarget~=nil end)lR("Clear Position","Clear Position",200,mj.height,mj.x-200-30,mj.y,function()return true end,jH,function()return AutopilotTargetIndex>0 and CustomTarget~=nil end)m5=60;m6=300;local x=10;local y=aJ/2-500;lR("Show Help","Hide Help",m6,m5,x,y,function()return showHelp end,function()showHelp=not showHelp end)y=y+m5+20;lR("View Settings","View Settings",m6,m5,x,y,function()return true end,m2)local y=aJ/2-300;lR("Enable Turn and Burn","Disable Turn and Burn",m6,m5,x,y,function()return TurnBurn end,m9)lR("Horizontal Takeoff Mode","Vertical Takeoff Mode",m6,m5,x+m6+20,y,function()return VertTakeOffEngine end,function()VertTakeOffEngine=not VertTakeOffEngine;if VertTakeOffEngine then a3="Vertical Takeoff Mode"else a3="Horizontal Takeoff Mode"end end,function()return bH end)y=y+m5+20;lR("Show Orbit Display","Hide Orbit Display",m6,m5,x,y,function()return DisplayOrbit end,function()DisplayOrbit=not DisplayOrbit;if DisplayOrbit then a3="Orbit Display Enabled"else a3="Orbit Display Disabled"end end)lR("Engage Orbiting","Cancel Orbiting",m6,m5,x+m6+20,y,function()return IntoOrbit end,cx,function()return at==0 and bW end)y=y+m5+20;lR("Glide Re-Entry","Cancel Glide Re-Entry",m6,m5,x,y,function()return Reentry end,function()an=true;mc()end,function()return planet.hasAtmosphere and not as end)lR("Parachute Re-Entry","Cancel Parachute Re-Entry",m6,m5,x+m6+20,y,function()return Reentry end,cN,function()return planet.hasAtmosphere and not as end)y=y+m5+20;lR("Engage Follow Mode","Disable Follow Mode",m6,m5,x,y,function()return a1 end,mh,function()return l()==1 end)lR("Enable Repair Arrows","Disable Repair Arrows",m6,m5,x+m6+20,y,function()return aO end,function()aO=not aO;if aO then a3="Repair Arrows Enabled"else a3="Repair Arrows Diabled"end end,function()return l()==1 end)y=y+m5+20;if not ExternalAGG then lR("Enable AGG","Disable AGG",m6,m5,x,y,function()return bI end,cO,function()return antigrav~=nil end)end;lR("Reset Intruder Alert","Set Safe Mass",m6,m5,x+m6+20,y,function()return safeMass>0 end,mg,function()return IntruderAlertSystem end)y=y+m5+20;lR(function()return e("Switch IPH Mode - Current: %s",iphCondition)end,function()return e("IPH Mode: %s",iphCondition)end,m6*2,m5,x,y,function()return false end,function()if iphCondition=="All"then iphCondition="Custom Only"elseif iphCondition=="Custom Only"then iphCondition="No Moons"else iphCondition="All"end;a3="IPH Mode: "..iphCondition end)y=y+m5+20;lR(function()return e("Toggle Control Scheme - Current: %s",userControlScheme)end,function()return e("Control Scheme: %s",userControlScheme)end,m6*2,m5,x,y,function()return false end,function()if userControlScheme=="keyboard"then userControlScheme="mouse"elseif userControlScheme=="mouse"then userControlScheme="virtual joystick"else userControlScheme="keyboard"end;a3="New Control Scheme: "..userControlScheme end)end;SetupComplete=false;beginSetup=coroutine.create(function()r:setupCustomTargetSpeedRanges(axisCommandId.longitudinal,{1000,5000,10000,20000,30000})lA()coroutine.yield()lE()coroutine.yield()b8=jN()lQ()m4()m8()aH=lx;coroutine.yield()aY=c_()b1=d0()b2=b1(c_())b3=em()b5=eR()b6=fe()b7=jv()b8=jN()coroutine.yield()unit.hide()system.showScreen(1)collectgarbage("collect")coroutine.yield()unit.setTimer("apTick",apTickRate)unit.setTimer("hudTick",hudTickRate)unit.setTimer("oneSecond",1)unit.setTimer("tenthSecond",1/10)unit.setTimer("fiveSecond",5)c5("start","SU")end)coroutine.resume(beginSetup)end;function script.onStop()_autoconf.hideCategoryPanels()if antigrav~=nil and not ExternalAGG then antigrav.hide()end;if warpdrive~=nil then warpdrive.hide()end;core.hide()a.control.switchOffHeadlights()if door and(at>0 or at==0 and au<10000)then for _,cZ in pairs(door)do cZ.toggle()end end;if switch then for _,cZ in pairs(switch)do cZ.toggle()end end;if forcefield and(at>0 or at==0 and au<10000)then for _,cZ in pairs(forcefield)do cZ.toggle()end end;safeMass=ax;cU()if button then button.activate()end;if SetWaypointOnExit then b8.showWayPoint(planet,bF)end;c5("stop","SU")end;function script.onTick(mk)local ml=nil;if mk=="contact"then if not contactTimer then contactTimer=0 end;if E>contactTimer+10 then a3="Radar Contact"c5("rdrCon","RC")contactTimer=E end;unit.stopTimer("contact")elseif mk=="tenthSecond"then local function mm()local mn=system.createData;local mo=system.createWidget;panelInterplanetary=system.createWidgetPanel("Interplanetary Helper")interplanetaryHeader=mo(panelInterplanetary,"value")interplanetaryHeaderText=mn('{"label": "Target Planet", "value": "N/A", "unit":""}')u(interplanetaryHeaderText,interplanetaryHeader)widgetDistance=mo(panelInterplanetary,"value")widgetDistanceText=mn('{"label": "distance", "value": "N/A", "unit":""}')u(widgetDistanceText,widgetDistance)widgetTravelTime=mo(panelInterplanetary,"value")widgetTravelTimeText=mn('{"label": "Travel Time", "value": "N/A", "unit":""}')u(widgetTravelTimeText,widgetTravelTime)widgetMaxMass=mo(panelInterplanetary,"value")widgetMaxMassText=mn('{"label": "Maximum Mass", "value": "N/A", "unit":""}')u(widgetMaxMassText,widgetMaxMass)widgetTargetOrbit=mo(panelInterplanetary,"value")widgetTargetOrbitText=mn('{"label": "Target Altitude", "value": "N/A", "unit":""}')u(widgetTargetOrbitText,widgetTargetOrbit)widgetCurBrakeDistance=mo(panelInterplanetary,"value")widgetCurBrakeDistanceText=mn('{"label": "Cur Brake distance", "value": "N/A", "unit":""}')widgetCurBrakeTime=mo(panelInterplanetary,"value")widgetCurBrakeTimeText=mn('{"label": "Cur Brake Time", "value": "N/A", "unit":""}')widgetMaxBrakeDistance=mo(panelInterplanetary,"value")widgetMaxBrakeDistanceText=mn('{"label": "Max Brake distance", "value": "N/A", "unit":""}')widgetMaxBrakeTime=mo(panelInterplanetary,"value")widgetMaxBrakeTimeText=mn('{"label": "Max Brake Time", "value": "N/A", "unit":""}')widgetTrajectoryAltitude=mo(panelInterplanetary,"value")widgetTrajectoryAltitudeText=mn('{"label": "Projected Altitude", "value": "N/A", "unit":""}')if not as then u(widgetCurBrakeDistanceText,widgetCurBrakeDistance)u(widgetCurBrakeTimeText,widgetCurBrakeTime)u(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)u(widgetMaxBrakeTimeText,widgetMaxBrakeTime)u(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)end end;local function mp()s(panelInterplanetary)panelInterplanetary=nil end;local function mq()if not Autopilot then if CustomTarget==nil or CustomTarget.planetname~=planet.name then AutopilotDistance=(ad.center-bF):len()else AutopilotDistance=(CustomTarget.position-bF):len()end end;local eP=bC;local kP=unit.getThrottle()/100;if AtmoSpeedAssist then kP=L end;local mr,ms=b3.computeDistanceAndTime(bC,MaxGameVelocity,ax,a:maxForceForward()*kP,warmup,0)local a9,aa;if not TurnBurn then a9,aa=b8.GetAutopilotBrakeDistanceAndTime(MaxGameVelocity)else a9,aa=b8.GetAutopilotTBBrakeDistanceAndTime(MaxGameVelocity)end;local _,mt;if not TurnBurn and eP>0 then _,mt=b8.GetAutopilotBrakeDistanceAndTime(eP)else _,mt=b8.GetAutopilotTBBrakeDistanceAndTime(eP)end;local mu=0;local mv=0;if AutopilotCruising or not Autopilot and eP>5 then mv=b3.computeTravelTime(eP,0,AutopilotDistance)elseif a9+mr<AutopilotDistance then mu=AutopilotDistance-(a9+mr)mv=b3.computeTravelTime(8333.0556,0,mu)else local mw=(AutopilotDistance-a9)/mr;mr=AutopilotDistance-a9;ms=ms*mw end;if CustomTarget~=nil and CustomTarget.planetname==planet.name and not Autopilot then return mv elseif AutopilotBraking then return mt elseif AutopilotCruising then return mv+mt else return ms+aa+mv end end;local function mx(ik,my)if ik==nil then ik=core.g()end;ik=B(ik,5)if my~=nil and my or(ml==nil or ml~=ik)then local eS=core.getVelocity()local eP=vec3(eS):len()local mz=f(unit.getData()).maxBrake;if mz~=nil and mz>0 and as then mz=mz/q(eP/100,0.1,1)mz=mz/at;if at>0.10 then if LastMaxBrakeInAtmo then LastMaxBrakeInAtmo=(LastMaxBrakeInAtmo+mz)/2 else LastMaxBrakeInAtmo=mz end end end;if mz~=nil and mz>0 then LastMaxBrake=mz end;ml=ik end end;mx(nil,true)if at>0 and not WasInAtmo then if not bK and AtmoSpeedAssist and(AltitudeHold or Reentry)then cm(1)P=false end end;if bJ~=nil then if r:getTargetSpeed(axisCommandId.longitudinal)~=bJ then cp(bJ,TRUE)else bJ=nil end end;if AutopilotTargetName~="None"then if panelInterplanetary==nil then mm()end;if AutopilotTargetName~=nil then local mA=CustomTarget~=nil;local mB=LastMaxBrakeInAtmo/ad:getGravity(ad.center+vec3(0,0,1)*ad.radius):len()t(interplanetaryHeaderText,'{"label": "Target", "value": "'..AutopilotTargetName..'", "unit":""}')travelTime=mq()if mA and not Autopilot then ak=(bF-CustomTarget.position):len()else ak=(AutopilotTargetCoords-bF):len()end;if not TurnBurn then a9,aa=b8.GetAutopilotBrakeDistanceAndTime(bC)ab,ac=b8.GetAutopilotBrakeDistanceAndTime(MaxGameVelocity)else a9,aa=b8.GetAutopilotTBBrakeDistanceAndTime(bC)ab,ac=b8.GetAutopilotTBBrakeDistanceAndTime(MaxGameVelocity)end;local hj=ct(ak)t(widgetDistanceText,'{"label": "distance", "value": "'..hj..'"}')t(widgetTravelTimeText,'{"label": "Travel Time", "value": "'..cP(travelTime)..'", "unit":""}')hj=ct(a9)t(widgetCurBrakeDistanceText,'{"label": "Cur Brake distance", "value": "'..hj..'"}')t(widgetCurBrakeTimeText,'{"label": "Cur Brake Time", "value": "'..cP(aa)..'", "unit":""}')hj=ct(ab)t(widgetMaxBrakeDistanceText,'{"label": "Max Brake distance", "value": "'..hj..'"}')t(widgetMaxBrakeTimeText,'{"label": "Max Brake Time", "value": "'..cP(ac)..'", "unit":""}')t(widgetMaxMassText,'{"label": "Maximum Mass", "value": "'..e("%.2f",mB/1000)..'", "unit":" Tons"}')hj=ct(AutopilotTargetOrbit)t(widgetTargetOrbitText,'{"label": "Target Orbit", "value": "'..hj..'"}')if at>0 and not WasInAtmo then system.removeDataFromWidget(widgetMaxBrakeTimeText,widgetMaxBrakeTime)system.removeDataFromWidget(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)system.removeDataFromWidget(widgetCurBrakeTimeText,widgetCurBrakeTime)system.removeDataFromWidget(widgetCurBrakeDistanceText,widgetCurBrakeDistance)system.removeDataFromWidget(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)WasInAtmo=true end;if at==0 and WasInAtmo then if t(widgetMaxBrakeTimeText,widgetMaxBrakeTime)==1 then u(widgetMaxBrakeTimeText,widgetMaxBrakeTime)end;if t(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)==1 then u(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)end;if t(widgetCurBrakeTimeText,widgetCurBrakeTime)==1 then u(widgetCurBrakeTimeText,widgetCurBrakeTime)end;if t(widgetCurBrakeDistanceText,widgetCurBrakeDistance)==1 then u(widgetCurBrakeDistanceText,widgetCurBrakeDistance)end;if t(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)==1 then u(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)end;WasInAtmo=false end end else mp()end;if warpdrive~=nil then if f(warpdrive.getData()).destination~="Unknown"and f(warpdrive.getData()).distance>400000 then warpdrive.show()showWarpWidget=true else warpdrive.hide()showWarpWidget=false end end elseif mk=="oneSecond"then local function mC(fu)local mD=0;aF=""local mE=aN;local mF=0;local mG=0;local mH=0;local fT=0;local fU=""local mI=core.getElementHitPointsById;for cY in pairs(av)do local lN=0;local mJ=0;mJ=h(av[cY])lN=mI(av[cY])mF=mF+lN;if lN<mJ then if lN==0 then mH=mH+1 else mG=mG+1 end;if aO and#aC==0 then position=vec3(core.getElementPositionById(av[cY]))local x=position.x-G;local y=position.y-G;local iM=position.z-G;table.insert(aC,core.spawnArrowSticker(x,y,iM+1,"down"))table.insert(aC,core.spawnArrowSticker(x,y,iM+1,"down"))core.rotateSticker(aC[2],0,0,90)table.insert(aC,core.spawnArrowSticker(x+1,y,iM,"north"))table.insert(aC,core.spawnArrowSticker(x+1,y,iM,"north"))core.rotateSticker(aC[4],90,90,0)table.insert(aC,core.spawnArrowSticker(x-1,y,iM,"south"))table.insert(aC,core.spawnArrowSticker(x-1,y,iM,"south"))core.rotateSticker(aC[6],90,-90,0)table.insert(aC,core.spawnArrowSticker(x,y-1,iM,"east"))table.insert(aC,core.spawnArrowSticker(x,y-1,iM,"east"))core.rotateSticker(aC[8],90,0,90)table.insert(aC,core.spawnArrowSticker(x,y+1,iM,"west"))table.insert(aC,core.spawnArrowSticker(x,y+1,iM,"west"))core.rotateSticker(aC[10],-90,0,90)table.insert(aC,av[cY])end elseif aO and#aC>0 and aC[11]==av[cY]then for fM in pairs(aC)do core.deleteSticker(aC[fM])end;aC={}end end;mD=d(mF/mE*100)if mD<100 then fu[#fu+1]=ci(0,0,"","pbright txt")fT=d(mD*2.55)fU=e("rgb(%d,%d,%d)",255-fT,fT,0)if mD<100 then fu[#fu+1]=ci("50%",1035,"Elemental Integrity: "..mD.."%","txtbig txtmid","fill:"..fU)if mH>0 then fu[#fu+1]=ci("50%",1055,"Disabled Modules: "..mH.." Damaged Modules: "..mG,"txtbig txtmid","fill:"..fU)elseif mG>0 then fu[#fu+1]=ci("50%",1055,"Damaged Modules: "..mG,"txtbig txtmid","fill:"..fU)end end end end;local function mK()if weapon then if WeaponPanelID==nil and(radarPanelID~=nil or GearExtended)then _autoconf.displayCategoryPanel(weapon,weapon_size,L_TEXT("ui_lua_widget_weapon", "Weapons"),"weapon",true)WeaponPanelID=_autoconf.panels[_autoconf.panels_size]elseif WeaponPanelID~=nil and radarPanelID==nil and not GearExtended then s(WeaponPanelID)WeaponPanelID=nil end end end;local function mL()local fR=p()local h7=bC;local mM=fR-aw;if h7>1.38889 then h7=h7/1000;local mN=h7*(fR-aw)TotalDistanceTravelled=TotalDistanceTravelled+mN;ae=ae+mN end;af=af+mM;TotalFlightTime=TotalFlightTime+mM;aw=fR end;local function mO()if safeMass>0 then if ax>safeMass+50 then bG=d(ax-safeMass)safeMass=-1 elseif ax<safeMass then safeMass=ax end elseif safeMass==-1 then safeMass=-2 else safeMass=-1 end end;if IntruderAlertSystem then mO()end;mL()b6.UpdatePipe()mK()local fu={}b6.ExtraData(fu)if ShowOdometer then fu=b6.DrawOdometer(fu,ae,TotalDistanceTravelled,af)end;if ShouldCheckDamage then mC(fu)end;al=table.concat(fu,"")collectgarbage("collect")elseif mk=="fiveSecond"then if not UseSatNav then return end;ar=dbHud_1.getStringValue("SPBAutopilotTargetName")if ar~=nil and ar~=""and ar~="SatNavNotChanged"then local cH=f(dbHud_1.getStringValue("SavedLocations"))if cH~=nil then _G["SavedLocations"]=cH;local gt=-1;local jK;for cY,cZ in pairs(SavedLocations)do if cZ.name and cZ.name=="SatNav Location"then gt=cY;break end end;if gt~=-1 then jK=SavedLocations[gt]gt=-1;for cY,cZ in pairs(aY[0])do if cZ.name and cZ.name=="SatNav Location"then gt=cY;break end end;if gt>-1 then aY[0][gt]=jK end;b7.UpdateAtlasLocationsList()a3=jK.name.." position updated"end end;for i=1,#bQ do if bQ[i].name==ar then AutopilotTargetIndex=i;system.print("Index = "..AutopilotTargetIndex.." "..bQ[i].name)b7.UpdateAutopilotTarget()dbHud_1.setStringValue("SPBAutopilotTargetName","SatNavNotChanged")break end end end elseif mk=="msgTick"then local fu={}b6.DisplayMessage(fu,"empty")a3="empty"unit.stopTimer("msgTick")aj=3 elseif mk=="animateTick"then ba=true;b9=false;ah=0;ai=0;unit.stopTimer("animateTick")elseif mk=="hudTick"then local function mP(fu)local mQ=d(q(ak/(aI/4)*255,0,255))fu[#fu+1]=e("<line x1='0' y1='0' x2='%fpx' y2='%fpx' style='stroke:rgb(%d,%d,%d);stroke-width:2;transform:translate(50%%, 50%%)' />",ah,ai,d(I+0.5)+mQ,d(K+0.5)-mQ,d(J+0.5)-mQ)end;local function mR()for _,cZ in pairs(aH)do if cZ.hovered then if not cZ.drawCondition or cZ.drawCondition()then cZ.toggleFunction()end;cZ.hovered=false end end end;local function mS()local function mT(mU,mV,x,y,lU,lV)if mU>x and mU<x+lU and mV>y and mV<y+lV then return true else return false end end;local x=ah+aI/2;local y=ai+aJ/2;for _,cZ in pairs(aH)do cZ.hovered=mT(x,y,cZ.x,cZ.y,cZ.width,cZ.height)end end;local function mW(fu)local function mX(fu,mY,hover,x,y,eI,mZ,m_,n0,n1,n2)if type(n1)=="function"then n1=n1()end;if type(n2)=="function"then n2=n2()end;fu[#fu+1]=e("<rect x='%f' y='%f' width='%f' height='%f' fill='",x,y,eI,mZ)if mY then fu[#fu+1]=e("%s'",m_)else fu[#fu+1]=n0 end;if hover then fu[#fu+1]=" style='stroke:white; stroke-width:2'"else fu[#fu+1]=" style='stroke:black; stroke-width:1'"end;fu[#fu+1]="></rect>"fu[#fu+1]=e("<text x='%f' y='%f' font-size='24' fill='",x+eI/2,y+mZ/2+5)if mY then fu[#fu+1]="black"else fu[#fu+1]="white"end;fu[#fu+1]="' text-anchor='middle' font-family='Montserrat'>"if mY then fu[#fu+1]=e("%s</text>",n1)else fu[#fu+1]=e("%s</text>",n2)end end;local n3="rgb(50,50,50)'"local n4="rgb(210,200,200)"local n5=mX;for _,cZ in pairs(aH)do local lT=cZ.disableName;local lS=cZ.enableName;if type(lT)=="function"then lT=lT()end;if type(lS)=="function"then lS=lS()end;if not cZ.drawCondition or cZ.drawCondition()then n5(fu,cZ.toggleVar(),cZ.hovered,cZ.x,cZ.y,cZ.width,cZ.height,n4,n3,lT,lS)end end end;local n6=B(ResolutionX/2,0)local n7=B(ResolutionY/2,0)local fu={}b6.HUDPrologue(fu)if showHud then b6.UpdateHud(fu)else if AlwaysVSpd then b6.DrawVerticalSpeed(fu,au)end;b6.DisplayOrbitScreen(fu)b6.DrawWarnings(fu)end;if bN and bO~={}then b6.DrawSettings(fu)end;b6.HUDEpilogue(fu)fu[#fu+1]=e([[<svg width="100%%" height="100%%" style="position:absolute;top:0;left:0"  viewBox="0 0 %d %d">]],aI,aJ)if a3~="empty"then b6.DisplayMessage(fu,a3)end;if l()==0 and userControlScheme=="virtual joystick"then if DisplayDeadZone then b6.DrawDeadZone(fu)end end;if w()==0 then if l()==1 and a2 then if not AltIsOn then mS()mW(fu)end;if not b9 and not ba then local n8=table.concat(fu,"")fu={}fu[#fu+1]=e("<style>@keyframes test { from { opacity: 0; } to { opacity: 1; } }  body { animation-name: test; animation-duration: 0.5s; }</style><body><svg width='100%%' height='100%%' position='absolute' top='0' left='0'><rect width='100%%' height='100%%' x='0' y='0' position='absolute' style='fill:rgb(6,5,26);'/></svg><svg width='50%%' height='50%%' style='position:absolute;top:30%%;left:25%%' viewbox='0 0 %d %d'>",aI,aJ)fu[#fu+1]=n8;fu[#fu+1]="</body>"b9=true;fu[#fu+1]=[[</svg></body>]]unit.setTimer("animateTick",0.5)local content=table.concat(fu,"")system.setScreen(content)elseif ba then local n8=table.concat(fu,"")fu={}fu[#fu+1]=e("<body style='background-color:rgb(6,5,26)'><svg width='50%%' height='50%%' style='position:absolute;top:30%%;left:25%%' viewbox='0 0 %d %d'>",aI,aJ)fu[#fu+1]=n8;fu[#fu+1]="</body>"end;if not b9 then fu[#fu+1]=e([[<g transform="translate(%d %d)"><circle class="cursor" cx="%fpx" cy="%fpx" r="5"/></g>]],n6,n7,ah,ai)end else mR()end else if not a2 and l()==0 then mR()if ak>DeadZone then if DisplayDeadZone then mP(fu)end end elseif not AltIsOn or AltIsOn and a2 then mS()mW(fu)end;fu[#fu+1]=e([[<g transform="translate(%d %d)"><circle class="cursor" cx="%fpx" cy="%fpx" r="5"/></g>]],n6,n7,ah,ai)end;fu[#fu+1]=[[</svg></body>]]content=table.concat(fu,"")if not DidLogOutput then system.logInfo(LastContent)DidLogOutput=true end elseif mk=="apTick"then b8.APTick()b6.UpdateRadar()end end;function script.onFlush()local function n9(na,kW)local nb=vec3()local nc=vec3()if na==axisCommandId.longitudinal then nb=vec3(core.getConstructOrientationForward())nc=bz elseif na==axisCommandId.vertical then nb=vec3(core.getConstructOrientationUp())nc=by elseif na==axisCommandId.lateral then nb=vec3(core.getConstructOrientationRight())nc=bA else return vec3()end;local nd=vec3(core.getWorldGravity())local ne=nd:dot(nc)local nf=vec3(core.getWorldAirFrictionAcceleration())local ng=nf:dot(nc)local nh=vec3(core.getVelocity())local ni=nh:dot(nb)local nj=kW*constants.kph2m;if targetSpeedPID2==nil then targetSpeedPID2=pid.new(10,0,10.0)end;targetSpeedPID2:inject(nj-ni)local nk=targetSpeedPID2:get()local nl=(nk-ng-ne)*nc;return nl end;local function nm(na,kW)local nb=vec3()local nc=vec3()if na==axisCommandId.longitudinal then nb=vec3(core.getConstructOrientationForward())nc=bz elseif na==axisCommandId.vertical then nb=vec3(core.getConstructOrientationUp())nc=by elseif na==axisCommandId.lateral then nb=vec3(core.getConstructOrientationRight())nc=bA else return vec3()end;local nd=vec3(core.getWorldGravity())local ne=nd:dot(nc)local nf=vec3(core.getWorldAirFrictionAcceleration())local ng=nf:dot(nc)local nh=vec3(core.getVelocity())local ni=nh:dot(nb)local nj=kW*constants.kph2m;if targetSpeedPID==nil then targetSpeedPID=pid.new(10,0,10.0)end;targetSpeedPID:inject(nj-ni)local nk=targetSpeedPID:get()local nl=(nk-ng-ne)*nc;return nl end;local function nn(no,fY,jA)local np=no:cross(jA):normalize_inplace()local gL=math.acos(q(np:dot(-fY),-1,1))*constants.rad2deg;if np:cross(-fY):dot(jA)<0 then gL=-gL end;return gL end;if antigrav and not ExternalAGG then if not bI and antigrav.getBaseAltitude()~=AntigravTargetAltitude then antigrav.setBaseAltitude(AntigravTargetAltitude)end end;bK=r:getAxisCommandType(0)==axisCommandType.byThrottle;if bK and P then cm(0)P=false elseif not bK and not P then L=0;P=true end;pitchSpeedFactor=math.max(pitchSpeedFactor,0.01)yawSpeedFactor=math.max(yawSpeedFactor,0.01)rollSpeedFactor=math.max(rollSpeedFactor,0.01)torqueFactor=math.max(torqueFactor,0.01)brakeSpeedFactor=math.max(brakeSpeedFactor,0.01)brakeFlatFactor=math.max(brakeFlatFactor,0.01)autoRollFactor=math.max(autoRollFactor,0.01)turnAssistFactor=math.max(turnAssistFactor,0.01)local nq=q(U+V+system.getControlDeviceForwardInput(),-1,1)local nr=q(X+a0+system.getControlDeviceYawInput(),-1,1)local ns=q(Y+W-system.getControlDeviceLeftRightInput(),-1,1)local nt=Z;bD=vec3(core.getWorldVertical())if bD==nil or bD:len()==0 then bD=(planet.center-bF):normalize()end;by=vec3(core.getConstructWorldOrientationUp())bz=vec3(core.getConstructWorldOrientationForward())bA=vec3(core.getConstructWorldOrientationRight())bB=vec3(core.getWorldVelocity())bF=vec3(core.getConstructWorldPos())ax=core.getConstructMass()bC=vec3(bB):len()bE=-bD:dot(bB)bM=getRoll(bD,bz,bA)local nu=bM/180*math.pi;local nw=math.cos(nu)local nx=math.sin(nu)bL=nn(bD,bz,bA*nw+by*nx)local ny=bB:normalize()local nz=c(bM)local nA=utils.sign(bM)local nB=vec3(core.getWorldAngularVelocity())local nC=nq*pitchSpeedFactor*bA+nr*rollSpeedFactor*bz+ns*yawSpeedFactor*by;if bb==true and bD:len()>0.01 then local nD=c(bf-bM)if((ProgradeIsOn or Reentry or BrakeLanding or an or AltitudeHold or IntoOrbit)and nD>0 or at>0.0 and nD<autoRollRollThreshold and autoRollPreference)and nr==0 and c(bL)<85 then local nE=bf;local nF=autoRollFactor;if at==0 then nF=nF/4;bf=0;nE=0 end;if rollPID==nil then rollPID=pid.new(nF*0.01,0,nF*0.1)end;rollPID:inject(nE-bM)local nG=rollPID:get()nC=nC+nG*bz end end;if bD:len()>0.01 and at>0.0 then local nH=20.0;if turnAssist==true and nz>nH and nq==0 and ns==0 then local nI=turnAssistFactor*0.1;local nJ=turnAssistFactor*0.025;local nK=(nz-nH)/(180-nH)*180;local nL=0;if nK<90 then nL=nK/90 elseif nK<180 then nL=(180-nK)/90 end;nL=nL*nL;local nM=-nA*nJ*(1.0-nL)local nN=nI*nL;nC=nC+nN*bA+nM*by end end;local nO=1;local nP=0;local nQ=1;if system.getMouseWheel()>0 then if AltIsOn then if at>0 or Reentry then bi=q(bi+speedChangeLarge,0,AtmoSpeedLimit)elseif Autopilot then MaxGameVelocity=q(MaxGameVelocity+speedChangeLarge/3.6*100,0,8333.00)end elseif ay then local nR=L;L=B(q(L+speedChangeLarge/100,-1,1),2)if L>=0 and nR<0 then L=0;ay=false end end elseif system.getMouseWheel()<0 then if AltIsOn then if at>0 or Reentry then bi=q(bi-speedChangeLarge,0,AtmoSpeedLimit)elseif Autopilot then MaxGameVelocity=q(MaxGameVelocity-speedChangeLarge/3.6*100,0,8333.00)end elseif ay then local nR=L;L=B(q(L-speedChangeLarge/100,-1,1),2)if L<=0 and nR>0 then L=0;ay=false end end else ay=true end;M=0;if as and AtmoSpeedAssist and bK then if throttlePID==nil then throttlePID=pid.new(0.5,0,1)end;throttlePID:inject(bi/3.6-bB:dot(bz))local nS=throttlePID:get()O=q(nS,-1,1)if O<L and at>0.005 then N=true;r:setThrottleCommand(axisCommandId.longitudinal,q(O,0.01,1))else N=false;r:setThrottleCommand(axisCommandId.longitudinal,L)end;if brakePID==nil then brakePID=pid.new(1*0.01,0,1*0.1)end;brakePID:inject(bB:len()-bi/3.6)local nT=q(brakePID:get(),0,1)if at>0 and bE<-80 or at>0.005 then M=nT end;if M>0 then if N and O==0.01 then r:setThrottleCommand(axisCommandId.longitudinal,0)end else O=q(O,0.01,1)end;local nU=''local nV=vec3()local nW=n9(axisCommandId.vertical,ag*1000)a:setEngineForceCommand("vertical airfoil , vertical ground ",nW,nP)local nX='thrust analog longitudinal 'if ExtraLongitudeTags~="none"then nX=nX..ExtraLongitudeTags end;local nY=r:getAxisCommandType(axisCommandId.longitudinal)local nZ=r:composeAxisAccelerationFromThrottle(nX,axisCommandId.longitudinal)local n_=nm(axisCommandId.lateral,LeftAmount*1000)nU=nU..' , '.."lateral airfoil , lateral ground "nV=nV+n_;if nV:len()>constants.epsilon then a:setEngineForceCommand(nU,nV,nP,'','','',nQ)end;a:setEngineForceCommand(nX,nZ,nO)local o0='thrust analog vertical fueled 'local o1='thrust analog lateral fueled 'if ExtraLateralTags~="none"then o1=o1 ..ExtraLateralTags end;if ExtraVerticalTags~="none"then o0=o0 ..ExtraVerticalTags end;if ag~=0 or BrakeLanding and BrakeIsOn or not GearExtended and not stablized then a:setEngineForceCommand(o0,nW,nO)else a:setEngineForceCommand(o0,vec3(),nO)end;if LeftAmount~=0 then a:setEngineForceCommand(o1,n_,nO)else a:setEngineForceCommand(o1,vec3(),nO)end;if nt==0 then nt=M end;local o2=-nt*(brakeSpeedFactor*bB+brakeFlatFactor*ny)a:setEngineForceCommand('brake',o2)else if AtmoSpeedAssist then r:setThrottleCommand(axisCommandId.longitudinal,L)end;local kW=unit.getAxisCommandValue(0)if not bK then if brakePID==nil then brakePID=pid.new(1*0.01,0,1*0.1)end;brakePID:inject(bB:len()-kW/3.6)local nT=q(brakePID:get(),0,1)nt=q(nt+nT,0,1)end;local o2=-nt*(brakeSpeedFactor*bB+brakeFlatFactor*ny)a:setEngineForceCommand('brake',o2)local nU=''local nV=vec3()local o3=false;local nX='thrust analog longitudinal 'if ExtraLongitudeTags~="none"then nX=nX..ExtraLongitudeTags end;local nY=r:getAxisCommandType(axisCommandId.longitudinal)if nY==axisCommandType.byThrottle then local nZ=r:composeAxisAccelerationFromThrottle(nX,axisCommandId.longitudinal)a:setEngineForceCommand(nX,nZ,nO)elseif nY==axisCommandType.byTargetSpeed then local nZ=r:composeAxisAccelerationFromTargetSpeed(axisCommandId.longitudinal)nU=nU..' , '..nX;nV=nV+nZ;if r:getTargetSpeed(axisCommandId.longitudinal)==0 or r:getCurrentToTargetDeltaSpeed(axisCommandId.longitudinal)<-r:getTargetSpeedCurrentStep(axisCommandId.longitudinal)*0.5 then o3=true end end;local o1='thrust analog lateral 'if ExtraLateralTags~="none"then o1=o1 ..ExtraLateralTags end;local o4=r:getAxisCommandType(axisCommandId.lateral)if o4==axisCommandType.byThrottle then local o5=r:composeAxisAccelerationFromThrottle(o1,axisCommandId.lateral)a:setEngineForceCommand(o1,o5,nO)elseif o4==axisCommandType.byTargetSpeed then local n_=r:composeAxisAccelerationFromTargetSpeed(axisCommandId.lateral)nU=nU..' , '..o1;nV=nV+n_ end;local o0='thrust analog vertical 'if ExtraVerticalTags~="none"then o0=o0 ..ExtraVerticalTags end;local o6=r:getAxisCommandType(axisCommandId.vertical)if o6==axisCommandType.byThrottle then local nW=r:composeAxisAccelerationFromThrottle(o0,axisCommandId.vertical)if ag~=0 or BrakeLanding and BrakeIsOn then a:setEngineForceCommand(o0,nW,nO,'airfoil','ground','',nQ)else a:setEngineForceCommand(o0,vec3(),nO)a:setEngineForceCommand('airfoil vertical',nW,nO,'airfoil','','',nQ)a:setEngineForceCommand('ground vertical',nW,nO,'ground','','',nQ)end elseif o6==axisCommandType.byTargetSpeed then if ag<0 then a:setEngineForceCommand('hover',vec3(),nO)end;local o7=r:composeAxisAccelerationFromTargetSpeed(axisCommandId.vertical)nU=nU..' , '..o0;nV=nV+o7 end;if nV:len()>constants.epsilon then if Z~=0 or o3 or c(ny:dot(bz))<0.8 then nU=nU..', brake'end;a:setEngineForceCommand(nU,nV,nP,'','','',nQ)end end;local o8=torqueFactor*(nC-nB)local o9=vec3(core.getWorldAirFrictionAngularAcceleration())o8=o8-o9;a:setEngineTorqueCommand('torque',o8,nO,'airfoil','','',nQ)a:setBoosterCommand('rocket_engine')if a8 and not VanillaRockets then local eP=vec3(core.getVelocity()):len()local oa=0.15;if not bK then local ob=r:getTargetSpeed(axisCommandId.longitudinal)if eP*3.6>ob*(1-oa)and IsRocketOn then IsRocketOn=false;a:toggleBoosters()elseif eP*3.6<ob*(1-oa)and not IsRocketOn then IsRocketOn=true;a:toggleBoosters()end else local kP=unit.getThrottle()if AtmoSpeedAssist then kP=L*100 end;local kW=kP/100;if j==0 then kW=kW*MaxGameVelocity;if eP>=kW*(1-oa)and IsRocketOn then IsRocketOn=false;a:toggleBoosters()elseif eP<kW*(1-oa)and not IsRocketOn then IsRocketOn=true;a:toggleBoosters()end else local l6=d(bi)kW=kW*l6/3.6;if eP>=kW*(1-oa)and IsRocketOn then IsRocketOn=false;a:toggleBoosters()elseif eP<kW*(1-oa)and not IsRocketOn then IsRocketOn=true;a:toggleBoosters()end end end end end;function script.onUpdate()if not SetupComplete then local jt=coroutine.status(beginSetup)if jt=="suspended"then local cn,ju=coroutine.resume(beginSetup)if ju then system.print("ERROR STARTUP: "..ju)end elseif jt=="dead"then SetupComplete=true end end;if SetupComplete then a:update()if not b9 and content~=LastContent then if not Cockpit then system.setScreen(content)else dbHud_1.setStringValue("content",content)end end;LastContent=content end end;function script.onActionStart(oc)local mult=1;local function od(oe)local function of(og,oe)local oh={planet.surfaceMaxAltitude+100,planet.spaceEngineMinAltitude-50,planet.noAtmosphericDensityAltitude+LowOrbitHeight,planet.radius*(TargetOrbitRadius-1)+planet.noAtmosphericDensityAltitude}local oi=og;for _,cZ in ipairs(oh)do if oe and oi>cZ then og=cZ elseif og<cZ and not oe then og=cZ;break end end;return og end;if oe then mult=-1 end;if not ExternalAGG and bI then if a2 and oe then AntigravTargetAltitude=1000 elseif AntigravTargetAltitude~=nil then AntigravTargetAltitude=AntigravTargetAltitude+mult*a5;if AntigravTargetAltitude<1000 then AntigravTargetAltitude=1000 end;if AltitudeHold and AntigravTargetAltitude<HoldAltitude+10 and AntigravTargetAltitude>HoldAltitude-10 then HoldAltitude=AntigravTargetAltitude end else AntigravTargetAltitude=desiredBaseAltitude+mult*100 end elseif AltitudeHold or VertTakeOff or IntoOrbit then if IntoOrbit then if a2 then br=of(br,oe)else br=br+mult*a4 end;if br<planet.noAtmosphericDensityAltitude then br=planet.noAtmosphericDensityAltitude end else if a2 and as then HoldAltitude=of(HoldAltitude,oe)else HoldAltitude=HoldAltitude+mult*a4 end end else r:updateTargetGroundAltitudeFromActionStart(mult*1.0)end end;local function oj(oe)if oe then mult=-1 end;if not a2 then if AtmoSpeedAssist and not AltIsOn then L=q(L+mult*speedChangeLarge/100,-1,1)else r:updateCommandFromActionStart(axisCommandId.longitudinal,mult*speedChangeLarge)end else if oe then mult=1 else mult=nil end;b7.adjustAutopilotTargetIndex(mult)end end;local function ok(ol)if not as then a3="Flight Assist in Atmo only"return end;local d5=type(ol)if bU==nil then if d5=="table"then if Autopilot or VectorToTarget then cz()end;c5("180On","BR")elseif ol==1 then c5("bnkLft","BR")else c5("bnkRht","BR")end;if not AltitudeHold and not Autopilot and not VectorToTarget then cy()if d5~="table"then ol=ol+1 end end;bU=ol else c5("180Off","BR")bU=nil end end;if oc=="gear"then GearExtended=not GearExtended;if GearExtended then VectorToTarget=false;LockPitch=nil;cm(0)if vBooster or hover then if as and aq==-1 then c5("bklOn","BL")StrongBrakes=true;Reentry=false;AutoTakeoff=false;VertTakeOff=false;AltitudeHold=false;BrakeLanding=true;bb=true;GearExtended=false else if T then c5("grOut","LG",1)a.control.extendLandingGears()end;r:setTargetGroundAltitude(LandingGearGroundHeight)if as then BrakeIsOn=true end end end;if T and not BrakeLanding and not(vBooster or hover)then c5("grOut","LG",1)a.control.extendLandingGears()end else if T then c5("grIn","LG",1)a.control.retractLandingGears()end;r:setTargetGroundAltitude(TargetHoverHeight)end elseif oc=="light"then if a.control.isAnyHeadlightSwitchedOn()==1 then a.control.switchOffHeadlights()else a.control.switchOnHeadlights()end elseif oc=="forward"then U=U-1 elseif oc=="backward"then if AltIsOn then ok(-bB*5000)else U=U+1 end elseif oc=="left"then if AltIsOn then ok(1)else X=X-1 end elseif oc=="right"then if AltIsOn then ok(3)else X=X+1 end elseif oc=="yawright"then Y=Y-1 elseif oc=="yawleft"then Y=Y+1 elseif oc=="straferight"then r:updateCommandFromActionStart(axisCommandId.lateral,1.0)LeftAmount=1 elseif oc=="strafeleft"then r:updateCommandFromActionStart(axisCommandId.lateral,-1.0)LeftAmount=-1 elseif oc=="up"then ag=ag+1;r:deactivateGroundEngineAltitudeStabilization()r:updateCommandFromActionStart(axisCommandId.vertical,1.0)elseif oc=="down"then ag=ag-1;r:deactivateGroundEngineAltitudeStabilization()r:updateCommandFromActionStart(axisCommandId.vertical,-1.0)elseif oc=="groundaltitudeup"then od()elseif oc=="groundaltitudedown"then od(true)elseif oc=="option1"then b7.adjustAutopilotTargetIndex()toggleView=false elseif oc=="option2"then b7.adjustAutopilotTargetIndex(1)toggleView=false elseif oc=="option3"then local function om()aG=not aG;if not aG then c5("wid","DH")unit.show()core.show()if atmofueltank_size>0 then _autoconf.displayCategoryPanel(atmofueltank,atmofueltank_size,L_TEXT("ui_lua_widget_atmofuel", "Atmo Fuel"),"fuel_container")fuelPanelID=_autoconf.panels[_autoconf.panels_size]end;if spacefueltank_size>0 then _autoconf.displayCategoryPanel(spacefueltank,spacefueltank_size,L_TEXT("ui_lua_widget_spacefuel", "Space Fuel"),"fuel_container")spacefuelPanelID=_autoconf.panels[_autoconf.panels_size]end;if rocketfueltank_size>0 then _autoconf.displayCategoryPanel(rocketfueltank,rocketfueltank_size,L_TEXT("ui_lua_widget_rocketfuel", "Rocket Fuel"),"fuel_container")rocketfuelPanelID=_autoconf.panels[_autoconf.panels_size]end else c5("hud","DH")unit.hide()core.hide()if fuelPanelID~=nil then s(fuelPanelID)fuelPanelID=nil end;if spacefuelPanelID~=nil then s(spacefuelPanelID)spacefuelPanelID=nil end;if rocketfuelPanelID~=nil then s(rocketfuelPanelID)rocketfuelPanelID=nil end end end;if hideHudOnToggleWidgets then if showHud then showHud=false else showHud=true end end;om()toggleView=false elseif oc=="option4"then bU=nil;cz()toggleView=false elseif oc=="option5"then function ToggleLockPitch()if LockPitch==nil then c5("lkPOn","LP")if not a2 then LockPitch=bL else LockPitch=LockPitchTarget end;AutoTakeoff=false;AltitudeHold=false;BrakeLanding=false else c5("lkPOff","LP")LockPitch=nil end end;ToggleLockPitch()toggleView=false elseif oc=="option6"then cy()toggleView=false elseif oc=="option7"then CollisionSystem=not CollisionSystem;if CollisionSystem then a3="Collision System Enabled"else a3="Collision System Secured"end;toggleView=false elseif oc=="option8"then stablized=not stablized;if not stablized then a3="DeCoupled Mode - Ground Stabilization off"r:deactivateGroundEngineAltitudeStabilization()c5("gsOff","GS")else a3="Coupled Mode - Ground Stabilization on"r:activateGroundEngineAltitudeStabilization(currentGroundAltitudeStabilization)a:setEngineForceCommand('hover',vec3(),1)c5("gsOn","GS")end;toggleView=false elseif oc=="option9"then if gyro~=nil then gyro.toggle()az=gyro.getState()==1;if az then c5("gyOn","GA")else c5("gyOff","GA")end end;toggleView=false elseif oc=="lshift"then if AltIsOn then a2=true end;if w()==1 then a2=true;PrevViewLock=w()v(1)elseif l()==1 and ShiftShowsRemoteButtons then a2=true;ba=false;b9=false end elseif oc=="brake"then if BrakeToggleStatus then cB()elseif not BrakeIsOn then cB()else BrakeIsOn=true end elseif oc=="lalt"then toggleView=true;AltIsOn=true;if l()==0 and not freeLookToggle and userControlScheme=="keyboard"then v(1)end elseif oc=="booster"then if VanillaRockets then a:toggleBoosters()elseif not a8 then if not IsRocketOn then a:toggleBoosters()IsRocketOn=true end;a8=true else if IsRocketOn then a:toggleBoosters()IsRocketOn=false end;a8=false end elseif oc=="stopengines"then local function on()if E-F<1.5 then c5("clear","CA")AutopilotAccelerating=false;AutopilotBraking=false;AutopilotCruising=false;Autopilot=false;AutopilotRealigned=false;AutopilotStatus="Aligning"RetrogradeIsOn=false;ProgradeIsOn=false;bU=nil;AltitudeHold=false;Reentry=false;BrakeLanding=false;BrakeIsOn=false;AutoTakeoff=false;VertTakeOff=false;a1=false;Q=false;an=false;ao=false;S=false;bb=autoRollPreference;VectorToTarget=false;TurnBurn=false;az=false;LockPitch=nil;IntoOrbit=false end end;on()F=E;if r:getAxisCommandType(0)~=axisCommandType.byTargetSpeed then if L~=0 then r:resetCommand(axisCommandId.longitudinal)cm(0)else cm(100)end else if r:getTargetSpeed(axisCommandId.longitudinal)~=0 then r:resetCommand(axisCommandId.longitudinal)else if as then cp(AtmoSpeedLimit)else cp(MaxGameVelocity*3.6)end end end elseif oc=="speedup"then oj()elseif oc=="speeddown"then oj(true)elseif oc=="antigravity"and not ExternalAGG then if antigrav~=nil then cO()end end end;function script.onActionStop(oc)local function oo()if not ExternalAGG and bI then a7=a5 end;if AltitudeHold or VertTakeOff or IntoOrbit then a6=a4 end end;if oc=="forward"then U=0 elseif oc=="backward"then U=0 elseif oc=="left"then if bU then if bU==2 then bU=-2 else bU=-1 end end;X=0 elseif oc=="right"then if bU then if bU==4 then bU=-2 else bU=-1 end end;X=0 elseif oc=="yawright"then Y=0 elseif oc=="yawleft"then Y=0 elseif oc=="straferight"then r:updateCommandFromActionStop(axisCommandId.lateral,-1.0)LeftAmount=0 elseif oc=="strafeleft"then r:updateCommandFromActionStop(axisCommandId.lateral,1.0)LeftAmount=0 elseif oc=="up"then ag=0;r:updateCommandFromActionStop(axisCommandId.vertical,-1.0)if stablized then r:activateGroundEngineAltitudeStabilization(currentGroundAltitudeStabilization)a:setEngineForceCommand('hover',vec3(),1)end elseif oc=="down"then ag=0;r:updateCommandFromActionStop(axisCommandId.vertical,1.0)if stablized then r:activateGroundEngineAltitudeStabilization(currentGroundAltitudeStabilization)a:setEngineForceCommand('hover',vec3(),1)end elseif oc=="groundaltitudeup"then oo()toggleView=false elseif oc=="groundaltitudedown"then oo()toggleView=false elseif oc=="lshift"then if w()==1 then ah=0;ai=0;v(PrevViewLock)elseif l()==1 and ShiftShowsRemoteButtons then ba=false;b9=false end;a2=false elseif oc=="brake"then if not BrakeToggleStatus then if BrakeIsOn then cB()else BrakeIsOn=false end end elseif oc=="lalt"then if l()==0 and freeLookToggle then if toggleView then if w()==1 then v(0)else v(1)end else toggleView=true end elseif l()==0 and not freeLookToggle and userControlScheme=="keyboard"then v(0)end;AltIsOn=false end end;function script.onActionLoop(oc)local function op(oe)local mult=1;if oe then mult=-1 end;if not ExternalAGG and bI then if AntigravTargetAltitude~=nil then AntigravTargetAltitude=AntigravTargetAltitude+mult*a7;if AntigravTargetAltitude<1000 then AntigravTargetAltitude=1000 end;if AltitudeHold and AntigravTargetAltitude<HoldAltitude+10 and AntigravTargetAltitude>HoldAltitude-10 then HoldAltitude=AntigravTargetAltitude end;a7=q(a7*1.05,a5,500)BrakeIsOn=false else AntigravTargetAltitude=desiredBaseAltitude+mult*100;BrakeIsOn=false end elseif AltitudeHold or VertTakeOff or IntoOrbit then if IntoOrbit then br=br+mult*a6;if br<planet.noAtmosphericDensityAltitude then br=planet.noAtmosphericDensityAltitude end else HoldAltitude=HoldAltitude+mult*a6 end;a6=q(a6*1.05,a4,500)else r:updateTargetGroundAltitudeFromActionLoop(mult*1.0)end end;local function oq(oe)if oe then mult=-1 end;if not a2 then if AtmoSpeedAssist and not AltIsOn then L=q(L+mult*speedChangeSmall/100,-1,1)else r:updateCommandFromActionLoop(axisCommandId.longitudinal,mult*speedChangeSmall)end end end;if oc=="groundaltitudeup"then if not a2 then op()end elseif oc=="groundaltitudedown"then if not a2 then op(true)end elseif oc=="speedup"then oq()elseif oc=="speeddown"then oq(true)end end;function script.onInputText(cj)local function os()for cY,cZ in pairs(cb())do dbHud_1.setStringValue(cZ,g(nil))end;for cY,cZ in pairs(b)do if cZ~="SavedLocations"then dbHud_1.setStringValue(cZ,g(nil))end end;a3="Databank wiped except Save Locations. New variables will save after re-enter seat and exit"aj=5 end;local function ot(ou,eT,gH)local function ov(eT)local C=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local dd='::pos{'..C..','..C..','..C..','..C..','..C..'}'local dq,dr,dy,dz,dA=n(eT,dd)if dq=="0"and dr=="0"then return vec3(A(dy),A(dz),A(dA))end;dz=math.rad(dz)dy=math.rad(dy)local planet=aY[A(dq)][A(dr)]local ej=math.cos(dy)local ow=vec3(ej*math.cos(dz),ej*math.sin(dz),math.sin(dy))return planet.center+(planet.radius+dA)*ow end;local position=ov(eT)return b7.AddNewLocation(ou,position,gH)end;local i;local ox,oy=nil,nil;local oz="Command List:\n/commands \n/setname <newname> - Updates current selected saved position name\n/G VariableName newValue - Updates global variable to new value\n".."/G dump - shows all variables updatable by /G\n/agg <targetheight> - Manually set agg target height\n".."/addlocation SafeZoneCenter ::pos{0,0,13771471,7435803,-128971} - adds a saved location by waypoint, not as accurate as making one at location\n".."/::pos{0,0,13771471,7435803,-128971} - adds a temporary waypoint that is not saved to databank with name 0Temp\n".."/copydatabank - copies dbHud databank to a blank databank\n".."/iphWP - displays current IPH target's ::pos waypoint in lua chat"i=string.find(cj," ")ox=cj;if i~=nil then ox=string.sub(cj,0,i-1)oy=string.sub(cj,i+1)end;if ox=="/help"or ox=="/commands"then for ir in string.gmatch(oz,"([^\n]+)")do system.print(ir)end;return elseif ox=="/setname"then if oy==nil or oy==""then a3="Usage: ah-setname Newname"return end;if AutopilotTargetIndex>0 and CustomTarget~=nil then b7.UpdatePosition(oy)else a3="Select a saved target to rename first"end elseif ox=="/addlocation"or string.find(cj,"::pos")~=nil then local gH=false;local ou="0-Temp"if oy==nil or oy==""then oy=ox;gH=true end;i=string.find(oy,"::")if not gH then ou=string.sub(oy,1,i-2)end;local eT=string.sub(oy,i)ot(ou,eT,gH)elseif ox=="/agg"then if oy==nil or oy==""then a3="Usage: /agg targetheight"return end;oy=A(oy)if oy<1000 then oy=1000 end;AntigravTargetAltitude=oy;a3="AGG Target Height set to "..oy elseif ox=="/G"then if oy==nil or oy==""then a3="Usage: /G VariableName variablevalue\n/G dump - shows all variables"return end;if oy=="dump"then for cY,cZ in pairs(cb())do if type(_G[cZ])=="boolean"then if _G[cZ]==true then system.print(cZ.." true")else system.print(cZ.." false")end elseif _G[cZ]==nil then system.print(cZ.." nil")else system.print(cZ.." ".._G[cZ])end end;return end;i=string.find(oy," ")local oA=string.sub(oy,0,i-1)local oB=string.sub(oy,i+1)for cY,cZ in pairs(cb())do if cZ==oA then a3="Variable "..oA.." changed to "..oB;local oC=type(_G[cZ])if oC=="number"then oB=A(oB)elseif oC=="boolean"then if string.lower(oB)=="true"then oB=true else oB=false end end;_G[cZ]=oB;return end end;a3="No such global variable: "..oA elseif ox=="/copydatabank"then if dbHud_2 then cU(true)else a3="Spare Databank required to copy databank"end elseif ox=="/iphWP"then if AutopilotTargetIndex>0 then system.print(b8.showWayPoint(ad,AutopilotTargetCoords,true))a3="::pos waypoint shown in lua chat"else a3="No target selected in IPH"end end end;function script.onEnter(dI)if radar_1 and not as and not bR then unit.setTimer("contact",0.1)end end;function script.onLeave(dI)if radar_1 and CollisionSystem then if#bV>650 then dI=tostring(dI)bV[dI]=nil end end end;script.onStart()
        
        
        -- error handling code added by wrap.lua
        end, __wrap_lua__traceback)
        if not ok then
          __wrap_lua__error(message)
          if not script then script = {} end
        end
    stop:
      lua: |
        if not __wrap_lua__stopped and script.onStop then
          local ok, message = xpcall(script.onStop,__wrap_lua__traceback,unit)
          if not ok then __wrap_lua__error(message) end
        end
    tick(timerId):
      lua: |
        if not __wrap_lua__stopped and script.onTick then
          local ok, message = xpcall(script.onTick,__wrap_lua__traceback,timerId,unit)
          if not ok then __wrap_lua__error(message) end
        end
  system:
    actionStart(action):
      lua: |
        if not __wrap_lua__stopped and script.onActionStart then
          local ok, message = xpcall(script.onActionStart,__wrap_lua__traceback,action,system)
          if not ok then __wrap_lua__error(message) end
        end
    actionStop(action):
      lua: |
        if not __wrap_lua__stopped and script.onActionStop then
          local ok, message = xpcall(script.onActionStop,__wrap_lua__traceback,action,system)
          if not ok then __wrap_lua__error(message) end
        end
    actionLoop(action):
      lua: |
        if not __wrap_lua__stopped and script.onActionLoop then
          local ok, message = xpcall(script.onActionLoop,__wrap_lua__traceback,action,system)
          if not ok then __wrap_lua__error(message) end
        end
    update:
      lua: |
        if not __wrap_lua__stopped and script.onUpdate then
          local ok, message = xpcall(script.onUpdate,__wrap_lua__traceback,system)
          if not ok then __wrap_lua__error(message) end
        end
    flush:
      lua: |
        if not __wrap_lua__stopped and script.onFlush then
          local ok, message = xpcall(script.onFlush,__wrap_lua__traceback,system)
          if not ok then __wrap_lua__error(message) end
        end
    inputText(text):
      lua: |
        if not __wrap_lua__stopped and script.onInputText then
          local ok, message = xpcall(script.onInputText,__wrap_lua__traceback,text,system)
          if not ok then __wrap_lua__error(message) end
        end
  radar_1:
    enter(id):
      lua: |
        local radar = radar_1
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_1
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_2:
    enter(id):
      lua: |
        local radar = radar_2
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_2
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_3:
    enter(id):
      lua: |
        local radar = radar_3
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_3
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_4:
    enter(id):
      lua: |
        local radar = radar_4
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_4
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_5:
    enter(id):
      lua: |
        local radar = radar_5
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_5
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_6:
    enter(id):
      lua: |
        local radar = radar_6
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_6
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_7:
    enter(id):
      lua: |
        local radar = radar_7
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_7
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_8:
    enter(id):
      lua: |
        local radar = radar_8
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_8
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_9:
    enter(id):
      lua: |
        local radar = radar_9
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_9
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_10:
    enter(id):
      lua: |
        local radar = radar_10
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_10
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
