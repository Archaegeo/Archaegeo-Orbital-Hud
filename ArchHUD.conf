name: ArchHud - Archaegeo v1.310 (Minified)
slots:
  core:
    class: CoreUnit
  radar:
    class: RadarPVPUnit
    select: manual
  antigrav:
    class: AntiGravityGeneratorUnit
  warpdrive:
    class: WarpDriveUnit
  gyro:
    class: GyroUnit
  weapon:
    class: WeaponUnit
    select: manual
  dbHud:
    class: databank
    select: manual
  telemeter:
    class: TelemeterUnit
    select: manual
  vBooster:
    class: VerticalBooster
  hover:
    class: Hovercraft
  door:
    class: DoorUnit
    select: manual
  switch:
    class: ManualSwitchUnit
    select: manual
  forcefield:
    class: ForceFieldUnit
    select: manual
  atmofueltank:
    class: AtmoFuelContainer
    select: manual
  spacefueltank:
    class: SpaceFuelContainer
    select: manual
  rocketfueltank:
    class: RocketFuelContainer
    select: manual
handlers:
  unit:
    start:
      lua: |
        -- error handling code added by wrap.lua
        __wrap_lua__stopped = false
        __wrap_lua__stopOnError = false
        __wrap_lua__rethrowErrorAlways = false
        __wrap_lua__rethrowErrorIfStopped = true
        __wrap_lua__printError = true
        __wrap_lua__showErrorOnScreens = true
        
        function __wrap_lua__error (message)
          if __wrap_lua__stopped then return end
        
          -- make the traceback more readable and escape HTML syntax characters
          message = tostring(message):gsub('"%-%- |STDERROR%-EVENTHANDLER[^"]*"', 'chunk'):gsub("&", "&amp;"):gsub("<", "&lt;"):gsub(">", "&gt;")
        
          local unit = unit or self or {}
        
          if __wrap_lua__showErrorOnScreens then
            for _, value in pairs(unit) do
              if type(value) == "table" and value.setCenteredText and value.setHTML then -- value is a screen
                if message:match("\n") then
                  value.setHTML([[
        <pre style="color: white; background-color: black; font-family: Consolas,monospace; font-size: 4vh; white-space: pre-wrap; margin: 1em">
        Error: ]] .. message .. [[
        </pre>]])
                else
                  value.setCenteredText(message)
                end
              end
            end
          end
        
          if __wrap_lua__printError and system and system.print then
            system.print("Error: " .. message:gsub("\n", "<br>"))
          end
        
          if __wrap_lua__stopOnError then
            __wrap_lua__stopped = true
          end
        
          if __wrap_lua__stopped and unit and unit.exit then
            unit.exit()
          end
        
          if __wrap_lua__rethrowErrorAlways or (__wrap_lua__stopped and __wrap_lua__rethrowErrorIfStopped) then
            error(message)
          end
        end
        
        -- in case traceback is removed or renamed
        __wrap_lua__traceback = traceback or (debug and debug.traceback) or function (arg1, arg2) return arg2 or arg1 end
        
        local ok, message = xpcall(function ()
        
        -- script code
        
        useTheseSettings = false --export: (Default: false)
        userControlScheme = "virtual joystick" --export: (Default: "virtual joystick") Set to "virtual joystick", "mouse", or "keyboard"
        soundFolder = "archHUD" --export: (Default: "archHUD")
        freeLookToggle = true --export: (Default: true)
        BrakeToggleDefault = true --export: (Default: true)
        RemoteFreeze = false --export: (Default: false)
        RemoteHud = true --export: (Default: true)
        brightHud = false --export: (Default: false)
        VanillaRockets = false --export: (Default: false)
        InvertMouse = false --export: (Default: false)
        autoRollPreference = false --export: (Default: false)
        turnAssist = true --export: (Default: true)
        ExternalAGG = false --export: (Default: false)
        UseSatNav = false --export: (Default: false)
        ShouldCheckDamage = true --export: (Default: true)
        CalculateBrakeLandingSpeed = false --export: (Default: false)
        AtmoSpeedAssist = true --export: (Default: true)
        ForceAlignment = false --export: (Default: false)
        DisplayDeadZone = true --export: (Default: true)
        showHud = true --export: (Default: true) 
        ShowOdometer = true --export: (Default: true)
        hideHudOnToggleWidgets = true --export: (Default: true)
        ShiftShowsRemoteButtons = true --export: (Default: true)
        DisplayOrbit = true --export: (Default: true) 
        SetWaypointOnExit = true --export: (Default: true)
        IntruderAlertSystem = false --export: (Default: true)
        AlwaysVSpd = false --export: (Default: false)
        BarFuelDisplay = true --export: (Default: true)
        showHelp = true --export: (Default: true)
        Cockpit = false --export: (Default: false)
        voices = true --export: (Default: true)
        alerts = true --export: (Default: true)
        YawStallAngle = 35 --export: (Default: 35)
        PitchStallAngle = 35 --export: (Default: 35)
        brakeLandingRate = 30 --export: (Default: 30)
        MaxPitch = 30 --export: (Default: 30)
        TargetOrbitRadius = 1.4 --export: (Default: 1.4)
        LowOrbitHeight = 1000 --export: (Default: 1000)
        AtmoSpeedLimit = 1050 --export: (Default: 1050)
        SpaceSpeedLimit = 30000 --export: (Default: 30000).
        AutoTakeoffAltitude = 1000 --export: (Default: 1000)
        TargetHoverHeight = 50 --export: (Default: 50)
        LandingGearGroundHeight = 0 --export: (Default: 0)
        ReEntryHeight = 5000 --export: (Default: 5000)
        MaxGameVelocity = 8333.00 --export: (Default: 8333.00)
        AutopilotInterplanetaryThrottle = 1.0 --export: (Default: 1.0)
        warmup = 32 --export: (Default: 32)
        fuelTankHandlingAtmo = 0 --export: (Default: 0)
        fuelTankHandlingSpace = 0 --export: (Default: 0)
        fuelTankHandlingRocket = 0 --export: (Default: 0)
        ContainerOptimization = 0 --export: (Default: 0)
        FuelTankOptimization = 0 --export: (Default: 0)
        ResolutionX = 1920 --export: (Default: 1920)
        ResolutionY = 1080 --export: (Default: 1080) 
        circleRad = 400 --export: (Default: 400)
        SafeR = 130 --export: (Default: 130)
        SafeG = 224 --export: (Default: 224)
        SafeB = 255 --export: (Default: 255)
        PvPR = 255 --export: (Default: 255)
        PvPG = 0 --export: (Default: 0)
        PvPB = 0 --export: (Default: 0)
        centerX = 960 --export: (Default: 960)
        centerY = 540 --export: (Default: 540)
        throtPosX = 1300 --export: (Default: 1300)
        throtPosY = 540 --export: (Default: 540)
        vSpdMeterX = 1525  --export: (Default: 1525)
        vSpdMeterY = 325 --export: (Default: 325)
        altMeterX = 550  --export: (Default: 550)
        altMeterY = 540 --export: (Default: 540) 
        fuelX = 30 --export: (Default: 30)
        fuelY = 700 --export: (Default: 700)
        DeadZone = 50 --export: (Default: 50)
        OrbitMapSize = 250 --export: (Default: 250)
        OrbitMapX = 75 --export: (Default: 75)
        OrbitMapY = 0 --export: (Default: 0)
        soundVolume = 100 --export: (Default: 100)
        speedChangeLarge = 5 --export: (Default: 5)
        speedChangeSmall = 1 --export: (Default: 1)
        MouseXSensitivity = 0.003 --export: (Default: 0.003)
        MouseYSensitivity = 0.003 --export: (Default: 0.003)
        autoRollFactor = 2 --export: (Default: 2)
        rollSpeedFactor = 1.5 --export: (Default: 1.5)
        autoRollRollThreshold = 180 --export: (Default: 180)
        minRollVelocity = 150 --export: (Default: 150)    
        turnAssistFactor = 2 --export: (Default: 2)
        TrajectoryAlignmentStrength = 0.002 --export: (Default: 0.002)
        torqueFactor = 2 --export: (Default: 2)
        pitchSpeedFactor = 0.8 --export: (Default: 0.8)
        yawSpeedFactor = 1 --export: (Default: 1)
        brakeSpeedFactor = 3 --export: (Default: 3)
        brakeFlatFactor = 1 --export: (Default: 1)
        DampingMultiplier = 40 --export: (Default: 40) 
        apTickRate = 0.0166667 --export: (Default: 0.0166667)  
        hudTickRate = 0.0666667 --export: (Default: 0.0666667)
        ExtraLongitudeTags = "none" --export: (Default: "none")
        ExtraLateralTags = "none" --export: (Default: "none")
        ExtraVerticalTags = "none" --export: (Default: "none")
        local a=Navigator.new(system,core,unit)script={}VERSION_NUMBER=1.310;BrakeToggleStatus=BrakeToggleDefault;VertTakeOffEngine=false;BrakeIsOn=false;RetrogradeIsOn=false;ProgradeIsOn=false;Autopilot=false;TurnBurn=false;AltitudeHold=false;BrakeLanding=false;AutoTakeoff=false;Reentry=false;VertTakeOff=false;HoldAltitude=1000;AutopilotAccelerating=false;AutopilotRealigned=false;AutopilotBraking=false;AutopilotCruising=false;AutopilotEndSpeed=0;AutopilotStatus="Aligning"AutopilotPlanetGravity=0;PrevViewLock=1;AutopilotTargetName="None"AutopilotTargetCoords=nil;AutopilotTargetIndex=0;GearExtended=nil;TotalDistanceTravelled=0.0;TotalFlightTime=0;SavedLocations={}VectorToTarget=false;LocationIndex=0;LastMaxBrake=0;LockPitch=nil;LastMaxBrakeInAtmo=0;AntigravTargetAltitude=1000;LastStartTime=0;SpaceTarget=false;LeftAmount=0;IntoOrbit=false;safeMass=0;iphCondition="All"stablized=true;sounds=true;local b={"VertTakeOff","VertTakeOffEngine","SpaceTarget","BrakeToggleStatus","BrakeIsOn","RetrogradeIsOn","ProgradeIsOn","Autopilot","TurnBurn","AltitudeHold","BrakeLanding","Reentry","AutoTakeoff","HoldAltitude","AutopilotAccelerating","AutopilotBraking","AutopilotCruising","AutopilotRealigned","AutopilotEndSpeed","AutopilotStatus","AutopilotPlanetGravity","PrevViewLock","AutopilotTargetName","AutopilotTargetCoords","AutopilotTargetIndex","TotalDistanceTravelled","TotalFlightTime","SavedLocations","VectorToTarget","LocationIndex","LastMaxBrake","LockPitch","LastMaxBrakeInAtmo","AntigravTargetAltitude","LastStartTime","safeMass","iphCondition","stablized","sounds"}local c=math.abs;local d=math.floor;local e=string.format;local f=json.decode;local g=json.encode;local h=core.getElementMaxHitPointsById;local j=unit.getAtmosphereDensity;local k=core.getElementMassById;local l=a.control.isRemoteControlled;local m=math.atan;local n=string.match;local o=utils.round;local p=system.getTime;local vec3=vec3;local q=utils.clamp;local r=a.axisCommandManager;local s=system.destroyWidgetPanel;local t=system.updateData;local u=system.addDataToWidget;local v=system.lockView;local w=system.isViewLocked;local function x(y,z)local A=10^(z or 0)return d(y*A+0.5)/A end;local B=16;local C=SafeR;local D=SafeB;local E=SafeG;local F=0;local G=0;local H=false;local I=0;local J=false;local K=x(ResolutionX/2,0)local L=x(ResolutionY/2,0)local M=false;local N=55;local O=false;local P=false;local Q=0;local R=0;local S=0;local T=0;local U=0;local V=0;local W=0;local X=false;local Y=false;local Z="empty"local a0=5;local a1=5;local a2=a0;local a3=a1;local a4=false;local a5,a6=0;local a7,a8=0;local a9=nil;local aa=0;local ab=0;local ac=0;local ad=0;local ae=0;local af=3;local ag=0;local ah=""local ai=0;local aj=false;local ak=false;local al=false;local am=-1;local an=false;local ao=""local ap=j()>0;local aq=j()local ar=core.getAltitude()local as=core.getElementIdList()local at=p()local au=core.getConstructMass()local av=false;local aw=nil;local ax=false;local ay=[[rgb(]]..d(C+0.5)..","..d(E+0.5)..","..d(D+0.5)..[[)]]local az=[[rgb(]]..d(C*0.9+0.5)..","..d(E*0.9+0.5)..","..d(D*0.9+0.5)..[[)]]local aA={}local aB=0;local aC=0;local aD=""local aE=true;local aF={}local aG={}local aH={}local aI=ResolutionX;local aJ=ResolutionY;local aK=false;local aL=false;local aM=nil;local aN={}local aO={}local aP={}local aQ=0;local aR=false;local aS={}local aT={}local aU=d(1/apTickRate)*2;local aV={}local aW={}local aX={}local aY={}local aZ=false;local a_=0;local b0=nil;local b1=nil;local b2=nil;local b3=nil;local b4=nil;local b5=nil;local b6=nil;local b7=nil;local b8=nil;local b9=nil;local ba=nil;local bb=nil;local bc=false;local bd=false;local be=autoRollPreference;local bf=LandingGearGroundHeight;local bg=false;local bh=p()local bi=0;local bj=0;local bk=0;local bl=AtmoSpeedLimit;local bm=0;local bn=nil;local bo=0;local bp=0;local bq=false;local br=false;local bs={VectorToTarget=false}local bt=false;local bu=0;local bv=nil;local bw=false;local bx=false;local by=false;local bz=false;local bA=0;local bB=p()local bC=vec3(core.getConstructWorldOrientationUp())local bD=vec3(core.getConstructWorldOrientationForward())local bE=vec3(core.getConstructWorldOrientationRight())local bF=vec3(core.getWorldVelocity())local bG=vec3(bF):len()local bH=vec3(core.getWorldVertical())local bI=-bH:dot(bF)local bJ=vec3(core.getConstructWorldPos())local bK=0;local bL=false;local bM=false;local bN=nil;local bO=true;local bP=0;local bQ=0;local bR=false;local bS={}local bT=showHud;local bU={}local bV=false;local bW=""local bX=""local function bY(bZ,b_,type)if type==nil and not voices or type~=nil and not alerts or soundFolder=="archHUD"or not sounds then return end;if type~=nil then system.logInfo("sound_notification|audiopacks/"..soundFolder.."/"..bZ.."|"..b_.."|"..soundVolume)else system.logInfo("sound_q|audiopacks/"..soundFolder.."/"..bZ.."|"..b_.."|"..soundVolume)end end;local function c0(c1,c2)for i=1,#c2 do c1[#c1+1]=c2[i]end;return c1 end;local function c3(c4)local c5={}local c6={"userControlScheme","soundFolder","freeLookToggle","BrakeToggleDefault","RemoteFreeze","brightHud","RemoteHud","VanillaRockets","InvertMouse","autoRollPreference","turnAssist","ExternalAGG","UseSatNav","ShouldCheckDamage","CalculateBrakeLandingSpeed","AtmoSpeedAssist","ForceAlignment","DisplayDeadZone","showHud","ShowOdometer","hideHudOnToggleWidgets","ShiftShowsRemoteButtons","DisplayOrbit","SetWaypointOnExit","IntruderAlertSystem","AlwaysVSpd","BarFuelDisplay","showHelp","Cockpit","voices","alerts"}local c7={"YawStallAngle","PitchStallAngle","brakeLandingRate","MaxPitch","TargetOrbitRadius","LowOrbitHeight","AtmoSpeedLimit","SpaceSpeedLimit","AutoTakeoffAltitude","TargetHoverHeight","LandingGearGroundHeight","ReEntryHeight","MaxGameVelocity","AutopilotInterplanetaryThrottle","warmup","fuelTankHandlingAtmo","fuelTankHandlingSpace","fuelTankHandlingRocket","ContainerOptimization","FuelTankOptimization"}local c8={"ResolutionX","ResolutionY","circleRad","SafeR","SafeG","SafeB","PvPR","PvPG","PvPB","centerX","centerY","throtPosX","throtPosY","vSpdMeterX","vSpdMeterY","altMeterX","altMeterY","fuelX","fuelY","DeadZone","OrbitMapSize","OrbitMapX","OrbitMapY","soundVolume"}local c9={"speedChangeLarge","speedChangeSmall","MouseXSensitivity","MouseYSensitivity","autoRollFactor","rollSpeedFactor","autoRollRollThreshold","minRollVelocity","turnAssistFactor","TrajectoryAlignmentStrength","torqueFactor","pitchSpeedFactor","yawSpeedFactor","brakeSpeedFactor","brakeFlatFactor","DampingMultiplier","apTickRate","hudTickRate","ExtraLongitudeTags","ExtraLateralTags","ExtraVerticalTags"}if not c4 then c0(c5,c6)c0(c5,c7)c0(c5,c8)c0(c5,c9)return c5 elseif c4=="boolean"then return c6 elseif c4=="handling"then return c7 elseif c4=="hud"then return c8 elseif c4=="physics"then return c9 end end;local function ca(cb,cc,cd,ce,cf)if ce==nil then ce=""end;if cf==nil then cf=""end;return e([[<text class="%s" x=%s y=%s style="%s">%s</text>]],ce,cb,cc,cf,cd)end;local function cg(ch,ci)if r:getAxisCommandType(0)~=axisCommandType.byThrottle and not ci then a.control.cancelCurrentControlMasterMode()end;r:setThrottleCommand(axisCommandId.longitudinal,ch)F=q(x(ch*100,0)/100,-1,1)end;local function cj(ch,ci)if r:getAxisCommandType(0)~=axisCommandType.byTargetSpeed and not ci then a.control.cancelCurrentControlMasterMode()end;r:setTargetSpeedCommand(axisCommandId.longitudinal,ch)bN=ch end;local function ck(cl,cm)if cl==0 then return c(cm)<1e-09 end;if cm==0 then return c(cl)<1e-09 end;return c(cl-cm)<math.max(c(cl),c(cm))*epsilon end;local function cn(ag,co)local cp=ag>100000;if co==nil then co=1 end;if cp then return x(ag/1000/200,co).."SU"elseif ag<1000 then return x(ag,co).."M"else return x(ag/1000,co).."KM"end end;local function cq()AltitudeHold=false;if VertTakeOff then StrongBrakes=true;Reentry=false;AutoTakeoff=false;BrakeLanding=true;be=true;ac=0;if ap and am==-1 then BrakeLanding=false;AltitudeHold=true;ac=0;a:setEngineForceCommand('thrust analog vertical fueled ',vec3(),1)cj(d(bl))end else bw=false;GearExtended=false;a.control.retractLandingGears()r:setTargetGroundAltitude(TargetHoverHeight)BrakeIsOn=true end;VertTakeOff=not VertTakeOff end;local function cr()bw=false;bo=nil;bp=nil;bA=0;if aq==0 then if IntoOrbit then bY("NoOrbit.mp3","AP")IntoOrbit=false;bq=false;bv=nil;be=autoRollPreference;if AltitudeHold then AltitudeHold=false;AutoTakeoff=false end;bs.VectorToTarget=false;bs.AutopilotAlign=false;bt=false elseif unit.getClosestPlanetInfluence()>0 then bY("Orbit.mp3","AP")IntoOrbit=true;be=true;if bv==nil then bv=planet end;if AltitudeHold then AltitudeHold=false;AutoTakeoff=false end else Z="Unable to engage auto-orbit, not near a planet"end else IntoOrbit=false;bq=false;bv=nil;be=autoRollPreference;if AltitudeHold then AltitudeHold=false end;bs.VectorToTarget=false;bs.AutopilotAlign=false;bt=false end end;local function cs()if bB-bj<1.5 then if planet.hasAtmosphere then if aq>0 then HoldAltitude=planet.spaceEngineMinAltitude-50;bY("ElevenPercent.mp3","EP")else if unit.getClosestPlanetInfluence()>0 then HoldAltitude=planet.noAtmosphericDensityAltitude+LowOrbitHeight;bu=HoldAltitude;bt=true;if not IntoOrbit then cr()end;bq=true end end;bj=-1;if AltitudeHold or IntoOrbit or VertTakeOff then return end end else bj=bB end;if unit.getClosestPlanetInfluence()>0 and aq==0 then bu=ar;bt=true;bq=true;cr()if IntoOrbit then bj=bB else bj=0 end;return end;AltitudeHold=not AltitudeHold;BrakeLanding=false;Reentry=false;if AltitudeHold then Autopilot=false;ProgradeIsOn=false;RetrogradeIsOn=false;X=false;be=true;LockPitch=nil;bw=false;if am==-1 then bY("AltitudeHoldEnabled.mp3","AH")AutoTakeoff=false;if bj>-1 then if unit.getClosestPlanetInfluence()>0 then HoldAltitude=ar end end;if VertTakeOff then cq()end else bY("LaunchingFromSurface.mp3","LS")AutoTakeoff=true;if bj>-1 then HoldAltitude=ar+AutoTakeoffAltitude end;GearExtended=false;a.control.retractLandingGears()BrakeIsOn=true;r:setTargetGroundAltitude(TargetHoverHeight)if VertTakeOffEngine and bL then cq()end end;if ak then HoldAltitude=100000 end else bY("AltitudeHoldDisabled.mp3","AH")if IntoOrbit then cr()end;if VertTakeOff then cq()end;be=autoRollPreference;AutoTakeoff=false;VectorToTarget=false;bj=0 end end;local function ct()if l()==1 then X=not X;if X then Autopilot=false;RetrogradeIsOn=false;ProgradeIsOn=false;AltitudeHold=false;Reentry=false;BrakeLanding=false;AutoTakeoff=false;OldGearExtended=GearExtended;GearExtended=false;a.control.retractLandingGears()r:setTargetGroundAltitude(TargetHoverHeight)bY("Follow.mp3","F")else bY("NoFollow.mp3","F")BrakeIsOn=true;be=autoRollPreference;GearExtended=OldGearExtended;if GearExtended then a.control.extendLandingGears()r:setTargetGroundAltitude(LandingGearGroundHeight)end end else Z="Follow Mode only works with Remote controller"X=false end end;local function cu()local function cv(SpaceTarget)VectorToTarget=not VectorToTarget;if VectorToTarget then TurnBurn=false;if not AltitudeHold and not SpaceTarget then cs()end end;VectorStatus="Proceeding to Waypoint"end;if bB-bk<1.5 and aq>0 then if not bz then Z="No space engines detected, Orbital Hop not supported"return end;if planet.hasAtmosphere then if aq>0 then HoldAltitude=planet.noAtmosphericDensityAltitude+LowOrbitHeight;bY("OrbitHeight.mp3","OH")end;bk=-1;if Autopilot or VectorToTarget or IntoOrbit then return end end else bk=bB end;TargetSet=false;if AutopilotTargetIndex>0 and not Autopilot and not VectorToTarget and not ak and not IntoOrbit then ba.UpdateAutopilotTarget()bb.showWayPoint(a9,AutopilotTargetCoords)local cw=unit.getClosestPlanetInfluence()>0;if CustomTarget~=nil then LockPitch=nil;SpaceTarget=CustomTarget.planetname=="Space"if SpaceTarget then bY("AutopilotToSpace.mp3","AP")if aq~=0 then ak=true;cs()else Autopilot=true end elseif planet.name==CustomTarget.planetname then StrongBrakes=true;if aq>0 then if not VectorToTarget then bY("VectorToTarget.mp3","AP")cv(SpaceTarget)end else bY("AutopilotEngaged.mp3","AP")if not(a9.name==planet.name and cw)then bw=false;Autopilot=true elseif not ap then if IntoOrbit then cr()end;bu=planet.noAtmosphericDensityAltitude+LowOrbitHeight;bt=true;bs.AutopilotAlign=true;bs.VectorToTarget=true;bq=false;if not IntoOrbit then cr()end end end else bY("AutopilotToPlanet.mp3","AP")RetrogradeIsOn=false;ProgradeIsOn=false;if aq~=0 then ak=true;cs()else Autopilot=true end end elseif aq==0 then if CustomTarget==nil and(a9.name==planet.name and cw)and not IntoOrbit then WaypointSet=false;bw=false;bq=false;cr()else bY("AutopilotToPlanet.mp3","AP")Autopilot=true;RetrogradeIsOn=false;ProgradeIsOn=false;AutopilotRealigned=false;X=false;AltitudeHold=false;BrakeLanding=false;Reentry=false;AutoTakeoff=false;M=false;LockPitch=nil;WaypointSet=false end else bY("AutopilotToPlanet.mp3","AP")ak=true;cs()end else bY("AutopilotSecured.mp3","AP")ak=false;Autopilot=false;AutopilotRealigned=false;VectorToTarget=false;M=false;AutoTakeoff=false;AltitudeHold=false;VectorToTarget=false;HoldAltitude=ar;TargetSet=false;Reentry=false;if IntoOrbit then cr()end end end;local function cx(cy)local cz=-1;local cA;cz=ba.findAtlasIndex(SavedLocations)if cz~=-1 then local cB;if cy~=nil then cA={position=SavedLocations[cz].position,name=cy,atmosphere=SavedLocations[cz].atmosphere,planetname=SavedLocations[cz].planetname,gravity=SavedLocations[cz].gravity}else cA={position=bJ,name=SavedLocations[cz].name,atmosphere=aq,planetname=planet.name,gravity=unit.getClosestPlanetInfluence(),safe=true}end;SavedLocations[cz]=cA;cz=-1;cz=ba.findAtlasIndex(b0[0])if cz>-1 then b0[0][cz]=cA end;ba.UpdateAtlasLocationsList()Z=CustomTarget.name.." position updated"ba.UpdateAutopilotTarget()else Z="Name Not Found"end end;local function cC()BrakeIsOn=not BrakeIsOn;if BrakeLanding then BrakeLanding=false;be=autoRollPreference end;if BrakeIsOn then bY("EngagingBrake.mp3","B",1)VectorToTarget=false;AutoTakeoff=false;Reentry=false;ProgradeIsOn=false;BrakeLanding=false;AutoLanding=false;if not bM then AltitudeHold=false;LockPitch=nil end;if VertTakeOff then cq()end;if IntoOrbit then cr()end;be=autoRollPreference;aj=false;al=false;ac=0 else bY("DisengagingBrake.mp3","B",1)end end;local function cD(cE,cF,cG)local function cH(cE,cI)cE=vec3(cE)cI=vec3(cI):normalize()local cJ=cE*cI;return cJ.x+cJ.y+cJ.z end;local cK=0.001;local cL=1;if not ap or not bg or am~=-1 or bG<N then if cG==nil then cG=DampingMultiplier end;if cF==nil then cF=cK end;cE=vec3(cE):normalize()local cM=vec3()-cE;local cN=-cH(cM,core.getConstructWorldOrientationRight())*cL;local cO=-cH(cM,core.getConstructWorldOrientationUp())*cL;if aB==0 then aB=cN/2 end;if aC==0 then aC=cO/2 end;if c(cN)<0.1 then S=S-cN*2 else S=S-(cN+(cN-aB)*cG)end;if c(cO)<0.1 then R=R+cO*2 else R=R+cO+(cO-aC)*cG end;aB=cN;aC=cO;if c(cN)<cF and c(cO)<cF then return true end;return false elseif bg and am==-1 then cE=bF;if cG==nil then cG=DampingMultiplier end;if cF==nil then cF=cK end;cE=vec3(cE):normalize()local cM=bD-cE;local cN=-cH(cM,core.getConstructWorldOrientationRight())*cL;local cO=-cH(cM,core.getConstructWorldOrientationUp())*cL;if aB==0 then aB=cN/2 end;if aC==0 then aC=cO/2 end;if c(cN)<0.1 then S=S-cN*5 else S=S-(cN+(cN-aB)*cG)end;if c(cO)<0.1 then R=R+cO*5 else R=R+cO+(cO-aC)*cG end;aB=cN;aC=cO;if c(cN)<cF and c(cO)<cF then return true end;return false end end;local function cP()if Reentry then Z="Re-Entry cancelled"bY("NoReEntry.mp3","RE")Reentry=false;be=autoRollPreference;AltitudeHold=false elseif not planet.hasAtmosphere then Z="Re-Entry requirements not met: you must start out of atmosphere\n and within a planets gravity well over a planet with atmosphere"af=5 elseif not O then Reentry=true;if r:getAxisCommandType(0)~=controlMasterModeId.cruise then a.control.cancelCurrentControlMasterMode()end;be=true;BrakeIsOn=false;Z="Beginning Parachute Re-Entry - Strap In.  Target speed: "..bl;bY("Parachute.mp3","RE")else Reentry=true;AltitudeHold=true;be=true;BrakeIsOn=false;HoldAltitude=planet.surfaceMaxAltitude+ReEntryHeight;if HoldAltitude>planet.spaceEngineMinAltitude then HoldAltitude=planet.spaceEngineMinAltitude-planet.spaceEngineMinAltitude/10 end;local cd=cn(HoldAltitude)Z="Beginning Re-entry.  Target speed: "..bl.." Target Altitude: "..cd;bY("Glide.mp3","RE")cj(d(bl))end;AutoTakeoff=false end;local function cQ()if antigrav and not ExternalAGG then if bM then bY("AntigravSecured.mp3","AG")antigrav.deactivate()antigrav.hide()else if AntigravTargetAltitude==nil then AntigravTargetAltitude=ar end;if AntigravTargetAltitude<1000 then AntigravTargetAltitude=1000 end;bY("AntigravActivated.mp3","AG")antigrav.activate()antigrav.show()end end end;local function cR(cS)local cT=0;local cU=0;local cV=0;if cS<60 then cS=d(cS)elseif cS<3600 then cT=d(cS/60)cS=d(cS%60)elseif cS<86400 then cU=d(cS/3600)cT=d(cS%3600/60)else cV=d(cS/86400)cU=d(cS%86400/3600)end;if cV>0 then return cV.."d "..cU.."h "elseif cU>0 then return cU.."h "..cT.."m "elseif cT>0 then return cT.."m "..cS.."s"elseif cS>0 then return cS.."s"else return"0s"end end;local function cW(cX)local function cY(cZ)for c_,d0 in pairs(cZ)do dbHud_1.setStringValue(d0,g(_G[d0]))if cX and dbHud_2 then dbHud_2.setStringValue(d0,g(_G[d0]))end end end;if dbHud_1 then cY(b)cY(c3())system.print("Saved Variables to Datacore")if cX and dbHud_2 then Z="Databank copied.  Remove copy when ready."end end end;local function d1()return{[0]={[0]={GM=0,bodyId=0,center={x=0,y=0,z=0},name='Space',planetarySystemId=0,radius=0,hasAtmosphere=false,gravity=0,noAtmosphericDensityAltitude=0,surfaceMaxAltitude=0},[2]={name="Alioth",description="Alioth is the planet selected by the arkship for landfall; it is a typical goldilocks planet where humanity may rebuild in the coming decades. The arkship geological survey reports mountainous regions alongside deep seas and lush forests. This is where it all starts.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9401,atmosphericEngineMaxAltitude=5580,biosphere="Forest",classification="Mesoplanet",bodyId=2,GM=157470826617,gravity=1.0082568597356114,fullAtmosphericDensityMaxAltitude=-10,habitability="High",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=6272,numSatellites=2,positionFromSun=2,center={x=-8,y=-8,z=-126303},radius=126067.8984375,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=3410,surfaceArea=199718780928,surfaceAverageAltitude=200,surfaceMaxAltitude=1100,surfaceMinAltitude=-330,systemZone="High",territories=259472,type="Planet",waterLevel=0,planetarySystemId=0},[21]={name="Alioth Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=21,GM=2118960000,gravity=0.24006116402380084,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=457933,y=-1509011,z=115524},radius=30000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=0,surfaceArea=11309733888,surfaceAverageAltitude=140,surfaceMaxAltitude=200,surfaceMinAltitude=10,systemZone=nil,territories=14522,type="",waterLevel=nil,planetarySystemId=0},[22]={name="Alioth Moon 4",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=22,GM=2165833514,gravity=0.2427018259886451,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=-1692694,y=729681,z=-411464},radius=30330,safeAreaEdgeAltitude=500000,size="L",spaceEngineMinAltitude=0,surfaceArea=11559916544,surfaceAverageAltitude=-15,surfaceMaxAltitude=-5,surfaceMinAltitude=-50,systemZone=nil,territories=14522,type="",waterLevel=nil,planetarySystemId=0},[5]={name="Feli",description="Feli is easily identified by its massive and deep crater. Outside of the crater, the arkship geological survey reports a fairly bland and uniform planet, it also cannot explain the existence of the crater. Feli is particular for having an extremely small atmosphere, allowing life to develop in the deeper areas of its crater but limiting it drastically on the actual surface.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.5488,atmosphericEngineMaxAltitude=66725,biosphere="Barren",classification="Mesoplanet",bodyId=5,GM=16951680000,gravity=0.4801223280476017,fullAtmosphericDensityMaxAltitude=30,habitability="Low",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=78500,numSatellites=1,positionFromSun=5,center={x=-43534464,y=22565536,z=-48934464},radius=41800,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=42800,surfaceArea=21956466688,surfaceAverageAltitude=18300,surfaceMaxAltitude=18500,surfaceMinAltitude=46,systemZone="Low",territories=27002,type="Planet",waterLevel=nil,planetarySystemId=0},[50]={name="Feli Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=50,GM=499917600,gravity=0.11202853997062348,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=-43902841.78,y=22261034.7,z=-48862386},radius=14000,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=0,surfaceArea=2463008768,surfaceAverageAltitude=800,surfaceMaxAltitude=900,surfaceMinAltitude=0,systemZone=nil,territories=3002,type="",waterLevel=nil,planetarySystemId=0},[120]={name="Ion",description="Ion is nothing more than an oversized ice cube frozen through and through. It is a largely inhospitable planet due to its extremely low temperatures. The arkship geological survey reports extremely rough mountainous terrain with little habitable land.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9522,atmosphericEngineMaxAltitude=10480,biosphere="Ice",classification="Hypopsychroplanet",bodyId=120,GM=7135606629,gravity=0.36009174603570127,fullAtmosphericDensityMaxAltitude=-30,habitability="Average",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=17700,numSatellites=2,positionFromSun=12,center={x=2865536.7,y=-99034464,z=-934462.02},radius=44950,safeAreaEdgeAltitude=500000,size="XS",spaceEngineMinAltitude=6410,surfaceArea=25390383104,surfaceAverageAltitude=500,surfaceMaxAltitude=1300,surfaceMinAltitude=250,systemZone="Average",territories=32672,type="Planet",waterLevel=nil,planetarySystemId=0},[121]={name="Ion Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=121,GM=106830900,gravity=0.08802242599860607,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=2472916.8,y=-99133747,z=-1133582.8},radius=11000,safeAreaEdgeAltitude=500000,size="XS",spaceEngineMinAltitude=0,surfaceArea=1520530944,surfaceAverageAltitude=100,surfaceMaxAltitude=200,surfaceMinAltitude=3,systemZone=nil,territories=1922,type="",waterLevel=nil,planetarySystemId=0},[122]={name="Ion Moon 2",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=122,GM=176580000,gravity=0.12003058201190042,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=2995424.5,y=-99275010,z=-1378480.7},radius=15000,safeAreaEdgeAltitude=500000,size="XS",spaceEngineMinAltitude=0,surfaceArea=2827433472,surfaceAverageAltitude=-1900,surfaceMaxAltitude=-1400,surfaceMinAltitude=-2100,systemZone=nil,territories=3632,type="",waterLevel=nil,planetarySystemId=0},[9]={name="Jago",description="Jago is a water planet. The large majority of the planet&apos;s surface is covered by large oceans dotted by small areas of landmass across the planet. The arkship geological survey reports deep seas across the majority of the planet with sub 15 percent coverage of solid ground.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9835,atmosphericEngineMaxAltitude=9695,biosphere="Water",classification="Mesoplanet",bodyId=9,GM=18606274330,gravity=0.5041284298678057,fullAtmosphericDensityMaxAltitude=-90,habitability="Very High",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=10900,numSatellites=0,positionFromSun=9,center={x=-94134462,y=12765534,z=-3634464},radius=61590,safeAreaEdgeAltitude=500000,size="XL",spaceEngineMinAltitude=5900,surfaceArea=47668367360,surfaceAverageAltitude=0,surfaceMaxAltitude=1200,surfaceMinAltitude=-500,systemZone="Very High",territories=60752,type="Planet",waterLevel=0,planetarySystemId=0},[100]={name="Lacobus",description="Lacobus is an ice planet that also features large bodies of water. The arkship geological survey reports deep oceans alongside a frozen and rough mountainous environment. Lacobus seems to feature regional geothermal activity allowing for the presence of water on the surface.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.7571,atmosphericEngineMaxAltitude=11120,biosphere="Ice",classification="Psychroplanet",bodyId=100,GM=13975172474,gravity=0.45611622622739767,fullAtmosphericDensityMaxAltitude=-20,habitability="Average",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=12510,numSatellites=3,positionFromSun=10,center={x=98865536,y=-13534464,z=-934461.99},radius=55650,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=6790,surfaceArea=38917074944,surfaceAverageAltitude=800,surfaceMaxAltitude=1660,surfaceMinAltitude=250,systemZone="Average",territories=50432,type="Planet",waterLevel=0,planetarySystemId=0},[102]={name="Lacobus Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=102,GM=444981600,gravity=0.14403669598391783,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=99180968,y=-13783862,z=-926156.4},radius=18000,safeAreaEdgeAltitude=500000,size="XL",spaceEngineMinAltitude=0,surfaceArea=4071504128,surfaceAverageAltitude=150,surfaceMaxAltitude=300,surfaceMinAltitude=10,systemZone=nil,territories=5072,type="",waterLevel=nil,planetarySystemId=0},[103]={name="Lacobus Moon 2",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=103,GM=211503600,gravity=0.11202853997062348,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=99250052,y=-13629215,z=-1059341.4},radius=14000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=0,surfaceArea=2463008768,surfaceAverageAltitude=-1380,surfaceMaxAltitude=-1280,surfaceMinAltitude=-1880,systemZone=nil,territories=3002,type="",waterLevel=nil,planetarySystemId=0},[101]={name="Lacobus Moon 3",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=101,GM=264870000,gravity=0.12003058201190042,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=98905288.17,y=-13950921.1,z=-647589.53},radius=15000,safeAreaEdgeAltitude=500000,size="L",spaceEngineMinAltitude=0,surfaceArea=2827433472,surfaceAverageAltitude=500,surfaceMaxAltitude=820,surfaceMinAltitude=3,systemZone=nil,territories=3632,type="",waterLevel=nil,planetarySystemId=0},[1]={name="Madis",description="Madis is a barren wasteland of a rock; it sits closest to the sun and temperatures reach extreme highs during the day. The arkship geological survey reports long rocky valleys intermittently separated by small ravines.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.8629,atmosphericEngineMaxAltitude=7165,biosphere="Barren",classification="hyperthermoplanet",bodyId=1,GM=6930729684,gravity=0.36009174603570127,fullAtmosphericDensityMaxAltitude=220,habitability="Low",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=8050,numSatellites=3,positionFromSun=1,center={x=17465536,y=22665536,z=-34464},radius=44300,safeAreaEdgeAltitude=500000,size="XS",spaceEngineMinAltitude=4480,surfaceArea=24661377024,surfaceAverageAltitude=750,surfaceMaxAltitude=850,surfaceMinAltitude=670,systemZone="Low",territories=30722,type="Planet",waterLevel=nil,planetarySystemId=0},[10]={name="Madis Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=10,GM=78480000,gravity=0.08002039003323584,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=17448118.224,y=22966846.286,z=143078.82},radius=10000,safeAreaEdgeAltitude=500000,size="XL",spaceEngineMinAltitude=0,surfaceArea=1256637056,surfaceAverageAltitude=210,surfaceMaxAltitude=420,surfaceMinAltitude=0,systemZone=nil,territories=1472,type="",waterLevel=nil,planetarySystemId=0},[11]={name="Madis Moon 2",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=11,GM=237402000,gravity=0.09602446196397631,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=17194626,y=22243633.88,z=-214962.81},radius=12000,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=0,surfaceArea=1809557376,surfaceAverageAltitude=-700,surfaceMaxAltitude=300,surfaceMinAltitude=-2900,systemZone=nil,territories=1922,type="",waterLevel=nil,planetarySystemId=0},[12]={name="Madis Moon 3",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=12,GM=265046609,gravity=0.12003058201190042,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=17520614,y=22184730,z=-309989.99},radius=15000,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=0,surfaceArea=2827433472,surfaceAverageAltitude=700,surfaceMaxAltitude=1100,surfaceMinAltitude=0,systemZone=nil,territories=3632,type="",waterLevel=nil,planetarySystemId=0},[26]={name="Sanctuary",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9666,atmosphericEngineMaxAltitude=6935,biosphere="",classification="",bodyId=26,GM=68234043600,gravity=1.0000000427743831,fullAtmosphericDensityMaxAltitude=-30,habitability="",hasAtmosphere=true,isSanctuary=true,noAtmosphericDensityAltitude=7800,numSatellites=0,positionFromSun=0,center={x=-1404835,y=562655,z=-285074},radius=83400,safeAreaEdgeAltitude=0,size="L",spaceEngineMinAltitude=4230,surfaceArea=87406149632,surfaceAverageAltitude=80,surfaceMaxAltitude=500,surfaceMinAltitude=-60,systemZone=nil,territories=111632,type="",waterLevel=0,planetarySystemId=0},[6]={name="Sicari",description="Sicari is a typical desert planet; it has survived for millenniums and will continue to endure. While not the most habitable of environments it remains a relatively untouched and livable planet of the Alioth sector. The arkship geological survey reports large flatlands alongside steep plateaus.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.897,atmosphericEngineMaxAltitude=7725,biosphere="Desert",classification="Mesoplanet",bodyId=6,GM=10502547741,gravity=0.4081039739797361,fullAtmosphericDensityMaxAltitude=-625,habitability="Average",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=8770,numSatellites=0,positionFromSun=6,center={x=52765536,y=27165538,z=52065535},radius=51100,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=4480,surfaceArea=32813432832,surfaceAverageAltitude=130,surfaceMaxAltitude=220,surfaceMinAltitude=50,systemZone="Average",territories=41072,type="Planet",waterLevel=nil,planetarySystemId=0},[7]={name="Sinnen",description="Sinnen is a an empty and rocky hell. With no atmosphere to speak of it is one of the least hospitable planets in the sector. The arkship geological survey reports mostly flatlands alongside deep ravines which look to have once been riverbeds. This planet simply looks to have dried up and died, likely from solar winds.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9226,atmosphericEngineMaxAltitude=10335,biosphere="Desert",classification="Mesoplanet",bodyId=7,GM=13033380591,gravity=0.4401121421448438,fullAtmosphericDensityMaxAltitude=-120,habitability="Average",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=11620,numSatellites=1,positionFromSun=7,center={x=58665538,y=29665535,z=58165535},radius=54950,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=6270,surfaceArea=37944188928,surfaceAverageAltitude=317,surfaceMaxAltitude=360,surfaceMinAltitude=23,systemZone="Average",territories=48002,type="Planet",waterLevel=nil,planetarySystemId=0},[70]={name="Sinnen Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=70,GM=396912600,gravity=0.1360346539426409,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=58969616,y=29797945,z=57969449},radius=17000,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=0,surfaceArea=3631681280,surfaceAverageAltitude=-2050,surfaceMaxAltitude=-1950,surfaceMinAltitude=-2150,systemZone=nil,territories=4322,type="",waterLevel=nil,planetarySystemId=0},[110]={name="Symeon",description="Symeon is an ice planet mysteriously split at the equator by a band of solid desert. Exactly how this phenomenon is possible is unclear but some sort of weather anomaly may be responsible. The arkship geological survey reports a fairly diverse mix of flat-lands alongside mountainous formations.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9559,atmosphericEngineMaxAltitude=6920,biosphere="Ice, Desert",classification="Hybrid",bodyId=110,GM=9204742375,gravity=0.3920998898971822,fullAtmosphericDensityMaxAltitude=-30,habitability="High",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=7800,numSatellites=0,positionFromSun=11,center={x=14165536,y=-85634465,z=-934464.3},radius=49050,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=4230,surfaceArea=30233462784,surfaceAverageAltitude=39,surfaceMaxAltitude=450,surfaceMinAltitude=126,systemZone="High",territories=38882,type="Planet",waterLevel=nil,planetarySystemId=0},[4]={name="Talemai",description="Talemai is a planet in the final stages of an Ice Age. It seems likely that the planet was thrown into tumult by a cataclysmic volcanic event which resulted in its current state. The arkship geological survey reports large mountainous regions across the entire planet.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.8776,atmosphericEngineMaxAltitude=9685,biosphere="Barren",classification="Psychroplanet",bodyId=4,GM=14893847582,gravity=0.4641182439650478,fullAtmosphericDensityMaxAltitude=-78,habitability="Average",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=10890,numSatellites=3,positionFromSun=4,center={x=-13234464,y=55765536,z=465536},radius=57500,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=5890,surfaceArea=41547563008,surfaceAverageAltitude=580,surfaceMaxAltitude=610,surfaceMinAltitude=520,systemZone="Average",territories=52922,type="Planet",waterLevel=nil,planetarySystemId=0},[42]={name="Talemai Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=42,GM=264870000,gravity=0.12003058201190042,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=-13058408,y=55781856,z=740177.76},radius=15000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=0,surfaceArea=2827433472,surfaceAverageAltitude=720,surfaceMaxAltitude=850,surfaceMinAltitude=0,systemZone=nil,territories=3632,type="",waterLevel=nil,planetarySystemId=0},[40]={name="Talemai Moon 2",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=40,GM=141264000,gravity=0.09602446196397631,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=-13503090,y=55594325,z=769838.64},radius=12000,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=0,surfaceArea=1809557376,surfaceAverageAltitude=250,surfaceMaxAltitude=450,surfaceMinAltitude=0,systemZone=nil,territories=1922,type="",waterLevel=nil,planetarySystemId=0},[41]={name="Talemai Moon 3",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=41,GM=106830900,gravity=0.08802242599860607,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=-12800515,y=55700259,z=325207.84},radius=11000,safeAreaEdgeAltitude=500000,size="XS",spaceEngineMinAltitude=0,surfaceArea=1520530944,surfaceAverageAltitude=190,surfaceMaxAltitude=400,surfaceMinAltitude=0,systemZone=nil,territories=1922,type="",waterLevel=nil,planetarySystemId=0},[8]={name="Teoma",description="[REDACTED] The arkship geological survey [REDACTED]. This planet should not be here.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.7834,atmosphericEngineMaxAltitude=5580,biosphere="Forest",classification="Mesoplanet",bodyId=8,GM=18477723600,gravity=0.48812434578525177,fullAtmosphericDensityMaxAltitude=15,habitability="High",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=6280,numSatellites=0,positionFromSun=8,center={x=80865538,y=54665536,z=-934463.94},radius=62000,safeAreaEdgeAltitude=500000,size="L",spaceEngineMinAltitude=3420,surfaceArea=48305131520,surfaceAverageAltitude=700,surfaceMaxAltitude=1100,surfaceMinAltitude=-200,systemZone="High",territories=60752,type="Planet",waterLevel=0,planetarySystemId=0},[3]={name="Thades",description="Thades is a scorched desert planet. Perhaps it was once teaming with life but now all that remains is ash and dust. The arkship geological survey reports a rocky mountainous planet bisected by a massive unnatural ravine; something happened to this planet.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.03552,atmosphericEngineMaxAltitude=32180,biosphere="Desert",classification="Thermoplanet",bodyId=3,GM=11776905000,gravity=0.49612641213015557,fullAtmosphericDensityMaxAltitude=150,habitability="Low",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=32800,numSatellites=2,positionFromSun=3,center={x=29165536,y=10865536,z=65536},radius=49000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=21400,surfaceArea=30171856896,surfaceAverageAltitude=13640,surfaceMaxAltitude=13690,surfaceMinAltitude=370,systemZone="Low",territories=38882,type="Planet",waterLevel=nil,planetarySystemId=0},[30]={name="Thades Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=30,GM=211564034,gravity=0.11202853997062348,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=29214402,y=10907080.695,z=433858.2},radius=14000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=0,surfaceArea=2463008768,surfaceAverageAltitude=60,surfaceMaxAltitude=300,surfaceMinAltitude=0,systemZone=nil,territories=3002,type="",waterLevel=nil,planetarySystemId=0},[31]={name="Thades Moon 2",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=31,GM=264870000,gravity=0.12003058201190042,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=29404193,y=10432768,z=19554.131},radius=15000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=0,surfaceArea=2827433472,surfaceAverageAltitude=70,surfaceMaxAltitude=350,surfaceMinAltitude=0,systemZone=nil,territories=3632,type="",waterLevel=nil,planetarySystemId=0}}}end;local function d2()local function d3(d4)return type(d4)=='number'end;local function d5(d4)return type(tonumber(d4))=='number'end;local function d6(d7)return type(d7)=='table'end;local function d8(d9)return type(d9)=='string'end;local function da(d0)return d6(d0)and d3(d0.x and d0.y and d0.z)end;local function db(dc)return d6(dc)and d3(dc.latitude and dc.longitude and dc.altitude and dc.bodyId and dc.systemId)end;local dd=math.pi/180;local de=180/math.pi;local epsilon=1e-10;local y=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local df='::pos{'..y..','..y..','..y..','..y..','..y..'}'local utils=require('cpml.utils')local vec3=require('cpml.vec3')local function dg(d4)local cJ=string.gsub(string.reverse(e('%.4f',d4)),'^0*%.?','')return cJ==''and'0'or string.reverse(cJ)end;local function dh(di)if da(di)then return e('{x=%.3f,y=%.3f,z=%.3f}',di.x,di.y,di.z)end;if d6(di)and not getmetatable(di)then local dj={}local dk=next(di)if type(dk)=='nil'or dk==1 then dj=di else for c_,d0 in pairs(di)do local ch=dh(d0)if type(c_)=='number'then table.insert(dj,e('[%s]=%s',c_,ch))else table.insert(dj,e('%s=%s',c_,ch))end end end;return e('{%s}',table.concat(dj,','))end;if d8(di)then return e("'%s'",di:gsub("'",[[\']]))end;return tostring(di)end;local dl={}dl.__index=dl;dl.__tostring=function(di,dm)local dn={}for c_ in pairs(di)do table.insert(dn,c_)end;table.sort(dn)local dj={}for _,c_ in ipairs(dn)do local ch=dh(di[c_])if type(c_)=='number'then table.insert(dj,e('[%s]=%s',c_,ch))else table.insert(dj,e('%s=%s',c_,ch))end end;if dm then return e('%s%s',dm,table.concat(dj,',\n'..dm))end;return e('{%s}',table.concat(dj,','))end;dl.__eq=function(dp,dq)return dp.planetarySystemId==dq.planetarySystemId and dp.bodyId==dq.bodyId and ck(dp.radius,dq.radius)and ck(dp.center.x,dq.center.x)and ck(dp.center.y,dq.center.y)and ck(dp.center.z,dq.center.z)and ck(dp.GM,dq.GM)end;local function dr(ds,dt,du,dv,dw)assert(d5(ds),'Argument 1 (planetarySystemId) must be a number:'..type(ds))assert(d5(dt),'Argument 2 (bodyId) must be a number:'..type(dt))assert(d5(du),'Argument 3 (radius) must be a number:'..type(du))assert(d6(dv),'Argument 4 (worldCoordinates) must be a array or vec3.'..type(dv))assert(d5(dw),'Argument 5 (GM) must be a number:'..type(dw))return setmetatable({planetarySystemId=tonumber(ds),bodyId=tonumber(dt),radius=tonumber(du),center=vec3(dv),GM=tonumber(dw)},dl)end;local MapPosition={}MapPosition.__index=MapPosition;MapPosition.__tostring=function(dx)return e('::pos{%d,%d,%s,%s,%s}',dx.systemId,dx.bodyId,dg(dx.latitude*de),dg(dx.longitude*de),dg(dx.altitude))end;MapPosition.__eq=function(dp,dq)return dp.bodyId==dq.bodyId and dp.systemId==dq.systemId and ck(dp.latitude,dq.latitude)and ck(dp.altitude,dq.altitude)and(ck(dp.longitude,dq.longitude)or ck(dp.latitude,math.pi/2)or ck(dp.latitude,-math.pi/2))end;local function dy(dz,dt,dA,dB,dC)local ds=dz;if d8(dz)and not dB and not dC and not dt and not dA then ds,dt,dA,dB,dC=n(dz,df)assert(ds,'Argument 1 (position string) is malformed.')else assert(d5(ds),'Argument 1 (systemId) must be a number:'..type(ds))assert(d5(dt),'Argument 2 (bodyId) must be a number:'..type(dt))assert(d5(dA),'Argument 3 (latitude) must be in degrees:'..type(dA))assert(d5(dB),'Argument 4 (longitude) must be in degrees:'..type(dB))assert(d5(dC),'Argument 5 (altitude) must be in meters:'..type(dC))end;ds=tonumber(ds)dt=tonumber(dt)dA=tonumber(dA)dB=tonumber(dB)dC=tonumber(dC)if dt==0 then return setmetatable({latitude=dA,longitude=dB,altitude=dC,bodyId=dt,systemId=ds},MapPosition)end;return setmetatable({latitude=dd*q(dA,-90,90),longitude=dd*(dB%360),altitude=dC,bodyId=dt,systemId=ds},MapPosition)end;local dD={}dD.__index=dD;dD.__tostring=function(di,dm)local dE=dm and dm..'  'local dF={}local dn={}for c_ in pairs(di)do table.insert(dn,c_)end;table.sort(dn)for _,dG in ipairs(dn)do bdy=di[dG]local dH=dl.__tostring(bdy,dE)if dm then table.insert(dF,e('[%s]={\n%s\n%s}',dG,dH,dm))else table.insert(dF,e('  [%s]=%s',dG,dH))end end;if dm then return e('\n%s%s%s',dm,table.concat(dF,',\n'..dm),dm)end;return e('{\n%s\n}',table.concat(dF,',\n'))end;local function dI(dJ)local b0={}local pid;for _,d0 in pairs(dJ)do local dK=d0.planetarySystemId;if type(dK)~='number'then error('Invalid planetary system ID: '..tostring(dK))elseif pid and dK~=pid then error('Mistringmatch planetary system IDs: '..dK..' and '..pid)end;local dL=d0.bodyId;if type(dL)~='number'then error('Invalid body ID: '..tostring(dL))elseif b0[dL]then error('Duplicate body ID: '..tostring(dL))end;setmetatable(d0.center,getmetatable(vec3.unit_x))b0[dL]=setmetatable(d0,dl)pid=dK end;return setmetatable(b0,dD)end;b4={}local function dM(dJ)return setmetatable({galaxyAtlas=dJ or{}},b4)end;b4.__index=function(d7,i)if type(i)=='number'then local system=d7.galaxyAtlas[i]return dI(system)end;return rawget(b4,i)end;b4.__pairs=function(di)return function(d7,c_)local dN,nv=next(d7,c_)return dN,nv and dI(nv)end,di.galaxyAtlas,nil end;b4.__tostring=function(di)local dO={}for _,dP in pairs(di or{})do local dQ=dP:getPlanetarySystemId()local dR=dD.__tostring(dP,'    ')table.insert(dO,e('  [%s]={%s\n  }',dQ,dR))end;return e('{\n%s\n}\n',table.concat(dO,',\n'))end;b4.BodyParameters=dr;b4.MapPosition=dy;b4.PlanetarySystem=dI;function b4.createBodyParameters(dS,dt,dT,dU,dV,dW,dX)assert(d5(dS),'Argument 1 (planetarySystemId) must be a number:'..type(dS))assert(d5(dt),'Argument 2 (bodyId) must be a number:'..type(dt))assert(d5(dT),'Argument 3 (surfaceArea) must be a number:'..type(dT))assert(d6(dU),'Argument 4 (aPosition) must be an array or vec3:'..type(dU))assert(d6(dV),'Argument 5 (verticalAtPosition) must be an array or vec3:'..type(dV))assert(d5(dW),'Argument 6 (altitude) must be in meters:'..type(dW))assert(d5(dX),'Argument 7 (gravityAtPosition) must be number:'..type(dX))local du=math.sqrt(dT/4/math.pi)local ag=du+dW;local dY=vec3(dU)+ag*vec3(dV)local dw=dX*ag*ag;return dr(dS,dt,du,dY,dw)end;b4.isMapPosition=db;function b4:getPlanetarySystem(dz)if i==nil then i=0 end;if nv==nil then nv=0 end;local dS=dz;if db(dz)then dS=dz.systemId end;if type(dS)=='number'then local system=self.galaxyAtlas[i]if system then if getmetatable(nv)~=dD then system=dI(system)end;return system end end end;function dD:castIntersections(dZ,cI,d_,e0)local d_=d_ or function(e1)return 1.05*e1.radius end;local e2={}if e0 then for _,i in ipairs(e0)do e2[i]=self[i]end else e0={}for c_,e1 in pairs(self)do table.insert(e0,c_)e2[c_]=e1 end end;local function e3(e4,e5)local e6=e2[e4].center-dZ;local e7=e2[e5].center-dZ;return e6:len()<e7:len()end;table.sort(e0,e3)local e8=cI:normalize()for i,dK in ipairs(e0)do local e1=e2[dK]local e9=e1.center-dZ;local du=d_(e1)local ea=e9:dot(e8)local eb=ea^2-(e9:len2()-du^2)if eb>=0 then local ec=math.sqrt(eb)local ed=ea+ec;local ee=ea-ec;if ee>0 then return e1,ed,ee elseif ed>0 then return e1,ed,nil end end end;return nil,nil,nil end;function dD:closestBody(ef)assert(type(ef)=='table','Invalid coordinates.')local eg,e1;local eh=vec3(ef)for _,ei in pairs(self)do local ej=(ei.center-eh):len2()if(not e1 or ej<eg)and ei.name~="Space"then e1=ei;eg=ej end end;return e1 end;function dD:convertToBodyIdAndWorldCoordinates(dz)local ek=dz;if d8(dz)then ek=dy(dz)end;if ek.bodyId==0 then return 0,vec3(ek.latitude,ek.longitude,ek.altitude)end;local ei=self:getBodyParameters(ek)if ei then return ek.bodyId,ei:convertToWorldCoordinates(ek)end end;function dD:getBodyParameters(dz)local dt=dz;if db(dz)then dt=dz.bodyId end;assert(d5(dt),'Argument 1 (bodyId) must be a number:'..type(dt))return self[dt]end;function dD:getPlanetarySystemId()local _,d0=next(self)return d0 and d0.planetarySystemId end;function dl:convertToMapPosition(dv)assert(d6(dv),'Argument 1 (worldCoordinates) must be an array or vec3:'..type(dv))local el=vec3(dv)if self.bodyId==0 then return setmetatable({latitude=el.x,longitude=el.y,altitude=el.z,bodyId=0,systemId=self.planetarySystemId},MapPosition)end;local em=el-self.center;local ag=em:len()local dC=ag-self.radius;local dA=0;local dB=0;if not ck(ag,0)then local en=m(em.y,em.x)dB=en>=0 and en or 2*math.pi+en;dA=math.pi/2-math.acos(em.z/ag)end;return setmetatable({latitude=dA,longitude=dB,altitude=dC,bodyId=self.bodyId,systemId=self.planetarySystemId},MapPosition)end;function dl:convertToWorldCoordinates(dz)local ek=d8(dz)and dy(dz)or dz;if ek.bodyId==0 then return vec3(ek.latitude,ek.longitude,ek.altitude)end;assert(db(ek),'Argument 1 (mapPosition) is not an instance of "MapPosition".')assert(ek.systemId==self.planetarySystemId,'Argument 1 (mapPosition) has a different planetary system ID.')assert(ek.bodyId==self.bodyId,'Argument 1 (mapPosition) has a different planetary body ID.')local eo=math.cos(ek.latitude)return self.center+(self.radius+ek.altitude)*vec3(eo*math.cos(ek.longitude),eo*math.sin(ek.longitude),math.sin(ek.latitude))end;function dl:getAltitude(dv)return(vec3(dv)-self.center):len()-self.radius end;function dl:getDistance(dv)return(vec3(dv)-self.center):len()end;function dl:getGravity(dv)local ep=self.center-vec3(dv)local eq=ep:len2()return self.GM/eq*ep/math.sqrt(eq)end;return setmetatable(b4,{__call=function(_,...)return dM(...)end})end;local function er()local b6={}local es=30000000/3600;local et=es*es;local eu=100;local function ev(d0)return 1/math.sqrt(1-d0*d0/et)end;function b6.computeAccelerationTime(ew,ex,ey)local ez=es*math.asin(ew/es)return(es*math.asin(ey/es)-ez)/ex end;function b6.computeDistanceAndTime(ew,ey,eA,eB,eC,eD)eC=eC or 0;eD=eD or 0;local eE=ew<=ey;local eF=eB*(eE and 1 or-1)/eA;local eG=-eD/eA;local eH=eF+eG;if eE and eH<=0 or not eE and eH>=0 then return-1,-1 end;local eI,eJ=0,0;if eF~=0 and eC>0 then local ez=math.asin(ew/es)local eK=math.pi*(eF/2+eG)local eL=eF*eC;local eM=es*math.pi;local d0=function(d7)local eN=(eK*d7-eL*math.sin(math.pi*d7/2/eC)+eM*ez)/eM;local eO=math.tan(eN)return es*eO/math.sqrt(eO*eO+1)end;local eP=eE and function(d9)return d9>=ey end or function(d9)return d9<=ey end;eJ=2*eC;if eP(d0(eJ))then local eQ=0;while c(eJ-eQ)>0.5 do local d7=(eJ+eQ)/2;if eP(d0(d7))then eJ=d7 else eQ=d7 end end end;local eR=ew;local eS=eJ/eu;for eT=1,eu do local eU=d0(eT*eS)eI=eI+(eU+eR)*eS/2;eR=eU end;if eJ<2*eC then return eI,eJ end;ew=eR end;local ez=es*math.asin(ew/es)local bB=(es*math.asin(ey/es)-ez)/eH;local eV=et*math.cos(ez/es)/eH;local ag=eV-et*math.cos((eH*bB+ez)/es)/eH;return ag+eI,bB+eJ end;function b6.computeTravelTime(ew,ex,ag)if ag==0 then return 0 end;if ex>0 then local ez=es*math.asin(ew/es)local eV=et*math.cos(ez/es)/ex;return(es*math.acos(ex*(eV-ag)/et)-ez)/ex end;if ew==0 then return-1 end;assert(ew>0,'Acceleration and initial speed are both zero.')return ag/ew end;function b6.lorentz(d0)return ev(d0)end;return b6 end;local function eW()local vec3=require('cpml.vec3')local d2=d2()local function d8(d9)return type(d9)=='string'end;local function d6(d7)return type(d7)=='table'end;Kepler={}Kepler.__index=Kepler;function Kepler:escapeAndOrbitalSpeed(dC)assert(self.body)local ag=dC+self.body.radius;if not ck(ag,0)then local orbit=math.sqrt(self.body.GM/ag)return math.sqrt(2)*orbit,orbit end;return nil,nil end;function Kepler:orbitalParameters(dz,eX)assert(self.body)assert(d6(dz)or d8(dz))assert(d6(eX))local eY=(d8(dz)or d2.isMapPosition(dz))and self.body:convertToWorldCoordinates(dz)or vec3(dz)local d0=vec3(eX)local eZ=eY-self.body.center;local e7=d0:len2()local e_=eZ:len()local f0=self.body.GM;local f1=((e7-f0/e_)*eZ-eZ:dot(d0)*d0)/f0;local cl=f0/(2*f0/e_-e7)local f2=f1:len()local e8=f1:normalize()local f3=cl*(1-f2)local f4=cl*(1+f2)local f5=f3*e8+self.body.center;local f6=f2<=1 and-f4*e8+self.body.center or nil;local f7=math.sqrt(cl*f0*(1-f2*f2))local f8=f6 and 2*math.pi*math.sqrt(cl^3/f0)local f9=math.acos(f1:dot(eZ)/(f2*e_))if eZ:dot(d0)<0 then f9=-(f9-2*math.pi)end;local fa=math.acos((math.cos(f9)+f2)/(1+f2*math.cos(f9)))local fb=fa;if fb<0 then fb=fb+2*math.pi end;local fc=fb-f2*math.sin(fb)local fd=0;local fe=0;local ff=0;if f8~=nil then fd=fc/(2*math.pi/f8)fe=f8-fd;ff=fe+f8/2;if f9-math.pi>0 then fe=fd;ff=fe+f8/2 end;if ff>f8 then ff=ff-f8 end end;return{periapsis={position=f5,speed=f7/f3,circularOrbitSpeed=math.sqrt(f0/f3),altitude=f3-self.body.radius},apoapsis=f6 and{position=f6,speed=f7/f4,circularOrbitSpeed=math.sqrt(f0/f4),altitude=f4-self.body.radius},currentVelocity=d0,currentPosition=eY,eccentricity=f2,period=f8,eccentricAnomaly=fa,meanAnomaly=fc,timeToPeriapsis=fe,timeToApoapsis=ff}end;local function fg(fh)local ei=d2.BodyParameters(fh.planetarySystemId,fh.bodyId,fh.radius,fh.center,fh.GM)return setmetatable({body=ei},Kepler)end;return setmetatable(Kepler,{__call=function(_,...)return fg(...)end})end;local function fi()local fj=0;local function fk(fl)local du=500000;local fm,fn,fo=math.huge;local fp=false;local fq=vec3({13771471,7435803,-128971})local fr=18000000;fm=vec3(fl):dist(fq)if fm<fr then return true,c(fm-fr),"Safe Zone",0 end;fn=vec3(fl):dist(vec3(planet.center))if fn<du then fp=true end;if c(fn-du)<c(fm-fr)then return fp,c(fn-du),planet.name,planet.bodyId else return fp,c(fm-fr),"Safe Zone",0 end end;local function fs(d0)if aI==1920 then return d0 else return x(aI*d0/1920,0)end end;local function ft(d0)if aJ==1080 then return d0 else return x(aJ*d0/1080,0)end end;local function fu()return w()==0 and userControlScheme~="keyboard"and l()==0 end;local function fv()local fw="TRAVEL"if not bO then fw="CRUISE"end;if Autopilot then fw="AUTOPILOT"end;return fw end;local function fx(fy,aZ,cb,fz,fA,fB,fC,fD)local fE=1;local fF=2;local fG=3;local fH=4;local fI=5;local fJ=6;local fK=""local fL=0;local fM=fuelY;local fN=fuelY+5;if not BarFuelDisplay then fN=fN+5 end;if l()==1 and not RemoteHud then fM=fM-50;fN=fN-50 end;if fA=="ATMO"then fK="atmofueltank"elseif fA=="SPACE"then fK="spacefueltank"else fK="rocketfueltank"end;fL=_G[fK.."_size"]if#fB>0 then for i=1,#fB do local fO=string.sub(fB[i][fF],1,12)local fP=0;for fQ=1,fL do if fB[i][fF]==f(unit[fK.."_"..fQ].getData()).name then fP=fQ;break end end;if aZ or fC[i]==nil or fD[i]==nil then local fR=0;local fS=0;local fT=0;local fU=0;local fV=p()if fP~=0 then fD[i]=f(unit[fK.."_"..fP].getData()).percentage;fC[i]=f(unit[fK.."_"..fP].getData()).timeLeft;if fC[i]=="n/a"then fC[i]=0 end else fT=k(fB[i][fE])-fB[i][fH]fR=fB[i][fG]fD[i]=d(0.5+fT*100/fR)fS=fB[i][fI]fU=fB[i][fJ]if fS<=fT then fC[i]=0 else fC[i]=d(0.5+fT/((fS-fT)/(fV-fU)))end;fB[i][fI]=fT;fB[i][fJ]=fV end end;if fO==fz then fO=e("%s %d",fA,i)end;if fP==0 then fO=fO.." *"end;local fW;if fC[i]==0 then fW=""else fW=cR(fC[i])end;if fD[i]~=nil then local fX=d(fD[i]*2.55)local fY=e("rgb(%d,%d,%d)",255-fX,fX,0)local ce=""if fW~=""and fC[i]<120 or fD[i]<5 then if aZ then ce=[[class="red"]]end end;if BarFuelDisplay then table.insert(fy,e([[
                                            <g class="pdim">                        
                                            <rect fill=grey class="bar" x="%d" y="%d" width="100" height="13"></rect></g>
                                            <g class="bar txtstart">
                                            <rect fill=%s width="%d" height="13" x="%d" y="%d"></rect>
                                            <text fill=black x="%d" y="%d">%s%% %s</text>
                                            </g>]],cb,fN,fY,fD[i],cb,fN,cb+2,fN+10,fD[i],fW))fy[#fy+1]=ca(cb,fM,fO,ce.."txtstart pdim txtfuel")fM=fM-30;fN=fN-30 else fy[#fy+1]=ca(cb,fM,fO,ce.." pdim txtfuel")fy[#fy+1]=ca(cb,fN,e("%d%% %s",fD[i],fW),"pdim txtfuel","fill:"..fY)fM=fM+30;fN=fN+30 end end end end end;local function fZ(fy,dC)if dC<200000 and not ap or dC and ap then local f_=0;if c(bI)>1 then f_=45*math.log(c(bI),10)if bI<0 then f_=-f_ end end;fy[#fy+1]=e([[
                                <g class="pbright txt txtvspd" transform="translate(%d %d) scale(0.6)">
                                        <text x="31" y="-41">1000</text>
                                        <text x="-10" y="-65">100</text>
                                        <text x="-54" y="-45">10</text>
                                        <text x="-73" y="3">O</text>
                                        <text x="-56" y="52">-10</text>
                                        <text x="-14" y="72">-100</text>
                                        <text x="29" y="50">-1000</text>
                                        <text x="85" y="0" class="txtvspdval txtend">%d m/s</text>
                                    <g class="linethick">
                                        <path d="m-41 75 2.5-4.4m17 12 1.2-4.9m20 7.5v-10m-75-34 4.4-2.5m-12-17 4.9-1.2m17 40 7-7m-32-53h10m34-75 2.5 4.4m17-12 1.2 4.9m20-7.5v10m-75 34 4.4 2.5m-12 17 4.9 1.2m17-40 7 7m-32 53h10m116 75-2.5-4.4m-17 12-1.2-4.9m40-17-7-7m-12-128-2.5 4.4m-17-12-1.2 4.9m40 17-7 7"/>
                                        <circle r="90" />
                                    </g>
                                    <path transform="rotate(%d)" d="m-0.094-7c-22 2.2-45 4.8-67 7 23 1.7 45 5.6 67 7 4.4-0.068 7.8-4.9 6.3-9.1-0.86-2.9-3.7-5-6.8-4.9z" />
                                </g>
                            ]],vSpdMeterX,vSpdMeterY,d(bI),d(f_))end;return fy end;local function g0(g1)local g2=-bH;g1=g1-g1:project_on(g2)local g3=vec3(0,0,1)g3=g3-g3:project_on(g2)local g4=g3:cross(g2)local f_=g3:angle_between(g1)*constants.rad2deg;if g1:dot(g4)<0 then f_=360-f_ end;return f_ end;local function g5(fy,centerX,centerY,g6,g7,cw)local g8=circleRad;local g9=20;local ga=d(g6)if cw then for i=-45,45,5 do local gb=i;fy[#fy+1]=e([[<g transform="rotate(%f,%d,%d)">]],gb,centerX,centerY)len=5;if i%15==0 then len=15 elseif i%10==0 then len=10 end;fy[#fy+1]=e([[<line x1=%d y1=%d x2=%d y2="%d"/></g>]],centerX,centerY+g8+g9-len,centerX,centerY+g8+g9)end;fy[#fy+1]=ca(centerX,centerY+g8+g9-35,g7,"pdim txt txtmid")fy[#fy+1]=ca(centerX,centerY+g8+g9-25,ga.." deg","pdim txt txtmid")fy[#fy+1]=e([[<g transform="rotate(%f,%d,%d)">]],-g6,centerX,centerY)fy[#fy+1]=e([[<<polygon points="%d,%d %d,%d %d,%d"/>]],centerX-5,centerY+g8+g9-20,centerX+5,centerY+g8+g9-20,centerX,centerY+g8+g9-15)fy[#fy+1]="</g>"end;local gc=ga;if cw then gc=g0(bD)end;local gd=20;local ge=d(gc)local gf=0;local gg=centerY+g8+g9+20;local gh=centerX;if g7~="YAW"then gg=ft(130)gh=fs(960)end;local gi=[[<path class="txttick line" d="]]local gj=d(ge-(gd+10)-ge%5+0.5)for i=gj+60,gj,-5 do local cb=gh-(-i*5+gc*5)if i%10==0 then gf=10;local y=i;if y==360 then y=0 elseif y>360 then y=y-360 elseif y<0 then y=y+360 end;fy[#fy+1]=ca(cb+5,gg-12,y)elseif i%5==0 then gf=5 end;if gf==10 then gi=e([[%s M %f %f v %d]],gi,cb,gg-5,gf)else gi=e([[%s M %f %f v %d]],gi,cb,gg-2.5,gf)end end;fy[#fy+1]=gi..[["/>]]fy[#fy+1]=e([[<<polygon points="%d,%d %d,%d %d,%d"/>]],gh-5,gg+10,gh+5,gg+10,gh,gg+5)if cw then g7="HDG"end;fy[#fy+1]=ca(gh,gg+25,ge.."deg","pdim txt txtmid","")fy[#fy+1]=ca(gh,gg+35,g7,"pdim txt txtmid","")end;local function gk(fy,gl,g6,centerX,centerY,cw,gm,eU)local g8=circleRad;local gn=d(g8*3/5)if g8>0 then local go=d(gl)local len=0;local gi=e([[<path transform="rotate(%f,%d,%d)" class="dim line" d="]],-1*g6,centerX,centerY)if not ap then gi=e([[<path transform="rotate(0,%d,%d)" class="dim line" d="]],centerX,centerY)end;fy[#fy+1]=e([[<clipPath id="cut"><circle r="%f" cx="%d" cy="%d"/></clipPath>]],g8-1,centerX,centerY)fy[#fy+1]=[[<g class="dim txttick" clip-path="url(#cut)">]]for i=d(go-30-go%5+0.5),d(go+30+go%5+0.5),5 do if i%10==0 then len=30 elseif i%5==0 then len=20 end;local cc=centerY+-i*5+gl*5;if len==30 then gi=e([[%s M %d %f h %d]],gi,centerX-gn-len,cc,len)if ap then fy[#fy+1]=e([[<g path transform="rotate(%f,%d,%d)" class="pdim txt txtmid"><text x="%d" y="%f">%d</text></g>]],-1*g6,centerX,centerY,centerX-gn+10,cc,i)fy[#fy+1]=e([[<g path transform="rotate(%f,%d,%d)" class="pdim txt txtmid"><text x="%d" y="%f">%d</text></g>]],-1*g6,centerX,centerY,centerX+gn-10,cc,i)if i==0 or i==180 or i==-180 then fy[#fy+1]=e([[<path transform="rotate(%f,%d,%d)" d="m %d,%f %d,0" stroke-width="1" style="fill:none;stroke:#F5B800;" />]],-1*g6,centerX,centerY,centerX-gn+20,cc,gn*2-40)end else fy[#fy+1]=ca(centerX-gn+10,cc,i,"pdim txt txtmid")fy[#fy+1]=ca(centerX+gn-10,cc,i,"pdim txt txtmid")end;gi=e([[%s M %d %f h %d]],gi,centerX+gn,cc,len)else gi=e([[%s M %d %f h %d]],gi,centerX-gn-len,cc,len)gi=e([[%s M %d %f h %d]],gi,centerX+gn,cc,len)end end;fy[#fy+1]=gi..[["/>]]local gp="PITCH"if not cw then gp="REL PITCH"end;if gl>90 and not ap then gl=90-(gl-90)elseif gl<-90 and not ap then gl=-90-(gl+90)end;if g8>200 then if ap then if eU>N then fy[#fy+1]=ca(centerX,centerY-15,"Yaw","pdim txt txtmid")fy[#fy+1]=ca(centerX,centerY+20,gm,"pdim txt txtmid")end;fy[#fy+1]=e([[<g transform="rotate(%f,%d,%d)">]],-g6,centerX,centerY)else fy[#fy+1]=e([[<g transform="rotate(0,%d,%d)">]],centerX,centerY)end;fy[#fy+1]=e([[<<polygon points="%d,%d %d,%d %d,%d"/> class="pdim txtend"><text x="%d" y="%f">%d</text>]],centerX-gn+25,centerY-5,centerX-gn+20,centerY,centerX-gn+25,centerY+5,centerX-gn+50,centerY+4,go)fy[#fy+1]=e([[<<polygon points="%d,%d %d,%d %d,%d"/> class="pdim txtend"><text x="%d" y="%f">%d</text>]],centerX+gn-25,centerY-5,centerX+gn-20,centerY,centerX+gn-25,centerY+5,centerX+gn-30,centerY+4,go)fy[#fy+1]="</g>"end;local gq=d(g8/3)fy[#fy+1]=e([[<path d="m %d,%d %d,0" stroke-width="2" style="fill:none;stroke:#F5B800;" />]],centerX-gq,centerY,g8-gq)if not ap and cw then fy[#fy+1]=e([[<path transform="rotate(%f,%d,%d)" d="m %d,%f %d,0" stroke-width="1" style="fill:none;stroke:#F5B800;" />]],-1*g6,centerX,centerY,centerX-gn+10,centerY,gn*2-20)end;fy[#fy+1]="</g>"if g8<200 then if ap and eU>N then fy[#fy+1]=ca(centerX,centerY-g8,gp,"pdim txt txtmid")fy[#fy+1]=ca(centerX,centerY-g8+10,go,"pdim txt txtmid")fy[#fy+1]=ca(centerX,centerY-15,"Yaw","pdim txt txtmid")fy[#fy+1]=ca(centerX,centerY+20,gm,"pdim txt txtmid")else fy[#fy+1]=ca(centerX,centerY-g8,gp,"pdim txt txtmid")fy[#fy+1]=ca(centerX,centerY-g8+15,go,"pdim txt txtmid")end end end end;local function gr(fy,dC,cw)local gs=altMeterX;local gt=altMeterY;local gu=78;local gv=19;local gw=am;if am~=-1 then fy[#fy+1]=ca(gs+gu,gt+gv+20,e("AGL: %.1fm",am),"pdim altsm txtend")end;if cw and(dC<200000 and not ap or dC and ap)then table.insert(fy,e([[
                                <g class="pdim">                        
                                    <rect class="line" x="%d" y="%d" width="%d" height="%d"/> 
                                    <clipPath id="alt"><rect class="line" x="%d" y="%d" width="%d" height="%d"/></clipPath>
                                    <g clip-path="url(#alt)">]],gs-1,gt-4,gu+2,gv+6,gs+1,gt-1,gu-4,gv))local cz=0;local gx=1;local gy=0;local gz=dC<0;local gA=9;if gz then gA=0 end;local dC=c(dC)while cz<6 do local gB=11;local gC=16;local gD=9;local gE=14;local ce="altsm"if cz>2 then gC=gC+3;gB=gB+2;gE=gE+2;gD=gD-6;ce="altbig"end;if gz then ce=ce.." red"end;local gF=dC/gx%10;local gG=d(gF)local gH=d((gG+1)%10)local gI=gy;if cz==0 then gI=gF-gG;if gz then gI=1-gI end end;if gz and(cz==0 or gy~=0)then local gJ=gH;gH=gG;gG=gJ end;local gK=gC*(gI-1)local gL=gK+gC;local cb=gs+gD+(6-cz)*gB;local cc=gt+gE;fy[#fy+1]=ca(cb,cc+gK,gH,ce)fy[#fy+1]=ca(cb,cc+gL,gG,ce)cz=cz+1;gx=gx*10;if gG==gA then gy=gI else gy=0 end end;table.insert(fy,[[</g></g>]])end end;local function gM(eX)eX=vec3(eX)local gN=-math.deg(m(eX.y,eX.z))+180;gN=gN-90;if gN<0 then gN=360+gN end;if gN>180 then gN=-180+gN-180 end;return-gN end;local function gO(eX)eX=vec3(eX)local gc=math.deg(m(eX.y,eX.x))-90;if gc<-180 then gc=360+gc end;return gc end;local function gP(fy,eX,eU,centerX,centerY)if eU>5 and not ap or eU>N then local g8=circleRad;local gQ=20;local gR=20;local gS=vec3(eX)local gT=gM(gS)local gU=gO(gS)local gV=14;local gW=gV/2;local gX=-gU/gR*g8;local gY=gT/gQ*g8;local cb=centerX+gX;local cc=centerY+gY;local ag=math.sqrt(gX^2+gY^2)local gZ=[[<circle
                            cx="]]..cb..[["
                            cy="]]..cc..[["
                            r="]]..gW/gV..[["
                            style="fill:#d7fe00;stroke:none;fill-opacity:1"/>
                        <circle
                            cx="]]..cb..[["
                            cy="]]..cc..[["
                            r="]]..gW..[["
                            style="stroke:#d7fe00;stroke-opacity:1;fill:none" />
                        <path
                            d="M ]]..cb-gV..[[,]]..cc..[[ h ]]..gW..[["
                            style="stroke:#d7fe00;stroke-opacity:1" />
                        <path
                            d="M ]]..cb+gW..[[,]]..cc..[[ h ]]..gW..[["
                            style="stroke:#d7fe00;stroke-opacity:1" />
                        <path
                            d="M ]]..cb..[[,]]..cc-gV..[[ v ]]..gW..[["
                            style="stroke:#d7fe00;stroke-opacity:1" />]]if ag<g8 then fy[#fy+1]=gZ else local f_=m(gY,gX)local g_=4;local h0=centerX+g8*math.cos(f_)local h1=centerY+g8*math.sin(f_)fy[#fy+1]=e('<g transform="rotate(%f %f %f)"><rect x="%f" y="%f" width="%f" height="%f" stroke="#d7fe00" fill="#d7fe00" /><path d="M %f %f l %f %f l %f %f z" fill="#d7fe00" stroke="#d7fe00"></g>',f_*180/math.pi,h0,h1,h0-g_,h1-g_/2,g_*2,g_,h0+g_,h1-g_,g_,g_,-g_,g_)end;if not ap then gT=gM(-gS)gU=gO(-gS)gX=-gU/gR*g8;gY=gT/gQ*g8;cb=centerX+gX;cc=centerY+gY;ag=math.sqrt(gX^2+gY^2)if ag<g8 then local h2=[[<circle
                                    cx="]]..cb..[["
                                    cy="]]..cc..[["
                                    r="]]..gW..[["
                                    style="stroke:#d7fe00;stroke-opacity:1;fill:none" />
                                <path
                                    d="M ]]..cb..[[,]]..cc-gV..[[ v ]]..gW..[["
                                    style="stroke:#d7fe00;stroke-opacity:1" id="l"/>
                                <use
                                    xlink:href="#l"
                                    transform="rotate(120,]]..cb..[[,]]..cc..[[)" />
                                <use
                                    xlink:href="#l"
                                    transform="rotate(-120,]]..cb..[[,]]..cc..[[)" />
                                <path
                                    d="M ]]..cb-gW..[[,]]..cc..[[ h ]]..gV..[["
                                    style="stroke-width:0.5;stroke:#d7fe00;stroke-opacity:1"
                                    transform="rotate(-45,]]..cb..[[,]]..cc..[[)" id="c"/>
                                <use
                                    xlink:href="#c"
                                    transform="rotate(-90,]]..cb..[[,]]..cc..[[)"/>]]fy[#fy+1]=h2 end end end end;local function h3(fy,fw,h4,h5)h4=d(h4+0.5)local fM=throtPosY+10;local fN=throtPosY+20;if l()==1 and not RemoteHud then fM=55;fN=65 end;local h6="CRUISE"local unit="km/h"local ch=h5;if fw=="TRAVEL"or fw=="AUTOPILOT"then h6="THROT"unit="%"ch=h4;local h7="dim"if h4<0 then h7="red"end;fy[#fy+1]=e([[<g class="%s">
                                <path class="linethick" d="M %d %d L %d %d L %d %d L %d %d"/>
                                <g transform="translate(0 %.0f)">
                                    <polygon points="%d,%d %d,%d %d,%d"/>
                                </g>]],h7,throtPosX-7,throtPosY-50,throtPosX,throtPosY-50,throtPosX,throtPosY+50,throtPosX-7,throtPosY+50,1-c(h4),throtPosX-10,throtPosY+50,throtPosX-15,throtPosY+53,throtPosX-15,throtPosY+47)end;fy[#fy+1]=ca(throtPosX+10,fM,h6,"pbright txtstart")fy[#fy+1]=ca(throtPosX+10,fN,e("%.0f %s",ch,unit),"pbright txtstart")if ap and AtmoSpeedAssist and bO and H then h4=d(I*100+0.5)local h7="red"if h4<0 then h7="red"end;fy[#fy+1]=e([[<g class="%s">
                                <g transform="translate(0 %d)">
                                    <polygon points="%d,%d %d,%d %d,%d"/>
                                </g></g>]],h7,1-c(h4),throtPosX-10,throtPosY+50,throtPosX-15,throtPosY+53,throtPosX-15,throtPosY+47)fy[#fy+1]=ca(throtPosX+10,fM+40,"LIMIT","pbright txtstart")fy[#fy+1]=ca(throtPosX+10,fN+40,h4 .."%","pbright txtstart")end;if ap and AtmoSpeedAssist or Reentry then fy[#fy+1]=ca(throtPosX+10,fM-40,"LIMIT: "..bl.." km/h","dim txtstart")elseif not ap and Autopilot then fy[#fy+1]=ca(throtPosX+10,fM-40,"LIMIT: "..d(MaxGameVelocity*3.6+0.5).." km/h","dim txtstart")end end;local function h8(fy,h9)local ha=throtPosY-10;local hb=throtPosX+10;fy[#fy+1]=ca(0,0,"","pdim txt txtend")if l()==1 and not RemoteHud then ha=75 end;fy[#fy+1]=ca(hb,ha,d(h9).." km/h","pbright txtbig txtstart")end;local function hc(fy)fy[#fy+1]=ca(fs(1900),ft(1070),e("ARCH Hud Version: %.3f",VERSION_NUMBER),"hudver")fy[#fy+1]=[[<g class="warnings">]]if unit.isMouseControlActivated()==1 then fy[#fy+1]=ca(fs(960),ft(550),"Warning: Invalid Control Scheme Detected","warnings")fy[#fy+1]=ca(fs(960),ft(600),"Keyboard Scheme must be selected","warnings")fy[#fy+1]=ca(fs(960),ft(650),"Set your preferred scheme in Lua Parameters instead","warnings")end;local hd=fs(960)local he=ft(860)local hf=ft(880)local hg=ft(900)local hh=ft(960)local hi=ft(200)local hj=ft(250)local hk=ft(960)if l()==1 and not RemoteHud then he=ft(135)hf=ft(155)hg=ft(175)hi=ft(115)hj=ft(95)end;if BrakeIsOn then fy[#fy+1]=ca(hd,he,"Brake Engaged","warnings")elseif G>0 then fy[#fy+1]=ca(hd,he,"Auto-Brake Engaged","warnings","opacity:"..G)end;if ap and bg and am==-1 then if not Autopilot and not VectorToTarget and not BrakeLanding and not bM and not VertTakeOff and not AutoTakeoff then fy[#fy+1]=ca(hd,hi+50,"** STALL WARNING **","warnings")bY("StallWarning.mp3","SW",1)end end;if aw then fy[#fy+1]=ca(hd,hk,"Gyro Enabled","warnings")end;if GearExtended then if P then fy[#fy+1]=ca(hd,hf,"Gear Extended","warn")else fy[#fy+1]=ca(hd,hf,"Landed (G: Takeoff)","warnings")end;local hl=cn(a:getTargetGroundAltitude())fy[#fy+1]=ca(hd,hg,"Hover Height: "..hl,"warn")end;if a4 then fy[#fy+1]=ca(hd,hh+20,"ROCKET BOOST ENABLED","warn")end;if antigrav and not ExternalAGG and bM and AntigravTargetAltitude~=nil then if c(ar-antigrav.getBaseAltitude())<501 then fy[#fy+1]=ca(hd,hi+15,e("AGG On - Target Altitude: %d Singularity Altitude: %d",d(AntigravTargetAltitude),d(antigrav.getBaseAltitude())),"warn")else fy[#fy+1]=ca(hd,hi+15,e("AGG On - Target Altitude: %d Singluarity Altitude: %d",d(AntigravTargetAltitude),d(antigrav.getBaseAltitude())),"warnings")end elseif Autopilot and AutopilotTargetName~="None"then fy[#fy+1]=ca(hd,hi+20,"Autopilot "..AutopilotStatus,"warn")elseif LockPitch~=nil then fy[#fy+1]=ca(hd,hi+20,e("LockedPitch: %d",d(LockPitch)),"warn")elseif X then fy[#fy+1]=ca(hd,hi+20,"Follow Mode Engaged","warn")elseif Reentry then fy[#fy+1]=ca(hd,hi+20,"Re-entry in Progress","warn")end;local hm,ed,ee=b5:getPlanetarySystem(0):castIntersections(bJ,bF:normalize(),function(e1)if e1.noAtmosphericDensityAltitude>0 then return e1.radius+e1.noAtmosphericDensityAltitude else return e1.radius+e1.surfaceMaxAltitude*1.5 end end)local hn=ed;if ee~=nil and ed~=nil then hn=math.min(ee,ed)end;if AltitudeHold or VertTakeOff then local hl=cn(HoldAltitude,2)if VertTakeOff then if bM then hl=cn(antigrav.getBaseAltitude(),2).." AGG singularity height"end;fy[#fy+1]=ca(hd,hi,"VTO to "..hl,"warn")elseif AutoTakeoff and not IntoOrbit then if ak then fy[#fy+1]=ca(hd,hi,"Takeoff to "..AutopilotTargetName,"warn")else fy[#fy+1]=ca(hd,hi,"Takeoff to "..hl,"warn")end;if BrakeIsOn and not VertTakeOff then fy[#fy+1]=ca(hd,hi+50,"Throttle Up and Disengage Brake For Takeoff","crit")end else fy[#fy+1]=ca(hd,hi,"Altitude Hold: "..hl,"warn")end end;if VertTakeOff and(antigrav~=nil and antigrav)then if aq>0.1 then fy[#fy+1]=ca(hd,hi+20,"Beginning ascent","warn")elseif aq<0.09 and aq>0.05 then fy[#fy+1]=ca(hd,hi+20,"Aligning trajectory","warn")elseif aq<0.05 then fy[#fy+1]=ca(hd,hi+20,"Leaving atmosphere","warn")end end;if IntoOrbit then if bn~=nil then fy[#fy+1]=ca(hd,hi,bn,"warn")end end;if IntruderAlertSystem and safeMass==-1 then fy[#fy+1]=ca(hd,hi+70,"POSSIBLE INTRUDER ALERT - MASS GAIN OF "..bK.."kg DETECTED","warnings")bY("Alarm.mp3","AL",1)end;if BrakeLanding then if StrongBrakes then fy[#fy+1]=ca(hd,hi,"Brake-Landing","warnings")else fy[#fy+1]=ca(hd,hi,"Coast-Landing","warnings")end end;if ProgradeIsOn then fy[#fy+1]=ca(hd,hi,"Prograde Alignment","crit")end;if RetrogradeIsOn then fy[#fy+1]=ca(hd,hi,"Retrograde Alignment","crit")end;if hn~=nil and aq==0 then local hl=cn(hn)local travelTime=b6.computeTravelTime(bG,0,hn)local ho="Collision"if hm.noAtmosphericDensityAltitude>0 then ho="Atmosphere"end;fy[#fy+1]=ca(hd,hj+20,hm.name.." "..ho.." "..cR(travelTime).." In "..hl,"crit")end;if VectorToTarget and not IntoOrbit then fy[#fy+1]=ca(hd,hi+35,VectorStatus,"warn")end;fy[#fy+1]="</g>"return fy end;local function hp(eU)return d(x(eU*3.6,0)+0.5).." km/h"end;local function hq(fy)local hr=OrbitMapX;local hs=OrbitMapY;local ht=OrbitMapSize;local hu=4;local hv=15;local cb=0;local cc=0;local hw,hx,hy,hz;local function hA(type)local hB,bB,eU,hC;if type=="Periapsis"then hB=orbit.periapsis.altitude;bB=orbit.timeToPeriapsis;eU=orbit.periapsis.speed;hC=35 else hB=orbit.apoapsis.altitude;bB=orbit.timeToApoapsis;eU=orbit.apoapsis.speed;hC=-35 end;fy[#fy+1]=e([[<line class="pdim op30 linethick" x1="%f" y1="%f" x2="%f" y2="%f"/>]],cb+hC,cc-5,hr+ht/2-hw+hz,cc-5)fy[#fy+1]=ca(cb,cc,type)cc=cc+hv;local hl=cn(hB)fy[#fy+1]=ca(cb,cc,hl)cc=cc+hv;fy[#fy+1]=ca(cb,cc,cR(bB))cc=cc+hv;fy[#fy+1]=ca(cb,cc,hp(eU))end;if orbit~=nil and aq<0.2 and planet~=nil and orbit.apoapsis~=nil and orbit.periapsis~=nil and orbit.period~=nil and orbit.apoapsis.speed>5 and DisplayOrbit then hs=hs+hu;cb=hr+ht+hr/2+hu;cc=hs+ht/2+5+hu;hw=ht/4;hz=0;fy[#fy+1]=[[<g class="pbright txtorb txtmid">]]fy[#fy+1]=e('<rect width="%f" height="%d" rx="10" ry="10" x="%d" y="%d" style="fill:rgb(0,0,100);stroke-width:4;stroke:white;fill-opacity:0.3;" />',ht+hr*2,ht+hs,hu,hu)if orbit.periapsis~=nil and orbit.apoapsis~=nil then hy=(orbit.apoapsis.altitude+orbit.periapsis.altitude+planet.radius*2)/(hw*2)hx=(planet.radius+orbit.periapsis.altitude+(orbit.apoapsis.altitude-orbit.periapsis.altitude)/2)/hy*(1-orbit.eccentricity)hz=hw-orbit.periapsis.altitude/hy-planet.radius/hy;local hD=""if orbit.periapsis.altitude<=0 then hD='redout'end;fy[#fy+1]=e([[<ellipse class="%s line" cx="%f" cy="%f" rx="%f" ry="%f"/>]],hD,hr+ht/2+hz+hu,hs+ht/2+hu,hw,hx)fy[#fy+1]=e('<circle cx="%f" cy="%f" r="%f" stroke="white" stroke-width="3" fill="blue" />',hr+ht/2+hu,hs+ht/2+hu,planet.radius/hy)end;if orbit.apoapsis~=nil and orbit.apoapsis.speed<MaxGameVelocity and orbit.apoapsis.speed>1 then hA("Apoapsis")end;cc=hs+ht/2+5+hu;cb=hr-hr/2+10+hu;if orbit.periapsis~=nil and orbit.periapsis.speed<MaxGameVelocity and orbit.periapsis.speed>1 then hA("Periapsis")end;fy[#fy+1]=ca(hr+ht/2+hu,planet.name,20+hu,"txtorbbig")if orbit.period~=nil and orbit.periapsis~=nil and orbit.apoapsis~=nil and orbit.apoapsis.speed>1 then local hE=orbit.timeToApoapsis/orbit.period*2*math.pi;local hF=hw*math.cos(hE)local hG=hx*math.sin(hE)fy[#fy+1]=e('<circle cx="%f" cy="%f" r="5" stroke="white" stroke-width="3" fill="white" />',hr+ht/2+hF+hz+hu,hs+ht/2+hG+hu)end;fy[#fy+1]=[[</g>]]return fy else return fy end end;local function hH()if radarPanelID~=nil and ai==0 then s(radarPanelID)radarPanelID=nil;if perisPanelID~=nil then s(perisPanelID)perisPanelID=nil end else if ai==1 then s(radarPanelID)radarPanelID=nil;_autoconf.displayCategoryPanel(radar,radar_size,L_TEXT("ui_lua_widget_periscope", "Periscope"),"periscope")perisPanelID=_autoconf.panels[_autoconf.panels_size]end;placeRadar=true;if radarPanelID==nil and placeRadar then _autoconf.displayCategoryPanel(radar,radar_size,L_TEXT("ui_lua_widget_radar", "Radar"),"radar")radarPanelID=_autoconf.panels[_autoconf.panels_size]placeRadar=false end;ai=0 end end;local function hI(fy)local cb=30;local cc=275;local hJ={"Alt-1: Increment Interplanetary Helper","Alt-2: Decrement Interplanetary Helper","Alt-3: Toggle Vanilla Widget view"}local hK={"","------------------IN ATMO-----------------","Alt-4: Autopilot in atmo to target","Alt-4-4: Autopilot to LowOrbitHeight over atmosphere and orbit to target","Alt-6: Altitude hold at current altitude","Alt-6-6: Altitude Hold at 11% atmosphere"}local hL={"","------------------NO ATMO-----------------","Alt-4 (Alt < 100k): Autopilot to Orbit and land","Alt-4 (Alt > 100k): Autopilot to target","Alt-6: Orbit at current altitude","Alt-6-6: Orbit at LowOrbitHeight over atmosphere"}local hM={"","------------------ALWAYS--------------------","Alt-5: Lock Pitch at current pitch","Alt-7: Toggle InHud Sounds","Alt-8: Toggle ground stabilization (underwater flight)","Alt-9: Activate Gyroscope","","CTRL: Toggle Brakes on and off, cancels active AP","LeftAlt: Tap to shift freelook on and off","Shift: Hold while not in freelook to see Buttons","Type /commands or /help in lua chat to see text commands"}if ap then c0(hJ,hK)table.insert(hJ,"--------------CONDITIONAL-----------------")if VertTakeOff then table.insert(hJ,"Hit Alt-6 before exiting Atmosphere during VTO to hold in level flight")end;if am~=-1 then if antigrav then if bM then table.insert(hJ,"Alt-6: AGG is on, will takeoff to AGG Height")else table.insert(hJ,"Turn on AGG to takeoff to AGG Height")end end;if VertTakeOffEngine then table.insert(hJ,"Alt-6: Begins Vertical Takeoff.")else table.insert(hJ,"Alt-4/Alt-6: Autotakeoff if below hoverheight")end else table.insert(hJ,"G: Begin BrakeLanding or Land")end else c0(hJ,hL)end;if AltitudeHold then table.insert(hJ,"Alt-Spacebar/Alt-C will raise/lower target height")end;c0(hJ,hM)for i=1,#hJ do cc=cc+12;fy[#fy+1]=ca(cb,cc,hJ[i],"pdim txttick txtstart")end end;local function hN(hO,hP)local hQ;local hR=(hP-hO):normalize()local eZ=(bJ-hO):dot(hR)/hR:dot(hR)if eZ<=0.then return(bJ-hO):len()elseif eZ>=(hP-hO):len()then return(bJ-hP):len()end;local hS=hO+eZ*hR;hQ=(hS-bJ):len()return hQ end;local function hT()local hQ;local hU=nil;local hV=nil;local hW=nil;for c_,hX in pairs(b0[0])do if hX.hasAtmosphere then local ag=hN(planet.center,hX.center)if hU==nil or ag<hU then hV=hX;hU=ag;hW=planet end;if a9 and a9.hasAtmosphere and a9.name~=planet.name then local ej=hN(a9.center,hX.center)if ej<hU then hV=hX;hU=ej;hW=a9 end end end end;local hY=fs(1770)local hZ=ft(330)if hU then local h_="txttick "local i0=500000;if hU<hV.radius+i0 or hU<hW.radius+i0 then if bV then h_="txttick red "else h_="txttick orange "end end;hQ=cn(hU,2)bX=ca(hY,hZ,"Pipe ("..hW.name.."--"..hV.name.."): "..hQ,h_.."pbright txtmid")end end;local i1={}function i1.HUDPrologue(fy)bV,fj,_,_=fk(bJ)if not bV then C=PvPR;E=PvPG;D=PvPB else C=SafeR;E=SafeG;D=SafeB end;ay=[[rgb(]]..d(C+0.5)..","..d(E+0.5)..","..d(D+0.5)..[[)]]az=[[rgb(]]..d(C*0.9+0.5)..","..d(E*0.9+0.5)..","..d(D*0.9+0.5)..[[)]]local i2=ay;local i3=az;local i4=ay;local i5=az;if fu()and not brightHud then i2=[[rgb(]]..d(C*0.4+0.5)..","..d(E*0.4+0.5)..","..d(D*0.3+0.5)..[[)]]i3=[[rgb(]]..d(C*0.3+0.5)..","..d(E*0.3+0.5)..","..d(D*0.2+0.5)..[[)]]end;fy[#fy+1]=e([[
                        <head>
                            <style>
                                body {margin: 0}
                                svg {position:absolute;top:0;left:0;font-family:Montserrat;} 
                                .txt {font-size:10px;font-weight:bold;}
                                .txttick {font-size:12px;font-weight:bold;}
                                .txtbig {font-size:14px;font-weight:bold;}
                                .altsm {font-size:16px;font-weight:normal;}
                                .altbig {font-size:21px;font-weight:normal;}
                                .line {stroke-width:2px;fill:none}
                                .linethick {stroke-width:3px;fill:none}
                                .warnings {font-size:26px;fill:red;text-anchor:middle;font-family:Bank}
                                .warn {fill:orange;font-size:24px}
                                .crit {fill:darkred;font-size:28px}
                                .bright {fill:%s;stroke:%s}
                                .pbright {fill:%s;stroke:%s}
                                .dim {fill:%s;stroke:%s}
                                .pdim {fill:%s;stroke:%s}
                                .red {fill:red;stroke:red}
                                .orange {fill:orange;stroke:orange}
                                .redout {fill:none;stroke:red}
                                .op30 {opacity:0.3}
                                .op10 {opacity:0.1}
                                .txtstart {text-anchor:start}
                                .txtend {text-anchor:end}
                                .txtmid {text-anchor:middle}
                                .txtvspd {font-family:sans-serif;font-weight:normal}
                                .txtvspdval {font-size:20px}
                                .txtfuel {font-size:11px;font-weight:bold}
                                .txtorb {font-size:12px}
                                .txtorbbig {font-size:18px}
                                .hudver {font-size:10px;font-weight:bold;fill:red;text-anchor:end;font-family:Bank}
                                .msg {font-size:40px;fill:red;text-anchor:middle;font-weight:normal}
                                .cursor {stroke:white}
                            </style>
                        </head>
                        <body>
                            <svg height="100%%" width="100%%" viewBox="0 0 %d %d">
                            ]],i2,i2,i4,i4,i3,i3,i5,i5,aI,aJ)return fy end;function i1.DrawVerticalSpeed(fy,dC)fZ(fy,dC)end;function i1.UpdateHud(fy)local dC=ar;local eX=core.getVelocity()local eU=vec3(eX):len()local gN=bP;local i6=bQ;local g6=i6;local gl=bP;local h4=d(unit.getThrottle())local h9=eU*3.6;local h5=unit.getAxisCommandValue(0)local i7=fs(1770)local i8=ft(310)if AtmoSpeedAssist and bO then h5=F;h4=F*100 end;local fw=fv()local g7="ROLL"local cw=unit.getClosestPlanetInfluence()>0;if h4==nil then h4=0 end;if not cw then if eU>5 then gN=gM(eX)i6=gO(eX)else gN=0;i6=0 end;g7="YAW"end;if fj>50000 and not ap then local i9;if fj>200000 then i9=x(fj/200000,2).." su"else i9=x(fj/1000,1).." km"end;fy[#fy+1]=ca(i7,i8,"PvP Boundary: "..i9,"pbright txtbig txtmid")end;fy[#fy+1]=ah;fy[#fy+1]=aD;fy[#fy+1]=bW;if bX~=""then fy[#fy+1]=bX end;if a_%aU==0 then aZ=true end;if fuelX~=0 and fuelY~=0 then fx(fy,aZ,fuelX,"Atmospheric ","ATMO",aN,aX,aY)fx(fy,aZ,fuelX+120,"Space fuel t","SPACE",aO,aV,aW)fx(fy,aZ,fuelX+240,"Rocket fuel ","ROCKET",aP,aS,aT)end;if aZ then aZ=false;a_=0 end;a_=a_+1;fZ(fy,dC)if l()==0 or RemoteHud then if not fu()or brightHud then if cw then g5(fy,centerX,centerY,g6,g7,cw)gk(fy,gl,g6,centerX,centerY,cw,d(gO(eX)),eU)else g5(fy,centerX,centerY,i6,g7,cw)gk(fy,gN,i6,centerX,centerY,cw,d(i6),eU)end;gr(fy,dC,cw)gP(fy,eX,eU,centerX,centerY)end end;h3(fy,fw,h4,h5)h8(fy,h9)hc(fy)hq(fy)if showHelp then hI(fy)end;return fy end;function i1.HUDEpilogue(fy)fy[#fy+1]="</svg>"return fy end;function i1.ExtraData(fy)local ia=fs(1240)local ib=ft(55)local ic=ib+10;local id;local ie=0;local fw=fv()if VertTakeOffEngine then fw=fw.."-VERTICAL"end;if TurnBurn then fw="TB-"..fw end;if not stablized then fw=fw.."-DeCoupled"end;local ig=vec3(core.getWorldAcceleration()):len()/9.80665;id=core.g()fy[#fy+1]=[[<g class="pdim txt txtend">]]if l()==1 and not RemoteHud then ia=fs(1120)ib=ft(55)ic=ib+10 elseif ap then local ih=fs(770)fy[#fy+1]=ca(ih,ib,"ATMOSPHERE","pdim txt txtend")fy[#fy+1]=ca(ih,ic,e("%.2f",aq),"pdim txt txtend","")end;fy[#fy+1]=ca(ia,ib,"GRAVITY","pdim txt txtend")fy[#fy+1]=ca(ia,ic,e("%.2f",id/9.80665),"pdim txt txtend")fy[#fy+1]=ca(ia,ib+20,"ACCEL","pdim txt txtend")fy[#fy+1]=ca(ia,ic+20,e("%.2f",ig),"pdim txt txtend")fy[#fy+1]=ca(fs(960),ft(180),fw,"txtbig txtmid")end;function i1.DrawOdometer(fy,aa,TotalDistanceTravelled,ab)local id;local ii=0;local ij=0;local ie=0;if ap then ie=LastMaxBrakeInAtmo else ie=LastMaxBrake end;maxThrust=a:maxForceForward()id=core.g()if id>0.1 then ij=au*id;ii=maxThrust/id end;fy[#fy+1]=e([[
                        <g class="pbright txt">
                        <path class="linethick" d="M %d 0 L %d %d Q %d %d %d %d L %d 0"/>]],fs(660),fs(700),ft(35),fs(960),ft(55),fs(1240),ft(35),fs(1280))if l()==0 or RemoteHud then fy[#fy+1]=ca(fs(700),ft(20),e("Trip: %.2f km",aa),"txtstart")fy[#fy+1]=ca(fs(700),ft(30),e("Lifetime: %.2f kSU",TotalDistanceTravelled/200000),"txtstart")fy[#fy+1]=ca(fs(830),ft(20),"Trip Time: "..cR(ab),"txtstart")fy[#fy+1]=ca(fs(830),ft(30),"Total Time: "..cR(TotalFlightTime),"txtstart")fy[#fy+1]=ca(fs(970),ft(20),e("Mass: %.2f Tons",au/1000),"txtstart")fy[#fy+1]=ca(fs(1240),ft(10),e("Max Brake: %.2f kN",ie/1000),"txtend")fy[#fy+1]=ca(fs(1240),ft(30),e("Max Thrust: %.2f kN",maxThrust/1000),"txtend")if id>0.1 then fy[#fy+1]=ca(fs(970),ft(30),e("Max Mass: %.2f Tons",ii/1000),"txtstart")fy[#fy+1]=ca(fs(1240),ft(20),e("Req Thrust: %.2f kN",ij/1000),"txtend")else fy[#fy+1]=ca(fs(970),ft(30),"Max Mass: n/a","txtstart")fy[#fy+1]=ca(fs(1240),ft(20),"Req Thrust: n/a","txtend")end end;fy[#fy+1]="</g>"return fy end;function i1.DrawWarnings(fy)return hc(fy)end;function i1.DisplayOrbitScreen(fy)return hq(fy)end;function i1.DisplayMessage(fy,hl)if hl~="empty"then local cc=310;for ik in string.gmatch(hl,"([^\n]+)")do cc=cc+35;fy[#fy+1]=ca("50%",cc,ik,"msg")end end;if af~=0 then unit.setTimer("msgTick",af)af=0 end end;function i1.DrawDeadZone(fy)fy[#fy+1]=e([[<circle class="dim line" style="fill:none" cx="50%%" cy="50%%" r="%d"/>]],DeadZone)end;function i1.UpdatePipe()if ap then bX=""return end;hT()end;function i1.UpdateRadar()if radar_1 then local il=radar_1.getEntries()local im=radar_1.getData()local io=fs(1770)local ip=ft(350)if#il>0 then local iq=im:find('identifiedConstructs":%[%]')if iq==nil and perisPanelID==nil then ai=1;hH()end;if iq~=nil and perisPanelID~=nil then hH()end;if radarPanelID==nil then hH()end;bW=ca(io,ip,"Radar: "..#il.." contacts","pbright txtbig txtmid")local ir={}for c_,d0 in pairs(il)do if radar_1.hasMatchingTransponder(d0)==1 then table.insert(ir,d0)end end;if#ir>0 then local cc=ft(15)local cb=fs(1370)bW=bW..ca(cb,cc,"Friendlies In Range","pbright txtbig txtmid")for c_,d0 in pairs(ir)do cc=cc+20;bW=bW..ca(cb,cc,radar_1.getConstructName(d0),"pdim txtmid")end end else local is;is=im:find('worksInEnvironment":false')if is then bW=ca(io,ip,"Radar: Jammed","pbright txtbig txtmid")else bW=ca(io,ip,"Radar: No Contacts","pbright txtbig txtmid")end;if radarPanelID~=nil then ai=0;hH()end end end end;function i1.DrawSettings(fy)if#bS>0 then local cb=fs(640)local cc=ft(200)fy[#fy+1]=[[<g class="pbright txtvspd txtstart">]]for c_,d0 in pairs(bS)do fy[#fy+1]=ca(cb,cc,d0 ..": ".._G[d0])cc=cc+20;if c_%12==0 then cb=cb+fs(350)cc=ft(200)end end;fy[#fy+1]=ca(fs(640),ft(200)+260,"To Change: In Lua Chat, enter /G VariableName Value")fy[#fy+1]="</g>"end;return fy end;return i1 end;local function it()local function iu()local function iv(iw,ix)return iw.name<ix.name end;bU={}for c_,d0 in pairs(b0[0])do bU[#bU+1]={name=d0.name,index=c_}end;table.sort(bU,iv)end;local d1={}function d1.UpdateAtlasLocationsList()iu()end;function d1.UpdateAutopilotTarget()if AutopilotTargetIndex==0 then AutopilotTargetName="None"a9=nil;CustomTarget=nil;return true end;local iy=bU[AutopilotTargetIndex].index;local iz=b0[0][iy]if iz.center then AutopilotTargetName=iz.name;a9=b5[0][iy]if CustomTarget~=nil then if aq==0 then if t(widgetMaxBrakeTimeText,widgetMaxBrakeTime)~=1 then u(widgetMaxBrakeTimeText,widgetMaxBrakeTime)end;if t(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)~=1 then u(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)end;if t(widgetCurBrakeTimeText,widgetCurBrakeTime)~=1 then u(widgetCurBrakeTimeText,widgetCurBrakeTime)end;if t(widgetCurBrakeDistanceText,widgetCurBrakeDistance)~=1 then u(widgetCurBrakeDistanceText,widgetCurBrakeDistance)end;if t(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)~=1 then u(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)end end;if t(widgetMaxMassText,widgetMaxMass)~=1 then u(widgetMaxMassText,widgetMaxMass)end;if t(widgetTravelTimeText,widgetTravelTime)~=1 then u(widgetTravelTimeText,widgetTravelTime)end;if t(widgetTargetOrbitText,widgetTargetOrbit)~=1 then u(widgetTargetOrbitText,widgetTargetOrbit)end end;CustomTarget=nil else CustomTarget=iz;for _,d0 in pairs(b5[0])do if d0.name==CustomTarget.planetname then a9=d0;AutopilotTargetName=CustomTarget.name;break end end;if t(widgetMaxMassText,widgetMaxMass)~=1 then u(widgetMaxMassText,widgetMaxMass)end;if t(widgetTravelTimeText,widgetTravelTime)~=1 then u(widgetTravelTimeText,widgetTravelTime)end end;if CustomTarget==nil then AutopilotTargetCoords=vec3(a9.center)else AutopilotTargetCoords=CustomTarget.position end;if a9.planetname~="Space"then if a9.hasAtmosphere then AutopilotTargetOrbit=d(a9.radius*(TargetOrbitRadius-1)+a9.noAtmosphericDensityAltitude)else AutopilotTargetOrbit=d(a9.radius*(TargetOrbitRadius-1)+a9.surfaceMaxAltitude)end else AutopilotTargetOrbit=1000 end;if CustomTarget~=nil and CustomTarget.planetname=="Space"then AutopilotEndSpeed=0 else _,AutopilotEndSpeed=b8(a9):escapeAndOrbitalSpeed(AutopilotTargetOrbit)end;AutopilotPlanetGravity=0;AutopilotAccelerating=false;AutopilotBraking=false;AutopilotCruising=false;Autopilot=false;AutopilotRealigned=false;AutopilotStatus="Aligning"return true end;function d1.adjustAutopilotTargetIndex(g2)if not Autopilot and not VectorToTarget and not ak and not IntoOrbit then if g2==nil then AutopilotTargetIndex=AutopilotTargetIndex+1;if AutopilotTargetIndex>#bU then AutopilotTargetIndex=0 end else AutopilotTargetIndex=AutopilotTargetIndex-1;if AutopilotTargetIndex<0 then AutopilotTargetIndex=#bU end end;if AutopilotTargetIndex==0 then ba.UpdateAutopilotTarget()else local iy=bU[AutopilotTargetIndex].index;local iz=b0[0][iy]if iz.name=="Space"or iphCondition=="Custom Only"and iz.center or iphCondition=="No Moons"and string.find(iz.name,"Moon")~=nil then if g2==nil then ba.adjustAutopilotTargetIndex()else ba.adjustAutopilotTargetIndex(1)end else ba.UpdateAutopilotTarget()end end else Z="Disengage autopilot before changing Interplanetary Helper"bY("Disengage.mp3","AP")end end;function d1.findAtlasIndex(iA)for c_,d0 in pairs(iA)do if d0.name and d0.name==CustomTarget.name then return c_ end end;return-1 end;for c_,d0 in pairs(SavedLocations)do table.insert(b0[0],d0)end;iu()d1.UpdateAutopilotTarget()return d1 end;local function iB()local iC={}local iD={vec3(bF),-vec3(bF),vec3(bC),-vec3(bC),vec3(bE),-vec3(bE)}local function iE(eU)local iF=AutopilotEndSpeed;if not Autopilot then iF=0 end;if not ap then return b6.computeDistanceAndTime(eU,iF,au,0,0,LastMaxBrake-AutopilotPlanetGravity*au)else if LastMaxBrakeInAtmo and LastMaxBrakeInAtmo>0 then return b6.computeDistanceAndTime(eU,iF,au,0,0,LastMaxBrakeInAtmo-AutopilotPlanetGravity*au)else return 0,0 end end end;local function iG(eU)local iF=AutopilotEndSpeed;if not Autopilot then iF=0 end;return b6.computeDistanceAndTime(eU,iF,au,a:maxForceForward(),warmup,LastMaxBrake-AutopilotPlanetGravity*au)end;function iC.GetAutopilotBrakeDistanceAndTime(eU)return iE(eU)end;function iC.GetAutopilotTBBrakeDistanceAndTime(eU)return iG(eU)end;local function iH(iI,iJ,iK)iJ=iJ:project_on_plane(iI)iK=iK:project_on_plane(iI)return m(iJ:cross(iK):dot(iI),iJ:dot(iK))end;local function iL()local function iM()local iN=-1;local iO=-1;if vBooster then iN=vBooster.distance()end;if hover then iO=hover.distance()end;if iN~=-1 and iO~=-1 then if iN<iO then return iN else return iO end elseif iN~=-1 then return iN elseif iO~=-1 then return iO else return-1 end end;local iP=iM()local iQ=-1;if telemeter_1 then iQ=telemeter_1.getDistance()end;if iP~=-1 and iQ~=-1 then if iP<iQ then return iP else return iQ end elseif iP~=-1 then return iP else return iQ end end;local function iR(planet,ef,iS)local function iT(iU,dv)local el=vec3(dv)if iU.bodyId==0 then return setmetatable({latitude=el.x,longitude=el.y,altitude=el.z,bodyId=0,systemId=iU.planetarySystemId},MapPosition)end;local em=el-iU.center;local ag=em:len()local dC=ag-iU.radius;local dA=0;local dB=0;if not ck(ag,0)then local en=m(em.y,em.x)dB=en>=0 and en or 2*math.pi+en;dA=math.pi/2-math.acos(em.z/ag)end;return setmetatable({latitude=math.deg(dA),longitude=math.deg(dB),altitude=dC,bodyId=iU.bodyId,systemId=iU.planetarySystemId},MapPosition)end;local iV=iT(planet,ef)iV="::pos{"..iV.systemId..","..iV.bodyId..","..iV.latitude..","..iV.longitude..","..iV.altitude.."}"if iS then return iV else system.setWaypoint(iV)return true end end;function iC.showWayPoint(planet,ef,iS)return iR(planet,ef,iS)end;function iC.APTick()ap=j()>0;aq=j()ar=core.getAltitude()am=iL()bB=p()bh=bB;if antigrav then bM=antigrav.getState()==1 end;local iW=1;local iX=1;local iY=bB-bh;local iZ=-math.deg(iH(bC,bF,bD))local i_=math.deg(iH(bE,bF,bD))local g2=bH*-1;bg=ap and iZ<-YawStallAngle or iZ>YawStallAngle or i_<-PitchStallAngle or i_>PitchStallAngle;local j0=system.getMouseDeltaX()local j1=system.getMouseDeltaY()if InvertMouse and not Y then j1=-j1 end;S=0;W=0;R=0;sys=b5[0]planet=sys:closestBody(core.getConstructWorldPos())kepPlanet=b8(planet)orbit=kepPlanet:orbitalParameters(core.getConstructWorldPos(),bF)if ar==0 then ar=(bJ-planet.center):len()-planet.radius end;local id=planet:getGravity(core.getConstructWorldPos()):len()*au;bi=0;b7=core.getMaxKinematicsParametersAlongAxis("ground",core.getConstructOrientationUp())[1]if w()==0 then if l()==1 and Y then if not bc then ad=ad+j0;ae=ae+j1 end else ad=0;ae=0 end else ad=ad+j0;ae=ae+j1;ag=math.sqrt(ad*ad+ae*ae)if not Y and l()==0 then if userControlScheme=="virtual joystick"then if ad>0 and ad>DeadZone then S=S-(ad-DeadZone)*MouseXSensitivity elseif ad<0 and ad<DeadZone*-1 then S=S-(ad+DeadZone)*MouseXSensitivity else S=0 end;if ae>0 and ae>DeadZone then R=R-(ae-DeadZone)*MouseYSensitivity elseif ae<0 and ae<DeadZone*-1 then R=R-(ae+DeadZone)*MouseYSensitivity else R=0 end else ad=0;ae=0;if userControlScheme=="mouse"then R=(-utils.smoothstep(j1,-100,100)+0.5)*2*iW;S=(-utils.smoothstep(j0,-100,100)+0.5)*2*iX end end end end;local j2=bG>8334;if bG>SpaceSpeedLimit/3.6 and not ap and not Autopilot and not j2 then Z="Space Speed Engine Shutoff reached"bY("SpeedLimit.mp3","SP")cg(0)end;if not j2 and LastIsWarping then if not BrakeIsOn then cC()end;if Autopilot then cu()end end;LastIsWarping=j2;if ap and aq>0.09 then if bG>bl/3.6 and not AtmoSpeedAssist and not ax then BrakeIsOn=true;ax=true elseif not AtmoSpeedAssist and ax then if bG<bl/3.6 then BrakeIsOn=false;ax=false end end end;if BrakeIsOn then V=1 else V=0 end;if ProgradeIsOn then if aj then BrakeIsOn=false;local j3=false;if CustomTarget~=nil then j3=cD(CustomTarget.position-bJ,0.1)else j3=cD(vec3(bF),0.01)end;be=true;if j3 then cj(d(bl))if(c(bQ)<2 or c(bP)>85)and bG>=bl/3.6-1 then BrakeIsOn=false;ProgradeIsOn=false;O=true;aj=false;al=true;Autopilot=false;cP()end elseif ap and AtmoSpeedAssist then cg(1)end elseif bG>N then cD(vec3(bF),0.01)end end;if RetrogradeIsOn then if ap then RetrogradeIsOn=false elseif bG>N then cD(-vec3(bF))end end;if not ProgradeIsOn and aj and not IntoOrbit then if aq==0 then O=true;cP()aj=false;al=true else aj=false;cu()end end;if al and CustomTarget~=nil and(ar<HoldAltitude+250 and ar>HoldAltitude-250)and bG*3.6>bl-250 and c(bI)<25 and aq>=0.1 and(CustomTarget.position-bJ):len()>2000+ar then cu()al=false end;if VertTakeOff then be=true;local j4=HoldAltitude;if bI<-30 then Z="Unable to achieve lift. Safety Landing."ac=0;be=autoRollPreference;VertTakeOff=false;BrakeLanding=true elseif not ExternalAGG and bM or HoldAltitude<planet.spaceEngineMinAltitude then if bM then j4=antigrav.getBaseAltitude()end;if ar<j4-100 then bm=0;ac=15;BrakeIsOn=false elseif bI>0 then BrakeIsOn=true;ac=0 elseif bI<-30 then BrakeIsOn=true;ac=15 elseif ar>=j4 then if bM then if Autopilot or VectorToTarget then cq()else BrakeIsOn=true;VertTakeOff=false end;Z="Takeoff complete. Singularity engaged"bY("Singularity.mp3","AG")else BrakeIsOn=false;Z="VTO complete. Engaging Horizontal Flight"bY("VTOC.mp3","VT")cq()end;ac=0 end else if aq>0.08 then bm=0;BrakeIsOn=false;ac=20 elseif aq<0.08 and aq>0 then BrakeIsOn=false;if by then bm=0;ac=20 else ac=0;bm=36;cj(3500)end else be=autoRollPreference;IntoOrbit=true;bw=false;CancelIntoOrbit=false;bq=false;bo=nil;bp=nil;if bv==nil then bv=planet end;bu=j4;bt=true;VertTakeOff=false end end;if bm~=nil then if vTpitchPID==nil then vTpitchPID=pid.new(2*0.01,0,2*0.1)end;local j5=q(bm-bP,-PitchStallAngle*0.80,PitchStallAngle*0.80)vTpitchPID:inject(j5)local j6=q(vTpitchPID:get(),-1,1)R=j6 end end;if IntoOrbit then local cM;local j7=false;local j8=cn(bu)if bv==nil then bv=planet;if VectorToTarget then bv=a9 end end;if not bt then bu=d(bv.radius+bv.surfaceMaxAltitude+LowOrbitHeight)if bv.hasAtmosphere then bu=d(bv.radius+bv.noAtmosphericDensityAltitude+LowOrbitHeight)end;bt=true end;if bs.VectorToTarget then cM=CustomTarget.position-bJ end;local j9,ja=b8(bv):escapeAndOrbitalSpeed((bJ-bv.center):len()-bv.radius)local jb=bQ;if not bq then local jc=false;local jd=false;cg(0)bp=0;bn="Aligning to orbital path - OrbitHeight: "..j8;if bs.VectorToTarget then cD(cM:normalize():project_on_plane(bH))j7=bD:dot(cM:project_on_plane(bC):normalize())>0.95 else cD(bF)j7=iZ<0.5;if bG<150 then j7=true end end;R=0;bo=0;if bP<=bo+1 and bP>=bo-1 then jc=true else jc=false end;if jb<=bp+1 and jb>=bp-1 then jd=true else jd=false end;if jc and jd and j7 then bo=nil;bp=nil;bq=true end else if bs.VectorToTarget then cD(cM:normalize():project_on_plane(bH))elseif bG>150 then cD(bF)end;R=0;if bs.VectorToTarget then local a5,_=b6.computeDistanceAndTime(bG,bl/3.6,au,0,0,LastMaxBrake)if bw and cM:len()>15000+a5+ar then bn="Orbiting to Target"if ar-100<=bv.noAtmosphericDensityAltitude or travelTime>orbit.timeToPeriapsis and orbit.periapsis.altitude<bv.noAtmosphericDensityAltitude then bw=false end elseif bw or cM:len()<15000+a5+ar then Z="Orbit complete, proceeding with reentry"bY("OrbitComplete.mp3","OB")AutopilotTargetCoords=CustomTarget.position;O=true;al=true;bs.VectorToTarget,bs.AutopilotAlign=false,false;cr()cP()end end;if orbit.periapsis~=nil and orbit.apoapsis~=nil and orbit.eccentricity<1 and ar>bu*0.9 and ar<bu*1.4 then if orbit.apoapsis~=nil then if orbit.periapsis.altitude>=bu*0.99 and orbit.apoapsis.altitude>=bu*0.99 and orbit.periapsis.altitude<orbit.apoapsis.altitude and orbit.periapsis.altitude*1.05>=orbit.apoapsis.altitude or bw then if bw then BrakeIsOn=false;cg(0)bo=0;if not bs.VectorToTarget then Z="Orbit complete"bY("OrbitComplete.mp3","OB")cr()end else bA=bA+1;if bA>=2 then bw=true end end else bn="Adjusting Orbit - OrbitHeight: "..j8;br=true;cj(ja*3.6+1)if VSpdPID==nil then VSpdPID=pid.new(0.5,0,10*0.1)end;local je=bI;local jf=ar-bu;local jg=c(jf)if bI<10 and c(bP)<10 and jg<100 then je=bI*2 end;if je<10 and c(bP)<10 and jg<100 then je=je*2 end;if je<5 and c(bP)<5 and jg<100 then je=je*4 end;VSpdPID:inject(je)bo=q(-VSpdPID:get(),-90,90)if OrbitAltPID==nil then OrbitAltPID=pid.new(0.15,0,5*0.1)end;OrbitAltPID:inject(jf)bo=q(bo-q(OrbitAltPID:get(),-15,15),-90,90)end end else local jh=2.75;local ji=c(o(j9*jh))local jj=ji%50;if jj>0 then ji=ji-jj+50 end;BrakeIsOn=false;if ar<bu*0.8 then bn="Escaping planet gravity - OrbitHeight: "..j8;bo=utils.map(bI,200,0,-15,80)elseif ar>=bu*0.8 and ar<bu*1.15 then bn="Approaching orbital corridor - OrbitHeight: "..j8;ji=ji*0.75;bo=utils.map(bI,100,-100,-15,65)elseif ar>=bu*1.15 and ar<bu*1.5 then bn="Approaching orbital corridor - OrbitHeight: "..j8;ji=ji*0.75;if bI<0 or br then bo=utils.map(ar,bu*1.5,bu*1.01,-30,0)else bo=utils.map(ar,bu*0.99,bu*1.5,0,30)end elseif ar>bu*1.5 then bn="Reentering orbital corridor - OrbitHeight: "..j8;bo=-65;local jk=utils.map(bI,-150,-400,1,0.55)ji=ji*jk end;cj(d(ji))end end;if bo~=nil then if OrbitPitchPID==nil then OrbitPitchPID=pid.new(1*0.01,0,5*0.1)end;local jl=bo-bP;OrbitPitchPID:inject(jl)local jm=q(OrbitPitchPID:get(),-0.5,0.5)R=jm end end;if Autopilot and aq==0 and not aj then local function jn(jo,orbit)system.print(jo)BrakeIsOn=false;AutopilotBraking=false;Autopilot=false;TargetSet=false;AutopilotStatus="Aligning"cg(0)M=false;Z=jo;bY("APComplete.mp3","AP")if orbit or aj then if orbit and AutopilotTargetOrbit~=nil and not aj then bu=AutopilotTargetOrbit;bt=true end;cr()end end;local jp,jq=AutopilotTargetCoords,false;if CustomTarget~=nil and CustomTarget.planetname~="Space"then AutopilotRealigned=true;if not TargetSet then local jr=(CustomTarget.position-a9.center):normalize()local js=jr:project_on_plane((a9.center-bJ):normalize()):normalize()local jt=a9.center+js*(a9.radius+AutopilotTargetOrbit)local ju=CustomTarget.position+(CustomTarget.position-a9.center):normalize()*(AutopilotTargetOrbit-a9:getAltitude(CustomTarget.position))if(bJ-jt):len()<(bJ-ju):len()then jp=jt else jp=ju;AutopilotEndSpeed=0 end;AutopilotTargetCoords=jp;bb.showWayPoint(a9,AutopilotTargetCoords)jq=true;TargetSet=true end;AutopilotPlanetGravity=0 elseif CustomTarget~=nil and CustomTarget.planetname=="Space"then AutopilotPlanetGravity=0;jq=true;TargetSet=true;AutopilotRealigned=true;jp=CustomTarget.position+(bJ-CustomTarget.position)*AutopilotTargetOrbit elseif CustomTarget==nil then AutopilotPlanetGravity=0;if not TargetSet then local jr=(bJ+bF*100000-a9.center):normalize()local js=jr:project_on_plane((a9.center-bJ):normalize()):normalize()if js:len()<1 then jr=(bJ+bD*100000-a9.center):normalize()js=jr:project_on_plane((a9.center-bJ):normalize()):normalize()end;jp=a9.center+js*(a9.radius+AutopilotTargetOrbit)AutopilotTargetCoords=jp;TargetSet=true;jq=true;AutopilotRealigned=true;bb.showWayPoint(a9,AutopilotTargetCoords)end end;AutopilotDistance=(vec3(jp)-bJ):len()local hm,ed,ee=b5:getPlanetarySystem(0):castIntersections(bJ,bF:normalize(),function(e1)if e1.noAtmosphericDensityAltitude>0 then return e1.radius+e1.noAtmosphericDensityAltitude else return e1.radius+e1.surfaceMaxAltitude*1.5 end end)local hn=ed;if ee~=nil and ed~=nil then hn=math.min(ee,ed)end;if hn~=nil and hn<AutopilotDistance and hm.name==a9.name then AutopilotDistance=hn end;local j3=true;local jv=(a9.center-(bJ+vec3(bF):normalize()*AutopilotDistance)):len()-a9.radius;local hl=cn(jv)t(widgetTrajectoryAltitudeText,'{"label": "Projected Altitude", "value": "'..hl..'"}')local a5,a6;if not TurnBurn then a5,a6=iE(bG)else a5,a6=iG(bG)end;if bG>300 and AutopilotAccelerating then local cM=vec3(jp)-bJ;local jw=q(math.deg(iH(bC,bF:normalize(),cM:normalize()))*bG/500,-90,90)local jx=q(math.deg(iH(bE,bF:normalize(),cM:normalize()))*bG/500,-90,90)if c(jw)<20 and c(jx)<20 then jw=jw*2;jx=jx*2 end;if c(jw)<2 and c(jx)<2 then jw=jw*2;jx=jx*2 end;local iZ=-math.deg(iH(bC,bD,bF:normalize()))local i_=-math.deg(iH(bE,bD,bF:normalize()))if apPitchPID==nil then apPitchPID=pid.new(2*0.01,0,2*0.1)end;apPitchPID:inject(jx-i_)local jy=q(apPitchPID:get(),-1,1)R=R+jy;if apYawPID==nil then apYawPID=pid.new(2*0.01,0,2*0.1)end;apYawPID:inject(jw-iZ)local jz=q(apYawPID:get(),-1,1)S=S+jz;jq=true;if c(jw)>2 or c(jx)>2 then if AutopilotStatus~="Adjusting Trajectory"then AutopilotStatus="Adjusting Trajectory"bY("AdjustingTrajectory.mp3","AP")end else if AutopilotStatus~="Accelerating"then AutopilotStatus="Accelerating"bY("Accelerating.mp3","AP")end end end;if jv<AutopilotTargetOrbit*1.5 then if CustomTarget~=nil and CustomTarget.planetname=="Space"then AutopilotEndSpeed=0 elseif CustomTarget==nil then _,AutopilotEndSpeed=b8(a9):escapeAndOrbitalSpeed(jv)end end;if not AutopilotCruising and not AutopilotBraking and not jq then j3=cD((jp-bJ):normalize())elseif TurnBurn and(AutopilotBraking or AutopilotCruising)then j3=cD(-vec3(bF):normalize())end;if AutopilotAccelerating then if not M then BrakeIsOn=false;cg(AutopilotInterplanetaryThrottle)F=x(AutopilotInterplanetaryThrottle,2)M=true end;local jA=unit.getThrottle()if AtmoSpeedAssist then jA=F end;if vec3(core.getVelocity()):len()>=MaxGameVelocity or jA==0 and M then AutopilotAccelerating=false;if AutopilotStatus~="Cruising"then bY("Cruising.mp3","AP")AutopilotStatus="Cruising"end;AutopilotCruising=true;cg(0)end;if AutopilotDistance<=a5 then AutopilotAccelerating=false;if AutopilotStatus~="Braking"then bY("Braking.mp3","AP")AutopilotStatus="Braking"end;AutopilotBraking=true;cg(0)M=false end elseif AutopilotBraking then if AutopilotStatus~="Orbiting to Target"then BrakeIsOn=true;V=1 end;if TurnBurn then cg(1,true)end;local _,ja=b8(a9):escapeAndOrbitalSpeed((bJ-planet.center):len()-planet.radius)local cM;if CustomTarget~=nil then cM=CustomTarget.position-bJ end;if CustomTarget~=nil and CustomTarget.planetname=="Space"and bG<50 then jn("Autopilot complete, arrived at space location")BrakeIsOn=true;V=1 elseif CustomTarget~=nil and CustomTarget.planetname~="Space"and bG<=ja and(orbit.apoapsis==nil or orbit.periapsis==nil or orbit.apoapsis.altitude<=0 or orbit.periapsis.altitude<=0)then jn("Autopilot complete, commencing reentry")AutopilotTargetCoords=CustomTarget.position;aj=true;bb.showWayPoint(a9,AutopilotTargetCoords)elseif orbit.periapsis~=nil and orbit.periapsis.altitude>0 and orbit.eccentricity<1 or AutopilotStatus=="Circularizing"then if AutopilotStatus~="Circularizing"then bY("Circularizing.mp3","AP")AutopilotStatus="Circularizing"end;if bG<=ja then if CustomTarget~=nil then if bF:normalize():dot(cM:normalize())>0.4 then if AutopilotStatus~="Orbiting to Target"then bY("Orbiting.mp3")AutopilotStatus="Orbiting to Target"end;if not WaypointSet then BrakeIsOn=false;bb.showWayPoint(a9,CustomTarget.position)WaypointSet=true end else jn("Autopilot complete, proceeding with reentry")AutopilotTargetCoords=CustomTarget.position;aj=true;bb.showWayPoint(a9,CustomTarget.position)WaypointSet=false end else jn("Autopilot completed, setting orbit",true)V=0 end end elseif AutopilotStatus=="Circularizing"then jn("Autopilot complete, fixing Orbit",true)end elseif AutopilotCruising then if AutopilotDistance<=a5 then AutopilotAccelerating=false;if AutopilotStatus~="Braking"then bY("Braking.mp3","AP")AutopilotStatus="Braking"end;AutopilotBraking=true end;local jA=unit.getThrottle()if AtmoSpeedAssist then jA=F end;if jA>0 then AutopilotAccelerating=true;if AutopilotStatus~="Accelerating"then AutopilotStatus="Accelerating"bY("Accelerating.mp3","AP")end;AutopilotCruising=false end else if j3 then if not AutopilotRealigned and CustomTarget==nil or not AutopilotRealigned and CustomTarget~=nil and CustomTarget.planetname~="Space"then if not aj then AutopilotTargetCoords=vec3(a9.center)+(AutopilotTargetOrbit+a9.radius)*bE;AutopilotShipUp=bC;AutopilotShipRight=bE end;AutopilotRealigned=true elseif j3 then AutopilotAccelerating=true;if AutopilotStatus~="Accelerating"then AutopilotStatus="Accelerating"bY("Accelerating.mp3","AP")end;if not M then cg(AutopilotInterplanetaryThrottle,true)F=x(AutopilotInterplanetaryThrottle,2)M=true;BrakeIsOn=false end end end end elseif Autopilot and(CustomTarget~=nil and CustomTarget.planetname~="Space"and aq>0)then Z="Autopilot complete, proceeding with reentry"bY("APComplete.mp3","AP")AutopilotTargetCoords=CustomTarget.position;BrakeIsOn=false;AutopilotBraking=false;Autopilot=false;TargetSet=false;AutopilotStatus="Aligning"V=0;cg(0)M=false;ProgradeIsOn=true;aj=true;bb.showWayPoint(a9,CustomTarget.position)end;if X then be=true;local jx=0;local eY=bJ+vec3(unit.getMasterPlayerRelativePosition())local jB=eY-bJ;local jC=vec3(jB):project_on(bD):len()local jD=vec3(jB):project_on(bE):len()local ag=math.sqrt(jC*jC+jD*jD)cD(jB:normalize())local jE=40;local jF=ag<jE;local jG=100;local jH=q((ag-jE)/2,10,jG)R=0;local j3=c(S)<0.1;if j3 and bG<jH and not jF then BrakeIsOn=false;jx=-20 else BrakeIsOn=true;jx=0 end;local jI=0;if c(jx-bP)>jI then if pitchPID==nil then pitchPID=pid.new(2*0.01,0,2*0.1)end;pitchPID:inject(jx-bP)local jy=pitchPID:get()R=jy end end;if AltitudeHold or BrakeLanding or Reentry or VectorToTarget or LockPitch~=nil then local cw=unit.getClosestPlanetInfluence()>0;local jJ=HoldAltitude-ar;local jK=500+bG;local jL=1;if AutoTakeoff then jL=q(bG/100,0.1,1)end;local jx=(utils.smoothstep(jJ,-jK,jK)-0.5)*2*MaxPitch*jL;if not Reentry and not aj and not VectorToTarget and bD:dot(bF:normalize())<0.99 then jx=(utils.smoothstep(jJ,-jK*q(20-19*aq*10,1,20),jK*q(20-19*aq*10,1,20))-0.5)*2*MaxPitch*q(2-aq*10,1,2)*jL end;if not AltitudeHold then jx=0 end;if LockPitch~=nil then if cw and not IntoOrbit then jx=LockPitch else LockPitch=nil end end;be=true;local jM=R;if Reentry then local jN=d(bl)local jO,jP=b6.computeDistanceAndTime(bG,jN/3.6,au,0,0,LastMaxBrake-planet.gravity*9.8*au)local jQ=ar-(planet.noAtmosphericDensityAltitude+5000)if not bO and ar>planet.noAtmosphericDensityAltitude+5000 and bG<=jN/3.6 and bG>jN/3.6-10 and c(bF:normalize():dot(bD))>0.9 then cg(0)elseif bO and bG>jN/3.6 and(jO>-1 and jQ<=jO or ar<=planet.noAtmosphericDensityAltitude+5000)then BrakeIsOn=true else BrakeIsOn=false end;cj(jN,true)if not O then jx=-80;if aq>0.02 then Z="PARACHUTE DEPLOYED"Reentry=false;BrakeLanding=true;jx=0;be=autoRollPreference end elseif planet.noAtmosphericDensityAltitude>0 and ar>planet.noAtmosphericDensityAltitude+5000 then be=true elseif ar<=planet.noAtmosphericDensityAltitude+5000 then cj(jN)if not bO and r:getTargetSpeed(axisCommandId.longitudinal)==bl then O=false;Reentry=false;be=true end end end;if bG>N and not ak and not VectorToTarget and not BrakeLanding and ForceAlignment then cD(vec3(bF))end;if(VectorToTarget or ak)and AutopilotTargetIndex>0 and aq>0.01 then local cM;if CustomTarget~=nil then cM=CustomTarget.position-bJ else cM=a9.center-bJ end;local jw=math.deg(iH(bH:normalize(),bF,cM))*2;local jR=math.rad(c(bQ))if bG>minRollVelocity and aq>0.01 then local jS=q(90-jx*2,-90,90)bi=q(jw*2,-jS,jS)local jT=jw;jw=q(q(jw,-YawStallAngle*0.80,YawStallAngle*0.80)*math.cos(jR)+4*(bP-jx)*math.sin(math.rad(bQ)),-YawStallAngle*0.80,YawStallAngle*0.80)jx=q(q(jx*math.cos(jR),-PitchStallAngle*0.80,PitchStallAngle*0.80)+c(q(c(jT)*math.sin(jR),-PitchStallAngle*0.80,PitchStallAngle*0.80)),-PitchStallAngle*0.80,PitchStallAngle*0.80)else bi=0;jw=q(jw,-YawStallAngle*0.80,YawStallAngle*0.80)end;local jU=iZ-jw;if not bg and bG>minRollVelocity and aq>0.01 then if yawPID==nil then yawPID=pid.new(2*0.01,0,2*0.1)end;yawPID:inject(jU)local jz=q(yawPID:get(),-1,1)S=S+jz elseif ap and am>-1 or bG<minRollVelocity then cD(cM)elseif bg and aq>0.01 then if(iZ<-YawStallAngle or iZ>YawStallAngle)and aq>0.01 then cD(bF)end;if(i_<-PitchStallAngle or i_>PitchStallAngle)and aq>0.01 then jx=q(bP-i_,bP-PitchStallAngle*0.80,bP+PitchStallAngle*0.80)end end;if CustomTarget~=nil and not ak then local j4=planet:getAltitude(CustomTarget.position)local jQ=math.sqrt(cM:len()^2-(ar-j4)^2)local jV=LastMaxBrakeInAtmo;if jV then jV=jV*q(bG/100,0.1,1)*aq else jV=LastMaxBrake end;if aq<0.01 then jV=LastMaxBrake end;local jW=bF:len()-c(bI)local jX=vec3(core.getWorldAirFrictionAcceleration())local jY=math.sqrt(jX:len()-jX:project_on(g2):len())*au;if bG>100 then a5,a6=b6.computeDistanceAndTime(bG,100,au,0,0,jV+jY)local jZ,j_=b6.computeDistanceAndTime(100,0,au,0,0,jV/2)a5=a5+jZ else a5,a6=b6.computeDistanceAndTime(bG,0,au,0,0,jV/2)end;StrongBrakes=true;if not ak and not Reentry and jQ<=a5+bG*iY/2 and(bF:project_on_plane(bH):normalize():dot(cM:project_on_plane(bH):normalize())>0.99 or VectorStatus=="Finalizing Approach")then VectorStatus="Finalizing Approach"cg(0)if AltitudeHold then cs()VectorToTarget=true end;BrakeIsOn=true elseif not AutoTakeoff then BrakeIsOn=false end;if VectorStatus=="Finalizing Approach"and(jW<0.1 or jQ<0.1 or LastDistanceToTarget~=nil and LastDistanceToTarget<jQ)then if not bM then bY("BrakeLandingEngaged.mp3","BL")BrakeLanding=true end;VectorToTarget=false;VectorStatus="Proceeding to Waypoint"end;LastDistanceToTarget=jQ end elseif VectorToTarget and aq==0 and HoldAltitude>planet.noAtmosphericDensityAltitude and not(ak or Reentry)then if CustomTarget~=nil and a9.name==planet.name then local cM=CustomTarget.position-bJ;local j4=planet:getAltitude(CustomTarget.position)local jQ=math.sqrt(cM:len()^2-(ar-j4)^2)local jV=LastMaxBrakeInAtmo;if jV then a5,a6=b6.computeDistanceAndTime(bG,0,au,0,0,jV/2)StrongBrakes=true;if jQ<=a5+bG*iY/2 and bF:project_on_plane(bH):normalize():dot(cM:project_on_plane(bH):normalize())>0.99 then if planet.hasAtmosphere then BrakeIsOn=false;ProgradeIsOn=false;O=true;aj=false;al=true;Autopilot=false;cP()end end;LastDistanceToTarget=jQ end end end;if aq==0 and(AltitudeHold and HoldAltitude>planet.noAtmosphericDensityAltitude)and not(ak or IntoOrbit or Reentry)then if not bw and not IntoOrbit then bu=HoldAltitude;bt=true;if VectorToTarget then bs.VectorToTarget=true end;cr()VectorToTarget=false;bq=true end end;if bg and aq>0.01 and am==-1 and bG>minRollVelocity and VectorStatus~="Finalizing Approach"then cD(bF)jx=q(bP-i_,bP-PitchStallAngle*0.80,bP+PitchStallAngle*0.80)end;R=jM;local iQ=-1;if BrakeLanding then jx=0;local k0=false;local k1=30;if b7~=nil and b7>0 then local jY=0;local k2=q(aq,0.4,2)local jV=LastMaxBrakeInAtmo*q(bG/100,0.1,1)*k2;local k3=b7*k2+jV+jY-id;local k4=jV/2+jY-id;local k5=bG-math.sqrt(c(k4/2)*20/(0.5*au))*utils.sign(k4)if k5<0 then k5=0 end;local k6;if bG>100 then local k7,_=b6.computeDistanceAndTime(bG,100,au,0,0,jV)local k8,_=b6.computeDistanceAndTime(100,0,au,0,0,math.sqrt(jV))k6=k7+k8 else k6=b6.computeDistanceAndTime(bG,0,au,0,0,math.sqrt(jV))end;if k6<20 then BrakeIsOn=false else local k9=0;if k5>100 then local ka,_=b6.computeDistanceAndTime(k5,100,au,0,0,k3)local kb,_=b6.computeDistanceAndTime(100,0,au,0,0,b7*k2+math.sqrt(jV)+jY-id)k9=ka+kb else k9,_=b6.computeDistanceAndTime(k5,0,au,0,0,b7*k2+math.sqrt(jV)+jY-id)end;k9=(k9+15+bG*iY)*1.1;local kc=CustomTarget~=nil and planet:getAltitude(CustomTarget.position)>0 and CustomTarget.safe;if kc then local j4=planet:getAltitude(CustomTarget.position)local kd=ar-j4-100;local cM=CustomTarget.position-bJ;local ke=math.sqrt(cM:len()^2-(ar-j4)^2)if ke>100 then kc=false elseif kd<=k9 or k9==-1 then BrakeIsOn=true;k0=true else BrakeIsOn=false;k0=true end end;if not kc and CalculateBrakeLandingSpeed then if k9>=k1 then BrakeIsOn=true else BrakeIsOn=false end;k0=true end end end;if not bO then cg(0)end;r:setTargetGroundAltitude(500)r:activateGroundEngineAltitudeStabilization(500)stablized=true;iQ=am;if iQ>-1 then be=autoRollPreference;if bG<1 or bF:normalize():dot(bH)<0 then BrakeLanding=false;AltitudeHold=false;GearExtended=true;a.control.extendLandingGears()r:setTargetGroundAltitude(LandingGearGroundHeight)ac=0;BrakeIsOn=true else BrakeIsOn=true end elseif StrongBrakes and bF:normalize():dot(-g2)<0.999 then BrakeIsOn=true elseif bI<-brakeLandingRate and not k0 then BrakeIsOn=true elseif not k0 then BrakeIsOn=false end end;if AutoTakeoff or ak then local hm,ee,ed;if AutopilotTargetCoords~=nil then hm,ee,ed=b5:getPlanetarySystem(0):castIntersections(bJ,(AutopilotTargetCoords-bJ):normalize(),function(e1)return e1.radius+e1.noAtmosphericDensityAltitude end)end;if bM then if ar>=HoldAltitude-50 then AutoTakeoff=false;if not Autopilot and not VectorToTarget then BrakeIsOn=true;cg(0)end else HoldAltitude=antigrav.getBaseAltitude()end elseif c(jx)<15 and ar/HoldAltitude>0.75 then AutoTakeoff=false;if not ak then if bO and not AtmoSpeedAssist then a.control.cancelCurrentControlMasterMode()end elseif ak and bG<N then Autopilot=true;ak=false;AltitudeHold=false;AutoTakeoff=false;cg(0)elseif ak then cg(0)BrakeIsOn=true end elseif ak and aq==0 and a9~=nil and(hm==nil or hm.name==a9.name)then Autopilot=true;ak=false;AltitudeHold=false;AutoTakeoff=false;if not bO then cg(0)end;AutopilotAccelerating=true end end;local kf=am>-1;local kg=bP;if(VectorToTarget or ak)and not kf and bG>minRollVelocity and aq>0.01 then local jR=math.rad(c(bQ))kg=bP*c(math.cos(jR))+i_*math.sin(jR)end;local kh=q(jx-kg,-PitchStallAngle*0.80,PitchStallAngle*0.80)if aq<0.01 and VectorToTarget then kh=q(jx-kg,-85,MaxPitch)elseif aq<0.01 then kh=q(jx-kg,-MaxPitch,MaxPitch)end;if c(bQ)<5 or VectorToTarget or BrakeLanding or kf or AltitudeHold then if pitchPID==nil then pitchPID=pid.new(5*0.01,0,5*0.1)end;pitchPID:inject(kh)local jy=pitchPID:get()R=R+jy end end;if antigrav~=nil and(antigrav and not ExternalAGG and ar<200000)then if AntigravTargetAltitude==nil or AntigravTargetAltitude<1000 then AntigravTargetAltitude=1000 end;if desiredBaseAltitude~=AntigravTargetAltitude then desiredBaseAltitude=AntigravTargetAltitude;antigrav.setBaseAltitude(desiredBaseAltitude)end end end;am=iL()return iC end;function script.onStart()local function ki()local function kj(kk)local kl=dbHud_1.hasKey;for c_,d0 in pairs(kk)do if kl(d0)then local cJ=f(dbHud_1.getStringValue(d0))if cJ~=nil then _G[d0]=cJ;aK=true end end end end;if dbHud_1 then local kl=dbHud_1.hasKey;if not useTheseSettings then kj(c3())coroutine.yield()kj(b)else kj(b)Z="Updated user preferences used.  Will be saved when you exit seat.\nToggle off useTheseSettings to use saved values"af=5;aK=false end;coroutine.yield()if aK then Z="Loaded Saved Variables"K=x(ResolutionX/2,0)L=x(ResolutionY/2,0)aI=ResolutionX;aJ=ResolutionY;BrakeToggleStatus=BrakeToggleDefault;userControlScheme=string.lower(userControlScheme)be=autoRollPreference;bl=AtmoSpeedLimit;ay=[[rgb(]]..d(C+0.5)..","..d(E+0.5)..","..d(D+0.5)..[[)]]az=[[rgb(]]..d(C*0.9+0.5)..","..d(E*0.9+0.5)..","..d(D*0.9+0.5)..[[)]]elseif not useTheseSettings then Z="No Saved Variables Found - Exit HUD to save settings"end else Z="No databank found. Attach one to control unit and rerun \nthe autoconfigure to save preferences and locations"end;if LastStartTime+180<bB then LastMaxBrakeInAtmo=0 end;LastStartTime=bB;userControlScheme=string.lower(userControlScheme)if string.find("keyboard virtual joystick mouse",userControlScheme)==nil then Z="Invalid User Control Scheme selected.\nChange userControlScheme in Lua Parameters to keyboard, mouse, or virtual joystick\nOr use shift and button in screen"af=7 end;if antigrav and not ExternalAGG then if AntigravTargetAltitude==nil then AntigravTargetAltitude=ar end;antigrav.setBaseAltitude(AntigravTargetAltitude)end;if safeMass==0 then safeMass=au end end;local function km()local function kn(ko,kp)if ko>kp then kp=ko end;local kq,kr=0,0;if ContainerOptimization>0 then kq=ContainerOptimization*0.05 end;if FuelTankOptimization>0 then kr=FuelTankOptimization*0.05 end;kp=kp*(1-(kq+kr))return kp end;local ks=core.getElementNameById;local kt=fuelX~=0 and fuelY~=0;for c_ in pairs(as)do local type=core.getElementTypeById(as[c_])if n(type,'^.*Atmospheric Engine$')then if n(tostring(core.getElementTagsById(as[c_])),'^.*vertical.*$')then bL=true end end;if n(type,'^.*Space Engine$')then bz=true;if n(tostring(core.getElementTagsById(as[c_])),'^.*vertical.*$')then local ku=core.getElementRotationById(as[c_])if ku[4]<0 then if o(-ku[4],0.1)==0.5 then bx=true end else if o(ku[4],0.1)==0.5 then by=true end end end end;if type=="Landing Gear"then P=true end;if type=="Dynamic Core Unit"then local kv=h(as[c_])if kv>10000 then B=128 elseif kv>1000 then B=64 elseif kv>150 then B=32 end end;aQ=aQ+h(as[c_])if kt and(type=="Atmospheric Fuel Tank"or type=="Space Fuel Tank"or type=="Rocket Fuel Tank")then local kv=h(as[c_])local kw=k(as[c_])local ko=0;local fV=p()if type=="Atmospheric Fuel Tank"then local kp=400;local kx=35.03;if kv>10000 then kp=51200;kx=5480 elseif kv>1300 then kp=6400;kx=988.67 elseif kv>150 then kp=1600;kx=182.67 end;ko=kw-kx;if fuelTankHandlingAtmo>0 then kp=kp+kp*fuelTankHandlingAtmo*0.2 end;kp=kn(ko,kp)aN[#aN+1]={as[c_],ks(as[c_]),kp,kx,ko,fV}end;if type=="Rocket Fuel Tank"then local kp=320;local kx=173.42;if kv>65000 then kp=40000;kx=25740 elseif kv>6000 then kp=5120;kx=4720 elseif kv>700 then kp=640;kx=886.72 end;ko=kw-kx;if fuelTankHandlingRocket>0 then kp=kp+kp*fuelTankHandlingRocket*0.1 end;kp=kn(ko,kp)aP[#aP+1]={as[c_],ks(as[c_]),kp,kx,ko,fV}end;if type=="Space Fuel Tank"then local kp=2400;local kx=182.67;if kv>10000 then kp=76800;kx=5480 elseif kv>1300 then kp=9600;kx=988.67 end;ko=kw-kx;if fuelTankHandlingSpace>0 then kp=kp+kp*fuelTankHandlingSpace*0.2 end;kp=kn(ko,kp)aO[#aO+1]={as[c_],ks(as[c_]),kp,kx,ko,fV}end end end;if not bL then VertTakeOff,VertTakeOffEngine=false,false end end;local function ky()if gyro~=nil then aw=gyro.getState()==1 end;if userControlScheme~="keyboard"then v(1)else v(0)end;if door and(ap or not ap and ar<10000)then for _,d0 in pairs(door)do d0.toggle()end end;if switch then for _,d0 in pairs(switch)do d0.toggle()end end;if forcefield and(ap or not ap==0 and ar<10000)then for _,d0 in pairs(forcefield)do d0.toggle()end end;if antigrav then bM=antigrav.getState()==1;if bM and not ExternalAGG then antigrav.show()end end;if l()==1 and RemoteFreeze then system.freeze(1)else system.freeze(0)end;if P then GearExtended=a.control.isAnyLandingGearExtended()==1;if GearExtended then a.control.extendLandingGears()else a.control.retractLandingGears()end end;if am~=-1 or not ap and vec3(core.getVelocity()):len()<50 then BrakeIsOn=true;GearExtended=true;if P then a.control.extendLandingGears()end else BrakeIsOn=false end;r:setTargetGroundAltitude(bf)if ap and am~=-1 then b7=core.getMaxKinematicsParametersAlongAxis("ground",core.getConstructOrientationUp())[1]end;WasInAtmo=ap end;local function kz(kA,kB,kC,kD,cb,cc,kE,kF,kG,kH)local kI={enableName=kA,disableName=kB,width=kC,height=kD,x=cb,y=cc,toggleVar=kE,toggleFunction=kF,drawCondition=kG,hovered=false}if kH then table.insert(aH,kI)else table.insert(aG,kI)end;return kI end;local function kJ(kK)if not bR then showHandlingVariables=false;showHudVariables=false;showPhysicsVariables=false;showHud=true;return elseif kK=="handling"then showHandlingVariables=not showHandlingVariables;showHudVariables=false;showPhysicsVariables=false elseif kK=="hud"then showHudVariables=not showHudVariables;showHandlingVariables=false;showPhysicsVariables=false elseif kK=="physics"then showPhysicsVariables=not showPhysicsVariables;showHandlingVariables=false;showHudVariables=false end;if showPhysicsVariables or showHudVariables or showHandlingVariables then bS=c3(kK)showHud=false else bS={}showHud=true end end;local function kL()bR=not bR;if bR then aF=aH;Z="Hold SHIFT to see Settings"bT=showHud else aF=aG;Z="Hold SHIFT to see Control Buttons"kJ()showHud=bT end end;local function kM(d0)_G[d0]=not _G[d0]if _G[d0]then Z=d0 .." set to true"else Z=d0 .." set to false"end;if d0=="showHud"then bT=_G[d0]elseif d0=="BrakeToggleDefault"then BrakeToggleStatus=BrakeToggleDefault elseif d0=="Cockpit"then system.showScreen(0)dbHud_1.setStringValue("content","")end end;local function kN()local kO=50;local kP=340;local cb=500;local cc=aJ/2-400;local kQ=0;for c_,d0 in pairs(c3("boolean"))do if type(_G[d0])=="boolean"then kz(d0,d0,kP,kO,cb,cc,function()return _G[d0]end,function()kM(d0)end,function()return true end,true)cc=cc+kO+20;if kQ==9 then cb=cb+kP+20;cc=aJ/2-400;kQ=0 else kQ=kQ+1 end end end;kz("Control View","Control View",kP,kO,10,aJ/2-500,function()return true end,kL,function()return true end,true)kz("View Handling Settings",'Hide Handling Settings',kP,kO,10,aJ/2-(500-kO),function()return showHandlingVariables end,function()kJ("handling")end,function()return true end,true)kz("View Hud Settings",'Hide Hud Settings',kP,kO,10,aJ/2-(500-kO*2),function()return showHudVariables end,function()kJ("hud")end,function()return true end,true)kz("View Physics Settings",'Hide Physics Settings',kP,kO,10,aJ/2-(500-kO*3),function()return showPhysicsVariables end,function()kJ("physics")end,function()return true end,true)end;local function kR()local function kS()if dbHud_1 then local position=bJ;local fO=planet.name..". "..#SavedLocations;if radar_1 then local dK,_=radar_1.getData():match('"constructId":"([0-9]*)","distance":([%d%.]*)')if dK~=nil and dK~=""then fO=fO.." "..radar_1.getConstructName(dK)end end;local cA={}cA={position=position,name=fO,atmosphere=planet.atmosphericDensityAboveSurface,planetname=planet.name,gravity=planet.gravity,safe=true}SavedLocations[#SavedLocations+1]=cA;table.insert(b0[0],cA)ba.UpdateAtlasLocationsList()Z="Location saved as "..fO else Z="Databank must be installed to save locations"end end;local function kT()TurnBurn=not TurnBurn end;local function kU(kV)if kV==1 then ProgradeIsOn=not ProgradeIsOn;RetrogradeIsOn=false else RetrogradeIsOn=not RetrogradeIsOn;ProgradeIsOn=false end;Autopilot=false;AltitudeHold=false;X=false;BrakeLanding=false;LockPitch=nil;Reentry=false;AutoTakeoff=false end;local function kW()kU(1)end;local function kX()local cz=-1;cz=ba.findAtlasIndex(b0[0])if cz>-1 then table.remove(b0[0],cz)end;cz=-1;cz=ba.findAtlasIndex(SavedLocations)if cz~=-1 then Z=CustomTarget.name.." saved location cleared"table.remove(SavedLocations,cz)end;ba.adjustAutopilotTargetIndex()ba.UpdateAtlasLocationsList()end;local function kY()local fO=AutopilotTargetName;if fO==nil then local hl=cn((bJ-CustomTarget.position):len())fO=CustomTarget.name.." "..hl end;if fO==nil then fO="None"end;return"Engage Autopilot: "..fO end;local function kZ()local fO=AutopilotTargetName;if fO==nil then fO=CustomTarget.name end;if fO==nil then fO="None"end;return"Disable Autopilot: "..fO end;local function k_()if safeMass>0 then Z="Safe Mass set to "..x(au,2).." kg"else Z="Intruder Detection reset\nSafe Mass set to "..x(au,2).." kg"af=5;bK=0 end;safeMass=au end;local kO=50;local kP=260;local l0=kz("Enable Brake Toggle","Disable Brake Toggle",kP,kO,aI/2-kP/2,aJ/2+350,function()return BrakeToggleStatus end,function()BrakeToggleStatus=not BrakeToggleStatus;if BrakeToggleStatus then Z="Brakes in Toggle Mode"else Z="Brakes in Default Mode"end end)kz("Align Prograde","Disable Prograde",kP,kO,aI/2-kP/2-50-l0.width,aJ/2-kO+380,function()return ProgradeIsOn end,kW)kz("Align Retrograde","Disable Retrograde",kP,kO,aI/2-kP/2+l0.width+50,aJ/2-kO+380,function()return RetrogradeIsOn end,kU,function()return aq==0 end)local l1=kz(kY,kZ,600,60,aI/2-600/2,aJ/2-60/2-400,function()return Autopilot end,cu)kz("Save Position","Save Position",200,l1.height,l1.x+l1.width+30,l1.y,function()return false end,kS,function()return AutopilotTargetIndex==0 or CustomTarget==nil end)kz("Update Position","Update Position",200,l1.height,l1.x+l1.width+30,l1.y,function()return false end,cx,function()return AutopilotTargetIndex>0 and CustomTarget~=nil end)kz("Clear Position","Clear Position",200,l1.height,l1.x-200-30,l1.y,function()return true end,kX,function()return AutopilotTargetIndex>0 and CustomTarget~=nil end)kO=60;kP=300;local cb=10;local cc=aJ/2-500;kz("Show Help","Hide Help",kP,kO,cb,cc,function()return showHelp end,function()showHelp=not showHelp end)cc=cc+kO+20;kz("View Settings","View Settings",kP,kO,cb,cc,function()return true end,kL)local cc=aJ/2-300;kz("Enable Turn and Burn","Disable Turn and Burn",kP,kO,cb,cc,function()return TurnBurn end,kT)kz("Horizontal Takeoff Mode","Vertical Takeoff Mode",kP,kO,cb+kP+20,cc,function()return VertTakeOffEngine end,function()VertTakeOffEngine=not VertTakeOffEngine;if VertTakeOffEngine then Z="Vertical Takeoff Mode"else Z="Horizontal Takeoff Mode"end end,function()return bL end)cc=cc+kO+20;kz("Show Orbit Display","Hide Orbit Display",kP,kO,cb,cc,function()return DisplayOrbit end,function()DisplayOrbit=not DisplayOrbit;if DisplayOrbit then Z="Orbit Display Enabled"else Z="Orbit Display Disabled"end end)kz("Engage Orbiting","Cancel Orbiting",kP,kO,cb+kP+20,cc,function()return IntoOrbit end,cr,function()return aq==0 and unit.getClosestPlanetInfluence()>0 end)cc=cc+kO+20;kz("Glide Re-Entry","Cancel Glide Re-Entry",kP,kO,cb,cc,function()return Reentry end,function()aj=true;kW()end,function()return planet.hasAtmosphere and not ap end)kz("Parachute Re-Entry","Cancel Parachute Re-Entry",kP,kO,cb+kP+20,cc,function()return Reentry end,cP,function()return planet.hasAtmosphere and not ap end)cc=cc+kO+20;kz("Engage Follow Mode","Disable Follow Mode",kP,kO,cb,cc,function()return X end,ct,function()return l()==1 end)kz("Enable Repair Arrows","Disable Repair Arrows",kP,kO,cb+kP+20,cc,function()return aR end,function()aR=not aR;if aR then Z="Repair Arrows Enabled"else Z="Repair Arrows Diabled"end end,function()return l()==1 end)cc=cc+kO+20;if not ExternalAGG then kz("Enable AGG","Disable AGG",kP,kO,cb,cc,function()return bM end,cQ,function()return antigrav~=nil end)end;kz("Reset Intruder Alert","Set Safe Mass",kP,kO,cb+kP+20,cc,function()return safeMass>0 end,k_,function()return IntruderAlertSystem end)cc=cc+kO+20;kz(function()return e("Switch IPH Mode - Current: %s",iphCondition)end,function()return e("IPH Mode: %s",iphCondition)end,kP*2,kO,cb,cc,function()return false end,function()if iphCondition=="All"then iphCondition="Custom Only"elseif iphCondition=="Custom Only"then iphCondition="No Moons"else iphCondition="All"end;Z="IPH Mode: "..iphCondition end)cc=cc+kO+20;kz(function()return e("Toggle Control Scheme - Current: %s",userControlScheme)end,function()return e("Control Scheme: %s",userControlScheme)end,kP*2,kO,cb,cc,function()return false end,function()if userControlScheme=="keyboard"then userControlScheme="mouse"elseif userControlScheme=="mouse"then userControlScheme="virtual joystick"else userControlScheme="keyboard"end;Z="New Control Scheme: "..userControlScheme end)end;SetupComplete=false;beginSetup=coroutine.create(function()r:setupCustomTargetSpeedRanges(axisCommandId.longitudinal,{1000,5000,10000,20000,30000})ki()coroutine.yield()km()coroutine.yield()bb=iB()ky()kN()kR()aF=aG;coroutine.yield()b0=d1()b4=d2()b5=b4(d1())b6=er()b8=eW()b9=fi()ba=it()bb=iB()coroutine.yield()unit.hide()system.showScreen(1)collectgarbage("collect")coroutine.yield()unit.setTimer("apTick",apTickRate)unit.setTimer("hudTick",hudTickRate)unit.setTimer("oneSecond",1)unit.setTimer("tenthSecond",1/10)unit.setTimer("fiveSecond",5)bY("StartupComplete.mp3","SU")end)end;function script.onStop()_autoconf.hideCategoryPanels()if antigrav~=nil and not ExternalAGG then antigrav.hide()end;if warpdrive~=nil then warpdrive.hide()end;core.hide()a.control.switchOffHeadlights()if door and(aq>0 or aq==0 and ar<10000)then for _,d0 in pairs(door)do d0.toggle()end end;if switch then for _,d0 in pairs(switch)do d0.toggle()end end;if forcefield and(aq>0 or aq==0 and ar<10000)then for _,d0 in pairs(forcefield)do d0.toggle()end end;safeMass=au;cW()if button then button.activate()end;if SetWaypointOnExit then bb.showWayPoint(planet,bJ)end;bY("ShutdownComplete.mp3","SU")end;function script.onTick(l2)if l2=="contact"then if not contactTimer then contactTimer=0 end;if bB>contactTimer+10 then Z="Radar Contact"bY("RadarContact.mp3","RC")contactTimer=bB end;unit.stopTimer("contact")elseif l2=="tenthSecond"then local function l3()local l4=system.createData;local l5=system.createWidget;panelInterplanetary=system.createWidgetPanel("Interplanetary Helper")interplanetaryHeader=l5(panelInterplanetary,"value")interplanetaryHeaderText=l4('{"label": "Target Planet", "value": "N/A", "unit":""}')u(interplanetaryHeaderText,interplanetaryHeader)widgetDistance=l5(panelInterplanetary,"value")widgetDistanceText=l4('{"label": "distance", "value": "N/A", "unit":""}')u(widgetDistanceText,widgetDistance)widgetTravelTime=l5(panelInterplanetary,"value")widgetTravelTimeText=l4('{"label": "Travel Time", "value": "N/A", "unit":""}')u(widgetTravelTimeText,widgetTravelTime)widgetMaxMass=l5(panelInterplanetary,"value")widgetMaxMassText=l4('{"label": "Maximum Mass", "value": "N/A", "unit":""}')u(widgetMaxMassText,widgetMaxMass)widgetTargetOrbit=l5(panelInterplanetary,"value")widgetTargetOrbitText=l4('{"label": "Target Altitude", "value": "N/A", "unit":""}')u(widgetTargetOrbitText,widgetTargetOrbit)widgetCurBrakeDistance=l5(panelInterplanetary,"value")widgetCurBrakeDistanceText=l4('{"label": "Cur Brake distance", "value": "N/A", "unit":""}')widgetCurBrakeTime=l5(panelInterplanetary,"value")widgetCurBrakeTimeText=l4('{"label": "Cur Brake Time", "value": "N/A", "unit":""}')widgetMaxBrakeDistance=l5(panelInterplanetary,"value")widgetMaxBrakeDistanceText=l4('{"label": "Max Brake distance", "value": "N/A", "unit":""}')widgetMaxBrakeTime=l5(panelInterplanetary,"value")widgetMaxBrakeTimeText=l4('{"label": "Max Brake Time", "value": "N/A", "unit":""}')widgetTrajectoryAltitude=l5(panelInterplanetary,"value")widgetTrajectoryAltitudeText=l4('{"label": "Projected Altitude", "value": "N/A", "unit":""}')if not ap then u(widgetCurBrakeDistanceText,widgetCurBrakeDistance)u(widgetCurBrakeTimeText,widgetCurBrakeTime)u(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)u(widgetMaxBrakeTimeText,widgetMaxBrakeTime)u(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)end end;local function l6()s(panelInterplanetary)panelInterplanetary=nil end;local function l7()if not Autopilot then if CustomTarget==nil or CustomTarget.planetname~=planet.name then AutopilotDistance=(a9.center-bJ):len()else AutopilotDistance=(CustomTarget.position-bJ):len()end end;local eU=bG;local jA=unit.getThrottle()/100;if AtmoSpeedAssist then jA=F end;local l8,l9=b6.computeDistanceAndTime(bG,MaxGameVelocity,au,a:maxForceForward()*jA,warmup,0)local a5,a6;if not TurnBurn then a5,a6=bb.GetAutopilotBrakeDistanceAndTime(MaxGameVelocity)else a5,a6=bb.GetAutopilotTBBrakeDistanceAndTime(MaxGameVelocity)end;local _,la;if not TurnBurn and eU>0 then _,la=bb.GetAutopilotBrakeDistanceAndTime(eU)else _,la=bb.GetAutopilotTBBrakeDistanceAndTime(eU)end;local lb=0;local lc=0;if AutopilotCruising or not Autopilot and eU>5 then lc=b6.computeTravelTime(eU,0,AutopilotDistance)elseif a5+l8<AutopilotDistance then lb=AutopilotDistance-(a5+l8)lc=b6.computeTravelTime(8333.0556,0,lb)else local ld=(AutopilotDistance-a5)/l8;l8=AutopilotDistance-a5;l9=l9*ld end;if CustomTarget~=nil and CustomTarget.planetname==planet.name and not Autopilot then return lc elseif AutopilotBraking then return la elseif AutopilotCruising then return lc+la else return l9+a6+lc end end;local function le(id,lf)if id==nil then id=core.g()end;id=x(id,5)if lf~=nil and lf or(aM==nil or aM~=id)then local eX=core.getVelocity()local eU=vec3(eX):len()local lg=f(unit.getData()).maxBrake;if lg~=nil and lg>0 and ap then lg=lg/q(eU/100,0.1,1)lg=lg/aq;if aq>0.10 then if LastMaxBrakeInAtmo then LastMaxBrakeInAtmo=(LastMaxBrakeInAtmo+lg)/2 else LastMaxBrakeInAtmo=lg end end end;if lg~=nil and lg>0 then LastMaxBrake=lg end;aM=id end end;le(nil,true)if aq>0 and not WasInAtmo then if not bO and AtmoSpeedAssist and(AltitudeHold or Reentry)then cg(1)J=false end end;if bN~=nil then if r:getTargetSpeed(axisCommandId.longitudinal)~=bN then cj(bN,TRUE)else bN=nil end end;if AutopilotTargetName~="None"then if panelInterplanetary==nil then l3()end;if AutopilotTargetName~=nil then local lh=CustomTarget~=nil;local li=LastMaxBrakeInAtmo/a9:getGravity(a9.center+vec3(0,0,1)*a9.radius):len()t(interplanetaryHeaderText,'{"label": "Target", "value": "'..AutopilotTargetName..'", "unit":""}')travelTime=l7()if lh and not Autopilot then ag=(bJ-CustomTarget.position):len()else ag=(AutopilotTargetCoords-bJ):len()end;if not TurnBurn then a5,a6=bb.GetAutopilotBrakeDistanceAndTime(bG)a7,a8=bb.GetAutopilotBrakeDistanceAndTime(MaxGameVelocity)else a5,a6=bb.GetAutopilotTBBrakeDistanceAndTime(bG)a7,a8=bb.GetAutopilotTBBrakeDistanceAndTime(MaxGameVelocity)end;local hl=cn(ag)t(widgetDistanceText,'{"label": "distance", "value": "'..hl..'"}')t(widgetTravelTimeText,'{"label": "Travel Time", "value": "'..cR(travelTime)..'", "unit":""}')hl=cn(a5)t(widgetCurBrakeDistanceText,'{"label": "Cur Brake distance", "value": "'..hl..'"}')t(widgetCurBrakeTimeText,'{"label": "Cur Brake Time", "value": "'..cR(a6)..'", "unit":""}')hl=cn(a7)t(widgetMaxBrakeDistanceText,'{"label": "Max Brake distance", "value": "'..hl..'"}')t(widgetMaxBrakeTimeText,'{"label": "Max Brake Time", "value": "'..cR(a8)..'", "unit":""}')t(widgetMaxMassText,'{"label": "Maximum Mass", "value": "'..e("%.2f",li/1000)..'", "unit":" Tons"}')hl=cn(AutopilotTargetOrbit)t(widgetTargetOrbitText,'{"label": "Target Orbit", "value": "'..hl..'"}')if aq>0 and not WasInAtmo then system.removeDataFromWidget(widgetMaxBrakeTimeText,widgetMaxBrakeTime)system.removeDataFromWidget(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)system.removeDataFromWidget(widgetCurBrakeTimeText,widgetCurBrakeTime)system.removeDataFromWidget(widgetCurBrakeDistanceText,widgetCurBrakeDistance)system.removeDataFromWidget(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)WasInAtmo=true end;if aq==0 and WasInAtmo then if t(widgetMaxBrakeTimeText,widgetMaxBrakeTime)==1 then u(widgetMaxBrakeTimeText,widgetMaxBrakeTime)end;if t(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)==1 then u(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)end;if t(widgetCurBrakeTimeText,widgetCurBrakeTime)==1 then u(widgetCurBrakeTimeText,widgetCurBrakeTime)end;if t(widgetCurBrakeDistanceText,widgetCurBrakeDistance)==1 then u(widgetCurBrakeDistanceText,widgetCurBrakeDistance)end;if t(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)==1 then u(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)end;WasInAtmo=false end end else l6()end;if warpdrive~=nil then if f(warpdrive.getData()).destination~="Unknown"and f(warpdrive.getData()).distance>400000 then warpdrive.show()showWarpWidget=true else warpdrive.hide()showWarpWidget=false end end elseif l2=="oneSecond"then local function lj(fy)local lk=0;aD=""local ll=aQ;local lm=0;local ln=0;local lo=0;local fX=0;local fY=""local lp=core.getElementHitPointsById;for c_ in pairs(as)do local kv=0;local lq=0;lq=h(as[c_])kv=lp(as[c_])lm=lm+kv;if kv<lq then if kv==0 then lo=lo+1 else ln=ln+1 end;if aR and#aA==0 then position=vec3(core.getElementPositionById(as[c_]))local cb=position.x-B;local cc=position.y-B;local lr=position.z-B;table.insert(aA,core.spawnArrowSticker(cb,cc,lr+1,"down"))table.insert(aA,core.spawnArrowSticker(cb,cc,lr+1,"down"))core.rotateSticker(aA[2],0,0,90)table.insert(aA,core.spawnArrowSticker(cb+1,cc,lr,"north"))table.insert(aA,core.spawnArrowSticker(cb+1,cc,lr,"north"))core.rotateSticker(aA[4],90,90,0)table.insert(aA,core.spawnArrowSticker(cb-1,cc,lr,"south"))table.insert(aA,core.spawnArrowSticker(cb-1,cc,lr,"south"))core.rotateSticker(aA[6],90,-90,0)table.insert(aA,core.spawnArrowSticker(cb,cc-1,lr,"east"))table.insert(aA,core.spawnArrowSticker(cb,cc-1,lr,"east"))core.rotateSticker(aA[8],90,0,90)table.insert(aA,core.spawnArrowSticker(cb,cc+1,lr,"west"))table.insert(aA,core.spawnArrowSticker(cb,cc+1,lr,"west"))core.rotateSticker(aA[10],-90,0,90)table.insert(aA,as[c_])end elseif aR and#aA>0 and aA[11]==as[c_]then for fQ in pairs(aA)do core.deleteSticker(aA[fQ])end;aA={}end end;lk=d(lm/ll*100)if lk<100 then fy[#fy+1]=ca(0,0,"","pbright txt")fX=d(lk*2.55)fY=e("rgb(%d,%d,%d)",255-fX,fX,0)if lk<100 then fy[#fy+1]=ca("50%",1035,"Elemental Integrity: "..lk.."%","txtbig txtmid","fill:"..fY)if lo>0 then fy[#fy+1]=ca("50%",1055,"Disabled Modules: "..lo.." Damaged Modules: "..ln,"txtbig txtmid","fill:"..fY)elseif ln>0 then fy[#fy+1]=ca("50%",1055,"Damaged Modules: "..ln,"txtbig txtmid","fill:"..fY)end end end end;local function ls()if weapon then if WeaponPanelID==nil and(radarPanelID~=nil or GearExtended)then _autoconf.displayCategoryPanel(weapon,weapon_size,L_TEXT("ui_lua_widget_weapon", "Weapons"),"weapon",true)WeaponPanelID=_autoconf.panels[_autoconf.panels_size]elseif WeaponPanelID~=nil and radarPanelID==nil and not GearExtended then s(WeaponPanelID)WeaponPanelID=nil end end end;local function lt()local fV=p()local h9=bG;local lu=fV-at;if h9>1.38889 then h9=h9/1000;local lv=h9*(fV-at)TotalDistanceTravelled=TotalDistanceTravelled+lv;aa=aa+lv end;ab=ab+lu;TotalFlightTime=TotalFlightTime+lu;at=fV end;local function lw()if safeMass>0 then if au>safeMass+50 then bK=d(au-safeMass)safeMass=-1 elseif au<safeMass then safeMass=au end elseif safeMass==-1 then safeMass=-2 else safeMass=-1 end end;an=false;if IntruderAlertSystem then lw()end;lt()b9.UpdateRadar()b9.UpdatePipe()ls()local fy={}b9.ExtraData(fy)if ShowOdometer then fy=b9.DrawOdometer(fy,aa,TotalDistanceTravelled,ab)end;if ShouldCheckDamage then lj(fy)end;ah=table.concat(fy,"")collectgarbage("collect")elseif l2=="fiveSecond"then if not UseSatNav then return end;ao=dbHud_1.getStringValue("SPBAutopilotTargetName")if ao~=nil and ao~=""and ao~="SatNavNotChanged"then local cJ=f(dbHud_1.getStringValue("SavedLocations"))if cJ~=nil then _G["SavedLocations"]=cJ;local cz=-1;local cA;for c_,d0 in pairs(SavedLocations)do if d0.name and d0.name=="SatNav Location"then cz=c_;break end end;if cz~=-1 then cA=SavedLocations[cz]cz=-1;for c_,d0 in pairs(b0[0])do if d0.name and d0.name=="SatNav Location"then cz=c_;break end end;if cz>-1 then b0[0][cz]=cA end;ba.UpdateAtlasLocationsList()Z=cA.name.." position updated"end end;for i=1,#bU do if bU[i].name==ao then AutopilotTargetIndex=i;system.print("Index = "..AutopilotTargetIndex.." "..bU[i].name)ba.UpdateAutopilotTarget()dbHud_1.setStringValue("SPBAutopilotTargetName","SatNavNotChanged")break end end end elseif l2=="msgTick"then local fy={}b9.DisplayMessage(fy,"empty")Z="empty"unit.stopTimer("msgTick")af=3 elseif l2=="animateTick"then bd=true;bc=false;ad=0;ae=0;unit.stopTimer("animateTick")elseif l2=="hudTick"then local function lx(fy)local ly=d(q(ag/(aI/4)*255,0,255))fy[#fy+1]=e("<line x1='0' y1='0' x2='%fpx' y2='%fpx' style='stroke:rgb(%d,%d,%d);stroke-width:2;transform:translate(50%%, 50%%)' />",ad,ae,d(C+0.5)+ly,d(E+0.5)-ly,d(D+0.5)-ly)end;local function lz()for _,d0 in pairs(aF)do if d0.hovered then if not d0.drawCondition or d0.drawCondition()then d0.toggleFunction()end;d0.hovered=false end end end;local function lA()local function lB(lC,lD,cb,cc,kC,kD)if lC>cb and lC<cb+kC and lD>cc and lD<cc+kD then return true else return false end end;local cb=ad+aI/2;local cc=ae+aJ/2;for _,d0 in pairs(aF)do d0.hovered=lB(cb,cc,d0.x,d0.y,d0.width,d0.height)end end;local function lE(fy)local function lF(fy,lG,hover,cb,cc,eN,lH,lI,lJ,lK,lL)if type(lK)=="function"then lK=lK()end;if type(lL)=="function"then lL=lL()end;fy[#fy+1]=e("<rect x='%f' y='%f' width='%f' height='%f' fill='",cb,cc,eN,lH)if lG then fy[#fy+1]=e("%s'",lI)else fy[#fy+1]=lJ end;if hover then fy[#fy+1]=" style='stroke:white; stroke-width:2'"else fy[#fy+1]=" style='stroke:black; stroke-width:1'"end;fy[#fy+1]="></rect>"fy[#fy+1]=e("<text x='%f' y='%f' font-size='24' fill='",cb+eN/2,cc+lH/2+5)if lG then fy[#fy+1]="black"else fy[#fy+1]="white"end;fy[#fy+1]="' text-anchor='middle' font-family='Montserrat'>"if lG then fy[#fy+1]=e("%s</text>",lK)else fy[#fy+1]=e("%s</text>",lL)end end;local lM="rgb(50,50,50)'"local lN="rgb(210,200,200)"local lO=lF;for _,d0 in pairs(aF)do local kB=d0.disableName;local kA=d0.enableName;if type(kB)=="function"then kB=kB()end;if type(kA)=="function"then kA=kA()end;if not d0.drawCondition or d0.drawCondition()then lO(fy,d0.toggleVar(),d0.hovered,d0.x,d0.y,d0.width,d0.height,lN,lM,kB,kA)end end end;local fy={}b9.HUDPrologue(fy)if showHud then b9.UpdateHud(fy)else if AlwaysVSpd then b9.DrawVerticalSpeed(fy,ar)end;b9.DisplayOrbitScreen(fy)b9.DrawWarnings(fy)end;if bR and bS~={}then b9.DrawSettings(fy)end;b9.HUDEpilogue(fy)fy[#fy+1]=e([[<svg width="100%%" height="100%%" style="position:absolute;top:0;left:0"  viewBox="0 0 %d %d">]],aI,aJ)if Z~="empty"then b9.DisplayMessage(fy,Z)end;if l()==0 and userControlScheme=="virtual joystick"then if DisplayDeadZone then b9.DrawDeadZone(fy)end end;if w()==0 then if l()==1 and Y then lA()lE(fy)if not bc and not bd then local lP=table.concat(fy,"")fy={}fy[#fy+1]=e("<style>@keyframes test { from { opacity: 0; } to { opacity: 1; } }  body { animation-name: test; animation-duration: 0.5s; }</style><body><svg width='100%%' height='100%%' position='absolute' top='0' left='0'><rect width='100%%' height='100%%' x='0' y='0' position='absolute' style='fill:rgb(6,5,26);'/></svg><svg width='50%%' height='50%%' style='position:absolute;top:30%%;left:25%%' viewbox='0 0 %d %d'>",aI,aJ)fy[#fy+1]=lP;fy[#fy+1]="</body>"bc=true;fy[#fy+1]=[[</svg></body>]]unit.setTimer("animateTick",0.5)local content=table.concat(fy,"")system.setScreen(content)elseif bd then local lP=table.concat(fy,"")fy={}fy[#fy+1]=e("<body style='background-color:rgb(6,5,26)'><svg width='50%%' height='50%%' style='position:absolute;top:30%%;left:25%%' viewbox='0 0 %d %d'>",aI,aJ)fy[#fy+1]=lP;fy[#fy+1]="</body>"end;if not bc then fy[#fy+1]=e([[<g transform="translate(%d %d)"><circle class="cursor" cx="%fpx" cy="%fpx" r="5"/></g>]],K,L,ad,ae)end else lz()end else if not Y and l()==0 then lz()if ag>DeadZone then if DisplayDeadZone then lx(fy)end end else lA()lE(fy)end;fy[#fy+1]=e([[<g transform="translate(%d %d)"><circle class="cursor" cx="%fpx" cy="%fpx" r="5"/></g>]],K,L,ad,ae)end;fy[#fy+1]=[[</svg></body>]]content=table.concat(fy,"")if not DidLogOutput then system.logInfo(LastContent)DidLogOutput=true end elseif l2=="apTick"then bb.APTick()end end;function script.onFlush()local function lQ(lR,jH)local lS=vec3()local lT=vec3()if lR==axisCommandId.longitudinal then lS=vec3(core.getConstructOrientationForward())lT=bD elseif lR==axisCommandId.vertical then lS=vec3(core.getConstructOrientationUp())lT=bC elseif lR==axisCommandId.lateral then lS=vec3(core.getConstructOrientationRight())lT=bE else return vec3()end;local lU=vec3(core.getWorldGravity())local lV=lU:dot(lT)local lW=vec3(core.getWorldAirFrictionAcceleration())local lX=lW:dot(lT)local lY=vec3(core.getVelocity())local lZ=lY:dot(lS)local l_=jH*constants.kph2m;if targetSpeedPID2==nil then targetSpeedPID2=pid.new(10,0,10.0)end;targetSpeedPID2:inject(l_-lZ)local m0=targetSpeedPID2:get()local m1=(m0-lX-lV)*lT;return m1 end;local function m2(lR,jH)local lS=vec3()local lT=vec3()if lR==axisCommandId.longitudinal then lS=vec3(core.getConstructOrientationForward())lT=bD elseif lR==axisCommandId.vertical then lS=vec3(core.getConstructOrientationUp())lT=bC elseif lR==axisCommandId.lateral then lS=vec3(core.getConstructOrientationRight())lT=bE else return vec3()end;local lU=vec3(core.getWorldGravity())local lV=lU:dot(lT)local lW=vec3(core.getWorldAirFrictionAcceleration())local lX=lW:dot(lT)local lY=vec3(core.getVelocity())local lZ=lY:dot(lS)local l_=jH*constants.kph2m;if targetSpeedPID==nil then targetSpeedPID=pid.new(10,0,10.0)end;targetSpeedPID:inject(l_-lZ)local m0=targetSpeedPID:get()local m1=(m0-lX-lV)*lT;return m1 end;local function m3(m4,g1,ix)local m5=m4:cross(ix):normalize_inplace()local gN=math.acos(q(m5:dot(-g1),-1,1))*constants.rad2deg;if m5:cross(-g1):dot(ix)<0 then gN=-gN end;return gN end;if antigrav and not ExternalAGG then if not bM and antigrav.getBaseAltitude()~=AntigravTargetAltitude then antigrav.setBaseAltitude(AntigravTargetAltitude)end end;bO=r:getAxisCommandType(0)==axisCommandType.byThrottle;if bO and J then cg(0)J=false elseif not bO and not J then F=0;J=true end;pitchSpeedFactor=math.max(pitchSpeedFactor,0.01)yawSpeedFactor=math.max(yawSpeedFactor,0.01)rollSpeedFactor=math.max(rollSpeedFactor,0.01)torqueFactor=math.max(torqueFactor,0.01)brakeSpeedFactor=math.max(brakeSpeedFactor,0.01)brakeFlatFactor=math.max(brakeFlatFactor,0.01)autoRollFactor=math.max(autoRollFactor,0.01)turnAssistFactor=math.max(turnAssistFactor,0.01)local m6=q(Q+R+system.getControlDeviceForwardInput(),-1,1)local m7=q(T+W+system.getControlDeviceYawInput(),-1,1)local m8=q(U+S-system.getControlDeviceLeftRightInput(),-1,1)local m9=V;bH=vec3(core.getWorldVertical())if bH==nil or bH:len()==0 then bH=(planet.center-bJ):normalize()end;bJ=vec3(core.getConstructWorldPos())bC=vec3(core.getConstructWorldOrientationUp())bD=vec3(core.getConstructWorldOrientationForward())bE=vec3(core.getConstructWorldOrientationRight())bF=vec3(core.getWorldVelocity())au=core.getConstructMass()bG=vec3(bF):len()bI=-bH:dot(bF)bQ=getRoll(bH,bD,bE)local ma=bQ/180*math.pi;local mb=math.cos(ma)local mc=math.sin(ma)bP=m3(bH,bD,bE*mb+bC*mc)local md=bF:normalize()local me=c(bQ)local mf=utils.sign(bQ)local mg=vec3(core.getWorldAngularVelocity())local mh=m6*pitchSpeedFactor*bE+m7*rollSpeedFactor*bD+m8*yawSpeedFactor*bC;if be==true and bH:len()>0.01 then local mi=c(bi-bQ)if((ProgradeIsOn or Reentry or aj or AltitudeHold or IntoOrbit)and mi>0 or aq>0.0 and mi<autoRollRollThreshold and autoRollPreference)and m7==0 and c(bP)<85 then local mj=bi;local mk=autoRollFactor;if aq==0 then mk=mk/4;bi=0;mj=0 end;if rollPID==nil then rollPID=pid.new(mk*0.01,0,mk*0.1)end;rollPID:inject(mj-bQ)local ml=rollPID:get()mh=mh+ml*bD end end;if bH:len()>0.01 and aq>0.0 then local mm=20.0;if turnAssist==true and me>mm and m6==0 and m8==0 then local mn=turnAssistFactor*0.1;local mo=turnAssistFactor*0.025;local mp=(me-mm)/(180-mm)*180;local mq=0;if mp<90 then mq=mp/90 elseif mp<180 then mq=(180-mp)/90 end;mq=mq*mq;local mr=-mf*mo*(1.0-mq)local ms=mn*mq;mh=mh+ms*bE+mr*bC end end;local mt=1;local mu=0;local mv=1;if system.getMouseWheel()>0 then if AltIsOn then if aq>0 or Reentry then bl=q(bl+speedChangeLarge,0,AtmoSpeedLimit)elseif Autopilot then MaxGameVelocity=q(MaxGameVelocity+speedChangeLarge/3.6*100,0,8333.00)end elseif av then local mw=F;F=x(q(F+speedChangeLarge/100,-1,1),2)if F>=0 and mw<0 then F=0;av=false end end elseif system.getMouseWheel()<0 then if AltIsOn then if aq>0 or Reentry then bl=q(bl-speedChangeLarge,0,AtmoSpeedLimit)elseif Autopilot then MaxGameVelocity=q(MaxGameVelocity-speedChangeLarge/3.6*100,0,8333.00)end elseif av then local mw=F;F=x(q(F-speedChangeLarge/100,-1,1),2)if F<=0 and mw>0 then F=0;av=false end end else av=true end;G=0;if ap and AtmoSpeedAssist and bO then if throttlePID==nil then throttlePID=pid.new(0.5,0,1)end;throttlePID:inject(bl/3.6-bF:dot(bD))local mx=throttlePID:get()I=q(mx,-1,1)if I<F and aq>0.005 then H=true;r:setThrottleCommand(axisCommandId.longitudinal,q(I,0.01,1))else H=false;r:setThrottleCommand(axisCommandId.longitudinal,F)end;if brakePID==nil then brakePID=pid.new(1*0.01,0,1*0.1)end;brakePID:inject(bF:len()-bl/3.6)local my=q(brakePID:get(),0,1)if aq>0 and bI<-80 or aq>0.005 then G=my end;if G>0 then if H and I==0.01 then r:setThrottleCommand(axisCommandId.longitudinal,0)end else I=q(I,0.01,1)end;local mz=''local mA=vec3()local mB=lQ(axisCommandId.vertical,ac*1000)a:setEngineForceCommand("vertical airfoil , vertical ground ",mB,mu)local mC='thrust analog longitudinal 'if ExtraLongitudeTags~="none"then mC=mC..ExtraLongitudeTags end;local mD=r:getAxisCommandType(axisCommandId.longitudinal)local mE=r:composeAxisAccelerationFromThrottle(mC,axisCommandId.longitudinal)local mF=m2(axisCommandId.lateral,LeftAmount*1000)mz=mz..' , '.."lateral airfoil , lateral ground "mA=mA+mF;if mA:len()>constants.epsilon then a:setEngineForceCommand(mz,mA,mu,'','','',mv)end;a:setEngineForceCommand(mC,mE,mt)local mG='thrust analog vertical fueled 'local mH='thrust analog lateral fueled 'if ExtraLateralTags~="none"then mH=mH..ExtraLateralTags end;if ExtraVerticalTags~="none"then mG=mG..ExtraVerticalTags end;if ac~=0 or BrakeLanding and BrakeIsOn or not GearExtended and not stablized then a:setEngineForceCommand(mG,mB,mt)else a:setEngineForceCommand(mG,vec3(),mt)end;if LeftAmount~=0 then a:setEngineForceCommand(mH,mF,mt)else a:setEngineForceCommand(mH,vec3(),mt)end;if m9==0 then m9=G end;local mI=-m9*(brakeSpeedFactor*bF+brakeFlatFactor*md)a:setEngineForceCommand('brake',mI)else if AtmoSpeedAssist then r:setThrottleCommand(axisCommandId.longitudinal,F)end;local jH=unit.getAxisCommandValue(0)if not bO then if brakePID==nil then brakePID=pid.new(1*0.01,0,1*0.1)end;brakePID:inject(bF:len()-jH/3.6)local my=q(brakePID:get(),0,1)m9=q(m9+my,0,1)end;local mI=-m9*(brakeSpeedFactor*bF+brakeFlatFactor*md)a:setEngineForceCommand('brake',mI)local mz=''local mA=vec3()local mJ=false;local mC='thrust analog longitudinal 'if ExtraLongitudeTags~="none"then mC=mC..ExtraLongitudeTags end;local mD=r:getAxisCommandType(axisCommandId.longitudinal)if mD==axisCommandType.byThrottle then local mE=r:composeAxisAccelerationFromThrottle(mC,axisCommandId.longitudinal)a:setEngineForceCommand(mC,mE,mt)elseif mD==axisCommandType.byTargetSpeed then local mE=r:composeAxisAccelerationFromTargetSpeed(axisCommandId.longitudinal)mz=mz..' , '..mC;mA=mA+mE;if r:getTargetSpeed(axisCommandId.longitudinal)==0 or r:getCurrentToTargetDeltaSpeed(axisCommandId.longitudinal)<-r:getTargetSpeedCurrentStep(axisCommandId.longitudinal)*0.5 then mJ=true end end;local mH='thrust analog lateral 'if ExtraLateralTags~="none"then mH=mH..ExtraLateralTags end;local mK=r:getAxisCommandType(axisCommandId.lateral)if mK==axisCommandType.byThrottle then local mL=r:composeAxisAccelerationFromThrottle(mH,axisCommandId.lateral)a:setEngineForceCommand(mH,mL,mt)elseif mK==axisCommandType.byTargetSpeed then local mF=r:composeAxisAccelerationFromTargetSpeed(axisCommandId.lateral)mz=mz..' , '..mH;mA=mA+mF end;local mG='thrust analog vertical 'if ExtraVerticalTags~="none"then mG=mG..ExtraVerticalTags end;local mM=r:getAxisCommandType(axisCommandId.vertical)if mM==axisCommandType.byThrottle then local mB=r:composeAxisAccelerationFromThrottle(mG,axisCommandId.vertical)if ac~=0 or BrakeLanding and BrakeIsOn then a:setEngineForceCommand(mG,mB,mt,'airfoil','ground','',mv)else a:setEngineForceCommand(mG,vec3(),mt)a:setEngineForceCommand('airfoil vertical',mB,mt,'airfoil','','',mv)a:setEngineForceCommand('ground vertical',mB,mt,'ground','','',mv)end elseif mM==axisCommandType.byTargetSpeed then if ac<0 then a:setEngineForceCommand('hover',vec3(),mt)end;local mN=r:composeAxisAccelerationFromTargetSpeed(axisCommandId.vertical)mz=mz..' , '..mG;mA=mA+mN end;if mA:len()>constants.epsilon then if V~=0 or mJ or c(md:dot(bD))<0.8 then mz=mz..', brake'end;a:setEngineForceCommand(mz,mA,mu,'','','',mv)end end;local mO=torqueFactor*(mh-mg)local mP=vec3(core.getWorldAirFrictionAngularAcceleration())mO=mO-mP;a:setEngineTorqueCommand('torque',mO,mt,'airfoil','','',mv)a:setBoosterCommand('rocket_engine')if a4 and not VanillaRockets then local eU=vec3(core.getVelocity()):len()local mQ=0.15;if not bO then local mR=r:getTargetSpeed(axisCommandId.longitudinal)if eU*3.6>mR*(1-mQ)and IsRocketOn then IsRocketOn=false;a:toggleBoosters()elseif eU*3.6<mR*(1-mQ)and not IsRocketOn then IsRocketOn=true;a:toggleBoosters()end else local jA=unit.getThrottle()if AtmoSpeedAssist then jA=F*100 end;local jH=jA/100;if j==0 then jH=jH*MaxGameVelocity;if eU>=jH*(1-mQ)and IsRocketOn then IsRocketOn=false;a:toggleBoosters()elseif eU<jH*(1-mQ)and not IsRocketOn then IsRocketOn=true;a:toggleBoosters()end else local jN=d(bl)jH=jH*jN/3.6;if eU>=jH*(1-mQ)and IsRocketOn then IsRocketOn=false;a:toggleBoosters()elseif eU<jH*(1-mQ)and not IsRocketOn then IsRocketOn=true;a:toggleBoosters()end end end end end;function script.onUpdate()if not SetupComplete then local _,cJ=coroutine.resume(beginSetup)if cJ then SetupComplete=true end else a:update()if not bc and content~=LastContent then if not Cockpit then system.setScreen(content)else dbHud_1.setStringValue("content",content)end end;LastContent=content end end;function script.onActionStart(mS)local A=1;local function mT(mU)if mU then A=-1 end;if not ExternalAGG and bM then if AntigravTargetAltitude~=nil then AntigravTargetAltitude=AntigravTargetAltitude+A*a1;if AntigravTargetAltitude<1000 then AntigravTargetAltitude=1000 end;if AltitudeHold and AntigravTargetAltitude<HoldAltitude+10 and AntigravTargetAltitude>HoldAltitude-10 then HoldAltitude=AntigravTargetAltitude end else AntigravTargetAltitude=desiredBaseAltitude+A*100 end elseif AltitudeHold or VertTakeOff or IntoOrbit then if IntoOrbit then bu=bu+A*a0;if bu<planet.noAtmosphericDensityAltitude then bu=planet.noAtmosphericDensityAltitude end else HoldAltitude=HoldAltitude+A*a0 end else r:updateTargetGroundAltitudeFromActionStart(A*1.0)end end;local function mV(mU)if mU then A=-1 end;if not Y then if AtmoSpeedAssist and not AltIsOn then F=q(F+A*speedChangeLarge/100,-1,1)else r:updateCommandFromActionStart(axisCommandId.longitudinal,A*speedChangeLarge)end else if mU then A=1 else A=nil end;ba.adjustAutopilotTargetIndex(A)end end;if mS=="gear"then GearExtended=not GearExtended;if GearExtended then VectorToTarget=false;LockPitch=nil;cg(0)if vBooster or hover then if ap and am==-1 then bY("BrakeLandingEngaged.mp3","BL")StrongBrakes=true;Reentry=false;AutoTakeoff=false;VertTakeOff=false;AltitudeHold=false;BrakeLanding=true;be=true;GearExtended=false else bY("LoweringLandingGear.mp3","LG")if ap then BrakeIsOn=true;a.control.extendLandingGears()r:setTargetGroundAltitude(LandingGearGroundHeight)else a.control.extendLandingGears()r:setTargetGroundAltitude(LandingGearGroundHeight)end end end;if P and not BrakeLanding and not(vBooster or hover)then bY("LoweringLandingGear.mp3","LG")a.control.extendLandingGears()end else if P then bY("RaisingLandingGear.mp3","LG")a.control.retractLandingGears()end;r:setTargetGroundAltitude(TargetHoverHeight)end elseif mS=="light"then if a.control.isAnyHeadlightSwitchedOn()==1 then a.control.switchOffHeadlights()else a.control.switchOnHeadlights()end elseif mS=="forward"then Q=Q-1 elseif mS=="backward"then Q=Q+1 elseif mS=="left"then T=T-1 elseif mS=="right"then T=T+1 elseif mS=="yawright"then U=U-1 elseif mS=="yawleft"then U=U+1 elseif mS=="straferight"then r:updateCommandFromActionStart(axisCommandId.lateral,1.0)LeftAmount=1 elseif mS=="strafeleft"then r:updateCommandFromActionStart(axisCommandId.lateral,-1.0)LeftAmount=-1 elseif mS=="up"then ac=ac+1;r:deactivateGroundEngineAltitudeStabilization()r:updateCommandFromActionStart(axisCommandId.vertical,1.0)elseif mS=="down"then ac=ac-1;r:deactivateGroundEngineAltitudeStabilization()r:updateCommandFromActionStart(axisCommandId.vertical,-1.0)elseif mS=="groundaltitudeup"then mT()elseif mS=="groundaltitudedown"then mT(true)elseif mS=="option1"then ba.adjustAutopilotTargetIndex()toggleView=false elseif mS=="option2"then ba.adjustAutopilotTargetIndex(1)toggleView=false elseif mS=="option3"then local function mW()aE=not aE;if not aE then bY("WidgetDisplay.mp3","DH")unit.show()core.show()if atmofueltank_size>0 then _autoconf.displayCategoryPanel(atmofueltank,atmofueltank_size,L_TEXT("ui_lua_widget_atmofuel", "Atmo Fuel"),"fuel_container")fuelPanelID=_autoconf.panels[_autoconf.panels_size]end;if spacefueltank_size>0 then _autoconf.displayCategoryPanel(spacefueltank,spacefueltank_size,L_TEXT("ui_lua_widget_spacefuel", "Space Fuel"),"fuel_container")spacefuelPanelID=_autoconf.panels[_autoconf.panels_size]end;if rocketfueltank_size>0 then _autoconf.displayCategoryPanel(rocketfueltank,rocketfueltank_size,L_TEXT("ui_lua_widget_rocketfuel", "Rocket Fuel"),"fuel_container")rocketfuelPanelID=_autoconf.panels[_autoconf.panels_size]end else bY("HudDisplay.mp3","DH")unit.hide()core.hide()if fuelPanelID~=nil then s(fuelPanelID)fuelPanelID=nil end;if spacefuelPanelID~=nil then s(spacefuelPanelID)spacefuelPanelID=nil end;if rocketfuelPanelID~=nil then s(rocketfuelPanelID)rocketfuelPanelID=nil end end end;if hideHudOnToggleWidgets then if showHud then showHud=false else showHud=true end end;mW()toggleView=false elseif mS=="option4"then cu()toggleView=false elseif mS=="option5"then local function mX()if LockPitch==nil then bY("LockedPitchEngaged.mp3","LP")LockPitch=bP;AutoTakeoff=false;AltitudeHold=false;BrakeLanding=false else bY("LockedPitchSecured.mp3","LP")LockPitch=nil end end;mX()toggleView=false elseif mS=="option6"then cs()toggleView=false elseif mS=="option7"then sounds=not sounds;if sounds then Z="All HUD sounds enabled"else Z="All HUD sounds disabled"end;toggleView=false elseif mS=="option8"then stablized=not stablized;if not stablized then Z="DeCoupled Mode - Ground Stabilization off"r:deactivateGroundEngineAltitudeStabilization()bY("GroundStabilizationOff.mp3","GS")else Z="Coupled Mode - Ground Stabilization on"r:activateGroundEngineAltitudeStabilization(currentGroundAltitudeStabilization)a:setEngineForceCommand('hover',vec3(),1)bY("GroundStabilizationOn.mp3","GS")end;toggleView=false elseif mS=="option9"then if gyro~=nil then gyro.toggle()aw=gyro.getState()==1;if aw then bY("GyroActivated.mp3","GA")else bY("GyroDeactivated.mp3","GA")end end;toggleView=false elseif mS=="lshift"then if w()==1 then Y=true;PrevViewLock=w()v(1)elseif l()==1 and ShiftShowsRemoteButtons then Y=true;bd=false;bc=false end elseif mS=="brake"then if BrakeToggleStatus then cC()elseif not BrakeIsOn then cC()else BrakeIsOn=true end elseif mS=="lalt"then toggleView=true;AltIsOn=true;if l()==0 and not freeLookToggle and userControlScheme=="keyboard"then v(1)end elseif mS=="booster"then if VanillaRockets then a:toggleBoosters()elseif not a4 then if not IsRocketOn then a:toggleBoosters()IsRocketOn=true end;a4=true else if IsRocketOn then a:toggleBoosters()IsRocketOn=false end;a4=false end elseif mS=="stopengines"then local function mY()if an then bY("ClearAll.mp3","CA")an=false;AutopilotAccelerating=false;AutopilotBraking=false;AutopilotCruising=false;Autopilot=false;AutopilotRealigned=false;AutopilotStatus="Aligning"RetrogradeIsOn=false;ProgradeIsOn=false;AltitudeHold=false;Reentry=false;BrakeLanding=false;BrakeIsOn=false;AutoTakeoff=false;VertTakeOff=false;X=false;M=false;aj=false;ak=false;O=false;be=autoRollPreference;VectorToTarget=false;TurnBurn=false;aw=false;LockPitch=nil;IntoOrbit=false else an=true end end;r:resetCommand(axisCommandId.longitudinal)mY()F=0 elseif mS=="speedup"then mV()elseif mS=="speeddown"then mV(true)elseif mS=="antigravity"and not ExternalAGG then if antigrav~=nil then cQ()end end end;function script.onActionStop(mS)local function mZ()if not ExternalAGG and bM then a3=a1 end;if AltitudeHold or VertTakeOff or IntoOrbit then a2=a0 end end;if mS=="forward"then Q=0 elseif mS=="backward"then Q=0 elseif mS=="left"then T=0 elseif mS=="right"then T=0 elseif mS=="yawright"then U=0 elseif mS=="yawleft"then U=0 elseif mS=="straferight"then r:updateCommandFromActionStop(axisCommandId.lateral,-1.0)LeftAmount=0 elseif mS=="strafeleft"then r:updateCommandFromActionStop(axisCommandId.lateral,1.0)LeftAmount=0 elseif mS=="up"then ac=0;r:updateCommandFromActionStop(axisCommandId.vertical,-1.0)if stablized then r:activateGroundEngineAltitudeStabilization(currentGroundAltitudeStabilization)a:setEngineForceCommand('hover',vec3(),1)end elseif mS=="down"then ac=0;r:updateCommandFromActionStop(axisCommandId.vertical,1.0)if stablized then r:activateGroundEngineAltitudeStabilization(currentGroundAltitudeStabilization)a:setEngineForceCommand('hover',vec3(),1)end elseif mS=="groundaltitudeup"then mZ()toggleView=false elseif mS=="groundaltitudedown"then mZ()toggleView=false elseif mS=="lshift"then if w()==1 then Y=false;ad=0;ae=0;v(PrevViewLock)elseif l()==1 and ShiftShowsRemoteButtons then Y=false;bd=false;bc=false end elseif mS=="brake"then if not BrakeToggleStatus then if BrakeIsOn then cC()else BrakeIsOn=false end end elseif mS=="lalt"then if l()==0 and freeLookToggle then if toggleView then if w()==1 then v(0)else v(1)end else toggleView=true end elseif l()==0 and not freeLookToggle and userControlScheme=="keyboard"then v(0)end;AltIsOn=false end end;function script.onActionLoop(mS)local A=1;local function m_(mU)if mU then A=-1 end;if not ExternalAGG and bM then if AntigravTargetAltitude~=nil then AntigravTargetAltitude=AntigravTargetAltitude+A*a3;if AntigravTargetAltitude<1000 then AntigravTargetAltitude=1000 end;if AltitudeHold and AntigravTargetAltitude<HoldAltitude+10 and AntigravTargetAltitude>HoldAltitude-10 then HoldAltitude=AntigravTargetAltitude end;a3=a3*1.05;BrakeIsOn=false else AntigravTargetAltitude=desiredBaseAltitude+A*100;BrakeIsOn=false end elseif AltitudeHold or VertTakeOff or IntoOrbit then if IntoOrbit then bu=bu+A*a2;if bu<planet.noAtmosphericDensityAltitude then bu=planet.noAtmosphericDensityAltitude end else HoldAltitude=HoldAltitude+A*a2 end;a2=a2*1.05 else r:updateTargetGroundAltitudeFromActionLoop(A*1.0)end end;local function n0(mU)if mU then A=-1 end;if not Y then if AtmoSpeedAssist and not AltIsOn then F=q(F+A*speedChangeSmall/100,-1,1)else r:updateCommandFromActionLoop(axisCommandId.longitudinal,A*speedChangeSmall)end end end;if mS=="groundaltitudeup"then m_()elseif mS=="groundaltitudedown"then m_(true)elseif mS=="speedup"then n0()elseif mS=="speeddown"then n0(true)end end;function script.onInputText(cd)local function n1()for c_,d0 in pairs(c3())do dbHud_1.setStringValue(d0,g(nil))end;for c_,d0 in pairs(b)do if d0~="SavedLocations"then dbHud_1.setStringValue(d0,g(nil))end end;Z="Databank wiped except Save Locations. New variables will save after re-enter seat and exit"af=5;aK=false end;local function n2(n3,planet,eY,gJ)local function n4(eY)local y=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local df='::pos{'..y..','..y..','..y..','..y..','..y..'}'local ds,dt,dA,dB,dC=n(eY,df)if ds=="0"and dt=="0"then return vec3(tonumber(dA),tonumber(dB),tonumber(dC))end;dB=math.rad(dB)dA=math.rad(dA)local planet=b0[tonumber(ds)][tonumber(dt)]local eo=math.cos(dA)local n5=vec3(eo*math.cos(dB),eo*math.sin(dB),math.sin(dA))return planet.center+(planet.radius+dC)*n5 end;if dbHud_1 or gJ then local cA={}local position=n4(eY)if planet.name=="Space"then cA={position=position,name=n3,atmosphere=0,planetname=planet.name,gravity=planet.gravity}else cA={position=position,name=n3,atmosphere=planet.atmosphericDensityAboveSurface,planetname=planet.name,gravity=planet.gravity}end;if not gJ then SavedLocations[#SavedLocations+1]=cA else for c_,d0 in pairs(b0[0])do if d0.name and n3==d0.name then table.remove(b0[0],c_)end end end;table.insert(b0[0],cA)ba.UpdateAtlasLocationsList()else Z="Databank must be installed to save permanent locations"end end;local i;local n6,n7=nil,nil;local n8="Command List:\n/commands \n/setname <newname> - Updates current selected saved position name\n/G VariableName newValue - Updates global variable to new value\n".."/G dump - shows all variables updatable by /G\n/agg <targetheight> - Manually set agg target height\n".."/addlocation SafeZoneCenter ::pos{0,0,13771471,7435803,-128971} - adds a saved location by waypoint, not as accurate as making one at location\n".."/::pos{0,0,13771471,7435803,-128971} - adds a temporary waypoint that is not saved to databank with name 0Temp\n".."/copydatabank - copies dbHud databank to a blank databank\n".."/iphWP - displays current IPH target's ::pos waypoint in lua chat"i=string.find(cd," ")n6=cd;if i~=nil then n6=string.sub(cd,0,i-1)n7=string.sub(cd,i+1)end;if n6=="/help"or n6=="/commands"then for ik in string.gmatch(n8,"([^\n]+)")do system.print(ik)end;return elseif n6=="/setname"then if n7==nil or n7==""then Z="Usage: ah-setname Newname"return end;if AutopilotTargetIndex>0 and CustomTarget~=nil then cx(n7)else Z="Select a saved target to rename first"end elseif n6=="/addlocation"or string.find(cd,"::pos")~=nil then local gJ=false;local n3="0-Temp"if n7==nil or n7==""then n7=n6;gJ=true end;i=string.find(n7,"::")if not gJ then n3=string.sub(n7,1,i-2)end;local eY=string.sub(n7,i)local y=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local df='::pos{'..y..','..y..','..y..','..y..','..y..'}'local ds,dt,dA,dB,dC=n(eY,df)local planet=b0[tonumber(ds)][tonumber(dt)]n2(n3,planet,eY,gJ)Z="Added "..n3 .." to saved locations,\nplanet "..planet.name.." at "..eY;af=5 elseif n6=="/agg"then if n7==nil or n7==""then Z="Usage: /agg targetheight"return end;n7=tonumber(n7)if n7<1000 then n7=1000 end;AntigravTargetAltitude=n7;Z="AGG Target Height set to "..n7 elseif n6=="/G"then if n7==nil or n7==""then Z="Usage: /G VariableName variablevalue\n/G dump - shows all variables"return end;if n7=="dump"then for c_,d0 in pairs(c3())do if type(_G[d0])=="boolean"then if _G[d0]==true then system.print(d0 .." true")else system.print(d0 .." false")end elseif _G[d0]==nil then system.print(d0 .." nil")else system.print(d0 .." ".._G[d0])end end;return end;i=string.find(n7," ")local n9=string.sub(n7,0,i-1)local na=string.sub(n7,i+1)for c_,d0 in pairs(c3())do if d0==n9 then Z="Variable "..n9 .." changed to "..na;local nb=type(_G[d0])if nb=="number"then na=tonumber(na)elseif nb=="boolean"then if string.lower(na)=="true"then na=true else na=false end end;_G[d0]=na;return end end;Z="No such global variable: "..n9 elseif n6=="/copydatabank"then if dbHud_2 then cW(true)else Z="Spare Databank required to copy databank"end elseif n6=="/iphWP"then if AutopilotTargetIndex>0 then system.print(bb.showWayPoint(a9,AutopilotTargetCoords,true))Z="::pos waypoint shown in lua chat"else Z="No target selected in IPH"end end end;function script.onEnter(dK)if radar_1 and not ap and not bV then unit.setTimer("contact",0.1)end end;script.onStart()
        
        
        -- error handling code added by wrap.lua
        end, __wrap_lua__traceback)
        if not ok then
          __wrap_lua__error(message)
          if not script then script = {} end
        end
    stop:
      lua: |
        if not __wrap_lua__stopped and script.onStop then
          local ok, message = xpcall(script.onStop,__wrap_lua__traceback,unit)
          if not ok then __wrap_lua__error(message) end
        end
    tick(timerId):
      lua: |
        if not __wrap_lua__stopped and script.onTick then
          local ok, message = xpcall(script.onTick,__wrap_lua__traceback,timerId,unit)
          if not ok then __wrap_lua__error(message) end
        end
  system:
    actionStart(action):
      lua: |
        if not __wrap_lua__stopped and script.onActionStart then
          local ok, message = xpcall(script.onActionStart,__wrap_lua__traceback,action,system)
          if not ok then __wrap_lua__error(message) end
        end
    actionStop(action):
      lua: |
        if not __wrap_lua__stopped and script.onActionStop then
          local ok, message = xpcall(script.onActionStop,__wrap_lua__traceback,action,system)
          if not ok then __wrap_lua__error(message) end
        end
    actionLoop(action):
      lua: |
        if not __wrap_lua__stopped and script.onActionLoop then
          local ok, message = xpcall(script.onActionLoop,__wrap_lua__traceback,action,system)
          if not ok then __wrap_lua__error(message) end
        end
    update:
      lua: |
        if not __wrap_lua__stopped and script.onUpdate then
          local ok, message = xpcall(script.onUpdate,__wrap_lua__traceback,system)
          if not ok then __wrap_lua__error(message) end
        end
    flush:
      lua: |
        if not __wrap_lua__stopped and script.onFlush then
          local ok, message = xpcall(script.onFlush,__wrap_lua__traceback,system)
          if not ok then __wrap_lua__error(message) end
        end
    inputText(text):
      lua: |
        if not __wrap_lua__stopped and script.onInputText then
          local ok, message = xpcall(script.onInputText,__wrap_lua__traceback,text,system)
          if not ok then __wrap_lua__error(message) end
        end
  radar_1:
    enter(id):
      lua: |
        local radar = radar_1
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_1
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_2:
    enter(id):
      lua: |
        local radar = radar_2
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_2
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_3:
    enter(id):
      lua: |
        local radar = radar_3
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_3
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_4:
    enter(id):
      lua: |
        local radar = radar_4
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_4
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_5:
    enter(id):
      lua: |
        local radar = radar_5
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_5
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_6:
    enter(id):
      lua: |
        local radar = radar_6
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_6
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_7:
    enter(id):
      lua: |
        local radar = radar_7
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_7
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_8:
    enter(id):
      lua: |
        local radar = radar_8
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_8
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_9:
    enter(id):
      lua: |
        local radar = radar_9
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_9
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_10:
    enter(id):
      lua: |
        local radar = radar_10
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_10
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
