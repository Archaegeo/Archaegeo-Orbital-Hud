name: ArchHud - Archaegeo v1.5204 (Minified)
slots:
  core:
    class: CoreUnit
  radar:
    class: RadarPVPUnit
    select: manual
  antigrav:
    class: AntiGravityGeneratorUnit
  warpdrive:
    class: WarpDriveUnit
  gyro:
    class: GyroUnit
  weapon:
    class: WeaponUnit
    select: manual
  dbHud:
    class: databank
    select: manual
  telemeter:
    class: TelemeterUnit
    select: manual
  vBooster:
    class: VerticalBooster
  hover:
    class: Hovercraft
  door:
    class: DoorUnit
    select: manual
  switch:
    class: ManualSwitchUnit
    select: manual
  forcefield:
    class: ForceFieldUnit
    select: manual
  atmofueltank:
    class: AtmoFuelContainer
    select: manual
  spacefueltank:
    class: SpaceFuelContainer
    select: manual
  rocketfueltank:
    class: RocketFuelContainer
    select: manual
  shield:
    class: ShieldGeneratorUnit
    select: manual
handlers:
  unit:
    start:
      lua: |
        -- error handling code added by wrap.lua
        __wrap_lua__stopped = false
        __wrap_lua__stopOnError = false
        __wrap_lua__rethrowErrorAlways = false
        __wrap_lua__rethrowErrorIfStopped = true
        __wrap_lua__printError = true
        __wrap_lua__showErrorOnScreens = true
        
        function __wrap_lua__error (message)
          if __wrap_lua__stopped then return end
        
          -- make the traceback more readable and escape HTML syntax characters
          message = tostring(message):gsub('"%-%- |STDERROR%-EVENTHANDLER[^"]*"', 'chunk'):gsub("&", "&amp;"):gsub("<", "&lt;"):gsub(">", "&gt;")
        
          local unit = unit or self or {}
        
          if __wrap_lua__showErrorOnScreens then
            for _, value in pairs(unit) do
              if type(value) == "table" and value.setCenteredText and value.setHTML then -- value is a screen
                if message:match("\n") then
                  value.setHTML([[
        <pre style="color: white; background-color: black; font-family: Consolas,monospace; font-size: 4vh; white-space: pre-wrap; margin: 1em">
        Error: ]] .. message .. [[
        </pre>]])
                else
                  value.setCenteredText(message)
                end
              end
            end
          end
        
          if __wrap_lua__printError and system and system.print then
            system.print("Error: " .. message:gsub("\n", "<br>"))
          end
        
          if __wrap_lua__stopOnError then
            __wrap_lua__stopped = true
          end
        
          if __wrap_lua__stopped and unit and unit.exit then
            unit.exit()
          end
        
          if __wrap_lua__rethrowErrorAlways or (__wrap_lua__stopped and __wrap_lua__rethrowErrorIfStopped) then
            error(message)
          end
        end
        
        -- in case traceback is removed or renamed
        __wrap_lua__traceback = traceback or (debug and debug.traceback) or function (arg1, arg2) return arg2 or arg1 end
        
        local ok, message = xpcall(function ()
        
        -- script code
        
        local a=Navigator.new(system,core,unit)local b=require("atlas")script={}VERSION_NUMBER=1.5204;c=false;d="virtual joystick"e="archHUD"f=true;g=true;h=false;i=true;j=false;k=false;l=false;m=false;n=false;o=false;p=true;q=false;r=true;s=false;t=true;u=true;v=true;w=true;x=false;y=false;z=true;A=true;B=true;C=true;D=true;E=true;F=true;G=35;H=35;I=30;J=30;K=-30;L=0;M=5000;N=1.2;O=2000;P=1050;Q=30000;R=1000;S=50;T=0;U=100000;V=8333.00;W=1.0;X=32;Y=0;Z=0;_=0;a0=0;a1=0;a2=1920;a3=1080;a4=400;a5=130;a6=224;a7=255;a8=255;a9=0;aa=0;ab=960;ac=540;ad=1300;ae=540;af=1525;ag=325;ah=550;ai=540;aj=30;ak=700;al=1750;am=250;an=50;ao=250;ap=0;aq=25;ar=100;as=5;at=1;au=0.003;av=0.003;aw=2;ax=1.5;ay=180;az=150;aA=0.002;aB=2;aC=0.8;aD=1;aE=3;aF=1;aG=40;aH=0.0166667;aI=0.0666667;aJ="none"aK="none"aL="none"aM=g;aN=false;aO=false;aP=false;aQ=false;aR=false;aS=false;aT=false;aU=false;aV=false;aW=false;aX=false;aY=1000;aZ=false;a_=false;b0=false;b1=false;b2=0;b3="Aligning"b4=0;b5=1;b6="None"b7=nil;b8=0;b9=nil;ba=0.0;bb=0;bc={}bd=false;be=0;bf=0;bg=nil;bh=0;bi=1000;bj=0;bk=false;bl=0;bm=false;bn="All"bo=true;bp="Off"bq=0.000;br={}local bs={VertTakeOff={set=function(bt)aX=bt end,get=function()return aX end},VertTakeOffEngine={set=function(bt)aN=bt end,get=function()return aN end},SpaceTarget={set=function(bt)bk=bt end,get=function()return bk end},BrakeToggleStatus={set=function(bt)aM=bt end,get=function()return aM end},BrakeIsOn={set=function(bt)aO=bt end,get=function()return aO end},RetrogradeIsOn={set=function(bt)aP=bt end,get=function()return aP end},ProgradeIsOn={set=function(bt)aQ=bt end,get=function()return aQ end},Autopilot={set=function(bt)aR=bt end,get=function()return aR end},TurnBurn={set=function(bt)aS=bt end,get=function()return aS end},AltitudeHold={set=function(bt)aT=bt end,get=function()return aT end},BrakeLanding={set=function(bt)aU=bt end,get=function()return aU end},Reentry={set=function(bt)aW=bt end,get=function()return aW end},AutoTakeoff={set=function(bt)aV=bt end,get=function()return aV end},HoldAltitude={set=function(bt)aY=bt end,get=function()return aY end},AutopilotAccelerating={set=function(bt)aZ=bt end,get=function()return aZ end},AutopilotBraking={set=function(bt)b0=bt end,get=function()return b0 end},AutopilotCruising={set=function(bt)b1=bt end,get=function()return b1 end},AutopilotRealigned={set=function(bt)a_=bt end,get=function()return a_ end},AutopilotEndSpeed={set=function(bt)b2=bt end,get=function()return b2 end},AutopilotStatus={set=function(bt)b3=bt end,get=function()return b3 end},AutopilotPlanetGravity={set=function(bt)b4=bt end,get=function()return b4 end},PrevViewLock={set=function(bt)b5=bt end,get=function()return b5 end},AutopilotTargetName={set=function(bt)b6=bt end,get=function()return b6 end},AutopilotTargetCoords={set=function(bt)b7=bt end,get=function()return b7 end},AutopilotTargetIndex={set=function(bt)b8=bt end,get=function()return b8 end},TotalDistanceTravelled={set=function(bt)ba=bt end,get=function()return ba end},TotalFlightTime={set=function(bt)bb=bt end,get=function()return bb end},SavedLocations={set=function(bt)bc=bt end,get=function()return bc end},VectorToTarget={set=function(bt)bd=bt end,get=function()return bd end},LocationIndex={set=function(bt)be=bt end,get=function()return be end},LastMaxBrake={set=function(bt)bf=bt end,get=function()return bf end},LockPitch={set=function(bt)bg=bt end,get=function()return bg end},LastMaxBrakeInAtmo={set=function(bt)bh=bt end,get=function()return bh end},AntigravTargetAltitude={set=function(bt)bi=bt end,get=function()return bi end},LastStartTime={set=function(bt)bj=bt end,get=function()return bj end},iphCondition={set=function(bt)bn=bt end,get=function()return bn end},stablized={set=function(bt)bo=bt end,get=function()return bo end},UseExtra={set=function(bt)bp=bt end,get=function()return bp end},SelectedTab={set=function(bt)bu=bt end,get=function()return bu end},saveRoute={set=function(bt)br=bt end,get=function()return br end}}local bv=math.abs;local bw=math.floor;local bx=string.format;local by=json.decode;local bz=json.encode;local bA=core.getElementMaxHitPointsById;local bB=unit.getAtmosphereDensity;local bC=core.getElementMassById;local bD=a.control.isRemoteControlled;local bE=math.atan;local bF=string.match;local bG=system.getTime;local vec3=vec3;local bH=utils.clamp;local bI=a.axisCommandManager;local bJ=system.destroyWidgetPanel;local bK=system.updateData;local bL=system.addDataToWidget;local bM=system.lockView;local bN=system.isViewLocked;local bO=math.sqrt;local bP=tonumber;local core=core;local function bQ(bR,bS)local bT=10^(bS or 0)return bw(bR*bT+0.5)/bT end;local bU=bG()local bV=bG()local bW=13;local bX=a5;local bY=a7;local bZ=a6;local b_=0;local c0=0;local c1=false;local c2=0;local c3=false;local c4=false;local c5=55;local c6=false;local c7=false;local c8=0;local c9=0;local ca=0;local cb=0;local cc=0;local cd=0;local ce=0;local cf=false;local cg=false;local ch="empty"local ci=false;local cj=0;local ck=0;local cl=0;local cm=0;local cn=nil;local co=0;local cp=0;local cq=0;local cr=0;local cs=0;local ct=3;local cu=0;local cv=""local cw=false;local cx=false;local cy=false;local cz=-1;local cA=""local cB=bB()>0;local cC=bB()local cD=core.getAltitude()local cE=core.getElementIdList()local cF=bG()local cG=core.getConstructMass()local cH=false;local cI=nil;local cJ=[[rgb(]]..bw(bX+0.5)..","..bw(bZ+0.5)..","..bw(bY+0.5)..[[)]]local cK=[[rgb(]]..bw(bX*0.9+0.5)..","..bw(bZ*0.9+0.5)..","..bw(bY*0.9+0.5)..[[)]]local cL={}local cM=""local cN=a2;local cO=a3;local cP={}local cQ={}local cR={}local cS=0;local cT=false;local cU=nil;local cV=nil;local cW=nil;local cX=nil;local cY=nil;local cZ=nil;local c_=nil;local d0=nil;local d1=nil;local d2=nil;local d3=false;local d4=false;local d5=m;local d6=T;local d7=false;local d8=0;local d9=P;local da=0;local db=nil;local dc={VectorToTarget=false}local dd=0;local de=false;local df=false;local dg=false;local dh=false;local di=vec3(core.getConstructWorldOrientationUp())local dj=vec3(core.getConstructWorldOrientationForward())local dk=vec3(core.getConstructWorldOrientationRight())local dl=vec3(core.getVelocity())local dm=vec3(core.getWorldVelocity())local dn=vec3(dm):len()local dp=vec3(core.getWorldVertical())local dq=-dp:dot(dm)local dr=vec3(core.getConstructWorldPos())local ds=false;local dt=false;local du=nil;local dv=true;local dw=0;local dx=0;local dy={}local dz=false;local dA=50000;local dB=nil;local dC={}local dD=unit.getClosestPlanetInfluence()>0 or cD>0 and cD<200000;local dE=false;local dF=nil;local dG=false;local dH=0;local dI={}local dJ=nil;local dK=nil;local dL={}local dM=90;local dN=u;function dO(dP)system.print(bU..": "..dP)end;local function dQ(dR,dS,type)if type==nil and not A or type~=nil and not B or e=="archHUD"then return end;if type~=nil then if type==2 then system.logInfo("sound_loop|audiopacks/"..e.."/"..dR.."|"..dS.."|"..ar)else system.logInfo("sound_notification|audiopacks/"..e.."/"..dR.."|"..dS.."|"..ar)end else system.logInfo("sound_q|audiopacks/"..e.."/"..dR.."|"..dS.."|"..ar)end end;local function dT(dU,dV)for dW,dX in pairs(dV)do dU[dW]=dX end;return dU end;local function dY(dZ)local d_={}local e0={userControlScheme={set=function(bt)d=bt end,get=function()return d end},soundFolder={set=function(bt)e=bt end,get=function()return e end},freeLookToggle={set=function(bt)f=bt end,get=function()return f end},BrakeToggleDefault={set=function(bt)g=bt end,get=function()return g end},RemoteFreeze={set=function(bt)h=bt end,get=function()return h end},brightHud={set=function(bt)j=bt end,get=function()return j end},RemoteHud={set=function(bt)i=bt end,get=function()return i end},VanillaRockets={set=function(bt)k=bt end,get=function()return k end},InvertMouse={set=function(bt)l=bt end,get=function()return l end},autoRollPreference={set=function(bt)m=bt end,get=function()return m end},ExternalAGG={set=function(bt)n=bt end,get=function()return n end},UseSatNav={set=function(bt)o=bt end,get=function()return o end},ShouldCheckDamage={set=function(bt)p=bt end,get=function()return p end},CalculateBrakeLandingSpeed={set=function(bt)q=bt end,get=function()return q end},AtmoSpeedAssist={set=function(bt)r=bt end,get=function()return r end},ForceAlignment={set=function(bt)s=bt end,get=function()return s end},DisplayDeadZone={set=function(bt)t=bt end,get=function()return t end},showHud={set=function(bt)u=bt end,get=function()return u end},hideHudOnToggleWidgets={set=function(bt)v=bt end,get=function()return v end},ShiftShowsRemoteButtons={set=function(bt)w=bt end,get=function()return w end},SetWaypointOnExit={set=function(bt)x=bt end,get=function()return x end},AlwaysVSpd={set=function(bt)y=bt end,get=function()return y end},BarFuelDisplay={set=function(bt)z=bt end,get=function()return z end},voices={set=function(bt)A=bt end,get=function()return A end},alerts={set=function(bt)B=bt end,get=function()return B end},CollisionSystem={set=function(bt)C=bt end,get=function()return C end},AutoShieldToggle={set=function(bt)D=bt end,get=function()return D end},PreventPvP={set=function(bt)E=bt end,get=function()return E end},DisplayOdometer={set=function(bt)F=bt end,get=function()return F end}}local e1={YawStallAngle={set=function(bt)G=bt end,get=function()return G end},PitchStallAngle={set=function(bt)H=bt end,get=function()return H end},brakeLandingRate={set=function(bt)I=bt end,get=function()return I end},MaxPitch={set=function(bt)J=bt end,get=function()return J end},ReEntryPitch={set=function(bt)K=bt end,get=function()return K end},LockPitchTarget={set=function(bt)L=bt end,get=function()return L end},AutopilotSpaceDistance={set=function(bt)M=bt end,get=function()return M end},TargetOrbitRadius={set=function(bt)N=bt end,get=function()return N end},LowOrbitHeight={set=function(bt)O=bt end,get=function()return O end},AtmoSpeedLimit={set=function(bt)P=bt end,get=function()return P end},SpaceSpeedLimit={set=function(bt)Q=bt end,get=function()return Q end},AutoTakeoffAltitude={set=function(bt)R=bt end,get=function()return R end},TargetHoverHeight={set=function(bt)S=bt end,get=function()return S end},LandingGearGroundHeight={set=function(bt)T=bt end,get=function()return T end},ReEntryHeight={set=function(bt)U=bt end,get=function()return U end},MaxGameVelocity={set=function(bt)V=bt end,get=function()return V end},AutopilotInterplanetaryThrottle={set=function(bt)W=bt end,get=function()return W end},warmup={set=function(bt)X=bt end,get=function()return X end},fuelTankHandlingAtmo={set=function(bt)Y=bt end,get=function()return Y end},fuelTankHandlingSpace={set=function(bt)Z=bt end,get=function()return Z end},fuelTankHandlingRocket={set=function(bt)_=bt end,get=function()return _ end},ContainerOptimization={set=function(bt)a0=bt end,get=function()return a0 end},FuelTankOptimization={set=function(bt)a1=bt end,get=function()return a1 end}}local e2={ResolutionX={set=function(bt)a2=bt end,get=function()return a2 end},ResolutionY={set=function(bt)a3=bt end,get=function()return a3 end},circleRad={set=function(bt)a4=bt end,get=function()return a4 end},SafeR={set=function(bt)a5=bt end,get=function()return a5 end},SafeG={set=function(bt)a6=bt end,get=function()return a6 end},SafeB={set=function(bt)a7=bt end,get=function()return a7 end},PvPR={set=function(bt)a8=bt end,get=function()return a8 end},PvPG={set=function(bt)a9=bt end,get=function()return a9 end},PvPB={set=function(bt)aa=bt end,get=function()return aa end},centerX={set=function(bt)ab=bt end,get=function()return ab end},centerY={set=function(bt)ac=bt end,get=function()return ac end},throtPosX={set=function(bt)ad=bt end,get=function()return ad end},throtPosY={set=function(bt)ae=bt end,get=function()return ae end},vSpdMeterX={set=function(bt)af=bt end,get=function()return af end},vSpdMeterY={set=function(bt)ag=bt end,get=function()return ag end},altMeterX={set=function(bt)ah=bt end,get=function()return ah end},altMeterY={set=function(bt)ai=bt end,get=function()return ai end},fuelX={set=function(bt)aj=bt end,get=function()return aj end},fuelY={set=function(bt)ak=bt end,get=function()return ak end},shieldX={set=function(bt)al=bt end,get=function()return al end},shieldY={set=function(bt)am=bt end,get=function()return am end},DeadZone={set=function(bt)an=bt end,get=function()return an end},OrbitMapSize={set=function(bt)ao=bt end,get=function()return ao end},OrbitMapX={set=function(bt)ap=bt end,get=function()return ap end},OrbitMapY={set=function(bt)aq=bt end,get=function()return aq end},soundVolume={set=function(bt)ar=bt end,get=function()return ar end}}local e3={speedChangeLarge={set=function(bt)as=bt end,get=function()return as end},speedChangeSmall={set=function(bt)at=bt end,get=function()return at end},MouseXSensitivity={set=function(bt)au=bt end,get=function()return au end},MouseYSensitivity={set=function(bt)av=bt end,get=function()return av end},autoRollFactor={set=function(bt)aw=bt end,get=function()return aw end},rollSpeedFactor={set=function(bt)ax=bt end,get=function()return ax end},autoRollRollThreshold={set=function(bt)ay=bt end,get=function()return ay end},minRollVelocity={set=function(bt)az=bt end,get=function()return az end},TrajectoryAlignmentStrength={set=function(bt)aA=bt end,get=function()return aA end},torqueFactor={set=function(bt)aB=bt end,get=function()return aB end},pitchSpeedFactor={set=function(bt)aC=bt end,get=function()return aC end},yawSpeedFactor={set=function(bt)aD=bt end,get=function()return aD end},brakeSpeedFactor={set=function(bt)aE=bt end,get=function()return aE end},brakeFlatFactor={set=function(bt)aF=bt end,get=function()return aF end},DampingMultiplier={set=function(bt)aG=bt end,get=function()return aG end},apTickRate={set=function(bt)aH=bt end,get=function()return aH end},hudTickRate={set=function(bt)aI=bt end,get=function()return aI end},ExtraLongitudeTags={set=function(bt)aJ=bt end,get=function()return aJ end},ExtraLateralTags={set=function(bt)aK=bt end,get=function()return aK end},ExtraVerticalTags={set=function(bt)aL=bt end,get=function()return aL end}}if not dZ then dT(d_,e0)dT(d_,e1)dT(d_,e2)dT(d_,e3)return d_ elseif dZ=="boolean"then return e0 elseif dZ=="handling"then return e1 elseif dZ=="hud"then return e2 elseif dZ=="physics"then return e3 end end;local function e4(e5,e6,e7,e8,e9)if e8==nil then e8=""end;if e9==nil then e9=""end;return bx([[<text class="%s" x=%s y=%s style="%s">%s</text>]],e8,e5,e6,e9,e7)end;local function ea(eb,ec)if eb==0 then return bv(ec)<1e-09 end;if ec==0 then return bv(eb)<1e-09 end;return bv(eb-ec)<math.max(bv(eb),bv(ec))*ed end;local function ee(cu,ef)local eg=cu>100000;if ef==nil then ef=1 end;if eg then return bQ(cu/1000/200,ef).."SU"elseif cu<1000 then return bQ(cu,ef).."M"else return bQ(cu/1000,ef).."KM"end end;local function eh(ei)local ej=0;local ek=0;local el=0;if ei<60 then ei=bw(ei)elseif ei<3600 then ej=bw(ei/60)ei=bw(ei%60)elseif ei<86400 then ek=bw(ei/3600)ej=bw(ei%3600/60)else el=bw(ei/86400)ek=bw(ei%86400/3600)end;if el>0 then return el.."d "..ek.."h "elseif ek>0 then return ek.."h "..ej.."m "elseif ej>0 then return ej.."m "..ei.."s"elseif ei>0 then return ei.."s"else return"0s"end end;local function em(en)local function eo(ep)for dW,dX in pairs(ep)do dbHud_1.setStringValue(dW,bz(dX.get()))if en and dbHud_2 then dbHud_2.setStringValue(dW,bz(dX.get()))end end end;if dbHud_1 then eo(bs)eo(dY())system.print("Saved Variables to Datacore")if en and dbHud_2 then ch="Databank copied.  Remove copy when ready."end end end;local function eq()local function er(es)return type(es)=='number'end;local function et(es)return type(bP(es))=='number'end;local function eu(ev)return type(ev)=='table'end;local function ew(ex)return type(ex)=='string'end;local function ey(dX)return eu(dX)and er(dX.x and dX.y and dX.z)end;local function ez(eA)return eu(eA)and er(eA.latitude and eA.longitude and eA.altitude and eA.id and eA.systemId)end;local eB=math.pi/180;local eC=180/math.pi;local ed=1e-10;local bR=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local eD='::pos{'..bR..','..bR..','..bR..','..bR..','..bR..'}'local utils=require('cpml.utils')local vec3=require('cpml.vec3')local function eE(es)local eF=string.gsub(string.reverse(bx('%.4f',es)),'^0*%.?','')return eF==''and'0'or string.reverse(eF)end;local function eG(eH)if ey(eH)then return bx('{x=%.3f,y=%.3f,z=%.3f}',eH.x,eH.y,eH.z)end;if eu(eH)and not getmetatable(eH)then local eI={}local eJ=next(eH)if type(eJ)=='nil'or eJ==1 then eI=eH else for dW,dX in pairs(eH)do local eK=eG(dX)if type(dW)=='number'then table.insert(eI,bx('[%s]=%s',dW,eK))else table.insert(eI,bx('%s=%s',dW,eK))end end end;return bx('{%s}',table.concat(eI,','))end;if ew(eH)then return bx("'%s'",eH:gsub("'",[[\']]))end;return tostring(eH)end;local eL={}eL.__index=eL;eL.__tostring=function(eH,eM)local eN={}for dW in pairs(eH)do table.insert(eN,dW)end;table.sort(eN)local eI={}for eO,dW in ipairs(eN)do local eK=eG(eH[dW])if type(dW)=='number'then table.insert(eI,bx('[%s]=%s',dW,eK))else table.insert(eI,bx('%s=%s',dW,eK))end end;if eM then return bx('%s%s',eM,table.concat(eI,',\n'..eM))end;return bx('{%s}',table.concat(eI,','))end;eL.__eq=function(eP,eQ)return eP.systemId==eQ.systemId and eP.id==eQ.id and ea(eP.radius,eQ.radius)and ea(eP.center.x,eQ.center.x)and ea(eP.center.y,eQ.center.y)and ea(eP.center.z,eQ.center.z)and ea(eP.GM,eQ.GM)end;local function eR(eS,eT,eU,eV,eW)assert(et(eS),'Argument 1 (systemId) must be a number:'..type(eS))assert(et(eT),'Argument 2 (id) must be a number:'..type(eT))assert(et(eU),'Argument 3 (radius) must be a number:'..type(eU))assert(eu(eV),'Argument 4 (worldCoordinates) must be a array or vec3.'..type(eV))assert(et(eW),'Argument 5 (GM) must be a number:'..type(eW))return setmetatable({systemId=bP(eS),id=bP(eT),radius=bP(eU),center=vec3(eV),GM=bP(eW)},eL)end;local eX={}eX.__index=eX;eX.__tostring=function(dO)return bx('::pos{%d,%d,%s,%s,%s}',dO.systemId,dO.id,eE(dO.latitude*eC),eE(dO.longitude*eC),eE(dO.altitude))end;eX.__eq=function(eP,eQ)return eP.id==eQ.id and eP.systemId==eQ.systemId and ea(eP.latitude,eQ.latitude)and ea(eP.altitude,eQ.altitude)and(ea(eP.longitude,eQ.longitude)or ea(eP.latitude,math.pi/2)or ea(eP.latitude,-math.pi/2))end;local function eY(eZ,eT,e_,f0,f1)local eS=eZ;if ew(eZ)and not f0 and not f1 and not eT and not e_ then eS,eT,e_,f0,f1=bF(eZ,eD)assert(eS,'Argument 1 (position string) is malformed.')else assert(et(eS),'Argument 1 (systemId) must be a number:'..type(eS))assert(et(eT),'Argument 2 (id) must be a number:'..type(eT))assert(et(e_),'Argument 3 (latitude) must be in degrees:'..type(e_))assert(et(f0),'Argument 4 (longitude) must be in degrees:'..type(f0))assert(et(f1),'Argument 5 (altitude) must be in meters:'..type(f1))end;eS=bP(eS)eT=bP(eT)e_=bP(e_)f0=bP(f0)f1=bP(f1)if eT==0 then return setmetatable({latitude=e_,longitude=f0,altitude=f1,id=eT,systemId=eS},eX)end;return setmetatable({latitude=eB*bH(e_,-90,90),longitude=eB*(f0%360),altitude=f1,id=eT,systemId=eS},eX)end;local f2={}f2.__index=f2;f2.__tostring=function(eH,eM)local f3=eM and eM..'  'local f4={}local eN={}for dW in pairs(eH)do table.insert(eN,dW)end;table.sort(eN)for eO,f5 in ipairs(eN)do f6=eH[f5]local f7=eL.__tostring(f6,f3)if eM then table.insert(f4,bx('[%s]={\n%s\n%s}',f5,f7,eM))else table.insert(f4,bx('  [%s]=%s',f5,f7))end end;if eM then return bx('\n%s%s%s',eM,table.concat(f4,',\n'..eM),eM)end;return bx('{\n%s\n}',table.concat(f4,',\n'))end;local function f8(f9)local b={}local pid;for eO,dX in pairs(f9)do local eT=dX.planetarySystemId;if type(eT)~='number'then error('Invalid planetary system ID: '..tostring(eT))elseif pid and eT~=pid then error('Mistringmatch planetary system IDs: '..eT..' and '..pid)end;local fa=dX.bodyId;if type(fa)~='number'then error('Invalid body ID: '..tostring(fa))elseif b[fa]then error('Duplicate body ID: '..tostring(fa))end;setmetatable(dX.center,getmetatable(vec3.unit_x))b[fa]=setmetatable(dX,eL)pid=eT end;return setmetatable(b,f2)end;cU={}local function fb(f9)return setmetatable({galaxyAtlas=f9 or{}},cU)end;cU.__index=function(ev,bt)if type(bt)=='number'then local system=ev.galaxyAtlas[bt]return f8(system)end;return rawget(cU,bt)end;cU.__pairs=function(eH)return function(ev,dW)local fc,fd=next(ev,dW)return fc,fd and f8(fd)end,eH.galaxyAtlas,nil end;cU.__tostring=function(eH)local fe={}for eO,ff in pairs(eH or{})do local fg=ff:getPlanetarySystemId()local fh=f2.__tostring(ff,'    ')table.insert(fe,bx('  [%s]={%s\n  }',fg,fh))end;return bx('{\n%s\n}\n',table.concat(fe,',\n'))end;cU.BodyParameters=eR;cU.MapPosition=eY;cU.PlanetarySystem=f8;function cU.createBodyParameters(eS,eT,fi,fj,fk,fl,fm)assert(et(eS),'Argument 1 (systemId) must be a number:'..type(eS))assert(et(eT),'Argument 2 (id) must be a number:'..type(eT))assert(et(fi),'Argument 3 (surfaceArea) must be a number:'..type(fi))assert(eu(fj),'Argument 4 (aPosition) must be an array or vec3:'..type(fj))assert(eu(fk),'Argument 5 (verticalAtPosition) must be an array or vec3:'..type(fk))assert(et(fl),'Argument 6 (altitude) must be in meters:'..type(fl))assert(et(fm),'Argument 7 (gravityAtPosition) must be number:'..type(fm))local eU=bO(fi/4/math.pi)local cu=eU+fl;local fn=vec3(fj)+cu*vec3(fk)local eW=fm*cu*cu;return eR(eS,eT,eU,fn,eW)end;cU.isMapPosition=ez;function cU:getPlanetarySystem(eZ)if bt==nil then bt=0 end;if fd==nil then fd=0 end;local eS=eZ;if ez(eZ)then eS=eZ.systemId end;if type(eS)=='number'then local system=self.galaxyAtlas[bt]if system then if getmetatable(fd)~=f2 then system=f8(system)end;return system end end end;function f2:sizeCalculator(fo)return 1.05*fo.radius end;function f2:castIntersections(fp,fq,fr,fs,ft,fu)local fv={}if ft then for eO,fo in pairs(ft)do table.insert(fv,fo)end else fv=dL end;if not fu then table.sort(fv,function(fw,fx)local eb=fw.center;local ec=fx.center;return(eb.x-fp.x)^2+(eb.y-fp.y)^2+(eb.z-fp.z)^2<(ec.x-fp.x)^2+(ec.y-fp.y)^2+(ec.z-fp.z)^2 end)end;local fy=fq:normalize()for eO,fo in ipairs(fv)do local fz=fo.center-fp;local eU=self:sizeCalculator(fo)local fA=fz:dot(fy)local fB=fA^2-(fz:len2()-eU^2)if fB>=0 then local fC=bO(fB)local fD=fA+fC;local fE=fA-fC;if fE>0 then return fo,fD,fE elseif fD>0 then return fo,fD,nil end end end;return nil,nil,nil end;function f2:closestBody(fF)assert(type(fF)=='table','Invalid coordinates.')local fG,fo;local fH=vec3(fF)for eO,fI in pairs(self)do local fJ=(fI.center-fH):len2()if(not fo or fJ<fG)and fI.name~="Space"then fo=fI;fG=fJ end end;return fo end;function f2:convertToBodyIdAndWorldCoordinates(eZ)local fK=eZ;if ew(eZ)then fK=eY(eZ)end;if fK.id==0 then return 0,vec3(fK.latitude,fK.longitude,fK.altitude)end;local fI=self:getBodyParameters(fK)if fI then return fK.id,fI:convertToWorldCoordinates(fK)end end;function f2:getBodyParameters(eZ)local eT=eZ;if ez(eZ)then eT=eZ.id end;assert(et(eT),'Argument 1 (id) must be a number:'..type(eT))return self[eT]end;function f2:getPlanetarySystemId()local eO,dX=next(self)return dX and dX.systemId end;function eL:convertToMapPosition(eV)assert(eu(eV),'Argument 1 (worldCoordinates) must be an array or vec3:'..type(eV))local fL=vec3(eV)if self.id==0 then return setmetatable({latitude=fL.x,longitude=fL.y,altitude=fL.z,id=0,systemId=self.systemId},eX)end;local fM=fL-self.center;local cu=fM:len()local f1=cu-self.radius;local e_=0;local f0=0;if not ea(cu,0)then local fN=bE(fM.y,fM.x)f0=fN>=0 and fN or 2*math.pi+fN;e_=math.pi/2-math.acos(fM.z/cu)end;return setmetatable({latitude=e_,longitude=f0,altitude=f1,id=self.id,systemId=self.systemId},eX)end;function eL:convertToWorldCoordinates(eZ)local fK=ew(eZ)and eY(eZ)or eZ;if fK.id==0 then return vec3(fK.latitude,fK.longitude,fK.altitude)end;assert(ez(fK),'Argument 1 (mapPosition) is not an instance of "MapPosition".')assert(fK.systemId==self.systemId,'Argument 1 (mapPosition) has a different planetary system ID.')assert(fK.id==self.id,'Argument 1 (mapPosition) has a different planetary body ID.')local fO=math.cos(fK.latitude)return self.center+(self.radius+fK.altitude)*vec3(fO*math.cos(fK.longitude),fO*math.sin(fK.longitude),math.sin(fK.latitude))end;function eL:getAltitude(eV)return(vec3(eV)-self.center):len()-self.radius end;function eL:getDistance(eV)return(vec3(eV)-self.center):len()end;function eL:getGravity(eV)local fP=self.center-vec3(eV)local fQ=fP:len2()return self.GM/fQ*fP/bO(fQ)end;return setmetatable(cU,{__call=function(eO,...)return fb(...)end})end;local function fR()local cW={}local fS=30000000/3600;local fT=fS*fS;local fU=100;function cW.computeAccelerationTime(fV,fW,fX)local fY=fS*math.asin(fV/fS)return(fS*math.asin(fX/fS)-fY)/fW end;function cW.computeDistanceAndTime(fV,fX,fZ,f_,g0,g1)g0=g0 or 0;g1=g1 or 0;local g2=fV<=fX;local g3=f_*(g2 and 1 or-1)/fZ;local g4=-g1/fZ;local g5=g3+g4;if g2 and g5<=0 or not g2 and g5>=0 then return-1,-1 end;local g6,g7=0,0;if g3~=0 and g0>0 then local fY=math.asin(fV/fS)local g8=math.pi*(g3/2+g4)local g9=g3*g0;local ga=fS*math.pi;local dX=function(ev)local gb=(g8*ev-g9*math.sin(math.pi*ev/2/g0)+ga*fY)/ga;local gc=math.tan(gb)return fS*gc/bO(gc*gc+1)end;local gd=g2 and function(ex)return ex>=fX end or function(ex)return ex<=fX end;g7=2*g0;if gd(dX(g7))then local ge=0;while bv(g7-ge)>0.5 do local ev=(g7+ge)/2;if gd(dX(ev))then g7=ev else ge=ev end end end;local gf=fV;local gg=g7/fU;for gh=1,fU do local gi=dX(gh*gg)g6=g6+(gi+gf)*gg/2;gf=gi end;if g7<2*g0 then return g6,g7 end;fV=gf end;local fY=fS*math.asin(fV/fS)local bU=(fS*math.asin(fX/fS)-fY)/g5;local gj=fT*math.cos(fY/fS)/g5;local cu=gj-fT*math.cos((g5*bU+fY)/fS)/g5;return cu+g6,bU+g7 end;function cW.computeTravelTime(fV,fW,cu)if cu==0 then return 0 end;if fW>0 then local fY=fS*math.asin(fV/fS)local gj=fT*math.cos(fY/fS)/fW;return(fS*math.acos(fW*(gj-cu)/fT)-fY)/fW end;if fV==0 then return-1 end;assert(fV>0,'Acceleration and initial speed are both zero.')return cu/fV end;return cW end;local function gk()local vec3=require('cpml.vec3')local eq=eq()local function ew(ex)return type(ex)=='string'end;local function eu(ev)return type(ev)=='table'end;gl={}gl.__index=gl;function gl:escapeAndOrbitalSpeed(f1)assert(self.body)local cu=f1+self.body.radius;if not ea(cu,0)then local gm=bO(self.body.GM/cu)return bO(2)*gm,gm end;return nil,nil end;function gl:orbitalParameters(eZ,gn)assert(self.body)assert(eu(eZ)or ew(eZ))assert(eu(gn))local go=(ew(eZ)or eq.isMapPosition(eZ))and self.body:convertToWorldCoordinates(eZ)or vec3(eZ)local dX=vec3(gn)local gp=go-self.body.center;local gq=dX:len2()local gr=gp:len()local gs=self.body.GM;local gt=((gq-gs/gr)*gp-gp:dot(dX)*dX)/gs;local eb=gs/(2*gs/gr-gq)local gu=gt:len()local fy=gt:normalize()local gv=eb*(1-gu)local gw=eb*(1+gu)local gx=gv*fy+self.body.center;local gy=gu<=1 and-gw*fy+self.body.center or nil;local gz=bO(eb*gs*(1-gu*gu))local gA=gy and 2*math.pi*bO(eb^3/gs)local gB=math.acos(gt:dot(gp)/(gu*gr))if gp:dot(dX)<0 then gB=-(gB-2*math.pi)end;local gC=math.acos((math.cos(gB)+gu)/(1+gu*math.cos(gB)))local gD=gC;if gD<0 then gD=gD+2*math.pi end;local gE=gD-gu*math.sin(gD)local gF=0;local gG=0;local gH=0;if gA~=nil then gF=gE/(2*math.pi/gA)gG=gA-gF;gH=gG+gA/2;if gB-math.pi>0 then gG=gF;gH=gG+gA/2 end;if gH>gA then gH=gH-gA end end;return{periapsis={position=gx,speed=gz/gv,circularOrbitSpeed=bO(gs/gv),altitude=gv-self.body.radius},apoapsis=gy and{position=gy,speed=gz/gw,circularOrbitSpeed=bO(gs/gw),altitude=gw-self.body.radius},currentVelocity=dX,currentPosition=go,eccentricity=gu,period=gA,eccentricAnomaly=gC,meanAnomaly=gE,timeToPeriapsis=gG,timeToApoapsis=gH,trueAnomaly=gB}end;local function gI(gJ)local fI=eq.BodyParameters(gJ.systemId,gJ.id,gJ.radius,gJ.center,gJ.GM)return setmetatable({body=fI},gl)end;return setmetatable(gl,{__call=function(eO,...)return gI(...)end})end;local function gK()local gL={}local gM={}local gN={XS=13,S=27,M=55,L=110,XL=221}local gO={}local gP;local gQ;local gR;local gS;local gT;local gU={}local gV="Atmo"local gW;local function gX()local function gY(gZ,g_,h0,h1,h2,h3,h4,h5)g_,h1,h3,h5=vec3(g_),vec3(h1),vec3(h3),vec3(h5)local h6,h7,h8=gZ*gZ,h0*h0,h2*h2;local gq=h1-g_;local h9=gq:normalize()local ha=gq:len()local hb=h3-g_;local hc=(hb-hb:project_on(h9)):normalize()local hd,he=hb:dot(h9),hb:dot(hc)local hf=hd*hd+he*he;local hg=h9:cross(hc)local e5=(h6-h7+ha*ha)/(2*ha)local e6=(h6-h8+hf-2*hd*e5)/(2*he)local eA=h6-e5^2-e6^2;local hh=bO(eA)local hi=g_+h9*e5+hc*e6+hg*hh;local hj=g_+h9*e5+hc*e6-hg*hh;if bv((h5-hi):len()-h4)<bv((h5-hj):len()-h4)then return hi else return hj end end;local function hk()local function hl()local hm=core.getConstructWorldOrientationRight()local gq=core.getConstructWorldOrientationForward()local hb=core.getConstructWorldOrientationUp()local hn=library.systemResolution3(hm,gq,hb,{1,0,0})local ho=library.systemResolution3(hm,gq,hb,{0,1,0})local hp=library.systemResolution3(hm,gq,hb,{0,0,1})return function(hq)return library.systemResolution3(hn,ho,hp,hq)end end;local hr=hl()local hs=core.getConstructWorldPos()local go=core.getElementPositionById(1)local ht={go[1],go[2],go[3]}local hu=hr(ht)local hv={hs[1]-hu[1],hs[2]-hu[2],hs[3]-hu[3]}return hv end;local function hw(hx,gr,hy)local hz=hx.pts;local hA=#hz;local hB=hx.ref;if hA>3 then local hC,hD,hE,hF=hz[hA],hz[hA-1],hz[hA-2],hz[hA-3]hx.ref=hy;local go=gY(hC[1],hC[2],hD[1],hD[2],hE[1],hE[2],hF[1],hF[2])local e5,e6,hh=go.x,go.y,go.z;if e5==e5 and e6==e6 and hh==hh then e5=e5+hB[1]e6=e6+hB[2]hh=hh+hB[3]local hG=vec3(e5,e6,hh)if not hx.lastPos then hx.center=hG elseif(hx.lastPos-hG):len()<2 then hx.center=hG;hx.skipCalc=true end;hx.lastPos=hG end;hx.pts={}else local hH={hy[1]-hB[1],hy[2]-hB[2],hy[3]-hB[3]}hz[hA+1]={gr,hH}end end;if radar_1 or radar_2 then d1.assignRadar()end;if gU[1]then gP=#gU[1].getConstructIds()local hI=gU[1].getData()local hJ=hI:gmatch('{"constructId[^}]*}[^}]*}')if gP>0 then local hy=hk()local hK,hL=0,0;gT,gS=0,0;for dX in hJ do local eT,cu,hM=dX:match([[{"constructId":"([%d%.]*)","distance":([%d%.]*).-"size":"(%a+)"]])local hN=gN[hM]cu=bP(cu)if gU[1].hasMatchingTransponder(eT)==1 then table.insert(gM,eT)end;local hO=gU[1].getConstructType(eT)if C then if hN>27 or hO=="static"or hO=="space"then gT=gT+1;local hP=gU[1].getConstructName(eT)local hx=dC[eT]if hx==nil then hN=hN+bW;dC[eT]={pts={},ref=hy,name=hP,i=0,radius=hN,skipCalc=false}hx=dC[eT]end;if not hx.skipCalc then hw(hx,cu,hy)hL=hL+1 end;if hx.center then table.insert(gO,hx)end end;hK=hK+1;if dD and hK>700 or hL>70 or(not dD and hK>300 or hL>30)then coroutine.yield()hK,hL=0,0 end end end;gS=#gO;if gS>0 and dn>20 then local fo,hQ,hR,hS;local hT=0;local hU=cV:getPlanetarySystem(0)hS=dm:normalize()while hT<gS do coroutine.yield()local hV={table.unpack(gO,hT,math.min(hT+75,gS))}fo,hQ,hR=hU:castIntersections(dr,hS,nil,nil,hV,true)if fo and hR then dF={fo,hQ,hR}break end;hT=hT+75 end;if not fo then dF=nil end else dF=nil end;gO={}gQ=hI:find('identifiedConstructs":%[%]')else gR=hI:find('worksInEnvironment":false')end end end;local function hW()if gU[1]then gV="Atmo"if gU[1].getData():find('worksInAtmosphere":false')then gV="Space"end end end;function gL.pickType()hW()end;function gL.assignRadar()if radar_1 and gU[1]==radar_1 and radar_1.isOperational()~=1 then if radar_2 and radar_2.isOperational()==1 then gU[1]=radar_2 end;if gU[1]==radar_2 then hW()end elseif radar_2 and gU[1]==radar_2 and radar_2.isOperational()~=1 then if radar_1 and radar_1.isOperational()==1 then gU[1]=radar_1 end;if gU[1]==radar_1 then hW()end end end;function gL.UpdateRadar()local hX=coroutine.status(gW)if hX=="suspended"then local eK,hY=coroutine.resume(gW)if hY then system.print("ERROR UPDATE RADAR: "..hY)end elseif hX=="dead"then gW=coroutine.create(gX)local eK,hY=coroutine.resume(gW)end end;function gL.GetRadarHud(hZ,h_,i0,i1)local i2=gM;local i3,dP;gM={}local bR=gS or 0;if gP>0 then if C then dP=bR.."/"..gT.." Plotted : "..gP-gT.." Ignored"else dP="Radar Contacts: "..gP end;i3=e4(i0,i1,dP,"pbright txtbig txtmid")if#gM>0 then i3=i3 ..e4(hZ,h_,"Friendlies In Range","pbright txtbig txtmid")for dW,dX in pairs(gM)do h_=h_+20;i3=i3 ..e4(hZ,h_,gU[1].getConstructName(dX),"pdim txtmid")end end;if gQ==nil and i4==nil then i5=1;d1.ToggleRadarPanel()end;if gQ~=nil and i4~=nil then d1.ToggleRadarPanel()end;if i6==nil then d1.ToggleRadarPanel()end else if gR then i3=e4(i0,i1,gV.." Radar: Jammed","pbright txtbig txtmid")else i3=e4(i0,i1,"Radar: No "..gV.." Contacts","pbright txtbig txtmid")end;if i6~=nil then i5=0;d1.ToggleRadarPanel()end end;return i3 end;function gL.GetClosestName(hP)if gU[1]then local eT,eO=gU[1].getData():match('"constructId":"([0-9]*)","distance":([%d%.]*)')if eT~=nil and eT~=""then hP=hP.." "..gU[1].getConstructName(eT)end end;return hP end;function gL.ToggleRadarPanel()if i6~=nil and i5==0 then bJ(i6)i6=nil;if i4~=nil then bJ(i4)i4=nil end else if i5==1 then bJ(i6)i6=nil;_autoconf.displayCategoryPanel(gU,1,"Periscope","periscope")i4=_autoconf.panels[_autoconf.panels_size]end;if i6==nil then _autoconf.displayCategoryPanel(gU,1,"Radar","radar")i6=_autoconf.panels[_autoconf.panels_size]end;i5=0 end end;gU[1]=nil;if radar_1 then gU[1]=radar_1;hW()end;gW=coroutine.create(gX)return gL end;local function i7()local i8=9.80665;local i9={}local ia={}local ib={}local dI={}local ic=nil;local id=nil;local ie=nil;local ig=false;local ih={}local ii=""local ij=vec3({13771471,7435803,-128971})local ik=18000000;local il=500000;local im,io=math.huge;local ip;local function iq(ir)im=vec3(ir):dist(ij)if im<ik then return true,bv(im-ik)end;io=vec3(ir):dist(vec3(is.center))if io<il then ip=true else ip=false end;if bv(io-il)<bv(im-ik)then return ip,bv(io-il)else return ip,bv(im-ik)end end;local function it(dX)if cN==1920 then return dX else return bQ(cN*dX/1920,0)end end;local function iu(dX)if cO==1080 then return dX else return bQ(cO*dX/1080,0)end end;local function iv()return bN()==0 and d~="keyboard"and bD()==0 end;local function iw()local ix="TRAVEL"if not dv then ix="CRUISE"end;if aR then ix="AUTOPILOT"end;return ix end;local i3=""local iy=""local iz=""local iA=1;local iB=2;local iC=3;local iD=4;local iE=5;local iF=6;local iG=""local iH=0;local iI=bw(1/aH)*2*aI;local iJ={}local iK={}local iL={}local iM={}local iN={}local iO={}local function iP(e5,iQ,iR,iS,iT,iU)local iV=iW;local iX=iW+5;if not z then iX=iX+5 end;if bD()==1 and not i then iV=iV-50;iX=iX-50 end;if iR=="ATMO"then iG="atmofueltank"elseif iR=="SPACE"then iG="spacefueltank"else iG="rocketfueltank"end;iH=_G[iG.."_size"]if#iS>0 then for bt=1,#iS do local hP=string.sub(iS[bt][iB],1,12)local iY=0;for iZ=1,iH do if iS[bt][iB]==by(unit[iG.."_"..iZ].getData()).name then iY=iZ;break end end;local i_=bG()if iT[bt]==nil or iU[bt]==nil or i_-iS[bt][iF]>iI then local j0;local j1=0;if iY~=0 then iU[bt]=by(unit[iG.."_"..iY].getData()).percentage;iT[bt]=by(unit[iG.."_"..iY].getData()).timeLeft;if iT[bt]=="n/a"then iT[bt]=0 end else j1=bC(iS[bt][iA])-iS[bt][iD]iU[bt]=bw(0.5+j1*100/iS[bt][iC])j0=iS[bt][iE]if j0<=j1 then iT[bt]=0 else iT[bt]=bw(0.5+j1/((j0-j1)/(i_-iS[bt][iF])))end;iS[bt][iE]=j1;iS[bt][iF]=i_ end end;if hP==iQ then hP=bx("%s %d",iR,bt)end;if iY==0 then hP=hP.." *"end;local j2;if iT[bt]==0 then j2=""else j2=eh(iT[bt])end;if iU[bt]~=nil then local j3=bw(iU[bt]*2.55)local j4=bx("rgb(%d,%d,%d)",255-j3,j3,0)local e8=""if j2~=""and iT[bt]<120 or iU[bt]<5 then e8="red "end;local j5=bx("rgb(%d,%d,%d)",bH(bw((255-j3)/2.55),50,100),bH(bw(j3/2.55),0,50),50)local j6="rgb(196,0,255)"if iR=="ATMO"then j6="rgb(0,188,255)"elseif iR=="SPACE"then j6="rgb(239,255,0)"end;local j7=false;if j8~=j6 then j7=true end;j8=j6;if z then if j7 then iV=iV-5;iX=iX-5 end;iy=iy..bx([[
                                            <g class="pdim">                        
                                            <rect fill=%s class="bar" stroke=%s x="%d" y="%d" width="170" height="20"></rect></g>
                                            <g class="bar txtstart">
                                            <rect fill=%s width="%d" height="18" x="%d" y="%d"></rect>
                                            <text class="txtstart" fill="white" x="%d" y="%d" style="font-family:Play;font-size:14px">%s %s%%&nbsp;&nbsp;&nbsp;&nbsp;%s</text>
                                            </g>]],j5,j6,e5,iX,j4,bw(iU[bt]*1.7+0.5)-2,e5+1,iX+1,e5+5,iX+14,hP,iU[bt],j2)iV=iV-22;iX=iX-22 else iy=iy..e4(e5,iV,hP,e8 .."pdim txtfuel")iy=iy..e4(e5,iX,bx("%d%% %s",iU[bt],j2),"pdim txtfuel","fill:"..j4)iV=iV+30;iX=iX+30 end end end end;iW=iV end;local function j9(ja,f1)if af==0 and ag==0 then return end;if f1<200000 and not cB or f1 and cB then local jb=0;if bv(dq)>1 then jb=45*math.log(bv(dq),10)if dq<0 then jb=-jb end end;ja[#ja+1]=bx([[
                                <g class="pbright txt txtvspd" transform="translate(%d %d) scale(0.6)">
                                        <text x="55" y="-41">1000</text>
                                        <text x="10" y="-65">100</text>
                                        <text x="-45" y="-45">10</text>
                                        <text x="-73" y="3">O</text>
                                        <text x="-45" y="52">-10</text>
                                        <text x="10" y="72">-100</text>
                                        <text x="55" y="50">-1000</text>
                                        <text x="85" y="0" class="txtvspdval txtend">%d m/s</text>
                                    <g class="linethick">
                                        <path d="m-41 75 2.5-4.4m17 12 1.2-4.9m20 7.5v-10m-75-34 4.4-2.5m-12-17 4.9-1.2m17 40 7-7m-32-53h10m34-75 2.5 4.4m17-12 1.2 4.9m20-7.5v10m-75 34 4.4 2.5m-12 17 4.9 1.2m17-40 7 7m-32 53h10m116 75-2.5-4.4m-17 12-1.2-4.9m40-17-7-7m-12-128-2.5 4.4m-17-12-1.2 4.9m40 17-7 7"/>
                                        <circle r="90" />
                                    </g>
                                    <path transform="rotate(%d)" d="m-0.094-7c-22 2.2-45 4.8-67 7 23 1.7 45 5.6 67 7 4.4-0.068 7.8-4.9 6.3-9.1-0.86-2.9-3.7-5-6.8-4.9z" />
                                </g>
                            ]],af,ag,bw(dq),bw(jb))end;return ja end;local function jc(jd)local je=-dp;jd=jd-jd:project_on(je)local jf=vec3(0,0,1)jf=jf-jf:project_on(je)local jg=jf:cross(je)local jb=jf:angle_between(jd)*constants.rad2deg;if jd:dot(jg)<0 then jb=360-jb end;return jb end;local function jh(ja,ab,ac,ji,jj,dD)if a4==0 then return end;local jk=a4;local jl=20;local jm=bw(ji)if dD then for bt=-45,45,5 do local jn=bt;ja[#ja+1]=bx([[<g transform="rotate(%f,%d,%d)">]],jn,ab,ac)jo=5;if bt%15==0 then jo=15 elseif bt%10==0 then jo=10 end;ja[#ja+1]=bx([[<line x1=%d y1=%d x2=%d y2="%d"/></g>]],ab,ac+jk+jl-jo,ab,ac+jk+jl)end;ja[#ja+1]=e4(ab,ac+jk+jl-35,jj,"pdim txt txtmid")ja[#ja+1]=e4(ab,ac+jk+jl-25,jm.." deg","pdim txt txtmid")ja[#ja+1]=bx([[<g transform="rotate(%f,%d,%d)">]],-ji,ab,ac)ja[#ja+1]=bx([[<<polygon points="%d,%d %d,%d %d,%d"/>]],ab-5,ac+jk+jl-20,ab+5,ac+jk+jl-20,ab,ac+jk+jl-15)ja[#ja+1]="</g>"end;ja[#ja+1]=[[<g style="clip-path: url(#headingClip);">]]local jp=jm;if dD then jp=jc(dj)end;local jq=20;local jr=bw(jp)local js=0;local jt=ac+jk+jl+20;local ju=ab;if jj~="YAW"then jt=iu(130)ju=it(960)end;local jv=[[<path class="txttick line" d="]]local jw=bw(jr-(jq+10)-jr%5+0.5)for bt=jw+70,jw,-5 do local e5=ju-(-bt*5+jp*5)if bt%10==0 then js=10;local bR=bt;if bR==360 then bR=0 elseif bR>360 then bR=bR-360 elseif bR<0 then bR=bR+360 end;ja[#ja+1]=e4(e5,jt+15,bR,"txtmid bright")elseif bt%5==0 then js=5 end;if js==10 then jv=bx([[%s M %f %f v %d]],jv,e5,jt-5,js)else jv=bx([[%s M %f %f v %d]],jv,e5,jt-2.5,js)end end;ja[#ja+1]=jv..[["/>]]ja[#ja+1]=bx([[<<polygon class="bright" points="%d,%d %d,%d %d,%d"/>]],ju-5,jt-20,ju+5,jt-20,ju,jt-10)if F then if dD then jj="HDG"end;ja[#ja+1]=e4(it(960),iu(100),jr.."°","dim txt txtmid size14","")ja[#ja+1]=e4(it(960),iu(85),jj,"dim txt txtmid size20","")end;ja[#ja+1]=[[</g>]]end;local function jx(ja,jy,ji,ab,ac,dD,jz,gi)if a4==0 then return end;local jk=a4;local jA=bw(jk*3/5)if jk>0 then local jB=bw(jy)local jo=0;local jv=bx([[<path transform="rotate(%f,%d,%d)" class="dim line" d="]],-1*ji,ab,ac)if not cB then jv=bx([[<path transform="rotate(0,%d,%d)" class="dim line" d="]],ab,ac)end;ja[#ja+1]=bx([[<clipPath id="cut"><circle r="%f" cx="%d" cy="%d"/></clipPath>]],jk-1,ab,ac)ja[#ja+1]=[[<g class="dim txttick" clip-path="url(#cut)">]]for bt=bw(jB-30-jB%5+0.5),bw(jB+30+jB%5+0.5),5 do if bt%10==0 then jo=30 elseif bt%5==0 then jo=20 end;local e6=ac+-bt*5+jy*5;if jo==30 then jv=bx([[%s M %d %f h %d]],jv,ab-jA-jo,e6,jo)if cB then ja[#ja+1]=bx([[<g path transform="rotate(%f,%d,%d)" class="pdim txt txtmid"><text x="%d" y="%f">%d</text></g>]],-1*ji,ab,ac,ab-jA+10,e6+4,bt)ja[#ja+1]=bx([[<g path transform="rotate(%f,%d,%d)" class="pdim txt txtmid"><text x="%d" y="%f">%d</text></g>]],-1*ji,ab,ac,ab+jA-10,e6+4,bt)if bt==0 or bt==180 or bt==-180 then ja[#ja+1]=bx([[<path transform="rotate(%f,%d,%d)" d="m %d,%f %d,0" stroke-width="1" style="fill:none;stroke:#F5B800;" />]],-1*ji,ab,ac,ab-jA+20,e6,jA*2-40)end else ja[#ja+1]=e4(ab-jA+10,e6,bt,"pdim txt txtmid")ja[#ja+1]=e4(ab+jA-10,e6,bt,"pdim txt txtmid")end;jv=bx([[%s M %d %f h %d]],jv,ab+jA,e6,jo)else jv=bx([[%s M %d %f h %d]],jv,ab-jA-jo,e6,jo)jv=bx([[%s M %d %f h %d]],jv,ab+jA,e6,jo)end end;ja[#ja+1]=jv..[["/>]]local jC="PITCH"if not dD then jC="REL PITCH"end;if jy>90 and not cB then jy=90-(jy-90)elseif jy<-90 and not cB then jy=-90-(jy+90)end;if jk>200 then if cB then if gi>c5 then ja[#ja+1]=e4(ab,ac-15,"Yaw","pdim txt txtmid")ja[#ja+1]=e4(ab,ac+20,jz,"pdim txt txtmid")end;ja[#ja+1]=bx([[<g transform="rotate(%f,%d,%d)">]],-ji,ab,ac)else ja[#ja+1]=bx([[<g transform="rotate(0,%d,%d)">]],ab,ac)end;ja[#ja+1]=bx([[<<polygon points="%d,%d %d,%d %d,%d"/> class="pdim txtend"><text x="%d" y="%f">%d</text>]],ab-jA+25,ac-5,ab-jA+20,ac,ab-jA+25,ac+5,ab-jA+50,ac+4,jB)ja[#ja+1]=bx([[<<polygon points="%d,%d %d,%d %d,%d"/> class="pdim txtend"><text x="%d" y="%f">%d</text>]],ab+jA-25,ac-5,ab+jA-20,ac,ab+jA-25,ac+5,ab+jA-30,ac+4,jB)ja[#ja+1]="</g>"end;local jD=bw(jk/3)ja[#ja+1]=bx([[<path d="m %d,%d %d,0" stroke-width="2" style="fill:none;stroke:#F5B800;" />]],ab-jD,ac,jk-jD)if not cB and dD then ja[#ja+1]=bx([[<path transform="rotate(%f,%d,%d)" d="m %d,%f %d,0" stroke-width="1" style="fill:none;stroke:#F5B800;" />]],-1*ji,ab,ac,ab-jA+10,ac,jA*2-20)end;ja[#ja+1]="</g>"if jk<200 then if cB and gi>c5 then ja[#ja+1]=e4(ab,ac-jk,jC,"pdim txt txtmid")ja[#ja+1]=e4(ab,ac-jk+10,jB,"pdim txt txtmid")ja[#ja+1]=e4(ab,ac-15,"Yaw","pdim txt txtmid")ja[#ja+1]=e4(ab,ac+20,jz,"pdim txt txtmid")else ja[#ja+1]=e4(ab,ac-jk,jC,"pdim txt txtmid")ja[#ja+1]=e4(ab,ac-jk+15,jB,"pdim txt txtmid")end end end end;local function jE(ja,f1,dD)local jF=ah;local jG=ai;if jF==0 and jG==0 then return end;local jH=78;local jI=19;local jJ=cz;if cz~=-1 then ja[#ja+1]=e4(jF+jH,jG+jI+20,bx("AGL: %.1fm",cz),"pdim altsm txtend")end;if dD and(f1<200000 and not cB or f1 and cB)then table.insert(ja,bx([[
                                <g class="pdim">                        
                                    <rect class="line" x="%d" y="%d" width="%d" height="%d"/> 
                                    <clipPath id="alt"><rect class="line" x="%d" y="%d" width="%d" height="%d"/></clipPath>
                                    <g clip-path="url(#alt)">]],jF-1,jG-4,jH+2,jI+6,jF+1,jG-1,jH-4,jI))local hA=0;local jK=1;local jL=0;local jM=f1<0;local jN=f1<is.surfaceMaxAltitude;local jO=9;if jM then jO=0 end;local f1=bv(f1)while hA<6 do local jP=11;local jQ=16;local jR=9;local jS=14;local e8="altsm"if hA>2 then jQ=jQ+3;jP=jP+2;jS=jS+2;jR=jR-6;e8="altbig"end;if jM then e8=e8 .." red"elseif jN then e8=e8 .." orange"end;local jT=f1/jK%10;local jU=bw(jT)local jV=bw((jU+1)%10)local jW=jL;if hA==0 then jW=jT-jU;if jM then jW=1-jW end end;if jM and(hA==0 or jL~=0)then local jX=jV;jV=jU;jU=jX end;local jY=jQ*(jW-1)local jZ=jY+jQ;local e5=jF+jR+(6-hA)*jP;local e6=jG+jS;ja[#ja+1]=e4(e5,e6+jY,jV,e8)ja[#ja+1]=e4(e5,e6+jZ,jU,e8)hA=hA+1;jK=jK*10;if jU==jO then jL=jW else jL=0 end end;table.insert(ja,[[</g></g>]])end end;local function j_(gn)local k0=-math.deg(bE(gn.y,gn.z))+180;k0=k0-90;if k0<0 then k0=360+k0 end;if k0>180 then k0=-180+k0-180 end;return-k0 end;local function k1(gn)local jp=math.deg(bE(gn.y,gn.x))-90;if jp<-180 then jp=360+jp end;return jp end;local function k2(ja,gn,gi,ab,ac)if gi>5 and not cB or gi>c5 then local jk=a4;local k3=20;local k4=20;local k5=j_(gn)local k6=k1(gn)local k7=14;local k8=k7/2;local k9=-k6/k4*jk;local ka=k5/k3*jk;local e5=ab+k9;local e6=ac+ka;local cu=bO(k9^2+ka^2)local kb=[[<circle
                            cx="]]..e5 ..[["
                            cy="]]..e6 ..[["
                            r="]]..k8/k7 ..[["
                            style="fill:#d7fe00;stroke:none;fill-opacity:1"/>
                        <circle
                            cx="]]..e5 ..[["
                            cy="]]..e6 ..[["
                            r="]]..k8 ..[["
                            style="stroke:#d7fe00;stroke-opacity:1;fill:none" />
                        <path
                            d="M ]]..e5-k7 ..[[,]]..e6 ..[[ h ]]..k8 ..[["
                            style="stroke:#d7fe00;stroke-opacity:1" />
                        <path
                            d="M ]]..e5+k8 ..[[,]]..e6 ..[[ h ]]..k8 ..[["
                            style="stroke:#d7fe00;stroke-opacity:1" />
                        <path
                            d="M ]]..e5 ..[[,]]..e6-k7 ..[[ v ]]..k8 ..[["
                            style="stroke:#d7fe00;stroke-opacity:1" />]]if cu<jk then ja[#ja+1]=kb else local jb=bE(ka,k9)local kc=4;local kd=ab+jk*math.cos(jb)local ke=ac+jk*math.sin(jb)ja[#ja+1]=bx('<g transform="rotate(%f %f %f)"><rect x="%f" y="%f" width="%f" height="%f" stroke="#d7fe00" fill="#d7fe00" /><path d="M %f %f l %f %f l %f %f z" fill="#d7fe00" stroke="#d7fe00"></g>',jb*180/math.pi,kd,ke,kd-kc,ke-kc/2,kc*2,kc,kd+kc,ke-kc,kc,kc,-kc,kc)end;if not cB then local kf=vec3(gn)k5=j_(-kf)k6=k1(-kf)k9=-k6/k4*jk;ka=k5/k3*jk;e5=ab+k9;e6=ac+ka;cu=bO(k9^2+ka^2)if cu<jk then local kg=[[<circle
                                    cx="]]..e5 ..[["
                                    cy="]]..e6 ..[["
                                    r="]]..k8 ..[["
                                    style="stroke:#d7fe00;stroke-opacity:1;fill:none" />
                                <path
                                    d="M ]]..e5 ..[[,]]..e6-k7 ..[[ v ]]..k8 ..[["
                                    style="stroke:#d7fe00;stroke-opacity:1" id="l"/>
                                <use
                                    xlink:href="#l"
                                    transform="rotate(120,]]..e5 ..[[,]]..e6 ..[[)" />
                                <use
                                    xlink:href="#l"
                                    transform="rotate(-120,]]..e5 ..[[,]]..e6 ..[[)" />
                                <path
                                    d="M ]]..e5-k8 ..[[,]]..e6 ..[[ h ]]..k7 ..[["
                                    style="stroke-width:0.5;stroke:#d7fe00;stroke-opacity:1"
                                    transform="rotate(-45,]]..e5 ..[[,]]..e6 ..[[)" id="c"/>
                                <use
                                    xlink:href="#c"
                                    transform="rotate(-90,]]..e5 ..[[,]]..e6 ..[[)"/>]]ja[#ja+1]=kg end end end end;local function kh(ja,ix,ki,kj)if ad==0 and ae==0 then return end;ki=bw(ki+0.5)local iV=ae+10;local iX=ae+20;if bD()==1 and not i then iV=55;iX=65 end;local kk="CRUISE"local unit="km/h"local eK=kj;if ix=="TRAVEL"or ix=="AUTOPILOT"then kk="THROT"unit="%"eK=ki;local kl="dim"if ki<0 then kl="red"end;ja[#ja+1]=bx([[<g class="%s">
                                <path class="linethick" d="M %d %d L %d %d L %d %d L %d %d"/>
                                <g transform="translate(0 %.0f)">
                                    <polygon points="%d,%d %d,%d %d,%d"/>
                                </g>]],kl,ad-7,ae-50,ad,ae-50,ad,ae+50,ad-7,ae+50,1-bv(ki),ad-10,ae+50,ad-15,ae+53,ad-15,ae+47)end;ja[#ja+1]=e4(ad+10,iV,kk,"pbright txtstart")ja[#ja+1]=e4(ad+10,iX,bx("%.0f %s",eK,unit),"pbright txtstart")if cB and r and dv and c1 then ki=bw(c2*100+0.5)local kl="red"if ki<0 then kl="red"end;ja[#ja+1]=bx([[<g class="%s">
                                <g transform="translate(0 %d)">
                                    <polygon points="%d,%d %d,%d %d,%d"/>
                                </g></g>]],kl,1-bv(ki),ad-10,ae+50,ad-15,ae+53,ad-15,ae+47)ja[#ja+1]=e4(ad+10,iV+40,"LIMIT","pbright txtstart")ja[#ja+1]=e4(ad+10,iX+40,ki.."%","pbright txtstart")end;if cB and r or aW then ja[#ja+1]=e4(ad+10,iV-40,"LIMIT: "..d9 .." km/h","dim txtstart")elseif not cB and aR then ja[#ja+1]=e4(ad+10,iV-40,"LIMIT: "..bw(V*3.6+0.5).." km/h","dim txtstart")end end;local function km(ja,kn)if ad==0 and ae==0 then return end;local ko=ae-10;local kp=ad+10;ja[#ja+1]=e4(0,0,"","pdim txt txtend")if bD()==1 and not i then ko=75 end;ja[#ja+1]=e4(kp,ko,bw(kn).." km/h","pbright txtbig txtstart")end;local function kq(ja)ja[#ja+1]=e4(it(1900),iu(1070),bx("ARCH Hud Version: %.3f",VERSION_NUMBER),"hudver")ja[#ja+1]=[[<g class="warnings">]]if unit.isMouseControlActivated()==1 then ja[#ja+1]=e4(it(960),iu(550),"Warning: Invalid Control Scheme Detected","warnings")ja[#ja+1]=e4(it(960),iu(600),"Keyboard Scheme must be selected","warnings")ja[#ja+1]=e4(it(960),iu(650),"Set your preferred scheme in Lua Parameters instead","warnings")end;local kr=it(960)local ks=iu(860)local kt=iu(880)local ku=iu(900)local kv=iu(960)local kw=iu(200)local kx=iu(250)local ky=iu(960)if bD()==1 and not i then ks=iu(135)kt=iu(155)ku=iu(175)kw=iu(115)kx=iu(95)end;local kz="#222222"local kA="white"local kB="dimmer"local kC="pbright"local kD="#110000"local kE=kz;local kF=kB;if aO then ja[#ja+1]=e4(kr,ks,"Brake Engaged","warnings")kD="#440000"kE=kA;kF=kC elseif c0>0 then ja[#ja+1]=e4(kr,ks,"Auto-Brake Engaged","warnings","opacity:"..c0)end;local kG="#110000"local kH=kz;local kI=kB;if cB and d7 and cz==-1 then if not aR and not bd and not aU and not dt and not aX and not aV then ja[#ja+1]=e4(kr,kw+50,"** STALL WARNING **","warnings")kG="#ff0000"kH=kA;kI=kC;dQ("stall","SW",2)end end;if dB then ja[#ja+1]=e4(kr,kw+90,"Flight Assist in Progress","warnings")end;if cI then ja[#ja+1]=e4(kr,ky,"Gyro Enabled","warnings")end;local kJ="#111100"local kK=kz;local kL=kB;if b9 then kJ="#775500"kK=kA;kL=kC;if c7 then ja[#ja+1]=e4(kr,kt,"Gear Extended","warn")else ja[#ja+1]=e4(kr,kt,"Landed (G: Takeoff)","warnings")end;local kM=ee(a:getTargetGroundAltitude())ja[#ja+1]=e4(kr,ku,"Hover Height: "..kM,"warn")end;local kN="#000011"local kO=kz;local kP=kB;if ci then kN="#0000DD"kO=kA;kP=kC;ja[#ja+1]=e4(kr,kv+20,"ROCKET BOOST ENABLED","warn")end;local kQ="#001100"local kR=kz;local kS=kB;if antigrav and not n and dt and bi~=nil then kQ="#00DD00"kR=kA;kS=kC;if bv(cD-antigrav.getBaseAltitude())<501 then ja[#ja+1]=e4(kr,kw+15,bx("Target Altitude: %d Singularity Altitude: %d",bw(bi),bw(antigrav.getBaseAltitude())),"warn")else ja[#ja+1]=e4(kr,kw+15,bx("Target Altitude: %d Singluarity Altitude: %d",bw(bi),bw(antigrav.getBaseAltitude())),"warnings")end elseif aR and b6~="None"then ja[#ja+1]=e4(kr,kw+20,"Autopilot "..b3,"warn")elseif bg~=nil then ja[#ja+1]=e4(kr,kw+20,bx("LockedPitch: %d",bw(bg)),"warn")elseif cf then ja[#ja+1]=e4(kr,kw+20,"Follow Mode Engaged","warn")elseif aW or cy then ja[#ja+1]=e4(kr,kw+20,"Re-entry in Progress","warn")end;if aT or aX then local kM=ee(aY,2)if aX then if dt then kM=ee(antigrav.getBaseAltitude(),2).." AGG singularity height"end;ja[#ja+1]=e4(kr,kw,"VTO to "..kM,"warn")elseif aV and not bm then if cx then ja[#ja+1]=e4(kr,kw,"Takeoff to "..b6,"warn")else ja[#ja+1]=e4(kr,kw,"Takeoff to "..kM,"warn")end;if aO and not aX then ja[#ja+1]=e4(kr,kw+50,"Throttle Up and Disengage Brake For Takeoff","crit")end else ja[#ja+1]=e4(kr,kw,"Altitude Hold: "..kM,"warn")end end;if aX and(antigrav~=nil and antigrav)then if cC>0.1 then ja[#ja+1]=e4(kr,kw+20,"Beginning ascent","warn")elseif cC<0.09 and cC>0.05 then ja[#ja+1]=e4(kr,kw+20,"Aligning trajectory","warn")elseif cC<0.05 then ja[#ja+1]=e4(kr,kw+20,"Leaving atmosphere","warn")end end;if bm then if db~=nil then ja[#ja+1]=e4(kr,kw,db,"warn")end end;if aU then if kT then ja[#ja+1]=e4(kr,kw,"Brake-Landing","warnings")else ja[#ja+1]=e4(kr,kw,"Coast-Landing","warnings")end end;if aQ then ja[#ja+1]=e4(kr,kw,"Prograde Alignment","crit")end;if aP then ja[#ja+1]=e4(kr,kw,"Retrograde Alignment","crit")end;local kU="#110000"local kV=kz;local kW=kB;if dE then kU="#FF0000"kV=kA;kW=kC;local type;if string.find(dE,"COLLISION")then type="warnings"else type="crit"end;ja[#ja+1]=e4(kr,kx+20,dE,type)elseif cC==0 then local kX,kY=d0.checkLOS(dm:normalize())if kY~=nil then kW=kC;kU="#FF0000"kV=kA;local kM=ee(kY)local kZ=cW.computeTravelTime(dn,0,kY)local k_="Collision"if kX.noAtmosphericDensityAltitude>0 then k_="Atmosphere"end;ja[#ja+1]=e4(kr,kx+20,kX.name.." "..k_.." "..eh(kZ).." In "..kM,"crit")end end;if bd and not bm then ja[#ja+1]=e4(kr,kw+35,l0,"warn")end;local l1="#111100"local l2=kz;local l3=kB;if dJ and#dJ>1 then l1="#DDDD00"l2=kA;l3=kC end;local l4=it;local l5=iu;local kB="topButton"local l6="topButtonActive"local l7=kB;if aR or bd or cx or bm then l7=l6 end;local l8=kB;if aQ then l8=l6 end;local l9=kB;if aU or b9 then l9=l6 end;local la=kB;if aT or bd then la=l6 end;local lb=kB;if aP then lb=l6 end;local lc=kB;if bm or de and aR then lc=l6 end;if u and F then local ld=l5(30)ja[#ja+1]=bx([[ 
                                <g class="pdim txt txtmid">
                                    <g class="%s">
                                    <path d="M %f %f l 0 %f l %f 0 l %f %f Z"/>
                                    ]],l7,l4(960),l5(54),l5(-53),l4(-120),l4(25),l5(50))ja[#ja+1]=e4(l4(910),ld,"AUTOPILOT")ja[#ja+1]=bx([[
                                    </g>
                
                                    <g class="%s">
                                    <path d="M %f %f l %f %f l %f 0 l %f %f Z"/>
                                    ]],l8,l4(865),l5(51),l4(-25),l5(-50),l4(-110),l4(25),l5(46))ja[#ja+1]=e4(l4(800),ld,"PROGRADE")ja[#ja+1]=bx([[
                                    </g>
                
                                    <g class="%s">
                                    <path d="M %f %f l %f %f l %f 0 l %f %f Z"/>
                                    ]],l9,l4(755),l5(47),l4(-25),l5(-46),l4(-98),l4(44),l5(44))ja[#ja+1]=e4(l4(700),ld,"LAND")ja[#ja+1]=bx([[
                                    </g>
                
                                    <g class="%s">
                                    <path d="M %f %f l 0 %f l %f 0 l %f %f Z"/>
                                    ]],la,l4(960),l5(54),l5(-53),l4(120),l4(-25),l5(50))ja[#ja+1]=e4(l4(1010),ld,"ALT HOLD")ja[#ja+1]=bx([[
                                    </g>
                
                                    <g class="%s">
                                    <path d="M %f %f l %f %f l %f 0 l %f %f Z"/>
                                    ]],lb,l4(1055),l5(51),l4(25),l5(-50),l4(110),l4(-25),l5(46))ja[#ja+1]=e4(l4(1122),ld,"RETROGRADE")ja[#ja+1]=bx([[
                                    </g>
                
                                    <g class="%s">
                                    <path d="M %f %f l %f %f l %f 0 l %f %f Z"/>
                                    ]],lc,l4(1165),l5(47),l4(25),l5(-46),l4(98),l4(-44),l5(44))ja[#ja+1]=e4(l4(1220),ld,"ORBIT")ja[#ja+1]=[[
                                    </g>
                                </g>]]ja[#ja+1]="</g>"end;return ja end;local function le(gi)return bw(bQ(gi*3.6,0)+0.5).." km/h"end;local function lf(hA)local hP=b6;if hA~=nil and type(hA)=="number"then if hA==0 then return"None"end;hP=dy[hA].name end;if hP==nil then hP=lg.name end;if hP==nil then hP="None"end;return hP end;local function lh(ja)local li=d0.routeWP(true)if#li==0 then return end;local e5=it(750)local e6=iu(360)if aR or bd then ja[#ja+1]=e4(e5,e6,"REMAINING ROUTE","pdim txtstart size20")else ja[#ja+1]=e4(e5,e6,"LOADED ROUTE","pdim txtstart size20")end;for dW,bt in pairs(li)do e6=e6+20;ja[#ja+1]=e4(e5,e6,dW..". "..lf(li[dW]),"pdim txtstart size20")end end;local function lj(ja)local e5=ap+10;local e6=aq+20;local lk={}local ll={"Alt-4: AutoTakeoff to Target"}local lm={"Alt-6: Altitude hold at current altitude","Alt-6-6: Altitude Hold at 11% atmosphere","Alt-Q/E: Hard Bankroll left/right till released","Alt-S: 180 deg bank turn"}local ln={"Alt-6: Orbit at current altitude","Alt-6-6: Orbit at LowOrbitHeight over atmosphere"}local lo={"","------------------ALWAYS--------------------","Alt-1: Increment Interplanetary Helper","Alt-2: Decrement Interplanetary Helper","Alt-3: Toggle Vanilla Widget view","Alt-4: Autopilot to IPH target","Alt-5: Lock Pitch at current pitch","Alt-7: Toggle Collision System on and off","Alt-8: Toggle ground stabilization (underwater flight)","CTRL: Toggle Brakes on and off. Cancels active AP","LAlt: Tap to shift freelook on and off","Shift: Hold while not in freelook to see Buttons","Type /commands or /help in lua chat to see text commands"}table.insert(lk,"--------------DYNAMIC-----------------")if cB then if cz~=-1 then dT(lk,ll)if cn and is and cn.name==is.name then table.insert(lk,"Alt-4-4: Low Orbit Autopilot to Target")end;if antigrav or aN then if antigrav then if dt then table.insert(lk,"Alt-6: AGG is on, will takeoff to AGG Height")else table.insert(lk,"Turn on AGG to takeoff to AGG Height")end end;if aN then table.insert(lk,"Alt-6: Begins Vertical AutoTakeoff.")end else table.insert(lk,"Alt-6: Autotakeoff to AutoTakeoffAltitude")table.insert(lk,"Alt-6-6: Autotakeoff to 11% atmosphere")end;if b9 then table.insert(lk,"G: Takeoff to hover height, raise gear")else table.insert(lk,"G: Lowergear and Land")end else dT(lk,lm)table.insert(lk,"G: Begin BrakeLanding or Land")end;if aX then table.insert(lk,"Hit Alt-6 before exiting Atmosphere during VTO to hold in level flight")end else dT(lk,ln)if lp then table.insert(lk,"Alt-Shift-5: Toggle shield off and on")table.insert(lk,"Alt-Shift-6: Vent shields")end end;if gyro then table.insert(lk,"Alt-9: Activate Gyroscope")end;if aK~="none"or aJ~="none"or aL~="none"then table.insert(lk,"Alt-Shift-9: Cycles engines with Extra tags")end;if aT then table.insert(lk,"Alt-Spacebar/C will raise/lower target height")table.insert(lk,"Alt+Shift+Spacebar/C will raise/lower target to preset values")end;if r or not cB then table.insert(lk,"LALT+Mousewheel will lower/raise speed limit")end;dT(lk,lo)for bt=1,#lk do e6=e6+12;ja[#ja+1]=e4(e5,e6,lk[bt],"pdim txtbig txtstart")end end;local function lq(ja)local lr=ap;local ls=aq;local lt=ao;local lu=4;local lv=15;local e5=0;local e6=0;local lw,lx,ly,lz;local lA;local function lB(type)local lC,bU,gi,lD,e8,lE;if type=="Periapsis"then lC=lA.periapsis.altitude;bU=lA.timeToPeriapsis;gi=lA.periapsis.speed;e8="txtend"lD=12;lE=math.min(e5,lr+lt-is.radius/ly-lu*2)else lC=lA.apoapsis.altitude;bU=lA.timeToApoapsis;gi=lA.apoapsis.speed;lD=-12;e8="txtstart"lE=e5 end;if dn<1 then bU=0 end;ja[#ja+1]=bx([[<line class="pdim linethin" style="stroke:white" x1="%f" y1="%f" x2="%f" y2="%f"/>]],lE+lD,e6-5,e5,e6-5)ja[#ja+1]=bx([[<line class="pdim linethin" x1="%f" y1="%f" x2="%f" y2="%f"/>]],lE-lD*4,e6+2,e5,e6+2)ja[#ja+1]=e4(lE,e6,type,e8)e5=lE-lD*2;e6=e6+lv;local kM=ee(lC)ja[#ja+1]=e4(e5,e6,kM,e8)e6=e6+lv;ja[#ja+1]=e4(e5,e6,eh(bU),e8)e6=e6+lv;ja[#ja+1]=e4(e5,e6,le(gi),e8)end;local lF=lt*1.5;if bu=="INFO"then lF=25*7 end;if bu~="HIDE"then ja[#ja+1]=[[<g class="pbright txtorb txtmid">]]ja[#ja+1]=bx('<rect width="%f" height="%d" rx="10" ry="10" x="%d" y="%d" class="dimfill brightstroke" style="stroke-width:3;fill-opacity:0.3;" />',lt*2,lF,lr,ls)ja[#ja+1]=bx([[<clippath id="orbitRect">
                                                        <rect width="%f" height="%d" rx="10" ry="10" x="%d" y="%d" class="dimfill brightstroke" style="stroke-width:3;fill-opacity:0.3;" />
                                                        </clippath>]],lt*2,lF,lr,ls)end;local lG=lt*1.5;local lH=lt*2;local lI=lG/2;local lJ=lt;local lK=lr+lJ;local lL=ls+lI;local lM=lr+lH;local lN=ls+lG;if bu=="ORBIT"then ls=ls+lu;lw=lt/2;lz=0;lA={}lA.periapsis={}lA.apoapsis={}if gm~=nil then if gm.periapsis~=nil then lA.periapsis.altitude=gm.periapsis.altitude;lA.periapsis.speed=gm.periapsis.speed end;if gm.apoapsis~=nil then lA.apoapsis.altitude=gm.apoapsis.altitude;lA.apoapsis.speed=gm.apoapsis.speed end;lA.period=gm.period;lA.eccentricity=gm.eccentricity;lA.timeToApoapsis=gm.timeToApoapsis;lA.timeToPeriapsis=gm.timeToPeriapsis;lA.eccentricAnomaly=gm.eccentricAnomaly;lA.trueAnomaly=gm.trueAnomaly end;if lA.periapsis==nil then lA.periapsis={}lA.periapsis.altitude=-is.radius;lA.periapsis.speed=V end;if lA.eccentricity==nil then lA.eccentricity=1 end;if lA.apoapsis==nil then lA.apoapsis={}lA.apoapsis.altitude=cD;lA.apoapsis.speed=0 end;if dn<1 then lA.apoapsis.altitude=cD;lA.apoapsis.speed=0 end;if lA.apoapsis.altitude then ly=(lA.apoapsis.altitude+lA.periapsis.altitude+is.radius*2)/(lw*2)lx=(is.radius+lA.apoapsis.altitude)/ly*(1-lA.eccentricity)lz=lw-lA.periapsis.altitude/ly-is.radius/ly;local lO=math.pi;if lA.period~=nil and lA.period>0 and lA.timeToApoapsis~=nil then lO=lA.eccentricAnomaly;if lA.timeToPeriapsis<lA.timeToApoapsis then lO=2*math.pi-lO end end;if dn<1 or lO~=lO then lO=math.pi end;local lP=-lw*math.cos(lO)+lr+lJ+lu;local lQ=lx*math.sin(lO)+ls+lI+lu;local lR=""ja[#ja+1]='<g clip-path="url(#orbitRect)">'ja[#ja+1]=bx([[<ellipse class="%s line" cx="%f" cy="%f" rx="%f" ry="%f"/>]],lR,lr+lt+lu,ls+lt*1.5/2+lu,lw,lx)if lx<1 then ja[#ja+1]=bx([[<line x1="%f" y1="%f" x2="%f" y2="%f" stroke="red"/>]],lr+lt+lu-lz,ls+lt*1.5/2+lu,lP,lQ)end;ja[#ja+1]=bx('<circle cx="%f" cy="%f" r="%f" stroke="white" stroke-width="1" fill="rgb(0,150,200)" opacity="0.5" />',lr+lt+lu-lz,ls+lt*1.5/2+lu,(is.radius+is.noAtmosphericDensityAltitude)/ly)ja[#ja+1]=bx('<clipPath id="planetClip"><circle cx="%f" cy="%f" r="%f" /></clipPath>',lr+lt+lu-lz,ls+lt*1.5/2+lu,(is.radius+is.noAtmosphericDensityAltitude)/ly)ja[#ja+1]=bx([[<ellipse class="%s line" cx="%f" cy="%f" rx="%f" ry="%f" clip-path="url(#planetClip)"/>]],"redout",lr+lt+lu,ls+lt*1.5/2+lu,lw,lx)ja[#ja+1]=bx('<circle cx="%f" cy="%f" r="%f" stroke="black" stroke-width="1" fill="rgb(0,100,150)" />',lr+lt+lu-lz,ls+lt*1.5/2+lu,is.radius/ly)ja[#ja+1]='</g>'local lS=math.floor(is.radius/ly+0.5)local lT=lU.Generic_Moon;if lU[is.name]then lT=lU[is.name]end;e5=lr+lt+lu*4+lw;e6=ls+lt*1.5/2+5+lu;if lA.apoapsis~=nil and lA.apoapsis.speed<V then lB("Apoapsis")end;e6=ls+lt*1.5/2+5+lu;e5=lr+lt-lu*2-lw;if lA.periapsis~=nil and lA.periapsis.speed<V and lA.periapsis.altitude>0 then lB("Periapsis")end;ja[#ja+1]=e4(lr+lt+lu,ls+20+lu,is.name,"txtorbbig")ja[#ja+1]=bx('<circle cx="%f" cy="%f" r="2" stroke="black" stroke-width="1" fill="white" />',lP,lQ)ja[#ja+1]=[[</g>]]return ja else ja[#ja+1]='<g clip-path="url(#orbitRect)">'local lV=""local lW=1.2*(lX-lY)/(lt*2)local lZ=1.4*(l_-m0)/(lt*1.5)for dW,dX in pairs(b[0])do if dX.center then local e5=lr+lt+dX.center.x/lW;local e6=ls+lt*1.5/2+dX.center.y/lZ;lV=lV..'<circle cx="'..e5 ..'" cy="'..e6 ..'" r="'..dX.radius/lW*30 ..'" stroke="white" stroke-width="1" fill="blue" />'if not string.match(dX.name,"Moon")and not string.match(dX.name,"Sanctuary")and not string.match(dX.name,"Space")then lV=lV.."<text x='"..e5 .."' y='"..e6+dX.radius/lW*30+20 .."' font-size='12' fill="..cJ.." text-anchor='middle' font-family='Montserrat'>"..dX.name.."</text>"end end end;local go=vec3(core.getConstructWorldPos())local e5=lr+lt+go.x/lW;local e6=ls+lt*1.5/2+go.y/lZ;lV=lV..'<circle cx="'..e5 ..'" cy="'..e6 ..'" r="2" stroke="white" stroke-width="1" fill="red"/>'lV=lV.."<text x='"..e5 .."' y='"..e6-10 .."' font-size='14' fill='darkred' text-anchor='middle' font-family='Bank' font-weight='bold'>You Are Here</text>"ic=lW;id=lZ;local m1=go+dm*1000000;local m2=lr+lt+m1.x/lW;local iX=ls+lt*1.5/2+m1.y/lZ;lV=lV..'<line x1="'..e5 ..'" y1="'..e6 ..'" x2="'..m2 ..'" y2="'..iX..'" stroke="purple" stroke-width="1"/>'ja[#ja+1]=lV;ja[#ja+1]='</g>'end elseif bu=="INFO"then ja=cZ.DrawOdometer(ja,co,ba,cp)elseif bu=="HELP"then ja=lj(ja)elseif bu=="SCOPE"then ja[#ja+1]='<g clip-path="url(#orbitRect)">'local m3=dM;if cC>0 then table.sort(dL,function(fw,fx)local eb,ec=fw.center,fx.center;return(eb.x-dr.x)^2+(eb.y-dr.y)^2+(eb.z-dr.z)^2<(ec.x-dr.x)^2+(ec.y-dr.y)^2+(ec.z-dr.z)^2 end)end;local gR={}local m4={}local m5=120;local m6=nil;local m7=nil;for bt,dX in ipairs(dL)do local gQ=dX.center-dr;local m8=gQ:len()local m9=gQ:normalize()local ma=gQ:cross(dj):normalize()local mb=math.acos(ma:dot(dk))if mb~=mb then mb=0 end;if ma:cross(dk):dot(dj)<0 then mb=-mb end;local mc=gQ:project_on_plane(dj):len()local md=math.sin(mb)*math.asin(mc/m8)*constants.rad2deg;local me=math.cos(mb)*math.asin(mc/m8)*constants.rad2deg;if m9:dot(dj)<0 then me=90*math.cos(mb)+90*math.cos(mb)-me;md=90*math.sin(mb)+90*math.sin(mb)-md end;local e5=lK+md/m3*lG;local e6=lL+me/m3*lG;local mf=(e5-lK)*(e5-lK)+(e6-lL)*(e6-lL)local mg=math.asin((dX.radius+dX.surfaceMaxAltitude)/m8)*constants.rad2deg;if mg~=mg then mg=m3 end;local hM=mg/m3*lG;local mh=math.asin(dX.atmosphereRadius/m8)*constants.rad2deg;if mh~=mh then mh=mg end;local mi=mh/m3*lG;local cu=ee(m8,1)local mj=dX.name;local mk=false;if e6>ls then if e6>lN then if e6-mi<=lN then mk=true end else mk=true end else if e6+mi>=ls then mk=true end end;local ml=false;local mm=e5;if dX.systemId==0 then mm=e5+m5 else mm=e5-m5 end;if mm+m5>lr then if mm+m5>lM then if mm-mi-m5<=lM then ml=true end else ml=true end else if mm+mi+m5>=lr then ml=true end end;local mn={}mn.x=e5;mn.y=e6;mn.planet=dX;mn.atmoSize=mi;if not m6 or mf<m6 then m6=mf;m7=mn end;if ml and mk then local mo=math.max(mi,5)if mf<mo*mo then mj=mj.." - "..cu end;mn.size=hM;mn.i=bt;mn.displayString=mj;mn.distance=cu;mn.visible=true;m4[#m4+1]=mn else mn.visible=false end end;local mp=false;table.sort(m4,function(eb,ec)return eb.y<ec.y end)for dW,gr in ipairs(m4)do local dX,hM,bt,mi,e5,e6,mj,cu=gr.planet,gr.size,gr.i,gr.atmoSize,gr.x,gr.y,gr.displayString,gr.distance;local lE,mq,mr,ms;local mt=15;local e8="pdim"if dX.systemId~=0 then mr=it(string.len(mj)*5)mt=-(15+mr)ms=iu(10)e8="pdimfill"else mr=it(string.len(mj)*9)ms=iu(15)end;if hM*2>mr then lE=bH(e5,lr+mr/2,lM-mr/2)mq=bH(e6,ls+ms,lN-5)lE=bH(lE,e5-hM+mr/2,e5+hM-mr/2)mq=bH(mq,e6-hM+ms,e6+hM)else lE=e5+mt;mq=e6 end;for mu,gr in pairs(gR)do local mv=gr.textPositions;local mw=mv.y-mq;if mu~=bt and bv(mw)<mv.height and mv.x+mv.width>lE and mv.x<lE+mr then if hM>mr then mq=bH(mq+ms,ls+15,lN-5)else mq=mv.y+mv.height+1 end end end;local mx=mj~=dX.name or lE<=lK and lE+mr>=lK and mq-ms<=lL and mq>=lL;gr.hovered=mx;local my=1;if mx then my=2;if hM*2<mr then my=10 end;if mj==dX.name then mj=mj.." - "..cu end;e8="pbright"if dX.systemId~=0 then mr=it(string.len(mj)*5)mt=-(15+mr)else mr=it(string.len(mj)*7)end;if hM*2>mr then lE=bH(e5,lr+mr/2,lM-mr/2)lE=bH(lE,e5-hM+mr/2,e5+hM-mr/2)else lE=e5+mt end end;gR[bt]={}gR[bt].textPositions={}gR[bt].textPositions.y=mq;gR[bt].textPositions.x=lE;gR[bt].textPositions.width=mr;gR[bt].textPositions.height=ms;gR[bt].output=""if hM*2>mr then e8=e8 .." txtmid"else e8=e8 .." txtstart"end;if mi-hM>2 then gR[bt].output=bx('<circle cx="%f" cy="%f" r="%f" stroke-width="1" stroke="%s" stroke-opacity="%f" fill="url(#RadialAtmo)" />',e5,e6,mi,cK,0.1*my)end;gR[bt].output=gR[bt].output..bx('<circle cx="%f" cy="%f" r="%f" stroke="%s" stroke-width="1" stroke-opacity="%f" fill="url(#RadialPlanetCenter)" />',e5,e6,hM,cK,0.2*my)if dX.systemId==0 then gR[bt].output=gR[bt].output..bx([[<text x='%f' y='%f'
                                            font-size='12' fill='%s' class='%s' font-family='Montserrat'>%s</text>]],lE,mq,cJ,e8,mj)if hM*2<=mr then gR[bt].output=gR[bt].output..bx("<path class='linethin dimstroke' d='M %f %f L %f %f L %f %f' />",lE+mr,mq+2,lE,mq+2,e5,e6)end else gR[bt].output=gR[bt].output..bx([[<text x='%f' y='%f'
                                            font-size='8' fill='%s' class='%s' font-family='Montserrat'>%s</text>]],lE,mq,cK,e8,mj)if hM*2<=mr then gR[bt].output=gR[bt].output..bx("<path class='linethin dimstroke' d='M %f %f L %f %f L %f %f' />",lE,mq+2,lE+mr,mq+2,e5,e6)end end end;for dW=#dL,1,-1 do if gR[dW]then ja[#ja+1]=gR[dW].output end end;if m7~=nil and dM<90 and not m7.hovered then local mz=m7.planet.atmosphereRadius/m7.atmoSize;local mA=bO(m6)*mz;local mB=ee(mA,1)local mr=it(math.max(string.len(mB)*7,string.len(m7.planet.name)*7))local ms=iu(12)local lE=bH(m7.x+(lK-m7.x)/2,lr+mr/2,lM-mr/2)local mq=bH(m7.y+(lL-m7.y)/2,ls+ms*2,lN-5)ja[#ja+1]=bx("<path class='linethin dimstroke' stroke='white' d='M %f %f L %f %f' />",m7.x,m7.y,lK,lL)ja[#ja+1]=bx([[<text x='%f' y='%f'
                                        font-size='12' fill='%s' class='txtmid' font-family='Montserrat'>%s</text>]],lE,mq,"white",mB)if not m7.visible then ja[#ja+1]=bx([[<text x='%f' y='%f'
                                            font-size='12' fill='%s' class='txtmid' font-family='Montserrat'>%s</text>]],lE,mq-ms,"white",m7.planet.name)end end;if dn>1 then local gQ=dm;local m9=gQ:normalize()local mc=gQ:project_on_plane(dj):len()local ma=gQ:cross(dj):normalize()local mb=math.acos(ma:dot(dk))if mb~=mb then mb=0 end;if ma:cross(dk):dot(dj)<0 then mb=-mb end;local md=math.sin(mb)*math.asin(mc/gQ:len())*constants.rad2deg;local me=math.cos(mb)*math.asin(mc/gQ:len())*constants.rad2deg;if m9:dot(dj)<0 then me=90*math.cos(mb)+90*math.cos(mb)-me;md=90*math.sin(mb)+90*math.sin(mb)-md end;local e5=lK+md/m3*lG;local e6=lL+me/m3*lG;local k7=14;local k8=k7/2;local kb=[[<circle
                                    cx="]]..e5 ..[["
                                    cy="]]..e6 ..[["
                                    r="]]..k8/k7 ..[["
                                    style="fill:#d7fe00;stroke:none;fill-opacity:1"/>
                                <circle
                                    cx="]]..e5 ..[["
                                    cy="]]..e6 ..[["
                                    r="]]..k8 ..[["
                                    style="stroke:#d7fe00;stroke-opacity:1;fill:none" />
                                <path
                                    d="M ]]..e5-k7 ..[[,]]..e6 ..[[ h ]]..k8 ..[["
                                    style="stroke:#d7fe00;stroke-opacity:1" />
                                <path
                                    d="M ]]..e5+k8 ..[[,]]..e6 ..[[ h ]]..k8 ..[["
                                    style="stroke:#d7fe00;stroke-opacity:1" />
                                <path
                                    d="M ]]..e5 ..[[,]]..e6-k7 ..[[ v ]]..k8 ..[["
                                    style="stroke:#d7fe00;stroke-opacity:1" />]]ja[#ja+1]=kb end;ja[#ja+1]=bx("<line class='linethin dimstroke' x1='%f' y1='%f' x2='%f' y2='%f' />",lK,lL-10,lK,lL+10)ja[#ja+1]=bx("<line class='linethin dimstroke' x1='%f' y1='%f' x2='%f' y2='%f' />",lK-10,lL,lK+10,lL)ja[#ja+1]='</g>'else return ja end end;local function mC(mD,mE)local mF;local mG=(mE-mD):normalize()local gp=(dr-mD):dot(mG)/mG:dot(mG)if gp<=0. then return(dr-mD):len()elseif gp>=(mE-mD):len()then return(dr-mE):len()end;local mH=mD+gp*mG;mF=(mH-dr):len()return mF end;local function mI()local mF;local mJ=nil;local mK=nil;local mL=nil;for dW,mM in pairs(b[0])do if mM.hasAtmosphere then local cu=mC(is.center,mM.center)if mJ==nil or cu<mJ then mK=mM;mJ=cu;mL=is end;if cn and cn.hasAtmosphere and cn.name~=is.name then local fJ=mC(cn.center,mM.center)if fJ<mJ then mK=mM;mJ=fJ;mL=cn end end end end;local mN=it(1770)local mO=iu(330)if mJ then local mP="txttick "local mQ=500000;if mJ<mK.radius+mQ or mJ<mL.radius+mQ then if dz then mP="txttick red "else mP="txttick orange "end end;mF=ee(mJ,2)ii=e4(mN,mO,"Pipe ("..mL.name.."--"..mK.name.."): "..mF,mP.."pbright txtmid")end end;local function mR(e5,e6,mS,mT,kk)local mU={x=e5,y=e6,width=mS,height=mT,label=kk}dI[kk]=mU;return mU end;local function mV(mW,mX,mS,mT,e5,e6,mY,mZ,m_,n0,e8)local mU={enableName=mW,disableName=mX,width=mS,height=mT,x=e5,y=e6,toggleVar=mY,toggleFunction=mZ,drawCondition=m_,hovered=false,class=e8}if n0 then table.insert(ib,mU)else table.insert(ia,mU)end;return mU end;local function n1(n2)if not ig then n3=false;n4=false;n5=false;u=true;return elseif n2=="handling"then n3=not n3;n4=false;n5=false elseif n2=="hud"then n4=not n4;n3=false;n5=false elseif n2=="physics"then n5=not n5;n3=false;n4=false end;if n5 or n4 or n3 then ih=dY(n2)u=false else ih={}u=true end end;local function n6()ig=not ig;if ig then i9=ib;ch="Hold SHIFT to see Settings"dN=u else i9=ia;ch="Hold SHIFT to see Control Buttons"n1()u=dN end end;local function n7()local function n8(dX)_G[dX]=not _G[dX]if _G[dX]then ch=dX.." set to true"else ch=dX.." set to false"end;if dX=="showHud"then dN=_G[dX]elseif dX=="BrakeToggleDefault"then aM=g end end;local n9=50;local na=340;local e5=500;local e6=cO/2-400;local nb=0;for dW,dX in pairs(dY("boolean"))do if type(_G[dX])=="boolean"then mV(dX,dX,na,n9,e5,e6,function()return _G[dX]end,function()n8(dX)end,function()return true end,true)e6=e6+n9+20;if nb==9 then e5=e5+na+20;e6=cO/2-400;nb=0 else nb=nb+1 end end end;mV("Control View","Control View",na,n9,10,cO/2-500,function()return true end,n6,function()return true end,true)mV("View Handling Settings",'Hide Handling Settings',na,n9,10,cO/2-(500-n9),function()return n3 end,function()n1("handling")end,function()return true end,true)mV("View Hud Settings",'Hide Hud Settings',na,n9,10,cO/2-(500-n9*2),function()return n4 end,function()n1("hud")end,function()return true end,true)mV("View Physics Settings",'Hide Physics Settings',na,n9,10,cO/2-(500-n9*3),function()return n5 end,function()n1("physics")end,function()return true end,true)end;local function nc()local function nd()local ne=dr;local hP=is.name..". "..#bc;if radar_1 then hP=d1.GetClosestName(hP)end;return c_.AddNewLocation(hP,ne,false,true)end;local function nf()aS=not aS end;local function ng(nh)if nh==1 then aQ=not aQ;aP=false else aP=not aP;aQ=false end;aR=false;aT=false;cf=false;aU=false;bg=nil;aW=false;aV=false end;local function ni()c_.UpdatePosition()end;local function nj()c_.ClearCurrentPosition()end;local function nk(hA)local li=d0.routeWP(true)if li and#li>0 then return"Engage Route: "..lf(li[1])end;return"Engage Autopilot: "..lf(hA)end;local function nl(hA)local li=d0.routeWP(true)if li and#li>0 then return"Next Route Point: "..lf(li[1])end;return"Disable Autopilot: "..lf(hA)end;local function nm()if bD()==1 then cf=not cf;if cf then aR=false;aP=false;aQ=false;aT=false;aW=false;aU=false;aV=false;nn=b9;b9=false;a.control.retractLandingGears()bI:setTargetGroundAltitude(S)dQ("folOn","F")else dQ("folOff","F")aO=true;d5=m;b9=nn;if b9 then a.control.extendLandingGears()bI:setTargetGroundAltitude(T)end end else ch="Follow Mode only works with Remote controller"cf=false end end;local n9=50;local na=260;local no=it(30)local np=ap+ao*2+2;local nq=aq+1;mV("+","+",no,no,np,nq+no+1,function()return false end,function()dM=dM/8 end,function()return bu=="SCOPE"end,nil,"ZoomButton")mV("-","-",no,no,np,nq,function()return false end,function()dM=math.min(dM*8,90)end,function()return bu=="SCOPE"end,nil,"ZoomButton")mV("0","0",no,no,np,nq+no*2+2,function()return false end,function()dM=90 end,function()return bu=="SCOPE"and dM~=90 end,nil,"ZoomButton")local nr=mV("Enable Brake Toggle","Disable Brake Toggle",na,n9,cN/2-na/2,cO/2+350,function()return aM end,function()aM=not aM;if aM then ch="Brakes in Toggle Mode"else ch="Brakes in Default Mode"end end)mV("Align Prograde","Disable Prograde",na,n9,cN/2-na/2-50-nr.width,cO/2-n9+380,function()return aQ end,function()ng(1)end)mV("Align Retrograde","Disable Retrograde",na,n9,cN/2-na/2+nr.width+50,cO/2-n9+380,function()return aP end,ng,function()return cC==0 end)ns=mV(nk,nl,600,60,cN/2-600/2,cO/2-60/2-330,function()return aR or bd or cx or bm end,function()end)local bt;local function nt(nu)local li=d0.routeWP(true)if li and#li>0 then return li[1]end;local hA=dH+nu;if hA>#dy then hA=hA-#dy-1 end;if hA<0 then hA=#dy+hA end;return hA end;nv={}for bt=0,10 do local nw=mV(function(ec)local hA=nt(ec.apExtraIndex)if aR or bd or cx or bm then return"Redirect: "..lf(hA)end;return nk(hA)end,function(ec)local hA=nt(ec.apExtraIndex)return nl(hA)end,600,60,cN/2-600/2,cO/2-60/2-330+60*bt,function(ec)local hA=nt(ec.apExtraIndex)return hA==b8 and(aR or bd or cx or bm)end,function(ec)local hA=nt(ec.apExtraIndex)local nx=b8==hA;b8=hA;c_.UpdateAutopilotTarget()d0.ToggleAutopilot()if not nx and not(aR or bd or cx or bm)then d0.ToggleAutopilot()end end,function()return dG and(#d0.routeWP(true)==0 or bt==0)end)nw.apExtraIndex=bt;nv[bt]=nw end;mV("Save Position","Save Position",200,ns.height,ns.x+ns.width+30,ns.y,function()return false end,nd,function()return b8==0 or lg==nil end)mV("Update Position","Update Position",200,ns.height,ns.x+ns.width+30,ns.y,function()return false end,ni,function()return b8>0 and lg~=nil end)mV("Clear Position","Clear Position",200,ns.height,ns.x-200-30,ns.y,function()return true end,nj,function()return b8>0 and lg~=nil end)mV("Save Route","Save Route",200,ns.height,ns.x+ns.width+30,ns.y+ns.height+20,function()return false end,function()d0.routeWP(false,false,2)end,function()return#d0.routeWP(true)>0 end)mV("Load Route","Clear Route",200,ns.height,ns.x-200-30,ns.y+ns.height+20,function()return#d0.routeWP(true)>0 end,function()if#d0.routeWP(true)>0 then d0.routeWP(false,true)elseif aR or bd then ch="Disable Autopilot before loading route"return else d0.routeWP(false,false,1)end end,function()return true end)n9=60;na=300;local e5=0;local e6=cO/2-150;mV("View Settings","View Settings",na,n9,e5,e6,function()return true end,n6)e6=e6+n9+20;mV("Enable Turn and Burn","Disable Turn and Burn",na,n9,e5,e6,function()return aS end,nf)e5=10;e6=cO/2-300;mV("Horizontal Takeoff Mode","Vertical Takeoff Mode",na,n9,e5+na+20,e6,function()return aN end,function()aN=not aN;if aN then ch="Vertical Takeoff Mode"else ch="Horizontal Takeoff Mode"end end,function()return ds end)e6=e6+n9+20;mV("Engage Orbiting","Cancel Orbiting",na,n9,e5+na+20,e6,function()return bm end,d0.ToggleIntoOrbit,function()return cC==0 and dD end)e6=cO/2-150;mV("Glide Re-Entry","Cancel Glide Re-Entry",na,n9,e5+na+20,e6,function()return aW end,function()cw=1;ng(1)end,function()return is.hasAtmosphere and not cB end)e6=e6+n9+20;mV("Parachute Re-Entry","Cancel Parachute Re-Entry",na,n9,e5+na+20,e6,function()return aW end,d0.BeginReentry,function()return is.hasAtmosphere and not cB end)e6=e6+n9+20;mV("Engage Follow Mode","Disable Follow Mode",na,n9,e5,e6,function()return cf end,nm,function()return bD()==1 end)mV("Enable Repair Arrows","Disable Repair Arrows",na,n9,e5+na+20,e6,function()return cT end,function()cT=not cT;if cT then ch="Repair Arrows Enabled"else ch="Repair Arrows Diabled"end end,function()return bD()==1 end)e6=e6+n9+20;if not n then mV("Enable AGG","Disable AGG",na,n9,e5,e6,function()return dt end,d0.ToggleAntigrav,function()return antigrav~=nil end)end;mV(function()return bx("Switch IPH Mode - Current: %s",bn)end,function()return bx("IPH Mode: %s",bn)end,na*2,n9,e5,e6,function()return false end,function()if bn=="All"then bn="Custom Only"elseif bn=="Custom Only"then bn="No Moons"else bn="All"end;ch="IPH Mode: "..bn end)e6=e6+n9+20;mV(function()return bx("Toggle Control Scheme - Current: %s",d)end,function()return bx("Control Scheme: %s",d)end,na*2,n9,e5,e6,function()return false end,function()if d=="keyboard"then d="mouse"elseif d=="mouse"then d="virtual joystick"else d="keyboard"end;ch="New Control Scheme: "..d end)local ny=iu(20)local nw=mR(0,0,it(70),ny,"HELP")nw=mR(nw.x+nw.width,nw.y,it(80),ny,"INFO")nw=mR(nw.x+nw.width,nw.y,it(70),ny,"ORBIT")nw=mR(nw.x+nw.width,nw.y,it(70),ny,"SCOPE")mR(nw.x+nw.width,nw.y,it(70),ny,"HIDE")end;local nz={}local nA=nil;function nz.HUDPrologue(ja)dz,dA=iq(dr)if not dz then bX=a8;bZ=a9;bY=aa;if lp and D and lp.getState()==0 then lp.toggle()end else bX=a5;bZ=a6;bY=a7;if lp and D and lp.getState()==1 then lp.toggle()end end;cJ=[[rgb(]]..bw(bX+0.6)..","..bw(bZ+0.6)..","..bw(bY+0.6)..[[)]]cK=[[rgb(]]..bw(bX*0.8+0.5)..","..bw(bZ*0.8+0.5)..","..bw(bY*0.8+0.5)..[[)]]local nB=cJ;local nC=cK;local nD=[[rgb(]]..bw(bX*0.4+0.5)..","..bw(bZ*0.4+0.5)..","..bw(bY*0.4+0.5)..[[)]]local nE=cJ;local nF=cK;local nG=nD;if iv()and not j then nB=[[rgb(]]..bw(bX*0.5+0.5)..","..bw(bZ*0.5+0.5)..","..bw(bY*0.5+0.5)..[[)]]nC=[[rgb(]]..bw(bX*0.3+0.5)..","..bw(bZ*0.3+0.5)..","..bw(bY*0.2+0.5)..[[)]]nD=[[rgb(]]..bw(bX*0.2+0.5)..","..bw(bZ*0.2+0.5)..","..bw(bY*0.2+0.5)..[[)]]end;local l4=it;local l5=iu;ja[#ja+1]=bx([[
                        <head>
                            <style>
                                body {margin: 0}
                                svg {position:absolute;top:0;left:0;font-family:Montserrat;} 
                                .txt {font-size:10px;font-weight:bold;}
                                .txttick {font-size:12px;font-weight:bold;}
                                .txtbig {font-size:14px;font-weight:bold;}
                                .altsm {font-size:16px;font-weight:normal;}
                                .altbig {font-size:21px;font-weight:normal;}
                                .line {stroke-width:2px;fill:none;stroke:%s}
                                .linethick {stroke-width:3px;fill:none}
                                .linethin {stroke-width:1px;fill:none}
                                .warnings {font-size:26px;fill:red;text-anchor:middle;font-family:Bank;}
                                .warn {fill:orange; font-size:24px}
                                .crit {fill:darkred;font-size:28px}
                                .bright {fill:%s;stroke:%s}
                                text.bright {stroke:black; stroke-width:10px;paint-order:stroke;}
                                .pbright {fill:%s;stroke:%s}
                                text.pbright {stroke:black; stroke-width:10px;paint-order:stroke;}
                                .dim {fill:%s;stroke:%s}
                                text.dim {stroke:black; stroke-width:10px;paint-order:stroke;}
                                .pdim {fill:%s;stroke:%s}
                                text.pdim {stroke:black; stroke-width:10px;paint-order:stroke;}
                                .red {fill:red;stroke:red}
                                text.red {stroke:black; stroke-width:10px;paint-order:stroke;}
                                .orange {fill:orange;stroke:orange}
                                text.orange {stroke:black; stroke-width:10px;paint-order:stroke;}
                                .redout {fill:none;stroke:red}
                                .op30 {opacity:0.3}
                                .op10 {opacity:0.1}
                                .txtstart {text-anchor:start}
                                .txtend {text-anchor:end}
                                .txtmid {text-anchor:middle}
                                .txtvspd {font-family:sans-serif;font-weight:normal}
                                .txtvspdval {font-size:20px}
                                .txtfuel {font-size:11px;font-weight:bold}
                                .txtorb {font-size:12px}
                                .txtorbbig {font-size:18px}
                                .hudver {font-size:10px;font-weight:bold;fill:red;text-anchor:end;font-family:Bank}
                                .msg {font-size:40px;fill:red;text-anchor:middle;font-weight:normal}
                                .cursor {stroke:white}
                                text { stroke:black; stroke-width:10px;paint-order:stroke;}
                                .dimstroke {stroke:%s}
                                .brightstroke {stroke:%s}
                                .indicatorText {font-size:20px;fill:white}
                                .size14 {font-size:14px}
                                .size20 {font-size:20px}
                                .topButton {fill:%s;opacity:0.5;stroke-width:2;stroke:%s}
                                .topButtonActive {fill:url(#RadialGradientCenter);opacity:0.8;stroke-width:2;stroke:%s}
                                .topButton text {font-size:13px; fill: %s; opacity:1; stroke-width:20px}
                                .topButtonActive text {font-size:13px;fill:%s; stroke-width:0px; opacity:1}
                                .indicatorFont {font-size:20px;font-family:Bank}
                                .dimmer {stroke: %s;}
                                .pdimfill {fill: %s;}
                                .dimfill {fill: %s;}
                            </style>
                        </head>
                        <body>
                            <svg height="100%%" width="100%%" viewBox="0 0 %d %d">
                                <defs>
                                    <radialGradient id="RadialGradientCenterTop" cx="0.5" cy="0" r="1">
                                        <stop offset="0%%" stop-color="%s" stop-opacity="0.5"/>
                                        <stop offset="100%%" stop-color="black" stop-opacity="0"/>
                                    </radialGradient>
                                    <radialGradient id="RadialGradientRightTop" cx="1" cy="0" r="1">
                                        <stop offset="0%%" stop-color="%s" stop-opacity="0.5"/>
                                        <stop offset="200%%" stop-color="black" stop-opacity="0"/>
                                    </radialGradient>
                                    <radialGradient id="ThinRightTopGradient" cx="1" cy="0" r="1">
                                        <stop offset="0%%" stop-color="%s" stop-opacity="0.2"/>
                                        <stop offset="200%%" stop-color="black" stop-opacity="0"/>
                                    </radialGradient>
                                    <radialGradient id="RadialGradientLeftTop" cx="0" cy="0" r="1">
                                        <stop offset="0%%" stop-color="%s" stop-opacity="0.5"/>
                                        <stop offset="200%%" stop-color="black" stop-opacity="0"/>
                                    </radialGradient>
                                    <radialGradient id="ThinLeftTopGradient" cx="0" cy="0" r="1">
                                        <stop offset="0%%" stop-color="%s" stop-opacity="0.2"/>
                                        <stop offset="200%%" stop-color="black" stop-opacity="0"/>
                                    </radialGradient>
                                    <radialGradient id="RadialGradientCenter" cx="0.5" cy="0.5" r="1">
                                        <stop offset="0%%" stop-color="%s" stop-opacity="0.8"/>
                                        <stop offset="100%%" stop-color="%s" stop-opacity="0.5"/>
                                    </radialGradient>
                                    <radialGradient id="RadialPlanetCenter" cx="0.5" cy="0.5" r="0.5">
                                        <stop offset="0%%" stop-color="%s" stop-opacity="1"/>
                                        <stop offset="100%%" stop-color="%s" stop-opacity="1"/>
                                    </radialGradient>
                                    <radialGradient id="RadialAtmo" cx="0.5" cy="0.5" r="0.5">
                                        <stop offset="0%%" stop-color="%s" stop-opacity="1"/>
                                        <stop offset="66%%" stop-color="%s" stop-opacity="1"/>
                                        <stop offset="100%%" stop-color="%s" stop-opacity="0.1"/>
                                    </radialGradient>                            
                                </defs>
                                <g class="pdim txt txtend">
                                
                            ]],nB,nB,nB,nE,nE,nC,nC,nF,nF,nC,nB,nD,nF,nB,nB,nD,nD,nG,nD,cN,cO,nC,nC,nC,nC,nC,nE,nC,nF,nG,nF,nF,nG)if not nA then nA=bx([[<path class="linethick brightstroke" style="fill:url(#RadialGradientCenterTop);" d="M %f %f L %f %f L %f %f %f %f L %f %f"/>
                        <path class="linethick brightstroke" style="fill:url(#RadialGradientRightTop);" d="M %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f Z"/>
                        
                        <path class="linethick brightstroke" style="fill:url(#RadialGradientLeftTop);" d="M %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f Z"/>
                        
                        <clipPath id="headingClip">
                            <path class="linethick dimstroke" style="fill:black;fill-opacity:0.4;" d="M %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f Z"/>
                        </clipPath>
                        <path class="linethick dimstroke" style="fill:black;fill-opacity:0.4;" d="M %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f L %f %f Z"/>]],l4(630),l5(0),l4(675),l5(45),l4(960),l5(55),l4(1245),l5(45),l4(1290),l5(0),l4(1000),l5(105),l4(1040),l5(59),l4(1250),l5(51),l4(1300),l5(0),l4(1920),l5(0),l4(1920),l5(20),l4(1400),l5(20),l4(1300),l5(105),l4(920),l5(105),l4(880),l5(59),l4(670),l5(51),l4(620),l5(0),l4(0),l5(0),l4(0),l5(20),l4(520),l5(20),l4(620),l5(105),l4(890),l5(59),l4(960),l5(62),l4(1030),l5(59),l4(985),l5(112),l4(1150),l5(112),l4(1100),l5(152),l4(820),l5(152),l4(780),l5(112),l4(935),l5(112),l4(890),l5(59),l4(960),l5(62),l4(1030),l5(59),l4(985),l5(112),l4(1150),l5(112),l4(1100),l5(152),l4(820),l5(152),l4(780),l5(112),l4(935),l5(112))end;if u and F then ja[#ja+1]=nA end;return ja end;function nz.DrawVerticalSpeed(ja,f1)j9(ja,f1)end;function nz.UpdateHud(ja)local k0=dw;local nH=dx;local ji=nH;local jy=k0;local ki=bw(unit.getThrottle())local kn=dn*3.6;local kj=unit.getAxisCommandValue(0)local nI=it(1770)local nJ=iu(310)if r and dv then kj=b_;ki=b_*100 end;local ix=iw()local jj="ROLL"if ki==nil then ki=0 end;if not dD then if dn>5 then k0=j_(dl)nH=k1(dl)else k0=0;nH=0 end;jj="YAW"end;if dA>50000 and not cB then local nK;nK=ee(dA)ja[#ja+1]=e4(nI,nJ,"PvP Boundary: "..nK,"pbright txtbig txtmid")end;ja[#ja+1]=cv;ja[#ja+1]=cM;ja[#ja+1]=i3;if ii~=""then ja[#ja+1]=ii end;if iy~=""then ja[#ja+1]=iy end;if iz~=""then ja[#ja+1]=iz end;j9(ja,cD)if bD()==0 or i then if dD then jh(ja,ab,ac,ji,jj,dD)else jh(ja,ab,ac,nH,jj,dD)end;if not iv()or j then if dD then jh(ja,ab,ac,ji,jj,dD)jx(ja,jy,ji,ab,ac,dD,bw(k1(dl)),dn)else jh(ja,ab,ac,nH,jj,dD)jx(ja,k0,nH,ab,ac,dD,bw(nH),dn)end;jE(ja,cD,dD)k2(ja,dl,dn,ab,ac)end end;kh(ja,ix,ki,kj)km(ja,kn)kq(ja)lq(ja)if not ig and cg then lh(ja)end;return ja end;function nz.HUDEpilogue(ja)ja[#ja+1]="</svg>"return ja end;function nz.ExtraData(ja)local nL=it(1240)local nM=iu(55)local nN=nM+10;local nO;local l4=it;local l5=iu;local nP=0;local ix=iw()if aN then ix=ix.."-VERTICAL"end;if C and not aV and not aU and dn>20 then ix=ix.."-COLLISION ON"end;if bp~="Off"then ix="("..bp..")-"..ix end;if aS then ix="TB-"..ix end;if not bo then ix=ix.."-DeCoupled"end;local nQ=l5(99)local nR=l5(80)local nS=l5(85)local nT=l5(31)local nU=0;local nV=0;local nW=cG>1000000 and bQ(cG/1000000,2).."kT"or bQ(cG/1000,2).."T"if cB then nP=bh else nP=bf end;local nX,nY=cW.computeDistanceAndTime(dn,0,cG,0,0,nP)if nX<0 then nX=0 end;nP=bQ(nP/(cG*i8),2).."g"local nZ=a:maxForceForward()nO=core.g()if nO>0.1 then nV=cG*nO;nV=bQ(nV/(cG*i8),2).."g"nU=0.5*nZ/nO;nU=nU>1000000 and bQ(nU/1000000,2).."kT"or bQ(nU/1000,2).."T"end;nZ=bQ(nZ/(cG*i8),2).."g"local n_=vec3(core.getWorldAcceleration()):len()/9.80665;nO=core.g()ja[#ja+1]=[[<g class="dim txt txtend size14">]]if bD()==1 and not i then nL=it(1120)nM=iu(55)nN=nM+10 elseif cB and F then local o0=it(770)ja[#ja+1]=e4(l4(895),nQ,"ATMO","")ja[#ja+1]=bx([[<path class="linethin dimstroke"  d="M %f %f l %f 0"/>]],l4(895),nS,l4(-80))ja[#ja+1]=e4(l4(815),nR,bx("%.1f%%",cC*100),"txtstart size20")end;if F then ja[#ja+1]=e4(l4(1025),nQ,"GRAVITY","txtstart")ja[#ja+1]=bx([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],l4(1025),nS,l4(80))ja[#ja+1]=e4(l4(1105),nR,bx("%.2fg",nO/9.80665),"size20")ja[#ja+1]=e4(l4(1125),nQ,"ACCEL","txtstart")ja[#ja+1]=bx([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],l4(1125),nS,l4(80))ja[#ja+1]=e4(l4(1205),nR,bx("%.2fg",n_),"size20")ja[#ja+1]=e4(l4(695),nQ,"BRK TIME","")ja[#ja+1]=bx([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],l4(695),nS,l4(-80))ja[#ja+1]=e4(l4(615),nR,bx("%s",eh(nY)),"txtstart size20")ja[#ja+1]=e4(l4(635),l5(45),"TRIP","")ja[#ja+1]=bx([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],l4(635),l5(31),l4(-90))if kZ then ja[#ja+1]=e4(l4(532),l5(23),bx("%s",eh(kZ)),"txtstart size20")end;ja[#ja+1]=e4(l4(795),nQ,"BRK DIST","")ja[#ja+1]=bx([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],l4(795),nS,l4(-80))ja[#ja+1]=e4(l4(715),nR,bx("%s",ee(nX)),"txtstart size20")ja[#ja+1]=e4(l4(1285),l5(45),"MASS","txtstart")ja[#ja+1]=bx([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],l4(1285),l5(31),l4(90))ja[#ja+1]=e4(l4(1388),l5(23),bx("%s",nW),"size20")ja[#ja+1]=e4(l4(1220),nQ,"THRUST","txtstart")ja[#ja+1]=bx([[<path class="linethin dimstroke" d="M %f %f l %f 0"/>]],l4(1220),nS,l4(80))ja[#ja+1]=e4(l4(1300),nR,bx("%s",nZ),"size20")ja[#ja+1]=e4(it(960),iu(175),ix,"pbright txtbig txtmid size20")end;ja[#ja+1]="</g>"end;function nz.DrawOdometer(ja,co,ba,cp)if bu~="INFO"then return ja end;local nO;local nU=0;local nV=0;local nP=0;local nW=cG>1000000 and bQ(cG/1000000,2).." kTons"or bQ(cG/1000,2).." Tons"if cB then nP=bh else nP=bf end;local nX,nY=cW.computeDistanceAndTime(dn,0,cG,0,0,nP)nP=bQ(nP/(cG*i8),2).." g"local nZ=a:maxForceForward()nO=core.g()if nO>0.1 then nV=cG*nO;nV=bQ(nV/(cG*i8),2).." g"nU=0.5*nZ/nO;nU=nU>1000000 and bQ(nU/1000000,2).." kTons"or bQ(nU/1000,2).." Tons"end;nZ=bQ(nZ/(cG*i8),2).." g"if bD()==0 or i then local o1=it(ap+10)local o2=iu(aq+20)local o3=it(ap+10+ao/1.25)local mT=25;ja[#ja+1]="<g class='txtstart size14 bright'>"ja[#ja+1]=e4(o1,o2,bx("BrkTime: %s",eh(nY)))ja[#ja+1]=e4(o3,o2,bx("Trip: %.2f km",co))ja[#ja+1]=e4(o1,o2+mT,bx("Lifetime: %.2f kSU",ba/200000))ja[#ja+1]=e4(o3,o2+mT,bx("BrkDist: %s",ee(nX)))ja[#ja+1]=e4(o1,o2+mT*2,"Trip Time: "..eh(cp))ja[#ja+1]=e4(o3,o2+mT*2,"Total Time: "..eh(bb))ja[#ja+1]=e4(o1,o2+mT*3,bx("Mass: %s",nW))ja[#ja+1]=e4(o3,o2+mT*3,bx("Max Brake: %s",nP))ja[#ja+1]=e4(o1,o2+mT*4,bx("Max Thrust: %s",nZ))if nO>0.1 then ja[#ja+1]=e4(o3,o2+mT*4,bx("Max Thrust Mass: %s",nU))ja[#ja+1]=e4(o1,o2+mT*5,bx("Req Thrust: %s",nV))else ja[#ja+1]=e4(o3,o2+mT*5,"Max Mass: n/a")ja[#ja+1]=e4(o1,o2+mT*6,"Req Thrust: n/a")end end;ja[#ja+1]="</g></g>"return ja end;function nz.DrawWarnings(ja)return kq(ja)end;function nz.DisplayOrbitScreen(ja)return lq(ja)end;function nz.DisplayMessage(ja,kM)if kM~="empty"then local e6=310;for o4 in string.gmatch(kM,"([^\n]+)")do e6=e6+35;ja[#ja+1]=e4("50%",e6,o4,"msg")end end;if ct~=0 then unit.setTimer("msgTick",ct)ct=0 end end;function nz.DrawDeadZone(ja)ja[#ja+1]=bx([[<circle class="dim line" style="fill:none" cx="50%%" cy="50%%" r="%d"/>]],an)end;function nz.UpdatePipe()if cB then ii=""return end;mI()end;function nz.DrawSettings(ja)if#ih>0 then local e5=it(640)local e6=iu(200)ja[#ja+1]=[[<g class="pbright txtvspd txtstart">]]for dW,dX in pairs(ih)do ja[#ja+1]=e4(e5,e6,dX..": ".._G[dX])e6=e6+20;if dW%12==0 then e5=e5+it(350)e6=iu(200)end end;ja[#ja+1]=e4(it(640),iu(200)+260,"To Change: In Lua Chat, enter /G VariableName Value")ja[#ja+1]="</g>"end;return ja end;local i4;local i0=it(1770)local i1=iu(350)local h_=iu(15)local hZ=it(1370)local dP,o5;local i5=0;function nz.DrawRadarInfo()i3=d1.GetRadarHud(hZ,h_,i0,i1)end;function nz.DrawTanks()if aj~=0 and ak~=0 then iy=e4(aj,ak,"","txtstart pdim txtfuel")iW=ak;iP(aj,"Atmospheric ","ATMO",cP,iN,iO)iP(aj,"Space Fuel T","SPACE",cQ,iL,iM)iP(aj,"Rocket Fuel ","ROCKET",cR,iJ,iK)end end;function nz.DrawShield()local o6=lp.getState()==1 and"Shield Active"or"Shield Disabled"local o7=core.getPvPTimer()local o8=lp.getResistances()local o9="A: "..10+o8[1]*100 .."% / E: "..10+o8[2]*100 .."% / K:"..10+o8[3]*100 .."% / T: "..10+o8[4]*100 .."%"local e5,e6=al-60,am+30;local oa=bw(0.5+lp.getShieldHitpoints()*100/lp.getMaxShieldHitpoints())local j3=bw(oa*2.55)local j4=bx("rgb(%d,%d,%d)",255-j3,j3,0)local e8=""iz=e4(e5,e6,"","txtmid pdim txtfuel")if oa<10 and o6~="Shield Disabled"then e8="red "end;o7=o7>0 and"   PvPTime: "..eh(o7)or""iz=iz..bx([[
                        <g class="pdim">                        
                        <rect fill=grey class="bar" x="%d" y="%d" width="200" height="13"></rect></g>
                        <g class="bar txtstart">
                        <rect fill=%s width="%d" height="13" x="%d" y="%d"></rect>
                        <text fill=black x="%d" y="%d">%s%%%s</text>
                        </g>]],e5,e6,j4,oa*2,e5,e6,e5+2,e6+10,oa,o7)iz=iz..e4(e5,e6-5,o6,e8 .."txtstart pbright txtbig")iz=iz..e4(e5,e6+30,o9,e8 .."txtstart pbright txtsmall")end;function nz.hudtick()if not is then return end;local function ob(ja)local j6=bw(bH(cu/(cN/4)*255,0,255))ja[#ja+1]=bx("<line x1='0' y1='0' x2='%fpx' y2='%fpx' style='stroke:rgb(%d,%d,%d);stroke-width:2;transform:translate(50%%, 50%%)' />",cr,cs,bw(bX+0.5)+j6,bw(bZ+0.5)-j6,bw(bY+0.5)-j6)end;local function oc()for eO,dX in pairs(i9)do if dX.hovered then if not dX.drawCondition or dX.drawCondition(dX)then dX.toggleFunction(dX)end;dX.hovered=false end end;for eO,dX in pairs(dI)do if dX.hovered then bu=dX.label;dX.hovered=false end end end;local function od()local function oe(of,og,e5,e6,mS,mT)if of>=e5 and of<=e5+mS and og>=e6 and og<=e6+mT then return true else return false end end;local e5=cr+cN/2;local e6=cs+cO/2;for eO,dX in pairs(i9)do dX.hovered=oe(e5,e6,dX.x,dX.y,dX.width,dX.height)end;for eO,dX in pairs(dI)do dX.hovered=oe(e5,e6,dX.x,dX.y,dX.width,dX.height)end;if dG then local mx=false;for eO,ec in ipairs(nv)do if ec.hovered then mx=true;break end end;if ns.hovered then mx=true end;dG=mx else dG=ns.hovered;if not dG then dH=b8 end end end;local function oh(ja)if not bu or bu==""then bu="HELP"end;if u then for dW,dX in pairs(dI)do local e8="dim brightstroke"local oi=0.2;if bu==dW then e8="pbright dimstroke"oi=0.6 end;local oj=""if dX.hovered then oi=0.8;oj=";stroke:white"end;ja[#ja+1]=bx([[<rect width="%f" height="%d" x="%d" y="%d" clip-path="url(#round-corner)" class="%s" style="stroke-width:1;fill-opacity:%f;%s" />]],dX.width,dX.height,dX.x,dX.y,e8,oi,oj)ja[#ja+1]=e4(dX.x+dX.width/2,dX.y+dX.height/2+5,dX.label,"txt txtmid pdim")end end end;local function ok(ja)local function ol(ja,om,hover,e5,e6,gb,on,oo,op,oq,os,nw)if type(oq)=="function"then oq=oq(nw)end;if type(os)=="function"then os=os(nw)end;ja[#ja+1]=bx("<rect x='%f' y='%f' width='%f' height='%f' fill='",e5,e6,gb,on)if om then ja[#ja+1]=bx("%s'",oo)else ja[#ja+1]=op end;if hover then ja[#ja+1]=bx(" style='stroke:rgb(%d,%d,%d); stroke-width:2'",a5,a6,a7)else ja[#ja+1]=bx(" style='stroke:rgb(%d,%d,%d); stroke-width:1'",bQ(a5*0.5,0),bQ(a6*0.5,0),bQ(a7*0.5,0))end;ja[#ja+1]=" rx='5'></rect>"ja[#ja+1]=bx("<text x='%f' y='%f' font-size='24' fill='",e5+gb/2,e6+on/2+5)if om then ja[#ja+1]="black"else ja[#ja+1]="white"end;ja[#ja+1]="' text-anchor='middle' font-family='Play' style='stroke-width:0px;'>"if om then ja[#ja+1]=bx("%s</text>",oq)else ja[#ja+1]=bx("%s</text>",os)end end;local ot=bx("rgb(%d,%d,%d)'",bQ(a5*0.1,0),bQ(a6*0.1,0),bQ(a7*0.1,0))local ou=bx("rgb(%d,%d,%d)",bQ(a5*0.8,0),bQ(a6*0.8,0),bQ(a7*0.8,0))local ov=ol;for eO,dX in pairs(i9)do local mX=dX.disableName;local mW=dX.enableName;if type(mX)=="function"then mX=mX(dX)end;if type(mW)=="function"then mW=mW(dX)end;if not dX.drawCondition or dX.drawCondition(dX)then ov(ja,dX.toggleVar(dX),dX.hovered,dX.x,dX.y,dX.width,dX.height,ou,ot,mX,mW,dX)end end end;local ow=bQ(cN/2,0)local ox=bQ(cO/2,0)local ja={}cZ.HUDPrologue(ja)if u then cZ.UpdateHud(ja)else if y then cZ.DrawVerticalSpeed(ja,cD)end;cZ.DrawWarnings(ja)end;if ig and ih~={}then cZ.DrawSettings(ja)end;if radar_1 then cZ.DrawRadarInfo()end;cZ.HUDEpilogue(ja)ja[#ja+1]=bx([[<svg width="100%%" height="100%%" style="position:absolute;top:0;left:0"  viewBox="0 0 %d %d">]],cN,cO)if ch~="empty"then cZ.DisplayMessage(ja,ch)end;if bD()==0 and d=="virtual joystick"then if t then cZ.DrawDeadZone(ja)end end;oh(ja)if bN()==0 then if bD()==1 and cg then if not oy then od()ok(ja)end;if not d3 and not d4 then local oz=table.concat(ja,"")ja={}ja[#ja+1]=bx("<style>@keyframes test { from { opacity: 0; } to { opacity: 1; } }  body { animation-name: test; animation-duration: 0.5s; }</style><body><svg width='100%%' height='100%%' position='absolute' top='0' left='0'><rect width='100%%' height='100%%' x='0' y='0' position='absolute' style='fill:rgb(6,5,26);'/></svg><svg width='50%%' height='50%%' style='position:absolute;top:30%%;left:25%%' viewbox='0 0 %d %d'>",cN,cO)ja[#ja+1]=oz;ja[#ja+1]="</body>"d3=true;ja[#ja+1]=[[</svg></body>]]unit.setTimer("animateTick",0.5)local oA=table.concat(ja,"")system.setScreen(oA)elseif d4 then local oz=table.concat(ja,"")ja={}ja[#ja+1]=bx("<body style='background-color:rgb(6,5,26)'><svg width='50%%' height='50%%' style='position:absolute;top:30%%;left:25%%' viewbox='0 0 %d %d'>",cN,cO)ja[#ja+1]=oz;ja[#ja+1]="</body>"end;if not d3 then ja[#ja+1]=bx([[<g transform="translate(%d %d)"><circle class="cursor" cx="%fpx" cy="%fpx" r="5"/></g>]],ow,ox,cr,cs)end else oc()end else if not cg and bD()==0 then oc()if cu>an then if t then ob(ja)end end elseif cg and(not oy or not f)then od()ok(ja)end;ja[#ja+1]=bx([[<g transform="translate(%d %d)"><circle class="cursor" cx="%fpx" cy="%fpx" r="5"/></g>]],ow,ox,cr,cs)end;ja[#ja+1]=[[</svg></body>]]oA=table.concat(ja,"")end;function nz.TenthTick()cZ.DrawTanks()if lp then cZ.DrawShield()end end;function nz.OneSecond(ja)local function oB()local i_=bG()local kn=dn;local oC=i_-cF;if kn>1.38889 then kn=kn/1000;local oD=kn*(i_-cF)ba=ba+oD;co=co+oD end;cp=cp+oC;bb=bb+oC;cF=i_ end;oB()cZ.UpdatePipe()cZ.ExtraData(ja)end;function nz.ButtonSetup()n7()nc()i9=ia end;return nz end;local function oE()local function oF(ne)local dO=oG:closestBody(ne)if(ne-dO.center):len()>dO.radius+dO.noAtmosphericDensityAltitude then dO=b[0][0]end;return dO end;local function oH()local function oI(oJ,oK)return oJ.name<oK.name end;dy={}for dW,dX in pairs(b[0])do dy[#dy+1]={name=dX.name,index=dW}end;table.sort(dy,oI)end;local function oL(oM)for dW,dX in pairs(oM)do if dX.name and dX.name==lg.name then return dW end end;return-1 end;local function oN()dH=b8;if b8==0 then b6="None"cn=nil;lg=nil;return true end;local oO=dy[b8].index;local oP=b[0][oO]if oP.center then b6=oP.name;cn=cV[0][oO]if lg~=nil then if cC==0 then if bK(oQ,oR)~=1 then bL(oQ,oR)end;if bK(oS,oT)~=1 then bL(oS,oT)end;if bK(oU,oV)~=1 then bL(oU,oV)end;if bK(oW,oX)~=1 then bL(oW,oX)end;if bK(oY,oZ)~=1 then bL(oY,oZ)end end;if bK(o_,p0)~=1 then bL(o_,p0)end;if bK(p1,p2)~=1 then bL(p1,p2)end;if bK(p3,p4)~=1 then bL(p3,p4)end end;lg=nil else lg=oP;for eO,dX in pairs(cV[0])do if dX.name==lg.planetname then cn=dX;b6=lg.name;break end end;if bK(o_,p0)~=1 then bL(o_,p0)end;if bK(p1,p2)~=1 then bL(p1,p2)end end;if lg==nil then b7=vec3(cn.center)else b7=lg.position end;if cn.planetname~="Space"then if cn.hasAtmosphere then p5=bw(cn.radius*(N-1)+cn.noAtmosphericDensityAltitude)else p5=bw(cn.radius*(N-1)+cn.surfaceMaxAltitude)end else p5=M end;if lg~=nil and lg.planetname=="Space"then b2=0 else eO,b2=cY(cn):escapeAndOrbitalSpeed(p5)end;b4=0;aZ=false;b0=false;b1=false;aR=false;a_=false;b3="Aligning"return true end;local function p6(je)if not aR and not bd and not cx and not bm and not aW and not cy then if je==nil then b8=b8+1;if b8>#dy then b8=0 end else b8=b8-1;if b8<0 then b8=#dy end end;if b8==0 then oN()else local oO=dy[b8].index;local oP=b[0][oO]if oP~=nil and oP.name=="Space"or bn=="Custom Only"and oP.center or bn=="No Moons"and string.find(oP.name,"Moon")~=nil then if je==nil then p6()else p6(1)end else oN()end end else ch="Disengage autopilot before changing Interplanetary Helper"dQ("iph","AP")end end;local function nj()local hA=-1;hA=oL(b[0])if hA>-1 then table.remove(b[0],hA)end;hA=-1;hA=oL(bc)if hA~=-1 then ch=lg.name.." saved location cleared"table.remove(bc,hA)end;p6()oH()end;local function nd(hP,ne,jX,p7)if dbHud_1 or jX then local dO=oF(ne)local nO=dO.gravity;if p7 then nO=unit.getClosestPlanetInfluence()end;local p8={position=ne,name=hP,planetname=dO.name,gravity=nO,safe=p7}if not jX then bc[#bc+1]=p8 else for dW,dX in pairs(b[0])do if dX.name and hP==dX.name then table.remove(b[0],dW)end end end;table.insert(b[0],p8)oH()oN()ch="Location saved as "..hP.."("..dO.name..")"else ch="Databank must be installed to save permanent locations"end end;local p9={}function p9.UpdateAtlasLocationsList()oH()end;function p9.UpdateAutopilotTarget()oN()end;function p9.adjustAutopilotTargetIndex(je)p6(je)end;function p9.findAtlasIndex(oM)oL(oM)end;function p9.UpdatePosition(pa)local hA=oL(bc)if hA~=-1 then if pa~=nil then bc[hA].name=pa;b8=b8-1;p6()else local pb=bc[hA]pb.gravity=unit.getClosestPlanetInfluence()pb.position=dr;pb.safe=true end;ch=bc[hA].name.." position updated ("..bc[hA].planetname..")"else ch="Name Not Found"end end;function p9.AddNewLocation(hP,ne,jX,p7)nd(hP,ne,jX,p7)end;function p9.ClearCurrentPosition()nj()end;for dW,dX in pairs(bc)do table.insert(b[0],dX)end;oH()if b8>#dy then b8=0 end;p9.UpdateAutopilotTarget()return p9 end;local function pc()local pd={}local function pe(gi)local pf=b2;if not aR then pf=0 end;if not cB then return cW.computeDistanceAndTime(gi,pf,cG,0,0,bf-b4*cG)else if bh and bh>0 then return cW.computeDistanceAndTime(gi,pf,cG,0,0,bh-b4*cG)else return 0,0 end end end;local function pg(gi)local pf=b2;if not aR then pf=0 end;return cW.computeDistanceAndTime(gi,pf,cG,a:maxForceForward(),X,bf-b4*cG)end;local ph=false;local pi=0;local pj=0;local pk=0;local pl=bG()local pm=0;local pn=0;local po=0;local pp=0;local pq=false;local pr=false;local ps=false;local pt=nil;local pu=0;local pv={}function pd.GetAutopilotBrakeDistanceAndTime(gi)return pe(gi)end;function pd.GetAutopilotTBBrakeDistanceAndTime(gi)return pg(gi)end;local function pw(px,py,pz)py=py:project_on_plane(px)pz=pz:project_on_plane(px)return bE(py:cross(pz):dot(px),py:dot(pz))end;local function pA()local function pB()local pC=-1;local pD=-1;if vBooster then pC=vBooster.getDistance()end;if hover then pD=hover.getDistance()end;if pC~=-1 and pD~=-1 then if pC<pD then return pC else return pD end elseif pC~=-1 then return pC elseif pD~=-1 then return pD else return-1 end end;local pE=pB()local pF=-1;if pG then pF=pG.getDistance()end;if pE~=-1 and pF~=-1 then if pE<pF then return pE else return pF end elseif pE~=-1 then return pE else return pF end end;local function pH(is,fF,pI)local function pJ(pK,eV)local fL=vec3(eV)if pK.id==0 then return setmetatable({latitude=fL.x,longitude=fL.y,altitude=fL.z,id=0,systemId=pK.systemId},eX)end;local fM=fL-pK.center;local cu=fM:len()local f1=cu-pK.radius;local e_=0;local f0=0;if not ea(cu,0)then local fN=bE(fM.y,fM.x)f0=fN>=0 and fN or 2*math.pi+fN;e_=math.pi/2-math.acos(fM.z/cu)end;return setmetatable({latitude=math.deg(e_),longitude=math.deg(f0),altitude=f1,id=pK.id,systemId=pK.systemId},eX)end;local pL=pJ(is,fF)pL="::pos{"..pL.systemId..","..pL.id..","..pL.latitude..","..pL.longitude..","..pL.altitude.."}"if pI then return pL else system.setWaypoint(pL)return true end end;local pM=false;function pd.changeSpd(pN)local bT=1;if pN then bT=-1 end;if not cg then if r and not oy and cH then local pO=b_;b_=bQ(bH(b_+bT*as/100,-1,1),2)if b_>=0 and pO<0 then b_=0;cH=false end elseif oy then if cC>0 or aW then d9=bH(d9+bT*as,0,P)elseif aR then V=bH(V+bT*as/3.6*100,0,8333.00)end else bI:updateCommandFromActionStart(axisCommandId.longitudinal,bT*as)end else if aR or bd or cx or bm then dH=dH+1*bT*-1;if dH>#dy then dH=1 end;if dH<1 then dH=#dy end else if not pN then bT=1 else bT=nil end;c_.adjustAutopilotTargetIndex(bT)end end end;function pd.showWayPoint(is,fF,pI)return pH(is,fF,pI)end;function pd.APTick()local function pP()if dF and not aU then local fo=dF[1]local hQ,hR=dF[2],dF[3]local pQ=math.min(hQ,hR or hQ)local pR=pQ/dn;local pS=aV and(dn<42 or cz~=-1)local pT=aT or bd or bg or aR;if pT and not pS and(cj*1.5>pQ or pR<1)then aO=true;d0.cmdThrottle(0)if aT then d0.ToggleAltitudeHold()end;if bg then pU()end;ch="Autopilot Cancelled due to possible collision"if bd or aR then pv={}d0.ToggleAutopilot()end;kT=true;aU=true;d5=true end;if pR<11 then dE=fo.name.." COLLISION "..eh(pR).." / "..ee(pQ,2)else dE=fo.name.." collision "..eh(pR)end;if pR<6 then dQ("alarm","AL",2)end else dE=false end end;local function pV(pW,pX,pY)local function pZ(pW,fq)pW=vec3(pW)fq=vec3(fq):normalize()local eF=pW*fq;return eF.x+eF.y+eF.z end;local p_=0.001;local q0=1;if not cB or not d7 or cz~=-1 or dn<c5 then if pY==nil then pY=aG end;if pX==nil then pX=p_ end;pW=vec3(pW):normalize()local q1=vec3()-pW;local q2=-pZ(q1,core.getConstructWorldOrientationRight())*q0;local q3=-pZ(q1,core.getConstructWorldOrientationUp())*q0;if pj==0 then pj=q2/2 end;if pk==0 then pk=q3/2 end;if bv(q2)<0.1 then ca=ca-q2*2 else ca=ca-(q2+(q2-pj)*pY)end;if bv(q3)<0.1 then c9=c9+q3*2 else c9=c9+q3+(q3-pk)*pY end;pj=q2;pk=q3;if bv(q2)<pX and bv(q3)<pX then return true end;return false elseif d7 and cz==-1 then pW=dm;if pY==nil then pY=aG end;if pX==nil then pX=p_ end;pW=vec3(pW):normalize()local q1=dj-pW;local q2=-pZ(q1,core.getConstructWorldOrientationRight())*q0;local q3=-pZ(q1,core.getConstructWorldOrientationUp())*q0;if pj==0 then pj=q2/2 end;if pk==0 then pk=q3/2 end;if bv(q2)<0.1 then ca=ca-q2*5 else ca=ca-(q2+(q2-pj)*pY)end;if bv(q3)<0.1 then c9=c9+q3*5 else c9=c9+q3+(q3-pk)*pY end;pj=q2;pk=q3;if bv(q2)<pX and bv(q3)<pX then return true end;return false end end;cB=bB()>0;cC=bB()cD=core.getAltitude()cz=pA()bU=bG()pl=bU;if C then pP()end;if antigrav then dt=antigrav.getState()==1 end;local q4=1;local q5=1;local q6=bU-pl;local q7=-math.deg(pw(di,dm,dj))local q8=math.deg(pw(dk,dm,dj))local je=dp*-1;d7=cB and q7<-G or q7>G or q8<-H or q8>H;local q9=system.getMouseDeltaX()local qa=system.getMouseDeltaY()if l and not cg then qa=-qa end;ca=0;ce=0;c9=0;oG=cV[0]is=oG:closestBody(core.getConstructWorldPos())qb=cY(is)gm=qb:orbitalParameters(core.getConstructWorldPos(),dm)if cD==0 then cD=(dr-is.center):len()-is.radius end;dD=unit.getClosestPlanetInfluence()>0 or cD>0 and cD<200000;local nO=is:getGravity(core.getConstructWorldPos()):len()*cG;d8=0;cX=core.getMaxKinematicsParametersAlongAxis("ground",core.getConstructOrientationUp())[1]if bN()==0 then if bD()==1 and cg then if not d3 then cr=bH(cr+q9,-cN/2,cN/2)cs=bH(cs+qa,-cO/2,cO/2)end else cr=0;cs=0 end else cr=bH(cr+q9,-cN/2,cN/2)cs=bH(cs+qa,-cO/2,cO/2)cu=bO(cr*cr+cs*cs)if not cg and bD()==0 then local k9,ka=q9,qa;if bu=="SCOPE"then k9,ka=dM/90,dM/90 end;if d=="virtual joystick"then if cr>0 and cr>an then ca=ca-(cr-an)*au*k9 elseif cr<0 and cr<an*-1 then ca=ca-(cr+an)*au*k9 else ca=0 end;if cs>0 and cs>an then c9=c9-(cs-an)*av*ka elseif cs<0 and cs<an*-1 then c9=c9-(cs+an)*av*ka else c9=0 end else cr=0;cs=0;if d=="mouse"then c9=(-utils.smoothstep(qa,-100,100)+0.5)*2*q4;ca=(-utils.smoothstep(q9,-100,100)+0.5)*2*q5 end end end end;local qc=dn>8334;if dn>Q/3.6 and not cB and not aR and not qc then ch="Space Speed Engine Shutoff reached"d0.cmdThrottle(0)end;if not qc and qd then if not aO then d0.BrakeToggle()end;if aR then d0.ToggleAutopilot()end end;qd=qc;if cB and cC>0.09 then if dn>d9/3.6 and not r and not ph then aO=true;ph=true elseif not r and ph then if dn<d9/3.6 then aO=false;ph=false end end end;if aO then cd=1 else cd=0 end;if aQ then if cw then aO=false;local qe=false;if lg and cw~=1 then qe=pV(lg.position-dr,0.1)else qe=pV(vec3(dm),0.01)end;d5=true;if qe then d0.cmdCruise(bw(d9))if(bv(dx)<2 or bv(dw)>85)and dn>=d9/3.6-1 then aO=false;aQ=false;c6=true;if cw~=1 then cy=true end;cw=false;aR=false;d0.BeginReentry()end elseif cB and r then d0.cmdThrottle(1)end elseif dn>c5 then pV(vec3(dm),0.01)end end;if aP then if cB then aP=false elseif dn>c5 then pV(-vec3(dm))end end;if not aQ and cw and not bm then if cC==0 then c6=true;d0.BeginReentry()cw=false;cy=true else cw=false;d0.ToggleAutopilot()end end;if cy and lg and(cD<aY+250 and cD>aY-250)and dn*3.6>d9-250 and bv(dq)<25 and cC>=0.1 and(lg.position-dr):len()>2000+cD then d0.ToggleAutopilot()cy=false end;if aX then d5=true;local qf=aY;if dq<-30 then ch="Unable to achieve lift. Safety Landing."cq=0;d5=m;aX=false;aU=true elseif not n and dt or aY<is.spaceEngineMinAltitude then if dt then qf=antigrav.getBaseAltitude()end;if cD<qf-100 then da=0;cq=15;aO=false elseif dq>0 then aO=true;cq=0 elseif dq<-30 then aO=true;cq=15 elseif cD>=qf then if dt then if aR or bd then d0.ToggleVerticalTakeoff()else aO=true;aX=false end;ch="Takeoff complete. Singularity engaged"dQ("aggLk","AG")else aO=false;ch="VTO complete. Engaging Horizontal Flight"dQ("vtoc","VT")d0.ToggleVerticalTakeoff()end;cq=0 end else if cC>0.08 then da=0;aO=false;cq=20 elseif cC<0.08 and cC>0 then aO=false;if dg then da=0;cq=20 else cq=0;da=36;d0.cmdCruise(3500)end else d5=m;bm=true;de=false;qg=false;pq=false;po=nil;pp=nil;if pt==nil then pt=is end;dd=qf;ps=true;aX=false end end;if da~=nil then if qh==nil then qh=pid.new(2*0.01,0,2*0.1)end;local qi=bH(da-dw,-H*0.80,H*0.80)qh:inject(qi)local qj=bH(qh:get(),-1,1)c9=qj end end;if bm then local q1;local qk=false;local ql=ee(dd)if pt==nil then pt=is;if bd then pt=cn end end;if not ps then dd=bw(pt.radius+pt.surfaceMaxAltitude+O)if pt.hasAtmosphere then dd=bw(pt.radius+pt.noAtmosphericDensityAltitude+O)end;ps=true end;if dc.VectorToTarget and lg then q1=lg.position-dr end;local qm,qn=cY(pt):escapeAndOrbitalSpeed((dr-pt.center):len()-pt.radius)local qo=dx;if not pq then local qp=false;local qq=false;d0.cmdThrottle(0)pp=0;db="Aligning to orbital path - OrbitHeight: "..ql;if dc.VectorToTarget then pV(q1:normalize():project_on_plane(dp))qk=dj:dot(q1:project_on_plane(di):normalize())>0.95 else pV(dm)qk=q7<0.5;if dn<150 then qk=true end end;c9=0;po=0;if dw<=po+1 and dw>=po-1 then qp=true else qp=false end;if qo<=pp+1 and qo>=pp-1 then qq=true else qq=false end;if qp and qq and qk then po=nil;pp=nil;pq=true end else if dc.VectorToTarget then pV(q1:normalize():project_on_plane(dp))elseif dn>150 then pV(dm)end;c9=0;if dc.VectorToTarget and lg then local cj,eO=cW.computeDistanceAndTime(dn,d9/3.6,cG,0,0,bf)if de and q1:len()>15000+cj+cD then db="Orbiting to Target"if cD-100<=pt.noAtmosphericDensityAltitude or kZ>gm.timeToPeriapsis and gm.periapsis.altitude<pt.noAtmosphericDensityAltitude then de=false end elseif de or q1:len()<15000+cj+cD then ch="Orbit complete, proceeding with reentry"dQ("orCom","OB")b7=lg.position;c6=true;cy=true;dc.VectorToTarget,dc.AutopilotAlign=false,false;d0.ToggleIntoOrbit()d0.BeginReentry()return end end;if gm.periapsis~=nil and gm.apoapsis~=nil and gm.eccentricity<1 and cD>dd*0.9 and cD<dd*1.4 then if gm.apoapsis~=nil then if gm.periapsis.altitude>=dd*0.99 and gm.apoapsis.altitude>=dd*0.99 and gm.periapsis.altitude<gm.apoapsis.altitude and gm.periapsis.altitude*1.05>=gm.apoapsis.altitude or de then if de then aO=false;d0.cmdThrottle(0)po=0;if not dc.VectorToTarget then ch="Orbit complete"dQ("orCom","OB")d0.ToggleIntoOrbit()end else pu=pu+1;if pu>=2 then de=true end end else db="Adjusting Orbit - OrbitHeight: "..ql;pr=true;d0.cmdCruise(qn*3.6+1)local qr=dd-cD;if qs==nil then qs=pid.new(0.1,0,1*0.1)end;qs:inject(qr-dq*bH(utils.smoothstep(2000-qr,-2000,2000)^6*10,1,10))po=bH(qs:get(),-60,60)end end else local qt=2.75;local qu=bv(bQ(qm*qt))local qv=qu%50;if qv>0 then qu=qu-qv+50 end;aO=false;if cD<dd*0.8 then db="Escaping planet gravity - OrbitHeight: "..ql;po=utils.map(dq,200,0,-15,80)elseif cD>=dd*0.8 and cD<dd*1.15 then db="Approaching orbital corridor - OrbitHeight: "..ql;qu=qu*0.75;po=utils.map(dq,100,-100,-15,65)elseif cD>=dd*1.15 and cD<dd*1.5 then db="Approaching orbital corridor - OrbitHeight: "..ql;qu=qu*0.75;if dq<0 or pr then po=utils.map(cD,dd*1.5,dd*1.01,-30,0)else po=utils.map(cD,dd*0.99,dd*1.5,0,30)end elseif cD>dd*1.5 then db="Reentering orbital corridor - OrbitHeight: "..ql;po=-65;local qw=utils.map(dq,-150,-400,1,0.55)qu=qu*qw end;d0.cmdCruise(bw(qu))end end;if po~=nil then if qx==nil then qx=pid.new(1*0.01,0,5*0.1)end;local qy=po-dw;qx:inject(qy)local qz=bH(qx:get(),-0.5,0.5)c9=qz end end;if aR and cC==0 and not cw then local function qA(dP,gm)system.print(dP)aO=false;b0=false;aR=false;qB=false;b3="Aligning"d0.cmdThrottle(0)c4=false;ch=dP;dQ("apCom","AP")if gm or cw then if gm and p5~=nil and not cw then if not cD or cD==0 then return end;dd=cD;ps=true end;d0.ToggleIntoOrbit()end end;local qC,qD=b7,false;if lg and lg.planetname~="Space"then a_=true;if not qB then local qE=(lg.position-cn.center):normalize()local qF=qE:project_on_plane((cn.center-dr):normalize()):normalize()local qG=cn.center+qF*(cn.radius+p5)local qH=lg.position+(lg.position-cn.center):normalize()*(p5-cn:getAltitude(lg.position))if(dr-qG):len()<(dr-qH):len()then qC=qG else qC=qH;b2=0 end;b7=qC;d0.showWayPoint(cn,b7)qD=true;qB=true end;b4=0 elseif lg and lg.planetname=="Space"then if not qB then b4=0;qD=true;a_=true;qB=true;qC=lg.position+(dr-lg.position):normalize()*M;b7=qC end elseif lg==nil then b4=0;if not qB then local qE=(dr+dm*100000-cn.center):normalize()local qF=qE:project_on_plane((cn.center-dr):normalize()):normalize()if qF:len()<1 then qE=(dr+dj*100000-cn.center):normalize()qF=qE:project_on_plane((cn.center-dr):normalize()):normalize()end;qC=cn.center+qF*(cn.radius+p5)b7=qC;qB=true;qD=true;a_=true;d0.showWayPoint(cn,b7)end end;qI=(vec3(qC)-dr):len()local kX,fD,fE=cV:getPlanetarySystem(0):castIntersections(dr,dm:normalize(),function(fo)if fo.noAtmosphericDensityAltitude>0 then return fo.radius+fo.noAtmosphericDensityAltitude else return fo.radius+fo.surfaceMaxAltitude*1.5 end end)local kY=fD;if fE~=nil and fD~=nil then kY=math.min(fE,fD)end;if kY~=nil and kY<qI and kX.name==cn.name then qI=kY end;local qe=true;local qJ=(cn.center-(dr+vec3(dm):normalize()*qI)):len()-cn.radius;local kM=ee(qJ)bK(oY,'{"label": "Projected Altitude", "value": "'..kM..'"}')local cj,ck;if not aS then cj,ck=pe(dn)else cj,ck=pg(dn)end;if dn>50 and aZ then local q1=vec3(qC)-dr;local qK=bH(math.deg(pw(di,dm:normalize(),q1:normalize()))*dn/500,-90,90)local qL=bH(math.deg(pw(dk,dm:normalize(),q1:normalize()))*dn/500,-90,90)if bv(qK)<20 and bv(qL)<20 then qK=qK*2;qL=qL*2 end;if bv(qK)<2 and bv(qL)<2 then qK=qK*2;qL=qL*2 end;local q7=-math.deg(pw(di,dj,dm:normalize()))local q8=-math.deg(pw(dk,dj,dm:normalize()))if qM==nil then qM=pid.new(2*0.01,0,2*0.1)end;qM:inject(qL-q8)local qN=bH(qM:get(),-1,1)c9=c9+qN;if qO==nil then qO=pid.new(2*0.01,0,2*0.1)end;qO:inject(qK-q7)local qP=bH(qO:get(),-1,1)ca=ca+qP;qD=true;if bv(qK)>2 or bv(qL)>2 then if b3~="Adjusting Trajectory"then b3="Adjusting Trajectory"dQ("apAdj","AP")end else if b3~="Accelerating"then b3="Accelerating"dQ("apAcc","AP")end end elseif aZ and dn<=50 then pV((qC-dr):normalize())end;if qJ<p5*1.5 then if lg and lg.planetname=="Space"then b2=0 elseif lg==nil then eO,b2=cY(cn):escapeAndOrbitalSpeed(qJ)end end;if aR and not aZ and not b1 and not b0 then local kX,kY=d0.checkLOS((b7-dr):normalize())if cn.name~=is.name then if kX~=nil and cn.name~=kX.name and kY<qI then ch="Collision with "..kX.name.." in "..ee(kY).."\nClear LOS to continue."ct=5;pM=true else pM=false;ch=""end end end;if not pM then if not b1 and not b0 and not qD then qe=pV((qC-dr):normalize())elseif aS and(b0 or b1)then qe=pV(-vec3(dm):normalize())end end;if aZ then if not c4 then aO=false;d0.cmdThrottle(W)b_=bQ(W,2)c4=true end;local qQ=unit.getThrottle()if r then qQ=b_ end;local qR=99999;local n_=-vec3(core.getWorldAcceleration()):dot(dm:normalize())local qS=bH(dm:dot((qC-dr):normalize()),0,dn)if qS>0 or n_>0 then qR=cW.computeTravelTime(qS,n_,qI-cj)end;if dl:len()>=V or qQ==0 and c4 or X/4>qR then aZ=false;if b3~="Cruising"then dQ("apCru","AP")b3="Cruising"end;b1=true;d0.cmdThrottle(0)end;local qT=qI;if qT<=cj or E and dA<=cj+10000 and dz then if E and dA<=cj+10000 and dz then if dA<pi and dA>2000 then d0.ToggleAutopilot()ch="Autopilot cancelled to prevent crossing PvP Line"aO=true;pi=dA else pi=dA;return end end;aZ=false;if b3~="Braking"then dQ("apBrk","AP")b3="Braking"end;b0=true;d0.cmdThrottle(0)c4=false end elseif b0 then if b3~="Orbiting to Target"then aO=true;cd=1 end;if aS then d0.cmdThrottle(1,true)end;local eO,qn=cY(cn):escapeAndOrbitalSpeed((dr-is.center):len()-is.radius)local q1;if lg then q1=lg.position-dr end;if lg and lg.planetname=="Space"and dn<50 then if#pv>0 then aO=false;d0.ToggleAutopilot()d0.ToggleAutopilot()return end;qA("Autopilot complete, arrived at space location")aO=true;cd=1 elseif lg and lg.planetname~="Space"and dn<=qn and(gm.apoapsis==nil or gm.periapsis==nil or gm.apoapsis.altitude<=0 or gm.periapsis.altitude<=0)then qA("Autopilot complete, commencing reentry")b7=lg.position;cw=true;d0.showWayPoint(cn,b7)elseif(lg and lg.planetname~="Space"or lg==nil)and gm.periapsis~=nil and gm.periapsis.altitude>0 and gm.eccentricity<1 or b3=="Circularizing"then if b3~="Circularizing"then dQ("apCir","AP")b3="Circularizing"end;if dn<=qn then if lg then if dm:normalize():dot(q1:normalize())>0.4 then if b3~="Orbiting to Target"then dQ("apOrb","OB")b3="Orbiting to Target"end;if not qU then aO=false;d0.showWayPoint(cn,lg.position)qU=true end else qA("Autopilot complete, proceeding with reentry")b7=lg.position;cw=true;d0.showWayPoint(cn,lg.position)qU=false end else qA("Autopilot completed, setting orbit",true)cd=0 end end elseif b3=="Circularizing"then qA("Autopilot complete, fixing Orbit",true)end elseif b1 then local qT=qI;if qT<=cj or E and dA<=cj+10000 and dz then if E and dA<=cj+10000 and dz then if dA<pi and dA>2000 then d0.ToggleAutopilot()ch="Autopilot cancelled to prevent crossing PvP Line"aO=true;pi=dA else pi=dA;return end end;aZ=false;if b3~="Braking"then dQ("apBrk","AP")b3="Braking"end;b0=true end;local qQ=unit.getThrottle()if r then qQ=b_ end;if qQ>0 then aZ=true;if b3~="Accelerating"then b3="Accelerating"dQ("apAcc","AP")end;b1=false end else if qe then if not a_ and lg==nil or not a_ and lg and lg.planetname~="Space"then if not cw then b7=vec3(cn.center)+(p5+cn.radius)*dk;qV=di;qW=dk end;a_=true elseif qe and not pM then aZ=true;if b3~="Accelerating"then b3="Accelerating"dQ("apAcc","AP")end;if not c4 then d0.cmdThrottle(W,true)b_=bQ(W,2)c4=true;aO=false end end end end elseif aR and(lg~=nil and lg.planetname~="Space"and cC>0)then ch="Autopilot complete, starting reentry"dQ("apCom","AP")b7=lg.position;aO=false;b0=false;aR=false;qB=false;b3="Aligning"cd=0;d0.cmdThrottle(0)c4=false;aQ=true;cw=true;d0.showWayPoint(cn,lg.position)end;if cf then d5=true;local qL=0;local go=dr+vec3(unit.getMasterPlayerRelativePosition())local qX=go-dr;local qY=vec3(qX):project_on(dj):len()local qZ=vec3(qX):project_on(dk):len()local cu=bO(qY*qY+qZ*qZ)pV(qX:normalize())local m8=40;local q_=cu<m8;local r0=100;local r1=bH((cu-m8)/2,10,r0)c9=0;local qe=bv(ca)<0.1;if qe and dn<r1 and not q_ then aO=false;qL=-20 else aO=true;qL=0 end;local r2=0;if bv(qL-dw)>r2 then if r3==nil then r3=pid.new(2*0.01,0,2*0.1)end;r3:inject(qL-dw)local qN=r3:get()c9=qN end end;if aT or aU or aW or bd or bg~=nil then local r4=bh;if r4 then r4=r4*bH(dn/100,0.1,1)*cC else r4=bf end;if cC<0.01 then r4=bf end;local r5=dj:project_on_plane(dp):normalize():dot(dm)local r6=vec3(core.getWorldAirFrictionAcceleration())local r7=r6:len()*cG;if r5>100 then cj,ck=cW.computeDistanceAndTime(r5,100,cG,0,0,r4)local r8,r9=cW.computeDistanceAndTime(100,0,cG,0,0,r4*0.55)cj=cj+r8 else cj,ck=cW.computeDistanceAndTime(r5,0,cG,0,0,r4*0.55)end;local qr=aY-cD-dq;local ra=200+dn;if aW or cw then rb=2000+dn end;local rc=1;if aV then rc=bH(dn/100,0.1,1)end;local qL=(utils.smoothstep(qr,-ra,ra)-0.5)*2*J*rc;if not aW and not cw and not bd and dj:dot(dm:normalize())<0.99 then qL=(utils.smoothstep(qr,-ra*bH(20-19*cC*10,1,20),ra*bH(20-19*cC*10,1,20))-0.5)*2*J*bH(2-cC*10,1,2)*rc end;if not aT then qL=0 end;if bg~=nil then if dD and not bm then qL=bg else bg=nil end end;d5=true;local rd=c9;if aW then local re=bw(d9)local rf,rg=cW.computeDistanceAndTime(dn,re/3.6,cG,0,0,bf-is.gravity*9.8*cG)rf=rf==-1 and 5000 or rf;local rh=cD-(is.noAtmosphericDensityAltitude+rf)local ri=cD>is.noAtmosphericDensityAltitude+rf*1.35;if ri then qL=K;if dn<=re/3.6 and dn>re/3.6-10 and bv(dm:normalize():dot(dj))>0.9 and not dv then c3=false;d0.cmdThrottle(1)end elseif dv and not ri and not cB then d0.cmdCruise(re,true)end;if dv then if dn>re/3.6 and not ri then aO=true else aO=false end else aO=false end;if dq>0 then aO=true end;if not c6 then qL=-80;if cC>0.02 then ch="PARACHUTE DEPLOYED"aW=false;aU=true;qL=0;d5=m end elseif is.noAtmosphericDensityAltitude>0 and ri then d5=true elseif not ri then if not cB and(dv or bI:getTargetSpeed(axisCommandId.longitudinal)~=re)then d0.cmdCruise(re)end;if dn<re/3.6+1 then aO=false;c6=false;aW=false;d5=true end end end;if dn>c5 and not cx and not bd and not aU and s then pV(vec3(dm))end;if dB or(bd or cx)and b8>0 and cC>0.01 then local q1;if dB then if type(dB)=="table"then q1=dB elseif dB<3 and dB>0 then q1=-dp:cross(dm)*5000 elseif dB>=3 then q1=dp:cross(dm)*5000 elseif dB<0 then q1=dm*25000 end elseif lg~=nil then q1=lg.position-dr else q1=cn.center-dr end;local qK=math.deg(pw(dp:normalize(),dm,q1))*2;local mb=math.rad(bv(dx))if dn>az and cC>0.01 then local rj=1000+dn;local rk=(utils.smoothstep(qr-dq*10,-rj,rj)-0.5)*2*J;local rl=bH(90-rk,0,180)d8=bH(qK*2,-rl,rl)local rm=qK;qK=bH(bH(qK,-G*0.80,G*0.80)*math.cos(mb)+4*(dw-qL)*math.sin(math.rad(dx)),-G*0.80,G*0.80)local rn=1;if d8~=0 then rn=bv(mb/d8)end;rn=(90-bH(bv(d8-dx),0,90))/90;local ro=qL;if bv(dx)>90 then ro=-ro end;qL=rn*bH(bH(ro*math.cos(mb),-H*0.8,H*0.8)+bv(bH(bv(rm)*math.sin(mb),-H*0.80,H*0.80)),-H*0.80,H*0.80)else d8=0;qK=bH(qK,-G*0.80,G*0.80)end;local rp=q7-qK;if dB and bv(rp)<=0.0001 and(type(dB)=="table"or type(dB)~="table"and dB<0 and bv(dx)<1)then if dB==-2 then d0.ToggleAltitudeHold()end;dB=nil;dQ("180Off","BR")return end;if not d7 and dn>az and cC>0.01 then if rq==nil then rq=pid.new(2*0.01,0,2*0.1)end;rq:inject(rp)local qP=bH(rq:get(),-1,1)ca=ca+qP elseif cB and cz>-1 or dn<az then pV(q1)elseif d7 and cC>0.01 then if(q7<-G or q7>G)and cC>0.01 then pV(dm)end;if(q8<-H or q8>H)and cC>0.01 then qL=bH(dw-q8,dw-H*0.80,dw+H*0.80)end end;if lg~=nil and not cx then local qf=is:getAltitude(lg.position)local rh=q1:project_on_plane(dp):len()kT=true;if not cx and not aW and rh<=cj and(dm:project_on_plane(dp):normalize():dot(q1:project_on_plane(dp):normalize())>0.99 or l0=="Finalizing Approach")then l0="Finalizing Approach"if#pv>0 then d0.ToggleAutopilot()d0.ToggleAutopilot()return end;d0.cmdThrottle(0)if aT then d0.ToggleAltitudeHold()bd=true end;aO=true elseif not aV then aO=false end;if l0=="Finalizing Approach"and(r5<0.1 or rh<0.1 or rr~=nil and rr<rh)then if not dt then dQ("bklOn","BL")aU=true end;bd=false;l0="Proceeding to Waypoint"dE=false end;rr=rh end elseif bd and cC==0 and aY>is.noAtmosphericDensityAltitude and not(cx or aW)then if lg~=nil and cn.name==is.name then local q1=lg.position-dr;local qf=is:getAltitude(lg.position)local rh=bO(q1:len()^2-(cD-qf)^2)local r4=bh;if r4 then cj,ck=cW.computeDistanceAndTime(dn,0,cG,0,0,r4/2)kT=true;if rh<=cj+dn*q6/2 and dm:project_on_plane(dp):normalize():dot(q1:project_on_plane(dp):normalize())>0.99 then if is.hasAtmosphere then aO=false;aQ=false;c6=true;cw=false;cy=true;aR=false;d0.BeginReentry()end end;rr=rh end end end;if cC==0 and(aT and aY>is.noAtmosphericDensityAltitude)and not(cx or bm or aW)then if not de and not bm then dd=aY;ps=true;if bd then dc.VectorToTarget=true end;d0.ToggleIntoOrbit()bd=false;pq=true end end;if d7 and cC>0.01 and cz==-1 and dn>az and l0~="Finalizing Approach"then pV(dm)qL=bH(dw-q8,dw-H*0.80,dw+H*0.80)end;c9=rd;local pF=-1;if aU then qL=0;local rs=false;local rt=30;if cX~=nil and cX>0 then local ru=bH(cC,0.4,2)local r4=bh*bH(dn/100,0.1,1)*ru;local rv=cX*ru+r4-nO;local rw=r4/2-nO;local rx=dn-bO(bv(rw/2)*20/(0.5*cG))*utils.sign(rw)if rx<0 then rx=0 end;local ry;if dn>100 then local rz,eO=cW.computeDistanceAndTime(dn,100,cG,0,0,r4)local rA,eO=cW.computeDistanceAndTime(100,0,cG,0,0,bO(r4))ry=rz+rA else ry=cW.computeDistanceAndTime(dn,0,cG,0,0,bO(r4))end;if ry<20 then aO=false else local rB=0;if rx>100 then local rC,eO=cW.computeDistanceAndTime(rx,100,cG,0,0,rv)local rD,eO=cW.computeDistanceAndTime(100,0,cG,0,0,cX*ru+bO(r4)-nO)rB=rC+rD else rB,eO=cW.computeDistanceAndTime(rx,0,cG,0,0,cX*ru+bO(r4)-nO)end;rB=(rB+15+dn*q6)*1.1;local rE=lg~=nil and is:getAltitude(lg.position)>0 and lg.safe;if rE then local qf=is:getAltitude(lg.position)local rF=cD-qf-100;local q1=lg.position-dr;local rG=bO(q1:len()^2-(cD-qf)^2)if rG>100 then rE=false elseif rF<=rB or rB==-1 then aO=true;rs=true else aO=false;rs=true end end;if not rE and q then if rB>=rt then aO=true else aO=false end;rs=true end end end;if not dv then d0.cmdThrottle(0)end;bI:setTargetGroundAltitude(500)bI:activateGroundEngineAltitudeStabilization(500)bo=true;pF=cz;if pF>-1 then d5=m;if dn<1 or dm:normalize():dot(dp)<0 then aU=false;aT=false;b9=true;if c7 then a.control.extendLandingGears()dQ("grOut","LG",1)end;bI:setTargetGroundAltitude(T)cq=0;aO=true else aO=true end elseif kT and dm:normalize():dot(-je)<0.999 then aO=true elseif dq<-I and not rs then aO=true elseif not rs then aO=false end end;if aV or cx then local kX,fE,fD;if b7~=nil then kX,fE,fD=cV:getPlanetarySystem(0):castIntersections(dr,(b7-dr):normalize(),function(fo)return fo.radius+fo.noAtmosphericDensityAltitude end)end;if dt then if cD>=aY-50 then aV=false;if not aR and not bd then aO=true;d0.cmdThrottle(0)end else aY=antigrav.getBaseAltitude()end elseif bv(qL)<15 and cD/aY>0.75 then aV=false;if not cx then if dv and not r then a.control.cancelCurrentControlMasterMode()end elseif cx and dn<c5 then aR=true;cx=false;aT=false;aV=false;d0.cmdThrottle(0)elseif cx then d0.cmdThrottle(0)aO=true end elseif cx and cC==0 and cn~=nil and(kX==nil or kX.name==cn.name)then aR=true;cx=false;aT=false;aV=false;if not dv then d0.cmdThrottle(0)end;aZ=true end end;local rH=cz>-1;local rI=dw;if(bd or cx or dB)and not rH and dn>az and cC>0.01 then local mb=math.rad(bv(dx))rI=dw*bv(math.cos(mb))+q8*math.sin(mb)end;local rJ=bH(qL-rI,-H*0.80,H*0.80)if cC<0.01 and bd then rJ=bH(qL-rI,-85,J)elseif cC<0.01 then rJ=bH(qL-rI,-J,J)end;if bv(dx)<5 or bd or dB or aU or rH or aT then if r3==nil then r3=pid.new(5*0.01,0,5*0.1)end;r3:inject(rJ)local qN=r3:get()c9=c9+qN end end;if antigrav~=nil and(antigrav and not n and cD<200000)then if bi==nil or bi<1000 then bi=1000 end;if rK~=bi then rK=bi;antigrav.setBaseAltitude(rK)end end end;function pd.ToggleIntoOrbit()de=false;po=nil;pp=nil;pu=0;if cC==0 then if bm then dQ("orOff","AP")bm=false;pq=false;pt=nil;d5=m;if aT then aT=false;aV=false end;dc.VectorToTarget=false;dc.AutopilotAlign=false;ps=false elseif dD then dQ("orOn","AP")bm=true;d5=true;if pt==nil then pt=is end;if aT then aT=false;aV=false end else ch="Unable to engage auto-orbit, not near a planet"end else bm=false;pq=false;pt=nil;d5=m;if aT then aT=false end;dc.VectorToTarget=false;dc.AutopilotAlign=false;ps=false end end;function pd.ToggleVerticalTakeoff()aT=false;if aX then kT=true;aW=false;aV=false;aU=true;d5=true;cq=0;if cB and cz==-1 then aU=false;aT=true;cq=0;a:setEngineForceCommand('thrust analog vertical fueled ',vec3(),1)d0.cmdCruise(bw(d9))end else de=false;b9=false;a.control.retractLandingGears()bI:setTargetGroundAltitude(S)aO=true end;aX=not aX end;function pd.checkLOS(pW)local kX,fD,fE=cV:getPlanetarySystem(0):castIntersections(dr,pW,function(fo)if fo.noAtmosphericDensityAltitude>0 then return fo.radius+fo.noAtmosphericDensityAltitude else return fo.radius+fo.surfaceMaxAltitude*1.5 end end)local kY=fD;if fE~=nil and fD~=nil then kY=math.min(fE,fD)end;if kY~=nil then return kX,kY else return nil,nil end end;function pd.ToggleAutopilot()local function rL(bk)dE=false;bd=not bd;if bd then aS=false;if not aT and not bk then d0.ToggleAltitudeHold()end end;l0="Proceeding to Waypoint"end;local rM=false;if bU-pn<1.5 and cC>0 then if not dh then ch="No space engines detected, Orbital Hop not supported"return end;if is.hasAtmosphere then if cC>0 then aY=is.noAtmosphericDensityAltitude+O;dQ("orH","OH")end;pn=-1;if aR or bd or bm then return end end else pn=bU end;qB=false;if(b8>0 or#pv>0)and not aR and not bd and not cx and not bm then if 0.5*a:maxForceForward()/core.g()<cG then ch="WARNING: Heavy Loads may affect autopilot performance."ct=5 end;if#pv>0 and not cy then b8=pv[1]c_.UpdateAutopilotTarget()table.remove(pv,1)ch="Route Autopilot in Progress"local q1=lg.position-dr;local rh=q1:project_on_plane(dp):len()if rh>50000 and lg.planetname==is.name then rM=true end end;c_.UpdateAutopilotTarget()d0.showWayPoint(cn,b7)if lg~=nil then bg=nil;bk=lg.planetname=="Space"if bk then dQ("apSpc","AP")if cC~=0 then cx=true;d0.ToggleAltitudeHold()else aR=true end elseif is.name==lg.planetname then kT=true;if cC>0 then if not bd then dQ("vtt","AP")rL(bk)if rM then aY=is.noAtmosphericDensityAltitude+O end end else dQ("apOn","AP")if not(cn.name==is.name and cD<p5*1.5)then de=false;aR=true elseif not cB then if bm then d0.ToggleIntoOrbit()end;dd=is.noAtmosphericDensityAltitude+O;ps=true;dc.AutopilotAlign=true;dc.VectorToTarget=true;pq=false;if not bm then d0.ToggleIntoOrbit()end end end else dQ("apP","AP")aP=false;aQ=false;if cC~=0 then cx=true;d0.ToggleAltitudeHold()else aR=true end end elseif cC==0 then if lg==nil and(cn.name==is.name and dD)and not bm then qU=false;de=false;pq=false;d0.ToggleIntoOrbit()else dQ("apP","AP")aR=true;aP=false;aQ=false;a_=false;cf=false;aT=false;aU=false;aW=false;aV=false;c4=false;bg=nil;qU=false end else dQ("apP","AP")cx=true;d0.ToggleAltitudeHold()end else dQ("apOff","AP")d0.ResetAutopilots(1)end end;function pd.routeWP(rN,rO,rP)if rP then if rP==1 then pv={}pv=dT(pv,br)if#pv>0 then ch="Route Loaded"else ch="No Saved Route found on Databank"end;return pv else br={}br=dT(br,pv)ch="Route Saved"em()return end end;if rN then return pv end;if rO then pv={}ch="Current Route Cleared"else pv[#pv+1]=b8;ch="Added "..lg.name.." to route. "end;return pv end;function pd.cmdThrottle(eK,rQ)if bI:getAxisCommandType(0)~=axisCommandType.byThrottle and not rQ then a.control.cancelCurrentControlMasterMode()end;bI:setThrottleCommand(axisCommandId.longitudinal,eK)b_=bH(bQ(eK*100,0)/100,-1,1)du=nil end;function pd.cmdCruise(eK,rQ)if bI:getAxisCommandType(0)~=axisCommandType.byTargetSpeed and not rQ then a.control.cancelCurrentControlMasterMode()end;bI:setTargetSpeedCommand(axisCommandId.longitudinal,eK)du=eK end;function pd.ToggleLockPitch()if bg==nil then dQ("lkPOn","LP")if not cg then bg=dw else bg=L end;aV=false;aT=false;aU=false else dQ("lkPOff","LP")bg=nil end end;function pd.ToggleAltitudeHold()if bU-pm<1.5 then if is.hasAtmosphere then if cC>0 then aY=is.spaceEngineMinAltitude-0.01*is.noAtmosphericDensityAltitude;dQ("11","EP")else if dD then aY=is.noAtmosphericDensityAltitude+O;dd=aY;ps=true;if not bm then d0.ToggleIntoOrbit()end;pq=true end end;pm=-1;if aT or bm or aX then return end end else pm=bU end;if dD and cC==0 then dd=cD;ps=true;pq=true;d0.ToggleIntoOrbit()if bm then pm=bU else pm=0 end;return end;aT=not aT;aU=false;aW=false;if aT then aR=false;aQ=false;aP=false;cf=false;d5=true;bg=nil;de=false;if cz~=-1 and dn<20 then dQ("lfs","LS")aV=true;if pm>-1 then aY=cD+R end;b9=false;a.control.retractLandingGears()aO=true;bI:setTargetGroundAltitude(S)if aN and ds then d0.ToggleVerticalTakeoff()end else dQ("altOn","AH")aV=false;if pm>-1 then if dD then aY=cD end end;if aX then d0.ToggleVerticalTakeoff()end end;if cx then aY=100000 end else dQ("altOff","AH")if bm then d0.ToggleIntoOrbit()end;if aX then d0.ToggleVerticalTakeoff()end;d5=m;aV=false;bd=false;pm=0 end end;function pd.ResetAutopilots(pd)if pd then cx=false;aR=false;a_=false;c4=false;aY=cD;qB=false end;bd=false;aV=false;aW=false;aQ=false;aU=false;rR=false;dB=nil;if not dt then aT=false;bg=nil end;if aX then d0.ToggleVerticalTakeoff()end;if bm then d0.ToggleIntoOrbit()end;d5=m;cw=false;cy=false;cq=0 end;function pd.BrakeToggle()aO=not aO;if aU then aU=false;d5=m end;if aO then dQ("bkOn","B",1)d0.ResetAutopilots()else dQ("bkOff","B",1)end end;function pd.BeginReentry()if aW then ch="Re-Entry cancelled"dQ("reOff","RE")aW=false;d5=m;aT=false elseif not is.hasAtmosphere then ch="Re-Entry requirements not met: you must start out of atmosphere\n and within a planets gravity well over a planet with atmosphere"ct=5 elseif not c6 then aW=true;if bI:getAxisCommandType(0)~=rS.cruise then a.control.cancelCurrentControlMasterMode()end;d5=true;aO=false;ch="Beginning Parachute Re-Entry - Strap In.  Target speed: "..d9;dQ("par","RE")else aW=true;aT=true;d5=true;aO=false;aY=is.surfaceMaxAltitude+U;if aY>is.spaceEngineMinAltitude then aY=is.spaceEngineMinAltitude-0.01*is.noAtmosphericDensityAltitude end;local e7=ee(aY)ch="Beginning Re-entry.  Target speed: "..d9 .." Target Altitude: "..e7;dQ("glide","RE")d0.cmdCruise(bw(d9))end;aV=false end;function pd.ToggleAntigrav()if antigrav and not n then if dt then dQ("aggOff","AG")antigrav.deactivate()antigrav.hide()else if bi==nil then bi=cD end;if bi<1000 then bi=1000 end;dQ("aggOn","AG")antigrav.activate()antigrav.show()end end end;cz=pA()return pd end;local function rT()local rU={}local rV=true;local rW=5;local rX=5;local rY=rW;local rZ=rX;function rU.startControl(r_)local function s0(pN)local bT=1;local function s1(s2,pN)local s3={is.surfaceMaxAltitude+100,is.spaceEngineMinAltitude-0.01*is.noAtmosphericDensityAltitude,is.noAtmosphericDensityAltitude+O,is.radius*(N-1)+is.noAtmosphericDensityAltitude}local s4=s2;for eO,dX in ipairs(s3)do if pN and s4>dX then s2=dX elseif s2<dX and not pN then s2=dX;break end end;return s2 end;if pN then bT=-1 end;if not n and dt then if cg and pN then bi=1000 elseif bi~=nil then bi=bi+bT*rX;if bi<1000 then bi=1000 end;if aT and bi<aY+10 and bi>aY-10 then aY=bi end else bi=rK+bT*100 end elseif aT or aX or bm then if bm then if cg then dd=s1(dd,pN)else dd=dd+bT*rW end;if dd<is.noAtmosphericDensityAltitude then dd=is.noAtmosphericDensityAltitude end else if cg and cB then aY=s1(aY,pN)else aY=aY+bT*rW end end else bI:updateTargetGroundAltitudeFromActionStart(bT*1.0)end end;local function s5(s6)if not cB then ch="Flight Assist in Atmo only"return end;local ev=type(s6)if dB==nil then if ev=="table"then if aR or bd then d0.ToggleAutopilot()end;dQ("180On","BR")elseif s6==1 then dQ("bnkLft","BR")else dQ("bnkRht","BR")end;if not aT and not aR and not bd then d0.ToggleAltitudeHold()if ev~="table"then s6=s6+1 end end;dB=s6 else dQ("180Off","BR")dB=nil end end;if r_=="gear"then b9=not b9;if b9 then bd=false;bg=nil;d0.cmdThrottle(0)if vBooster or hover then if cB and cz==-1 then dQ("bklOn","BL")kT=true;aW=false;aV=false;aX=false;aT=false;aU=true;d5=true;b9=false else if c7 then dQ("grOut","LG",1)a.control.extendLandingGears()end;bI:setTargetGroundAltitude(T)if cB then aO=true end end end;if c7 and not aU and not(vBooster or hover)then dQ("grOut","LG",1)a.control.extendLandingGears()end else if c7 then dQ("grIn","LG",1)a.control.retractLandingGears()end;bI:setTargetGroundAltitude(S)end elseif r_=="light"then if a.control.isAnyHeadlightSwitchedOn()==1 then a.control.switchOffHeadlights()else a.control.switchOnHeadlights()end elseif r_=="forward"then c8=c8-1 elseif r_=="backward"then if oy then s5(-dm*5000)else c8=c8+1 end elseif r_=="left"then if oy then s5(1)else cb=cb-1 end elseif r_=="right"then if oy then s5(3)else cb=cb+1 end elseif r_=="yawright"then cc=cc-1 elseif r_=="yawleft"then cc=cc+1 elseif r_=="straferight"then bI:updateCommandFromActionStart(axisCommandId.lateral,1.0)bl=1 elseif r_=="strafeleft"then bI:updateCommandFromActionStart(axisCommandId.lateral,-1.0)bl=-1 elseif r_=="up"then cq=cq+1;bI:deactivateGroundEngineAltitudeStabilization()bI:updateCommandFromActionStart(axisCommandId.vertical,1.0)elseif r_=="down"then cq=cq-1;bI:deactivateGroundEngineAltitudeStabilization()bI:updateCommandFromActionStart(axisCommandId.vertical,-1.0)elseif r_=="groundaltitudeup"then s0()elseif r_=="groundaltitudedown"then s0(true)elseif r_=="option1"then s7=false;if oy and cg then local s8=""for bt=1,#dJ do s8=s8 .."| Name: "..system.getPlayerName(dJ[bt]).." Mass: "..bQ(core.getBoardedPlayerMass(dJ[bt])/1000,1).."t "end;system.print("Onboard: "..s8)return end;c_.adjustAutopilotTargetIndex()elseif r_=="option2"then s7=false;if oy and cg then for bt=1,#dJ do core.forceDeboard(dJ[bt])end;ch="Deboarded All Passengers"return end;c_.adjustAutopilotTargetIndex(1)elseif r_=="option3"then local function s9()rV=not rV;if not rV then dQ("wid","DH")unit.show()core.show()if atmofueltank_size>0 then _autoconf.displayCategoryPanel(sa,atmofueltank_size,"Atmo Fuel","fuel_container")sb=_autoconf.panels[_autoconf.panels_size]end;if spacefueltank_size>0 then _autoconf.displayCategoryPanel(sc,spacefueltank_size,"Space Fuel","fuel_container")sd=_autoconf.panels[_autoconf.panels_size]end;if rocketfueltank_size>0 then _autoconf.displayCategoryPanel(se,rocketfueltank_size,"Rocket Fuel","fuel_container")sf=_autoconf.panels[_autoconf.panels_size]end;sg=system.createWidgetPanel("Docking")sh=system.createWidget(sg,"parenting")system.addDataToWidget(unit.getDataId(),sh)si=system.createWidgetPanel("Core combat stress")sj=system.createWidget(si,"core_stress")system.addDataToWidget(core.getDataId(),sj)if lp~=nil then lp.show()end else dQ("hud","DH")unit.hide()core.hide()if sb~=nil then bJ(sb)sb=nil end;if sg~=nil then bJ(sg)sg=nil end;if si~=nil then bJ(si)si=nil end;if sd~=nil then bJ(sd)sd=nil end;if sf~=nil then bJ(sf)sf=nil end;if lp~=nil then lp.hide()end end end;s7=false;if oy and cg then local s8=""for bt=1,#dK do s8=s8 .."| ID: "..dK[bt].." Mass: "..bQ(core.getDockedConstructMass(dK[bt])/1000,1).."t "end;system.print("Docked Ships: "..s8)return end;if v then if u then u=false else u=true end end;s9()elseif r_=="option4"then s7=false;if oy and cg then for bt=1,#dK do core.forceUndock(dK[bt])end;ch="Undocked all ships"return end;dB=nil;d0.ToggleAutopilot()elseif r_=="option5"then s7=false;d0.ToggleLockPitch()elseif r_=="option6"then s7=false;if oy and cg then if lp then local sk=lp.getVentingCooldown()if sk>0 then ch="Cannot vent again for "..sk.." seconds"return end;if lp.getShieldHitpoints()<lp.getMaxShieldHitpoints()then lp.startVenting()ch="Shields Venting Enabled - NO SHIELDS WHILE VENTING"else ch="Shields already at max hitpoints"end;return else ch="No shield found"return end end;d0.ToggleAltitudeHold()elseif r_=="option7"then s7=false;if oy and cg then if lp then lp.toggle()return else ch="No shield found"return end end;C=not C;if C then ch="Collision System Enabled"else ch="Collision System Secured"end elseif r_=="option8"then s7=false;if oy and cg then if b8>0 and lg~=nil then d0.routeWP()else ch="Select a saved wp on IPH to add to or remove from route"end;return end;bo=not bo;if not bo then ch="DeCoupled Mode - Ground Stabilization off"bI:deactivateGroundEngineAltitudeStabilization()dQ("gsOff","GS")else ch="Coupled Mode - Ground Stabilization on"bI:activateGroundEngineAltitudeStabilization(sl)a:setEngineForceCommand('hover',vec3(),1)dQ("gsOn","GS")end elseif r_=="option9"then s7=false;if oy and cg then bI:resetCommand(axisCommandId.longitudinal)bI:resetCommand(axisCommandId.lateral)bI:resetCommand(axisCommandId.vertical)d0.cmdThrottle(0)unit.setTimer("tagTick",0.1)elseif gyro~=nil then gyro.toggle()cI=gyro.getState()==1;if cI then dQ("gyOn","GA")else dQ("gyOff","GA")end else ch="No gyro found"end elseif r_=="lshift"then dG=false;if oy then cg=true end;if bN()==1 then cg=true;b5=bN()bM(1)elseif bD()==1 and w then cg=true;d4=false;d3=false end elseif r_=="brake"then if aM or oy then d0.BrakeToggle()elseif not aO then d0.BrakeToggle()else aO=true end elseif r_=="lalt"then s7=true;oy=true;if bD()==0 and not f and d=="keyboard"then bM(1)end elseif r_=="booster"then if k then a:toggleBoosters()elseif not ci then if not sm then a:toggleBoosters()sm=true end;ci=true else if sm then a:toggleBoosters()sm=false end;ci=false end elseif r_=="stopengines"then local function sn()if bU-bV<1.5 then dQ("clear","CA")aZ=false;b0=false;b1=false;aR=false;a_=false;b3="Aligning"aP=false;aQ=false;dB=nil;aT=false;aW=false;aU=false;aO=false;aV=false;aX=false;cf=false;c4=false;cw=false;cx=false;c6=false;d5=m;bd=false;aS=false;cI=false;bg=nil;bm=false end end;sn()bV=bU;if bI:getAxisCommandType(0)~=axisCommandType.byTargetSpeed then if b_~=0 then bI:resetCommand(axisCommandId.longitudinal)d0.cmdThrottle(0)else d0.cmdThrottle(100)end else if bI:getTargetSpeed(axisCommandId.longitudinal)~=0 then bI:resetCommand(axisCommandId.longitudinal)else if cB then d0.cmdCruise(P)else d0.cmdCruise(V*3.6)end end end elseif r_=="speedup"then d0.changeSpd()elseif r_=="speeddown"then d0.changeSpd(true)elseif r_=="antigravity"and not n then if antigrav~=nil then d0.ToggleAntigrav()else ch="No antigrav found"end end end;function rU.stopControl(r_)local function so()if not n and dt then rZ=rX end;if aT or aX or bm then rY=rW end end;if r_=="forward"then c8=0 elseif r_=="backward"then c8=0 elseif r_=="left"then if dB then if dB==2 then dB=-2 else dB=-1 end end;cb=0 elseif r_=="right"then if dB then if dB==4 then dB=-2 else dB=-1 end end;cb=0 elseif r_=="yawright"then cc=0 elseif r_=="yawleft"then cc=0 elseif r_=="straferight"then bI:updateCommandFromActionStop(axisCommandId.lateral,-1.0)bl=0 elseif r_=="strafeleft"then bI:updateCommandFromActionStop(axisCommandId.lateral,1.0)bl=0 elseif r_=="up"then cq=0;bI:updateCommandFromActionStop(axisCommandId.vertical,-1.0)if bo then bI:activateGroundEngineAltitudeStabilization(sl)a:setEngineForceCommand('hover',vec3(),1)end elseif r_=="down"then cq=0;bI:updateCommandFromActionStop(axisCommandId.vertical,1.0)if bo then bI:activateGroundEngineAltitudeStabilization(sl)a:setEngineForceCommand('hover',vec3(),1)end elseif r_=="groundaltitudeup"then so()s7=false elseif r_=="groundaltitudedown"then so()s7=false elseif r_=="lshift"then if bN()==1 then cr=0;cs=0;bM(b5)elseif bD()==1 and w then d4=false;d3=false end;cg=false elseif r_=="brake"then if not aM and not oy then if aO then d0.BrakeToggle()else aO=false end end elseif r_=="lalt"then if bD()==0 and f then if s7 then if bN()==1 then bM(0)else bM(1)end else s7=true end elseif bD()==0 and not f and d=="keyboard"then bM(0)end;oy=false end end;function rU.loopControl(r_)local function sp(pN)local bT=1;if pN then bT=-1 end;if not n and dt then if bi~=nil then bi=bi+bT*rZ;if bi<1000 then bi=1000 end;if aT and bi<aY+10 and bi>aY-10 then aY=bi end;rZ=bH(rZ*1.05,rX,50)aO=false else bi=rK+bT*100;aO=false end elseif aT or aX or bm then if bm then dd=dd+bT*rY;if dd<is.noAtmosphericDensityAltitude then dd=is.noAtmosphericDensityAltitude end else aY=aY+bT*rY end;rY=bH(rY*1.05,rW,50)else bI:updateTargetGroundAltitudeFromActionLoop(bT*1.0)end end;local function sq(pN)local bT=1;if pN then bT=-1 end;if not cg then if r and not oy then b_=bH(b_+bT*at/100,-1,1)else bI:updateCommandFromActionLoop(axisCommandId.longitudinal,bT*at)end end end;if r_=="groundaltitudeup"then if not cg then sp()end elseif r_=="groundaltitudedown"then if not cg then sp(true)end elseif r_=="speedup"then sq()elseif r_=="speeddown"then sq(true)end end;function rU.inputTextControl(e7)local function sr(ss,go,jX)local function st(go)local bR=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local eD='::pos{'..bR..','..bR..','..bR..','..bR..','..bR..'}'local eS,eT,e_,f0,f1=bF(go,eD)if eS=="0"and eT=="0"then return vec3(bP(e_),bP(f0),bP(f1))end;f0=math.rad(f0)e_=math.rad(e_)local is=b[bP(eS)][bP(eT)]local fO=math.cos(e_)local su=vec3(fO*math.cos(f0),fO*math.sin(f0),math.sin(e_))return is.center+(is.radius+f1)*su end;local ne=st(go)return c_.AddNewLocation(ss,ne,jX)end;local bt;local sv,sw=nil,nil;local sx="Command List:\n/commands \n/setname <newname> - Updates current selected saved position name\n/G VariableName newValue - Updates global variable to new value\n".."/G dump - shows all variables updatable by /G\n/agg <targetheight> - Manually set agg target height\n".."/addlocation SafeZoneCenter ::pos{0,0,13771471,7435803,-128971} - adds a saved location by waypoint, not as accurate as making one at location\n".."/::pos{0,0,13771471,7435803,-128971} - adds a temporary waypoint that is not saved to databank with name 0Temp\n".."/copydatabank - copies dbHud databank to a blank databank\n".."/iphWP - displays current IPH target's ::pos waypoint in lua chat\n".."/resist 0.15, 0.15, 0.15, 0.15 - Sets shield resistance distribution of the floating 60% extra available, usable once per minute\n".."/deletewp - Deletes current selected custom wp"bt=string.find(e7," ")sv=e7;if bt~=nil then sv=string.sub(e7,0,bt-1)sw=string.sub(e7,bt+1)end;if sv=="/help"or sv=="/commands"then for o4 in string.gmatch(sx,"([^\n]+)")do system.print(o4)end;return elseif sv=="/setname"then if sw==nil or sw==""then ch="Usage: ah-setname Newname"return end;if b8>0 and lg~=nil then c_.UpdatePosition(sw)else ch="Select a saved target to rename first"end elseif lp and sv=="/resist"then if not lp then ch="No shield found"return elseif sw==nil or lp.getResistancesCooldown()>0 then ch="Usable once per min.  Usage: /resist 0.15, 0.15, 0.15, 0.15"return end;local bR=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local eD=bR..', '..bR..', '..bR..', '..bR;local sy,sz,sA,sB=bF(sw,eD)if sB==nil or sy+sz+sA+sB>0.6 then ch="Improperly formatted or total exceeds 0.6"return end;if lp.setResistances(sy,sz,sA,sB)==1 then ch="Shield Resistances set"else ch="Resistance setting failed."end elseif sv=="/addlocation"or string.find(e7,"::pos")~=nil then local jX=false;local ss="0-Temp"if sw==nil or sw==""then sw=sv;jX=true end;bt=string.find(sw,"::")if not jX then ss=string.sub(sw,1,bt-2)end;local go=string.sub(sw,bt)sr(ss,go,jX)elseif sv=="/agg"then if sw==nil or sw==""then ch="Usage: /agg targetheight"return end;sw=bP(sw)if sw<1000 then sw=1000 end;bi=sw;ch="AGG Target Height set to "..sw elseif sv=="/G"then if sw==nil or sw==""then ch="Usage: /G VariableName variablevalue\n/G dump - shows all variables"return end;if sw=="dump"then for dW,dX in pairs(dY())do if type(_G[dX])=="boolean"then if _G[dX]==true then system.print(dX.." true")else system.print(dX.." false")end elseif _G[dX]==nil then system.print(dX.." nil")else system.print(dX.." ".._G[dX])end end;return end;bt=string.find(sw," ")local sC=string.sub(sw,0,bt-1)local sD=string.sub(sw,bt+1)for dW,dX in pairs(dY())do if dX==sC then ch="Variable "..sC.." changed to "..sD;local sE=type(_G[dX])if sE=="number"then sD=bP(sD)if dX=="AtmoSpeedLimit"then d9=sD end elseif sE=="boolean"then if string.lower(sD)=="true"then sD=true else sD=false end end;_G[dX]=sD;return end end;ch="No such global variable: "..sC elseif sv=="/deletewp"then if b8>0 and lg~=nil then c_.ClearCurrentPosition()else ch="Select a custom wp to delete first in IPH"end elseif sv=="/copydatabank"then if dbHud_2 then em(true)else ch="Spare Databank required to copy databank"end elseif sv=="/iphWP"then if b8>0 then system.print(d0.showWayPoint(cn,b7,true))ch="::pos waypoint shown in lua chat"else ch="No target selected in IPH"end end end;return rU end;function script.onStart()local sF=false;local function sG()local function sH(sI)local sJ=dbHud_1.hasKey;for dW,dX in pairs(sI)do if sJ(dW)then local eF=by(dbHud_1.getStringValue(dW))if eF~=nil then dX.set(eF)sF=true end end end end;if dbHud_1 then if not c then sH(dY())coroutine.yield()sH(bs)else sH(bs)ch="Updated user preferences used.  Will be saved when you exit seat.\nToggle off useTheseSettings to use saved values"ct=5;sF=false end;coroutine.yield()if sF then ch="Loaded Saved Variables"cN=a2;cO=a3;aM=g;d=string.lower(d)d5=m;d9=P;cJ=[[rgb(]]..bw(bX+0.5)..","..bw(bZ+0.5)..","..bw(bY+0.5)..[[)]]cK=[[rgb(]]..bw(bX*0.9+0.5)..","..bw(bZ*0.9+0.5)..","..bw(bY*0.9+0.5)..[[)]]elseif not c then ch="No Saved Variables Found - Exit HUD to save settings"end;if bq<1.500 then if O<2000 then ch="Updating LowOrbitHeight to new minimum default of 2000."O=2000 end end;bq=VERSION_NUMBER else ch="No databank found. Attach one to control unit and rerun \nthe autoconfigure to save preferences and locations"end;if bj+180<bU then bh=0 end;bj=bU;d=string.lower(d)if string.find("keyboard virtual joystick mouse",d)==nil then ch="Invalid User Control Scheme selected.\nChange userControlScheme in Lua Parameters to keyboard, mouse, or virtual joystick\nOr use shift and button in screen"ct=7 end;if antigrav and not n then if bi==nil then bi=cD end;antigrav.setBaseAltitude(bi)end;l0="Proceeding to Waypoint"end;local function sK()local function sL(sM,sN)if sM>sN then sN=sM end;local sO,sP=0,0;if a0>0 then sO=a0*0.05 end;if a1>0 then sP=a1*0.05 end;sN=sN*(1-(sO+sP))return sN end;local sQ=core.getElementNameById;local sR=aj~=0 and ak~=0;for dW in pairs(cE)do local type=core.getElementTypeById(cE[dW])if bF(type,'^.*Atmospheric Engine$')then if bF(tostring(core.getElementTagsById(cE[dW])),'^.*vertical.*$')and core.getElementForwardById(cE[dW])[3]>0 then ds=true end end;if bF(type,'^.*Space Engine$')then dh=true;if bF(tostring(core.getElementTagsById(cE[dW])),'^.*vertical.*$')then local sS=core.getElementForwardById(cE[dW])if sS[3]<0 then df=true else dg=true end end end;if type=="Landing Gear"then c7=true end;if type=="Dynamic Core Unit"then local sT=bA(cE[dW])if sT>10000 then bW=110 elseif sT>1000 then bW=55 elseif sT>150 then bW=27 end end;cS=cS+bA(cE[dW])if sR and(type=="Atmospheric Fuel Tank"or type=="Space Fuel Tank"or type=="Rocket Fuel Tank")then local sT=bA(cE[dW])local nW=bC(cE[dW])local sM=0;local i_=bG()if type=="Atmospheric Fuel Tank"then local sN=400;local sU=35.03;if sT>10000 then sN=51200;sU=5480 elseif sT>1300 then sN=6400;sU=988.67 elseif sT>150 then sN=1600;sU=182.67 end;sM=nW-sU;if Y>0 then sN=sN+sN*Y*0.2 end;sN=sL(sM,sN)cP[#cP+1]={cE[dW],sQ(cE[dW]),sN,sU,sM,i_}end;if type=="Rocket Fuel Tank"then local sN=320;local sU=173.42;if sT>65000 then sN=40000;sU=25740 elseif sT>6000 then sN=5120;sU=4720 elseif sT>700 then sN=640;sU=886.72 end;sM=nW-sU;if _>0 then sN=sN+sN*_*0.1 end;sN=sL(sM,sN)cR[#cR+1]={cE[dW],sQ(cE[dW]),sN,sU,sM,i_}end;if type=="Space Fuel Tank"then local sN=600;local sU=35.03;if sT>10000 then sN=76800;sU=5480 elseif sT>1300 then sN=9600;sU=988.67 elseif sT>150 then sN=2400;sU=182.67 end;sM=nW-sU;if Z>0 then sN=sN+sN*Z*0.2 end;sN=sL(sM,sN)cQ[#cQ+1]={cE[dW],sQ(cE[dW]),sN,sU,sM,i_}end end end;if not ds then aX,aN=false,false end end;local function sV()if gyro~=nil then cI=gyro.getState()==1 end;if not bo then bI:deactivateGroundEngineAltitudeStabilization()end;if d~="keyboard"then bM(1)else bM(0)end;if door and(cB or not cB and cD<10000)then for eO,dX in pairs(door)do dX.toggle()end end;if switch then for eO,dX in pairs(switch)do dX.toggle()end end;if forcefield and(cB or not cB==0 and cD<10000)then for eO,dX in pairs(forcefield)do dX.toggle()end end;if antigrav then dt=antigrav.getState()==1;if dt and not n then antigrav.show()end end;if bD()==1 and h then system.freeze(1)else system.freeze(0)end;if c7 then b9=a.control.isAnyLandingGearExtended()==1;if b9 then a.control.extendLandingGears()else a.control.retractLandingGears()end end;if cz~=-1 or not cB and dl:len()<50 then aO=true;b9=true;if c7 then a.control.extendLandingGears()end else aO=false end;bI:setTargetGroundAltitude(d6)if cB and cz~=-1 then cX=core.getMaxKinematicsParametersAlongAxis("ground",core.getConstructOrientationUp())[1]end;sW=cB end;local function sX()local sY={}local function sZ()return{id=0,name={"Space","Space","Space"},type={},biosphere={},classification={},habitability={},description={},iconPath="",hasAtmosphere=false,isSanctuary=false,isInSafeZone=true,systemId=0,positionInSystem=0,satellites={},center={0,0,0},gravity=0,radius=0,atmosphereThickness=0,atmosphereRadius=0,surfaceArea=0,surfaceAverageAltitude=0,surfaceMaxAltitude=0,surfaceMinAltitude=0,GM=0,ores={},territories=0,noAtmosphericDensityAltitude=0,spaceEngineMinAltitude=0}end;local s_={[1]=4480,[6]=4480,[7]=6270}for t0,t1 in pairs(b)do b[t0][0]=sZ()b[t0][0].systemId=t0;sY[t0]={}for t2,is in pairs(b[t0])do is.gravity=is.gravity/9.8;is.center=vec3(is.center)is.name=is.name[1]is.noAtmosphericDensityAltitude=is.atmosphereThickness or is.atmosphereRadius-is.radius;is.spaceEngineMinAltitude=s_[is.id]or 0.68377*(is.atmosphereThickness or is.atmosphereRadius-is.radius)is.planetarySystemId=t0;is.bodyId=is.id;sY[t0][t2]=is;if lY==nil or is.center.x<lY then lY=is.center.x end;if lX==nil or is.center.x>lX then lX=is.center.x end;if m0==nil or is.center.y<m0 then m0=is.center.y end;if l_==nil or is.center.y>l_ then l_=is.center.y end;if is.center and is.name~="Space"then dL[#dL+1]=is end end end;cU=eq()cV=cU(sY)cW=fR()cY=gk()c_=oE()end;t3=false;t4=coroutine.create(function()bI:setupCustomTargetSpeedRanges(axisCommandId.longitudinal,{1000,5000,10000,20000,30000})sG()coroutine.yield()sK()coroutine.yield()d0=pc()sV()coroutine.yield()sX()d1=gK()cZ=i7()cZ.ButtonSetup()d2=rT()coroutine.yield()unit.hide()system.showScreen(1)system.showHelper(0)collectgarbage("collect")coroutine.yield()unit.setTimer("apTick",aH)unit.setTimer("radarTick",aH)unit.setTimer("hudTick",aI)unit.setTimer("oneSecond",1)unit.setTimer("tenthSecond",1/10)unit.setTimer("fiveSecond",5)dQ("start","SU")end)coroutine.resume(t4)end;function script.onStop()_autoconf.hideCategoryPanels()if antigrav~=nil and not n then antigrav.hide()end;if warpdrive~=nil then warpdrive.hide()end;core.hide()a.control.switchOffHeadlights()if door and(cC>0 or cC==0 and cD<10000)then for eO,dX in pairs(door)do dX.toggle()end end;if switch then for eO,dX in pairs(switch)do dX.toggle()end end;if forcefield and(cC>0 or cC==0 and cD<10000)then for eO,dX in pairs(forcefield)do dX.toggle()end end;u=dN;em()if nw then nw.activate()end;if x then d0.showWayPoint(is,dr)end;dQ("stop","SU")end;function script.onTick(t5)local t6=nil;if t5=="contact"then if not t7 then t7=0 end;if bU>t7+10 then ch="Radar Contact"dQ("rdrCon","RC")t7=bU end;unit.stopTimer("contact")elseif t5=="tenthSecond"then local function t8()local t9=system.createData;local ta=system.createWidget;tb=system.createWidgetPanel("Interplanetary Helper")tc=ta(tb,"value")td=t9('{"label": "Target Planet", "value": "N/A", "unit":""}')bL(td,tc)te=ta(tb,"value")tf=t9('{"label": "distance", "value": "N/A", "unit":""}')bL(tf,te)p2=ta(tb,"value")p1=t9('{"label": "Travel Time", "value": "N/A", "unit":""}')bL(p1,p2)p0=ta(tb,"value")o_=t9('{"label": "Maximum Mass", "value": "N/A", "unit":""}')bL(o_,p0)p4=ta(tb,"value")p3=t9('{"label": "Target Altitude", "value": "N/A", "unit":""}')bL(p3,p4)oX=ta(tb,"value")oW=t9('{"label": "Cur Brake distance", "value": "N/A", "unit":""}')oV=ta(tb,"value")oU=t9('{"label": "Cur Brake Time", "value": "N/A", "unit":""}')oT=ta(tb,"value")oS=t9('{"label": "Max Brake distance", "value": "N/A", "unit":""}')oR=ta(tb,"value")oQ=t9('{"label": "Max Brake Time", "value": "N/A", "unit":""}')oZ=ta(tb,"value")oY=t9('{"label": "Projected Altitude", "value": "N/A", "unit":""}')if not cB then bL(oW,oX)bL(oU,oV)bL(oS,oT)bL(oQ,oR)bL(oY,oZ)end end;local function tg()bJ(tb)tb=nil end;local function th()if not aR then if lg==nil or lg.planetname~=is.name then qI=(cn.center-dr):len()else qI=(lg.position-dr):len()end end;local gi=dn;local qQ=unit.getThrottle()/100;if r then qQ=b_ end;local ti,tj=cW.computeDistanceAndTime(dn,V,cG,a:maxForceForward()*qQ,X,0)local cj,ck;if not aS then cj,ck=d0.GetAutopilotBrakeDistanceAndTime(V)else cj,ck=d0.GetAutopilotTBBrakeDistanceAndTime(V)end;local eO,tk;if not aS and gi>0 then eO,tk=d0.GetAutopilotBrakeDistanceAndTime(gi)else eO,tk=d0.GetAutopilotTBBrakeDistanceAndTime(gi)end;local tl=0;local tm=0;if b1 or not aR and gi>5 then tm=cW.computeTravelTime(gi,0,qI)elseif cj+ti<qI then tl=qI-(cj+ti)tm=cW.computeTravelTime(8333.0556,0,tl)else local tn=(qI-cj)/ti;ti=qI-cj;tj=tj*tn end;if lg~=nil and lg.planetname==is.name and not aR then return tm elseif b0 then return tk elseif b1 then return tm+tk else return tj+ck+tm end end;local function to(nO,tp)if nO==nil then nO=core.g()end;nO=bQ(nO,5)if tp~=nil and tp or(t6==nil or t6~=nO)then local gi=dl:len()local tq=by(unit.getData()).maxBrake;if tq~=nil and tq>0 and cB then tq=tq/bH(gi/100,0.1,1)tq=tq/cC;if cC>0.10 then if bh then bh=(bh+tq)/2 else bh=tq end end end;if tq~=nil and tq>0 then bf=tq end;t6=nO end end;to(nil,true)if du~=nil then if bI:getAxisCommandType(0)~=axisCommandType.byTargetSpeed or bI:getTargetSpeed(axisCommandId.longitudinal)~=du then d0.cmdCruise(du)else du=nil end end;if b6~="None"then if tb==nil then t8()end;if b6~=nil then local tr=lg~=nil;local ts=0.5*bh/cn:getGravity(cn.center+vec3(0,0,1)*cn.radius):len()ts=ts>1000000 and bQ(ts/1000000,2).." kTons"or bQ(ts/1000,2).." Tons"bK(td,'{"label": "Target", "value": "'..b6 ..'", "unit":""}')kZ=th()if tr and not aR then cu=(dr-lg.position):len()else cu=(b7-dr):len()end;if not aS then cj,ck=d0.GetAutopilotBrakeDistanceAndTime(dn)cl,cm=d0.GetAutopilotBrakeDistanceAndTime(V)else cj,ck=d0.GetAutopilotTBBrakeDistanceAndTime(dn)cl,cm=d0.GetAutopilotTBBrakeDistanceAndTime(V)end;local kM=ee(cu)bK(tf,'{"label": "distance", "value": "'..kM..'"}')bK(p1,'{"label": "Travel Time", "value": "'..eh(kZ)..'", "unit":""}')kM=ee(cj)bK(oW,'{"label": "Cur Brake distance", "value": "'..kM..'"}')bK(oU,'{"label": "Cur Brake Time", "value": "'..eh(ck)..'", "unit":""}')kM=ee(cl)bK(oS,'{"label": "Max Brake distance", "value": "'..kM..'"}')bK(oQ,'{"label": "Max Brake Time", "value": "'..eh(cm)..'", "unit":""}')bK(o_,'{"label": "Max Brake Mass", "value": "'..bx("%s",ts)..'", "unit":""}')kM=ee(p5)bK(p3,'{"label": "Target Orbit", "value": "'..kM..'"}')if cC>0 and not sW then system.removeDataFromWidget(oQ,oR)system.removeDataFromWidget(oS,oT)system.removeDataFromWidget(oU,oV)system.removeDataFromWidget(oW,oX)system.removeDataFromWidget(oY,oZ)sW=true;if not dv and r and(aT or aW or cy)then d0.cmdThrottle(1)aO=false;c3=false end end;if cC==0 and sW then if bK(oQ,oR)==1 then bL(oQ,oR)end;if bK(oS,oT)==1 then bL(oS,oT)end;if bK(oU,oV)==1 then bL(oU,oV)end;if bK(oW,oX)==1 then bL(oW,oX)end;if bK(oY,oZ)==1 then bL(oY,oZ)end;sW=false end end else tg()end;if warpdrive~=nil then if by(warpdrive.getData()).destination~="Unknown"and by(warpdrive.getData()).distance>400000 then warpdrive.show()tt=true else warpdrive.hide()tt=false end end;cZ.TenthTick()elseif t5=="oneSecond"then local function tu(ja)local tv=0;cM=""local tw=cS;local tx=0;local ty=0;local tz=0;local j3=0;local j4=""local tA=core.getElementHitPointsById;for dW in pairs(cE)do local sT=0;local tB=0;tB=bA(cE[dW])sT=tA(cE[dW])tx=tx+sT;if sT<tB then if sT==0 then tz=tz+1 else ty=ty+1 end;if cT and#cL==0 then ne=vec3(core.getElementPositionById(cE[dW]))local e5=ne.x;local e6=ne.y;local hh=ne.z;table.insert(cL,core.spawnArrowSticker(e5,e6,hh+1,"down"))table.insert(cL,core.spawnArrowSticker(e5,e6,hh+1,"down"))core.rotateSticker(cL[2],0,0,90)table.insert(cL,core.spawnArrowSticker(e5+1,e6,hh,"north"))table.insert(cL,core.spawnArrowSticker(e5+1,e6,hh,"north"))core.rotateSticker(cL[4],90,90,0)table.insert(cL,core.spawnArrowSticker(e5-1,e6,hh,"south"))table.insert(cL,core.spawnArrowSticker(e5-1,e6,hh,"south"))core.rotateSticker(cL[6],90,-90,0)table.insert(cL,core.spawnArrowSticker(e5,e6-1,hh,"east"))table.insert(cL,core.spawnArrowSticker(e5,e6-1,hh,"east"))core.rotateSticker(cL[8],90,0,90)table.insert(cL,core.spawnArrowSticker(e5,e6+1,hh,"west"))table.insert(cL,core.spawnArrowSticker(e5,e6+1,hh,"west"))core.rotateSticker(cL[10],-90,0,90)table.insert(cL,cE[dW])end elseif cT and#cL>0 and cL[11]==cE[dW]then for iZ in pairs(cL)do core.deleteSticker(cL[iZ])end;cL={}end end;tv=bw(tx/tw*100)if tv<100 then ja[#ja+1]=e4(0,0,"","pbright txt")j3=bw(tv*2.55)j4=bx("rgb(%d,%d,%d)",255-j3,j3,0)if tv<100 then ja[#ja+1]=e4("50%",1035,"Elemental Integrity: "..tv.."%","txtbig txtmid","fill:"..j4)if tz>0 then ja[#ja+1]=e4("50%",1055,"Disabled Modules: "..tz.." Damaged Modules: "..ty,"txtbig txtmid","fill:"..j4)elseif ty>0 then ja[#ja+1]=e4("50%",1055,"Damaged Modules: "..ty,"txtbig txtmid","fill:"..j4)end end end end;local function tC()if tD then if tE==nil and(i6~=nil or b9)then _autoconf.displayCategoryPanel(tD,weapon_size,"Weapons","weapon",true)tE=_autoconf.panels[_autoconf.panels_size]elseif tE~=nil and i6==nil and not b9 then bJ(tE)tE=nil end end end;dJ=core.getPlayersOnBoard()dK=core.getDockedConstructs()tC()local ja={}cZ.OneSecond(ja)if p then tu(ja)end;cv=table.concat(ja,"")collectgarbage("collect")elseif t5=="fiveSecond"then if not o then return end;cA=dbHud_1.getStringValue("SPBAutopilotTargetName")if cA~=nil and cA~=""and cA~="SatNavNotChanged"then local eF=by(dbHud_1.getStringValue("SavedLocations"))if eF~=nil then _G["SavedLocations"]=eF;local hA=-1;local p8;for dW,dX in pairs(bc)do if dX.name and dX.name=="SatNav Location"then hA=dW;break end end;if hA~=-1 then p8=bc[hA]hA=-1;for dW,dX in pairs(b[0])do if dX.name and dX.name=="SatNav Location"then hA=dW;break end end;if hA>-1 then b[0][hA]=p8 end;c_.UpdateAtlasLocationsList()ch=p8.name.." position updated"end end;for bt=1,#dy do if dy[bt].name==cA then b8=bt;system.print("Index = "..b8 .." "..dy[bt].name)c_.UpdateAutopilotTarget()dbHud_1.setStringValue("SPBAutopilotTargetName","SatNavNotChanged")break end end end elseif t5=="msgTick"then local ja={}cZ.DisplayMessage(ja,"empty")ch="empty"unit.stopTimer("msgTick")ct=3 elseif t5=="animateTick"then d4=true;d3=false;cr=0;cs=0;unit.stopTimer("animateTick")elseif t5=="hudTick"then cZ.hudtick()elseif t5=="apTick"then d0.APTick()elseif t5=="radarTick"then d1.UpdateRadar()elseif t5=="tagTick"then if bp=="Off"then bp="All"elseif bp=="All"then bp="Longitude"elseif bp=="Longitude"then bp="Lateral"elseif bp=="Lateral"then bp="Vertical"else bp="Off"end;ch="Extra Engine Tags: "..bp;unit.stopTimer("tagTick")end end;function script.onFlush()local function tF(tG,r1)local tH=vec3()local tI=vec3()if tG==axisCommandId.longitudinal then tH=vec3(core.getConstructOrientationForward())tI=dj elseif tG==axisCommandId.vertical then tH=vec3(core.getConstructOrientationUp())tI=di elseif tG==axisCommandId.lateral then tH=vec3(core.getConstructOrientationRight())tI=dk else return vec3()end;local tJ=vec3(core.getWorldGravity())local tK=tJ:dot(tI)local tL=vec3(core.getWorldAirFrictionAcceleration())local tM=tL:dot(tI)local tN=dl:dot(tH)local tO=r1*constants.kph2m;if tP==nil then tP=pid.new(10,0,10.0)end;tP:inject(tO-tN)local tQ=tP:get()local tR=(tQ-tM-tK)*tI;return tR end;local function tS(tG,r1)local tH=vec3()local tI=vec3()if tG==axisCommandId.longitudinal then tH=vec3(core.getConstructOrientationForward())tI=dj elseif tG==axisCommandId.vertical then tH=vec3(core.getConstructOrientationUp())tI=di elseif tG==axisCommandId.lateral then tH=vec3(core.getConstructOrientationRight())tI=dk else return vec3()end;local tJ=vec3(core.getWorldGravity())local tK=tJ:dot(tI)local tL=vec3(core.getWorldAirFrictionAcceleration())local tM=tL:dot(tI)local tN=dl:dot(tH)local tO=r1*constants.kph2m;if tT==nil then tT=pid.new(10,0,10.0)end;tT:inject(tO-tN)local tQ=tT:get()local tR=(tQ-tM-tK)*tI;return tR end;local function tU(tV,jd,oK)local tW=tV:cross(oK):normalize_inplace()local k0=math.acos(bH(tW:dot(-jd),-1,1))*constants.rad2deg;if tW:cross(-jd):dot(oK)<0 then k0=-k0 end;return k0 end;if antigrav and not n then if not dt and antigrav.getBaseAltitude()~=bi then antigrav.setBaseAltitude(bi)end end;dv=bI:getAxisCommandType(0)==axisCommandType.byThrottle;if dv and c3 then d0.cmdThrottle(0)c3=false elseif not dv and not c3 then b_=0;c3=true end;aC=math.max(aC,0.01)aD=math.max(aD,0.01)ax=math.max(ax,0.01)aB=math.max(aB,0.01)aE=math.max(aE,0.01)aF=math.max(aF,0.01)aw=math.max(aw,0.01)local tX=bH(c8+c9+system.getControlDeviceForwardInput(),-1,1)local tY=bH(cb+ce+system.getControlDeviceYawInput(),-1,1)local tZ=bH(cc+ca-system.getControlDeviceLeftRightInput(),-1,1)local t_=cd;dp=vec3(core.getWorldVertical())if dp==nil or dp:len()==0 then dp=(is.center-dr):normalize()end;di=vec3(core.getConstructWorldOrientationUp())dj=vec3(core.getConstructWorldOrientationForward())dk=vec3(core.getConstructWorldOrientationRight())dm=vec3(core.getWorldVelocity())dl=vec3(core.getVelocity())dr=vec3(core.getConstructWorldPos())cG=core.getConstructMass()dn=vec3(dm):len()dq=-dp:dot(dm)dx=getRoll(dp,dj,dk)local u0=dx/180*math.pi;local u1=math.cos(u0)local u2=math.sin(u0)dw=tU(dp,dj,dk*u1+di*u2)local u3=dm:normalize()local u4=bv(dx)local u5=utils.sign(dx)local u6=vec3(core.getWorldAngularVelocity())local u7=tX*aC*dk+tY*ax*dj+tZ*aD*di;if d5==true and dp:len()>0.01 then local u8=bv(d8-dx)if((aQ or aW or aU or cw or aT or bm)and u8>0 or cC>0.0 and u8<ay and m)and tY==0 and bv(dw)<85 then local u9=d8;local ua=aw;if cC==0 then ua=ua/4;d8=0;u9=0 end;if ub==nil then ub=pid.new(ua*0.01,0,ua*0.1)end;ub:inject(u9-dx)local uc=ub:get()u7=u7+uc*dj end end;local ud=1;local ue=0;local uf=1;local ug=system.getMouseWheel()if ug>0 then d0.changeSpd()elseif ug<0 then d0.changeSpd(true)else cH=true end;c0=0;if cB and r and dv then if uh==nil then uh=pid.new(0.5,0,1)end;uh:inject(d9/3.6-dm:dot(dj))local ui=uh:get()c2=bH(ui,-1,1)if c2<b_ and cC>0.005 then c1=true;bI:setThrottleCommand(axisCommandId.longitudinal,bH(c2,0.01,1))else c1=false;bI:setThrottleCommand(axisCommandId.longitudinal,b_)end;if uj==nil then uj=pid.new(1*0.01,0,1*0.1)end;uj:inject(dm:len()-d9/3.6)local uk=bH(uj:get(),0,1)if cC>0 and dq<-80 or cC>0.005 then c0=uk end;if c0>0 then if c1 and c2==0.01 then bI:setThrottleCommand(axisCommandId.longitudinal,0)end else c2=bH(c2,0.01,1)end;local ul=''local um=vec3()local un=tF(axisCommandId.vertical,cq*1000)a:setEngineForceCommand("vertical airfoil , vertical ground ",un,ue)local uo='thrust analog longitudinal 'if bp=="All"or bp=="Longitude"then uo=uo..aJ end;local up=bI:getAxisCommandType(axisCommandId.longitudinal)local uq=bI:composeAxisAccelerationFromThrottle(uo,axisCommandId.longitudinal)local ur=tS(axisCommandId.lateral,bl*1000)ul=ul..' , '.."lateral airfoil , lateral ground "um=um+ur;if um:len()>constants.epsilon then a:setEngineForceCommand(ul,um,ue,'','','',uf)end;a:setEngineForceCommand(uo,uq,ud)local us='thrust analog vertical fueled 'local ut='thrust analog lateral fueled 'if bp=="All"or bp=="Lateral"then ut=ut..aK end;if bp=="All"or bp=="Vertical"then us=us..aL end;if cq~=0 or aU and aO or not b9 and not bo then a:setEngineForceCommand(us,un,ud)else a:setEngineForceCommand(us,vec3(),ud)end;if bl~=0 then a:setEngineForceCommand(ut,ur,ud)else a:setEngineForceCommand(ut,vec3(),ud)end;if t_==0 then t_=c0 end;local uu=-t_*(aE*dm+aF*u3)a:setEngineForceCommand('brake',uu)else if r then bI:setThrottleCommand(axisCommandId.longitudinal,b_)end;local r1=unit.getAxisCommandValue(0)if not dv then if uj==nil then uj=pid.new(1*0.01,0,1*0.1)end;uj:inject(dm:len()-r1/3.6)local uk=bH(uj:get(),0,1)t_=bH(t_+uk,0,1)end;local uu=-t_*(aE*dm+aF*u3)a:setEngineForceCommand('brake',uu)local ul=''local um=vec3()local uv=false;local uo='thrust analog longitudinal 'if bp=="All"or bp=="Longitude"then uo=uo..aJ end;local up=bI:getAxisCommandType(axisCommandId.longitudinal)if up==axisCommandType.byThrottle then local uq=bI:composeAxisAccelerationFromThrottle(uo,axisCommandId.longitudinal)a:setEngineForceCommand(uo,uq,ud)elseif up==axisCommandType.byTargetSpeed then local uq=bI:composeAxisAccelerationFromTargetSpeed(axisCommandId.longitudinal)ul=ul..' , '..uo;um=um+uq;if bI:getTargetSpeed(axisCommandId.longitudinal)==0 or bI:getCurrentToTargetDeltaSpeed(axisCommandId.longitudinal)<-bI:getTargetSpeedCurrentStep(axisCommandId.longitudinal)*0.5 then uv=true end end;local ut='thrust analog lateral 'if bp=="All"or bp=="Lateral"then ut=ut..aK end;local uw=bI:getAxisCommandType(axisCommandId.lateral)if uw==axisCommandType.byThrottle then local ux=bI:composeAxisAccelerationFromThrottle(ut,axisCommandId.lateral)a:setEngineForceCommand(ut,ux,ud)elseif uw==axisCommandType.byTargetSpeed then local ur=bI:composeAxisAccelerationFromTargetSpeed(axisCommandId.lateral)ul=ul..' , '..ut;um=um+ur end;local us='thrust analog vertical 'if bp=="All"or bp=="Vertical"then us=us..aL end;local uy=bI:getAxisCommandType(axisCommandId.vertical)if uy==axisCommandType.byThrottle then local un=bI:composeAxisAccelerationFromThrottle(us,axisCommandId.vertical)if cq~=0 or aU and aO then a:setEngineForceCommand(us,un,ud,'airfoil','ground','',uf)else a:setEngineForceCommand(us,vec3(),ud)a:setEngineForceCommand('airfoil vertical',un,ud,'airfoil','','',uf)a:setEngineForceCommand('ground vertical',un,ud,'ground','','',uf)end elseif uy==axisCommandType.byTargetSpeed then if cq<0 then a:setEngineForceCommand('hover',vec3(),ud)end;local uz=bI:composeAxisAccelerationFromTargetSpeed(axisCommandId.vertical)ul=ul..' , '..us;um=um+uz end;if um:len()>constants.epsilon then if cd~=0 or uv or bv(u3:dot(dj))<0.5 then ul=ul..', brake'end;a:setEngineForceCommand(ul,um,ue,'','','',uf)end end;local uA=aB*(u7-u6)local uB=vec3(core.getWorldAirFrictionAngularAcceleration())uA=uA-uB;a:setEngineTorqueCommand('torque',uA,ud,'airfoil','','',uf)a:setBoosterCommand('rocket_engine')if ci and not k then local gi=dl:len()local uC=0.15;if not dv then local uD=bI:getTargetSpeed(axisCommandId.longitudinal)if gi*3.6>uD*(1-uC)and sm then sm=false;a:toggleBoosters()elseif gi*3.6<uD*(1-uC)and not sm then sm=true;a:toggleBoosters()end else local qQ=unit.getThrottle()if r then qQ=b_*100 end;local r1=qQ/100;if bB==0 then r1=r1*V;if gi>=r1*(1-uC)and sm then sm=false;a:toggleBoosters()elseif gi<r1*(1-uC)and not sm then sm=true;a:toggleBoosters()end else local re=bw(d9)r1=r1*re/3.6;if gi>=r1*(1-uC)and sm then sm=false;a:toggleBoosters()elseif gi<r1*(1-uC)and not sm then sm=true;a:toggleBoosters()end end end end end;function script.onUpdate()if not t3 then local hX=coroutine.status(t4)if hX=="suspended"then local eK,hY=coroutine.resume(t4)if hY then system.print("ERROR STARTUP: "..hY)end elseif hX=="dead"then t3=true end end;if t3 then a:update()if not d3 and oA~=uE then system.setScreen(oA)end;uE=oA end end;function script.onActionStart(r_)d2.startControl(r_)end;function script.onActionStop(r_)d2.stopControl(r_)end;function script.onActionLoop(r_)d2.loopControl(r_)end;function script.onInputText(e7)d2.inputTextControl(e7)end;function script.onEnter(eT)if radar_1 and not cB and not dz then unit.setTimer("contact",0.1)end end;function script.onLeave(eT)if radar_1 and C then if#dC>650 then eT=tostring(eT)dC[eT]=nil end end end;script.onStart()
        
        
        -- error handling code added by wrap.lua
        end, __wrap_lua__traceback)
        if not ok then
          __wrap_lua__error(message)
          if not script then script = {} end
        end
    stop:
      lua: |
        if not __wrap_lua__stopped and script.onStop then
          local ok, message = xpcall(script.onStop,__wrap_lua__traceback,unit)
          if not ok then __wrap_lua__error(message) end
        end
    tick(timerId):
      lua: |
        if not __wrap_lua__stopped and script.onTick then
          local ok, message = xpcall(script.onTick,__wrap_lua__traceback,timerId,unit)
          if not ok then __wrap_lua__error(message) end
        end
  system:
    actionStart(action):
      lua: |
        if not __wrap_lua__stopped and script.onActionStart then
          local ok, message = xpcall(script.onActionStart,__wrap_lua__traceback,action,system)
          if not ok then __wrap_lua__error(message) end
        end
    actionStop(action):
      lua: |
        if not __wrap_lua__stopped and script.onActionStop then
          local ok, message = xpcall(script.onActionStop,__wrap_lua__traceback,action,system)
          if not ok then __wrap_lua__error(message) end
        end
    actionLoop(action):
      lua: |
        if not __wrap_lua__stopped and script.onActionLoop then
          local ok, message = xpcall(script.onActionLoop,__wrap_lua__traceback,action,system)
          if not ok then __wrap_lua__error(message) end
        end
    update:
      lua: |
        if not __wrap_lua__stopped and script.onUpdate then
          local ok, message = xpcall(script.onUpdate,__wrap_lua__traceback,system)
          if not ok then __wrap_lua__error(message) end
        end
    flush:
      lua: |
        if not __wrap_lua__stopped and script.onFlush then
          local ok, message = xpcall(script.onFlush,__wrap_lua__traceback,system)
          if not ok then __wrap_lua__error(message) end
        end
    inputText(text):
      lua: |
        if not __wrap_lua__stopped and script.onInputText then
          local ok, message = xpcall(script.onInputText,__wrap_lua__traceback,text,system)
          if not ok then __wrap_lua__error(message) end
        end
  radar_1:
    enter(id):
      lua: |
        local radar = radar_1
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_1
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_2:
    enter(id):
      lua: |
        local radar = radar_2
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_2
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
