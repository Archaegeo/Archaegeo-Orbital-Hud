name: ArchHud - Archaegeo v1.321 (Minified)
slots:
  core:
    class: CoreUnit
  radar:
    class: RadarPVPUnit
    select: manual
  antigrav:
    class: AntiGravityGeneratorUnit
  warpdrive:
    class: WarpDriveUnit
  gyro:
    class: GyroUnit
  weapon:
    class: WeaponUnit
    select: manual
  dbHud:
    class: databank
    select: manual
  telemeter:
    class: TelemeterUnit
    select: manual
  vBooster:
    class: VerticalBooster
  hover:
    class: Hovercraft
  door:
    class: DoorUnit
    select: manual
  switch:
    class: ManualSwitchUnit
    select: manual
  forcefield:
    class: ForceFieldUnit
    select: manual
  atmofueltank:
    class: AtmoFuelContainer
    select: manual
  spacefueltank:
    class: SpaceFuelContainer
    select: manual
  rocketfueltank:
    class: RocketFuelContainer
    select: manual
handlers:
  unit:
    start:
      lua: |
        -- error handling code added by wrap.lua
        __wrap_lua__stopped = false
        __wrap_lua__stopOnError = false
        __wrap_lua__rethrowErrorAlways = false
        __wrap_lua__rethrowErrorIfStopped = true
        __wrap_lua__printError = true
        __wrap_lua__showErrorOnScreens = true
        
        function __wrap_lua__error (message)
          if __wrap_lua__stopped then return end
        
          -- make the traceback more readable and escape HTML syntax characters
          message = tostring(message):gsub('"%-%- |STDERROR%-EVENTHANDLER[^"]*"', 'chunk'):gsub("&", "&amp;"):gsub("<", "&lt;"):gsub(">", "&gt;")
        
          local unit = unit or self or {}
        
          if __wrap_lua__showErrorOnScreens then
            for _, value in pairs(unit) do
              if type(value) == "table" and value.setCenteredText and value.setHTML then -- value is a screen
                if message:match("\n") then
                  value.setHTML([[
        <pre style="color: white; background-color: black; font-family: Consolas,monospace; font-size: 4vh; white-space: pre-wrap; margin: 1em">
        Error: ]] .. message .. [[
        </pre>]])
                else
                  value.setCenteredText(message)
                end
              end
            end
          end
        
          if __wrap_lua__printError and system and system.print then
            system.print("Error: " .. message:gsub("\n", "<br>"))
          end
        
          if __wrap_lua__stopOnError then
            __wrap_lua__stopped = true
          end
        
          if __wrap_lua__stopped and unit and unit.exit then
            unit.exit()
          end
        
          if __wrap_lua__rethrowErrorAlways or (__wrap_lua__stopped and __wrap_lua__rethrowErrorIfStopped) then
            error(message)
          end
        end
        
        -- in case traceback is removed or renamed
        __wrap_lua__traceback = traceback or (debug and debug.traceback) or function (arg1, arg2) return arg2 or arg1 end
        
        local ok, message = xpcall(function ()
        
        -- script code
        
        useTheseSettings = false --export:
        userControlScheme = "virtual joystick" --export:
        soundFolder = "archHUD" --export:
        freeLookToggle = true --export:
        BrakeToggleDefault = true --export:
        RemoteFreeze = false --export:
        RemoteHud = true --export:
        brightHud = false --export:
        VanillaRockets = false --export:
        InvertMouse = false --export:
        autoRollPreference = false --export:
        turnAssist = true --export:
        ExternalAGG = false --export:
        UseSatNav = false --export:
        ShouldCheckDamage = true --export:
        CalculateBrakeLandingSpeed = false --export:
        AtmoSpeedAssist = true --export:
        ForceAlignment = false --export:
        DisplayDeadZone = true --export:
        showHud = true --export: 
        ShowOdometer = true --export:
        hideHudOnToggleWidgets = true --export:
        ShiftShowsRemoteButtons = true --export:
        DisplayOrbit = true --export: 
        SetWaypointOnExit = false --export:
        IntruderAlertSystem = false --export:
        AlwaysVSpd = false --export:
        BarFuelDisplay = true --export:
        showHelp = true --export:
        Cockpit = false --export:
        voices = true --export:
        alerts = true --export:
        YawStallAngle = 35 --export:
        PitchStallAngle = 35 --export:
        brakeLandingRate = 30 --export:
        MaxPitch = 30 --export:
        TargetOrbitRadius = 1.4 --export:
        LowOrbitHeight = 1000 --export:
        AtmoSpeedLimit = 1050 --export:
        SpaceSpeedLimit = 30000 --export:
        AutoTakeoffAltitude = 1000 --export:
        TargetHoverHeight = 50 --export:
        LandingGearGroundHeight = 0 --export:
        ReEntryHeight = 5000 --export:
        MaxGameVelocity = 8333.00 --export:
        AutopilotInterplanetaryThrottle = 1.0 --export:
        warmup = 32 --export:
        fuelTankHandlingAtmo = 0 --export:
        fuelTankHandlingSpace = 0 --export:
        fuelTankHandlingRocket = 0 --export:
        ContainerOptimization = 0 --export:
        FuelTankOptimization = 0 --export:
        ResolutionX = 1920 --export:
        ResolutionY = 1080 --export:
        circleRad = 400 --export:
        SafeR = 130 --export:
        SafeG = 224 --export:
        SafeB = 255 --export:
        PvPR = 255 --export:
        PvPG = 0 --export:
        PvPB = 0 --export:
        centerX = 960 --export:
        centerY = 540 --export:
        throtPosX = 1300 --export:
        throtPosY = 540 --export:
        vSpdMeterX = 1525  --export:
        vSpdMeterY = 325 --export:
        altMeterX = 550  --export:
        altMeterY = 540 --export:
        fuelX = 30 --export:
        fuelY = 700 --export:
        DeadZone = 50 --export:
        OrbitMapSize = 250 --export:
        OrbitMapX = 75 --export:
        OrbitMapY = 0 --export:
        soundVolume = 100 --export:
        speedChangeLarge = 5 --export:
        speedChangeSmall = 1 --export:
        MouseXSensitivity = 0.003 --export:
        MouseYSensitivity = 0.003 --export:
        autoRollFactor = 2 --export:
        rollSpeedFactor = 1.5 --export:
        autoRollRollThreshold = 180 --export:
        minRollVelocity = 150 --export:
        turnAssistFactor = 2 --export:
        TrajectoryAlignmentStrength = 0.002 --export:
        torqueFactor = 2 --export:
        pitchSpeedFactor = 0.8 --export:
        yawSpeedFactor = 1 --export:
        brakeSpeedFactor = 3 --export:
        brakeFlatFactor = 1 --export:
        DampingMultiplier = 40 --export:
        apTickRate = 0.0166667 --export:
        hudTickRate = 0.0666667 --export:
        ExtraLongitudeTags = "none" --export:
        ExtraLateralTags = "none" --export:
        ExtraVerticalTags = "none" --export:
        local a=Navigator.new(system,core,unit)script={}VERSION_NUMBER=1.321;BrakeToggleStatus=BrakeToggleDefault;VertTakeOffEngine=false;BrakeIsOn=false;RetrogradeIsOn=false;ProgradeIsOn=false;Autopilot=false;TurnBurn=false;AltitudeHold=false;BrakeLanding=false;AutoTakeoff=false;Reentry=false;VertTakeOff=false;HoldAltitude=1000;AutopilotAccelerating=false;AutopilotRealigned=false;AutopilotBraking=false;AutopilotCruising=false;AutopilotEndSpeed=0;AutopilotStatus="Aligning"AutopilotPlanetGravity=0;PrevViewLock=1;AutopilotTargetName="None"AutopilotTargetCoords=nil;AutopilotTargetIndex=0;GearExtended=nil;TotalDistanceTravelled=0.0;TotalFlightTime=0;SavedLocations={}VectorToTarget=false;LocationIndex=0;LastMaxBrake=0;LockPitch=nil;LastMaxBrakeInAtmo=0;AntigravTargetAltitude=1000;LastStartTime=0;SpaceTarget=false;LeftAmount=0;IntoOrbit=false;safeMass=0;iphCondition="All"stablized=true;sounds=true;local b={"VertTakeOff","VertTakeOffEngine","SpaceTarget","BrakeToggleStatus","BrakeIsOn","RetrogradeIsOn","ProgradeIsOn","Autopilot","TurnBurn","AltitudeHold","BrakeLanding","Reentry","AutoTakeoff","HoldAltitude","AutopilotAccelerating","AutopilotBraking","AutopilotCruising","AutopilotRealigned","AutopilotEndSpeed","AutopilotStatus","AutopilotPlanetGravity","PrevViewLock","AutopilotTargetName","AutopilotTargetCoords","AutopilotTargetIndex","TotalDistanceTravelled","TotalFlightTime","SavedLocations","VectorToTarget","LocationIndex","LastMaxBrake","LockPitch","LastMaxBrakeInAtmo","AntigravTargetAltitude","LastStartTime","safeMass","iphCondition","stablized","sounds"}local c=math.abs;local d=math.floor;local e=string.format;local f=json.decode;local g=json.encode;local h=core.getElementMaxHitPointsById;local j=unit.getAtmosphereDensity;local k=core.getElementMassById;local l=a.control.isRemoteControlled;local m=math.atan;local n=string.match;local o=utils.round;local p=system.getTime;local vec3=vec3;local q=utils.clamp;local r=a.axisCommandManager;local s=system.destroyWidgetPanel;local t=system.updateData;local u=system.addDataToWidget;local v=system.lockView;local w=system.isViewLocked;local function x(num,y)local z=10^(y or 0)return d(num*z+0.5)/z end;local A=p()local B=p()local C=16;local D=SafeR;local E=SafeB;local F=SafeG;local G=0;local H=0;local I=false;local J=0;local K=false;local L=x(ResolutionX/2,0)local M=x(ResolutionY/2,0)local N=false;local O=55;local P=false;local Q=false;local R=0;local S=0;local T=0;local U=0;local V=0;local W=0;local X=0;local Y=false;local Z=false;local a0="empty"local a1=5;local a2=5;local a3=a1;local a4=a2;local a5=false;local a6,a7=0;local a8,a9=0;local aa=nil;local ab=0;local ac=0;local ad=0;local ae=0;local af=0;local ag=3;local ah=0;local ai=""local aj=0;local ak=false;local al=false;local am=false;local an=-1;local ao=""local ap=j()>0;local aq=j()local ar=core.getAltitude()local as=core.getElementIdList()local at=p()local au=core.getConstructMass()local av=false;local aw=nil;local ax=false;local ay=[[rgb(]]..d(D+0.5)..","..d(F+0.5)..","..d(E+0.5)..[[)]]local az=[[rgb(]]..d(D*0.9+0.5)..","..d(F*0.9+0.5)..","..d(E*0.9+0.5)..[[)]]local aA={}local aB=0;local aC=0;local aD=""local aE=true;local aF={}local aG={}local aH={}local aI=ResolutionX;local aJ=ResolutionY;local aK=false;local aL=false;local aM=nil;local aN={}local aO={}local aP={}local aQ=0;local aR=false;local aS={}local aT={}local aU=d(1/apTickRate)*2;local aV={}local aW={}local aX={}local aY={}local aZ=false;local a_=0;local b0=nil;local b1=nil;local b2=nil;local b3=nil;local b4=nil;local b5=nil;local b6=nil;local b7=nil;local b8=nil;local b9=nil;local ba=nil;local bb=nil;local bc=false;local bd=false;local be=autoRollPreference;local bf=LandingGearGroundHeight;local bg=false;local bh=p()local bi=0;local bj=0;local bk=0;local bl=AtmoSpeedLimit;local bm=0;local bn=nil;local bo=0;local bp=0;local bq=false;local br=false;local bs={VectorToTarget=false}local bt=false;local bu=0;local bv=nil;local bw=false;local bx=false;local by=false;local bz=false;local bA=0;local bB=vec3(core.getConstructWorldOrientationUp())local bC=vec3(core.getConstructWorldOrientationForward())local bD=vec3(core.getConstructWorldOrientationRight())local bE=vec3(core.getWorldVelocity())local bF=vec3(bE):len()local bG=vec3(core.getWorldVertical())local bH=-bG:dot(bE)local bI=vec3(core.getConstructWorldPos())local bJ=0;local bK=false;local bL=false;local bM=nil;local bN=true;local bO=0;local bP=0;local bQ=false;local bR={}local bS=showHud;local bT={}local bU=false;local bV=""local bW=""local bX=nil;contacts={}positions={}collisionAlertStatus=false;local function bY(bZ,b_,type)if type==nil and not voices or type~=nil and not alerts or soundFolder=="archHUD"or not sounds then return end;if type~=nil then if type==2 then system.logInfo("sound_loop|audiopacks/"..soundFolder.."/"..bZ.."|"..b_.."|"..soundVolume)else system.logInfo("sound_notification|audiopacks/"..soundFolder.."/"..bZ.."|"..b_.."|"..soundVolume)end else system.logInfo("sound_q|audiopacks/"..soundFolder.."/"..bZ.."|"..b_.."|"..soundVolume)end end;local function c0(c1,c2)for i=1,#c2 do c1[#c1+1]=c2[i]end;return c1 end;local function c3(c4)local c5={}local c6={"userControlScheme","soundFolder","freeLookToggle","BrakeToggleDefault","RemoteFreeze","brightHud","RemoteHud","VanillaRockets","InvertMouse","autoRollPreference","turnAssist","ExternalAGG","UseSatNav","ShouldCheckDamage","CalculateBrakeLandingSpeed","AtmoSpeedAssist","ForceAlignment","DisplayDeadZone","showHud","ShowOdometer","hideHudOnToggleWidgets","ShiftShowsRemoteButtons","DisplayOrbit","SetWaypointOnExit","IntruderAlertSystem","AlwaysVSpd","BarFuelDisplay","showHelp","Cockpit","voices","alerts"}local c7={"YawStallAngle","PitchStallAngle","brakeLandingRate","MaxPitch","TargetOrbitRadius","LowOrbitHeight","AtmoSpeedLimit","SpaceSpeedLimit","AutoTakeoffAltitude","TargetHoverHeight","LandingGearGroundHeight","ReEntryHeight","MaxGameVelocity","AutopilotInterplanetaryThrottle","warmup","fuelTankHandlingAtmo","fuelTankHandlingSpace","fuelTankHandlingRocket","ContainerOptimization","FuelTankOptimization"}local c8={"ResolutionX","ResolutionY","circleRad","SafeR","SafeG","SafeB","PvPR","PvPG","PvPB","centerX","centerY","throtPosX","throtPosY","vSpdMeterX","vSpdMeterY","altMeterX","altMeterY","fuelX","fuelY","DeadZone","OrbitMapSize","OrbitMapX","OrbitMapY","soundVolume"}local c9={"speedChangeLarge","speedChangeSmall","MouseXSensitivity","MouseYSensitivity","autoRollFactor","rollSpeedFactor","autoRollRollThreshold","minRollVelocity","turnAssistFactor","TrajectoryAlignmentStrength","torqueFactor","pitchSpeedFactor","yawSpeedFactor","brakeSpeedFactor","brakeFlatFactor","DampingMultiplier","apTickRate","hudTickRate","ExtraLongitudeTags","ExtraLateralTags","ExtraVerticalTags"}if not c4 then c0(c5,c6)c0(c5,c7)c0(c5,c8)c0(c5,c9)return c5 elseif c4=="boolean"then return c6 elseif c4=="handling"then return c7 elseif c4=="hud"then return c8 elseif c4=="physics"then return c9 end end;local function ca(cb,cc,cd,ce,cf)if ce==nil then ce=""end;if cf==nil then cf=""end;return e([[<text class="%s" x=%s y=%s style="%s">%s</text>]],ce,cb,cc,cf,cd)end;local function cg(ch,ci)if r:getAxisCommandType(0)~=axisCommandType.byThrottle and not ci then a.control.cancelCurrentControlMasterMode()end;r:setThrottleCommand(axisCommandId.longitudinal,ch)G=q(x(ch*100,0)/100,-1,1)end;local function cj(ch,ci)if r:getAxisCommandType(0)~=axisCommandType.byTargetSpeed and not ci then a.control.cancelCurrentControlMasterMode()end;r:setTargetSpeedCommand(axisCommandId.longitudinal,ch)bM=ch end;local function ck(cl,cm)if cl==0 then return c(cm)<1e-09 end;if cm==0 then return c(cl)<1e-09 end;return c(cl-cm)<math.max(c(cl),c(cm))*epsilon end;local function cn(ah,co)local cp=ah>100000;if co==nil then co=1 end;if cp then return x(ah/1000/200,co).."SU"elseif ah<1000 then return x(ah,co).."M"else return x(ah/1000,co).."KM"end end;local function cq()AltitudeHold=false;if VertTakeOff then StrongBrakes=true;Reentry=false;AutoTakeoff=false;BrakeLanding=true;be=true;ad=0;if ap and an==-1 then BrakeLanding=false;AltitudeHold=true;ad=0;a:setEngineForceCommand('thrust analog vertical fueled ',vec3(),1)cj(d(bl))end else bw=false;GearExtended=false;a.control.retractLandingGears()r:setTargetGroundAltitude(TargetHoverHeight)BrakeIsOn=true end;VertTakeOff=not VertTakeOff end;local function cr()bw=false;bo=nil;bp=nil;bA=0;if aq==0 then if IntoOrbit then bY("orOff","AP")IntoOrbit=false;bq=false;bv=nil;be=autoRollPreference;if AltitudeHold then AltitudeHold=false;AutoTakeoff=false end;bs.VectorToTarget=false;bs.AutopilotAlign=false;bt=false elseif unit.getClosestPlanetInfluence()>0 then bY("orOn","AP")IntoOrbit=true;be=true;if bv==nil then bv=planet end;if AltitudeHold then AltitudeHold=false;AutoTakeoff=false end else a0="Unable to engage auto-orbit, not near a planet"end else IntoOrbit=false;bq=false;bv=nil;be=autoRollPreference;if AltitudeHold then AltitudeHold=false end;bs.VectorToTarget=false;bs.AutopilotAlign=false;bt=false end end;local function cs()if A-bj<1.5 then if planet.hasAtmosphere then if aq>0 then HoldAltitude=planet.spaceEngineMinAltitude-50;bY("11","EP")else if unit.getClosestPlanetInfluence()>0 then HoldAltitude=planet.noAtmosphericDensityAltitude+LowOrbitHeight;bu=HoldAltitude;bt=true;if not IntoOrbit then cr()end;bq=true end end;bj=-1;if AltitudeHold or IntoOrbit or VertTakeOff then return end end else bj=A end;if unit.getClosestPlanetInfluence()>0 and aq==0 then bu=ar;bt=true;bq=true;cr()if IntoOrbit then bj=A else bj=0 end;return end;AltitudeHold=not AltitudeHold;BrakeLanding=false;Reentry=false;if AltitudeHold then Autopilot=false;ProgradeIsOn=false;RetrogradeIsOn=false;Y=false;be=true;LockPitch=nil;bw=false;if an==-1 then bY("altOn","AH")AutoTakeoff=false;if bj>-1 then if unit.getClosestPlanetInfluence()>0 then HoldAltitude=ar end end;if VertTakeOff then cq()end else bY("lfs","LS")AutoTakeoff=true;if bj>-1 then HoldAltitude=ar+AutoTakeoffAltitude end;GearExtended=false;a.control.retractLandingGears()BrakeIsOn=true;r:setTargetGroundAltitude(TargetHoverHeight)if VertTakeOffEngine and bK then cq()end end;if al then HoldAltitude=100000 end else bY("altOff","AH")if IntoOrbit then cr()end;if VertTakeOff then cq()end;be=autoRollPreference;AutoTakeoff=false;VectorToTarget=false;bj=0 end end;local function ct()if l()==1 then Y=not Y;if Y then Autopilot=false;RetrogradeIsOn=false;ProgradeIsOn=false;AltitudeHold=false;Reentry=false;BrakeLanding=false;AutoTakeoff=false;OldGearExtended=GearExtended;GearExtended=false;a.control.retractLandingGears()r:setTargetGroundAltitude(TargetHoverHeight)bY("folOn","F")else bY("folOff","F")BrakeIsOn=true;be=autoRollPreference;GearExtended=OldGearExtended;if GearExtended then a.control.extendLandingGears()r:setTargetGroundAltitude(LandingGearGroundHeight)end end else a0="Follow Mode only works with Remote controller"Y=false end end;local function cu()local function cv(SpaceTarget)collisionAlertStatus=false;VectorToTarget=not VectorToTarget;if VectorToTarget then TurnBurn=false;if not AltitudeHold and not SpaceTarget then cs()end end;VectorStatus="Proceeding to Waypoint"end;if A-bk<1.5 and aq>0 then if not bz then a0="No space engines detected, Orbital Hop not supported"return end;if planet.hasAtmosphere then if aq>0 then HoldAltitude=planet.noAtmosphericDensityAltitude+LowOrbitHeight;bY("orH","OH")end;bk=-1;if Autopilot or VectorToTarget or IntoOrbit then return end end else bk=A end;TargetSet=false;if AutopilotTargetIndex>0 and not Autopilot and not VectorToTarget and not al and not IntoOrbit then ba.UpdateAutopilotTarget()bb.showWayPoint(aa,AutopilotTargetCoords)local cw=unit.getClosestPlanetInfluence()>0;if CustomTarget~=nil then LockPitch=nil;SpaceTarget=CustomTarget.planetname=="Space"if SpaceTarget then bY("apSpc","AP")if aq~=0 then al=true;cs()else Autopilot=true end elseif planet.name==CustomTarget.planetname then StrongBrakes=true;if aq>0 then if not VectorToTarget then bY("vtt","AP")cv(SpaceTarget)end else bY("apOn","AP")if not(aa.name==planet.name and cw)then bw=false;Autopilot=true elseif not ap then if IntoOrbit then cr()end;bu=planet.noAtmosphericDensityAltitude+LowOrbitHeight;bt=true;bs.AutopilotAlign=true;bs.VectorToTarget=true;bq=false;if not IntoOrbit then cr()end end end else bY("apP","AP")RetrogradeIsOn=false;ProgradeIsOn=false;if aq~=0 then al=true;cs()else Autopilot=true end end elseif aq==0 then if CustomTarget==nil and(aa.name==planet.name and cw)and not IntoOrbit then WaypointSet=false;bw=false;bq=false;cr()else bY("apP","AP")Autopilot=true;RetrogradeIsOn=false;ProgradeIsOn=false;AutopilotRealigned=false;Y=false;AltitudeHold=false;BrakeLanding=false;Reentry=false;AutoTakeoff=false;N=false;LockPitch=nil;WaypointSet=false end else bY("apP","AP")al=true;cs()end else bY("apOff","AP")al=false;Autopilot=false;AutopilotRealigned=false;VectorToTarget=false;N=false;AutoTakeoff=false;AltitudeHold=false;VectorToTarget=false;HoldAltitude=ar;TargetSet=false;Reentry=false;if IntoOrbit then cr()end end end;local function cx(cy)local cz=-1;local cA;cz=ba.findAtlasIndex(SavedLocations)if cz~=-1 then local cB;if cy~=nil then cA={position=SavedLocations[cz].position,name=cy,atmosphere=SavedLocations[cz].atmosphere,planetname=SavedLocations[cz].planetname,gravity=SavedLocations[cz].gravity}else cA={position=bI,name=SavedLocations[cz].name,atmosphere=aq,planetname=planet.name,gravity=unit.getClosestPlanetInfluence(),safe=true}end;SavedLocations[cz]=cA;cz=-1;cz=ba.findAtlasIndex(b0[0])if cz>-1 then b0[0][cz]=cA end;ba.UpdateAtlasLocationsList()a0=CustomTarget.name.." position updated"ba.UpdateAutopilotTarget()else a0="Name Not Found"end end;local function cC()BrakeIsOn=not BrakeIsOn;if BrakeLanding then BrakeLanding=false;be=autoRollPreference end;if BrakeIsOn then bY("bkOn","B",1)VectorToTarget=false;AutoTakeoff=false;Reentry=false;ProgradeIsOn=false;BrakeLanding=false;AutoLanding=false;bX=nil;if not bL then AltitudeHold=false;LockPitch=nil end;if VertTakeOff then cq()end;if IntoOrbit then cr()end;be=autoRollPreference;ak=false;am=false;ad=0 else bY("bkOff","B",1)end end;local function cD(cE,cF,cG)local function cH(cE,cI)cE=vec3(cE)cI=vec3(cI):normalize()local cJ=cE*cI;return cJ.x+cJ.y+cJ.z end;local cK=0.001;local cL=1;if not ap or not bg or an~=-1 or bF<O then if cG==nil then cG=DampingMultiplier end;if cF==nil then cF=cK end;cE=vec3(cE):normalize()local cM=vec3()-cE;local cN=-cH(cM,core.getConstructWorldOrientationRight())*cL;local cO=-cH(cM,core.getConstructWorldOrientationUp())*cL;if aB==0 then aB=cN/2 end;if aC==0 then aC=cO/2 end;if c(cN)<0.1 then T=T-cN*2 else T=T-(cN+(cN-aB)*cG)end;if c(cO)<0.1 then S=S+cO*2 else S=S+cO+(cO-aC)*cG end;aB=cN;aC=cO;if c(cN)<cF and c(cO)<cF then return true end;return false elseif bg and an==-1 then cE=bE;if cG==nil then cG=DampingMultiplier end;if cF==nil then cF=cK end;cE=vec3(cE):normalize()local cM=bC-cE;local cN=-cH(cM,core.getConstructWorldOrientationRight())*cL;local cO=-cH(cM,core.getConstructWorldOrientationUp())*cL;if aB==0 then aB=cN/2 end;if aC==0 then aC=cO/2 end;if c(cN)<0.1 then T=T-cN*5 else T=T-(cN+(cN-aB)*cG)end;if c(cO)<0.1 then S=S+cO*5 else S=S+cO+(cO-aC)*cG end;aB=cN;aC=cO;if c(cN)<cF and c(cO)<cF then return true end;return false end end;local function cP()if Reentry then a0="Re-Entry cancelled"bY("reOff","RE")Reentry=false;be=autoRollPreference;AltitudeHold=false elseif not planet.hasAtmosphere then a0="Re-Entry requirements not met: you must start out of atmosphere\n and within a planets gravity well over a planet with atmosphere"ag=5 elseif not P then Reentry=true;if r:getAxisCommandType(0)~=controlMasterModeId.cruise then a.control.cancelCurrentControlMasterMode()end;be=true;BrakeIsOn=false;a0="Beginning Parachute Re-Entry - Strap In.  Target speed: "..bl;bY("par","RE")else Reentry=true;AltitudeHold=true;be=true;BrakeIsOn=false;HoldAltitude=planet.surfaceMaxAltitude+ReEntryHeight;if HoldAltitude>planet.spaceEngineMinAltitude then HoldAltitude=planet.spaceEngineMinAltitude-planet.spaceEngineMinAltitude/10 end;local cd=cn(HoldAltitude)a0="Beginning Re-entry.  Target speed: "..bl.." Target Altitude: "..cd;bY("glide","RE")cj(d(bl))end;AutoTakeoff=false end;local function cQ()if antigrav and not ExternalAGG then if bL then bY("aggOff","AG")antigrav.deactivate()antigrav.hide()else if AntigravTargetAltitude==nil then AntigravTargetAltitude=ar end;if AntigravTargetAltitude<1000 then AntigravTargetAltitude=1000 end;bY("aggOn","AG")antigrav.activate()antigrav.show()end end end;local function cR(cS)local cT=0;local cU=0;local cV=0;if cS<60 then cS=d(cS)elseif cS<3600 then cT=d(cS/60)cS=d(cS%60)elseif cS<86400 then cU=d(cS/3600)cT=d(cS%3600/60)else cV=d(cS/86400)cU=d(cS%86400/3600)end;if cV>0 then return cV.."d "..cU.."h "elseif cU>0 then return cU.."h "..cT.."m "elseif cT>0 then return cT.."m "..cS.."s"elseif cS>0 then return cS.."s"else return"0s"end end;local function cW(cX)local function cY(cZ)for c_,d0 in pairs(cZ)do dbHud_1.setStringValue(d0,g(_G[d0]))if cX and dbHud_2 then dbHud_2.setStringValue(d0,g(_G[d0]))end end end;if dbHud_1 then cY(b)cY(c3())system.print("Saved Variables to Datacore")if cX and dbHud_2 then a0="Databank copied.  Remove copy when ready."end end end;function getTrueWorldPos()local function d1()local d2=core.getConstructWorldOrientationRight()local d3=core.getConstructWorldOrientationForward()local d4=core.getConstructWorldOrientationUp()local d5=library.systemResolution3(d2,d3,d4,{1,0,0})local d6=library.systemResolution3(d2,d3,d4,{0,1,0})local d7=library.systemResolution3(d2,d3,d4,{0,0,1})return function(d8)return library.systemResolution3(d5,d6,d7,d8)end end;local d9=d1()local da=core.getConstructWorldPos()local db=core.getElementPositionById(1)local dc={db[1]-C,db[2]-C,db[3]-C}local dd=d9(dc)local de={da[1]-dd[1],da[2]-dd[2],da[3]-dd[3]}return de end;function castIntersections(df,cI,dg,dh,di)local dh=dh or function(dj)return 1.00*dj.radius end;local dk={}if di then for _,i in ipairs(di)do dk[i]=dg[i]end else di={}for c_,dj in pairs(dg)do table.insert(di,c_)dk[c_]=dj end end;local function dl(dm,dn)local d2=dk[dm].center-df;local d3=dk[dn].center-df;return d2:len()<d3:len()end;table.sort(di,dl)local dp=cI:normalize()for i,dq in ipairs(di)do local dj=dk[dq]local dr=dj.center-df;local ds=dh(dj)local dt=dr:dot(dp)local du=dt^2-(dr:len2()-ds^2)if du>=0 then local dv=math.sqrt(du)local dw=dt+dv;local dx=dt-dv;if dx>0 then return dj,dw,dx elseif dw>0 then return dj,dw,nil end end end;return nil,nil,nil end;local function dy()return{[0]={[0]={GM=0,bodyId=0,center={x=0,y=0,z=0},name='Space',planetarySystemId=0,radius=0,hasAtmosphere=false,gravity=0,noAtmosphericDensityAltitude=0,surfaceMaxAltitude=0},[2]={name="Alioth",description="Alioth is the planet selected by the arkship for landfall; it is a typical goldilocks planet where humanity may rebuild in the coming decades. The arkship geological survey reports mountainous regions alongside deep seas and lush forests. This is where it all starts.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9401,atmosphericEngineMaxAltitude=5580,biosphere="Forest",classification="Mesoplanet",bodyId=2,GM=157470826617,gravity=1.0082568597356114,fullAtmosphericDensityMaxAltitude=-10,habitability="High",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=6272,numSatellites=2,positionFromSun=2,center={x=-8,y=-8,z=-126303},radius=126067.8984375,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=3410,surfaceArea=199718780928,surfaceAverageAltitude=200,surfaceMaxAltitude=1100,surfaceMinAltitude=-330,systemZone="High",territories=259472,type="Planet",waterLevel=0,planetarySystemId=0},[21]={name="Alioth Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=21,GM=2118960000,gravity=0.24006116402380084,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=457933,y=-1509011,z=115524},radius=30000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=0,surfaceArea=11309733888,surfaceAverageAltitude=140,surfaceMaxAltitude=200,surfaceMinAltitude=10,systemZone=nil,territories=14522,type="",waterLevel=nil,planetarySystemId=0},[22]={name="Alioth Moon 4",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=22,GM=2165833514,gravity=0.2427018259886451,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=-1692694,y=729681,z=-411464},radius=30330,safeAreaEdgeAltitude=500000,size="L",spaceEngineMinAltitude=0,surfaceArea=11559916544,surfaceAverageAltitude=-15,surfaceMaxAltitude=-5,surfaceMinAltitude=-50,systemZone=nil,territories=14522,type="",waterLevel=nil,planetarySystemId=0},[5]={name="Feli",description="Feli is easily identified by its massive and deep crater. Outside of the crater, the arkship geological survey reports a fairly bland and uniform planet, it also cannot explain the existence of the crater. Feli is particular for having an extremely small atmosphere, allowing life to develop in the deeper areas of its crater but limiting it drastically on the actual surface.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.5488,atmosphericEngineMaxAltitude=66725,biosphere="Barren",classification="Mesoplanet",bodyId=5,GM=16951680000,gravity=0.4801223280476017,fullAtmosphericDensityMaxAltitude=30,habitability="Low",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=78500,numSatellites=1,positionFromSun=5,center={x=-43534464,y=22565536,z=-48934464},radius=41800,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=42800,surfaceArea=21956466688,surfaceAverageAltitude=18300,surfaceMaxAltitude=18500,surfaceMinAltitude=46,systemZone="Low",territories=27002,type="Planet",waterLevel=nil,planetarySystemId=0},[50]={name="Feli Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=50,GM=499917600,gravity=0.11202853997062348,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=-43902841.78,y=22261034.7,z=-48862386},radius=14000,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=0,surfaceArea=2463008768,surfaceAverageAltitude=800,surfaceMaxAltitude=900,surfaceMinAltitude=0,systemZone=nil,territories=3002,type="",waterLevel=nil,planetarySystemId=0},[120]={name="Ion",description="Ion is nothing more than an oversized ice cube frozen through and through. It is a largely inhospitable planet due to its extremely low temperatures. The arkship geological survey reports extremely rough mountainous terrain with little habitable land.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9522,atmosphericEngineMaxAltitude=10480,biosphere="Ice",classification="Hypopsychroplanet",bodyId=120,GM=7135606629,gravity=0.36009174603570127,fullAtmosphericDensityMaxAltitude=-30,habitability="Average",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=17700,numSatellites=2,positionFromSun=12,center={x=2865536.7,y=-99034464,z=-934462.02},radius=44950,safeAreaEdgeAltitude=500000,size="XS",spaceEngineMinAltitude=6410,surfaceArea=25390383104,surfaceAverageAltitude=500,surfaceMaxAltitude=1300,surfaceMinAltitude=250,systemZone="Average",territories=32672,type="Planet",waterLevel=nil,planetarySystemId=0},[121]={name="Ion Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=121,GM=106830900,gravity=0.08802242599860607,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=2472916.8,y=-99133747,z=-1133582.8},radius=11000,safeAreaEdgeAltitude=500000,size="XS",spaceEngineMinAltitude=0,surfaceArea=1520530944,surfaceAverageAltitude=100,surfaceMaxAltitude=200,surfaceMinAltitude=3,systemZone=nil,territories=1922,type="",waterLevel=nil,planetarySystemId=0},[122]={name="Ion Moon 2",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=122,GM=176580000,gravity=0.12003058201190042,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=2995424.5,y=-99275010,z=-1378480.7},radius=15000,safeAreaEdgeAltitude=500000,size="XS",spaceEngineMinAltitude=0,surfaceArea=2827433472,surfaceAverageAltitude=-1900,surfaceMaxAltitude=-1400,surfaceMinAltitude=-2100,systemZone=nil,territories=3632,type="",waterLevel=nil,planetarySystemId=0},[9]={name="Jago",description="Jago is a water planet. The large majority of the planet&apos;s surface is covered by large oceans dotted by small areas of landmass across the planet. The arkship geological survey reports deep seas across the majority of the planet with sub 15 percent coverage of solid ground.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9835,atmosphericEngineMaxAltitude=9695,biosphere="Water",classification="Mesoplanet",bodyId=9,GM=18606274330,gravity=0.5041284298678057,fullAtmosphericDensityMaxAltitude=-90,habitability="Very High",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=10900,numSatellites=0,positionFromSun=9,center={x=-94134462,y=12765534,z=-3634464},radius=61590,safeAreaEdgeAltitude=500000,size="XL",spaceEngineMinAltitude=5900,surfaceArea=47668367360,surfaceAverageAltitude=0,surfaceMaxAltitude=1200,surfaceMinAltitude=-500,systemZone="Very High",territories=60752,type="Planet",waterLevel=0,planetarySystemId=0},[100]={name="Lacobus",description="Lacobus is an ice planet that also features large bodies of water. The arkship geological survey reports deep oceans alongside a frozen and rough mountainous environment. Lacobus seems to feature regional geothermal activity allowing for the presence of water on the surface.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.7571,atmosphericEngineMaxAltitude=11120,biosphere="Ice",classification="Psychroplanet",bodyId=100,GM=13975172474,gravity=0.45611622622739767,fullAtmosphericDensityMaxAltitude=-20,habitability="Average",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=12510,numSatellites=3,positionFromSun=10,center={x=98865536,y=-13534464,z=-934461.99},radius=55650,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=6790,surfaceArea=38917074944,surfaceAverageAltitude=800,surfaceMaxAltitude=1660,surfaceMinAltitude=250,systemZone="Average",territories=50432,type="Planet",waterLevel=0,planetarySystemId=0},[102]={name="Lacobus Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=102,GM=444981600,gravity=0.14403669598391783,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=99180968,y=-13783862,z=-926156.4},radius=18000,safeAreaEdgeAltitude=500000,size="XL",spaceEngineMinAltitude=0,surfaceArea=4071504128,surfaceAverageAltitude=150,surfaceMaxAltitude=300,surfaceMinAltitude=10,systemZone=nil,territories=5072,type="",waterLevel=nil,planetarySystemId=0},[103]={name="Lacobus Moon 2",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=103,GM=211503600,gravity=0.11202853997062348,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=99250052,y=-13629215,z=-1059341.4},radius=14000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=0,surfaceArea=2463008768,surfaceAverageAltitude=-1380,surfaceMaxAltitude=-1280,surfaceMinAltitude=-1880,systemZone=nil,territories=3002,type="",waterLevel=nil,planetarySystemId=0},[101]={name="Lacobus Moon 3",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=101,GM=264870000,gravity=0.12003058201190042,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=98905288.17,y=-13950921.1,z=-647589.53},radius=15000,safeAreaEdgeAltitude=500000,size="L",spaceEngineMinAltitude=0,surfaceArea=2827433472,surfaceAverageAltitude=500,surfaceMaxAltitude=820,surfaceMinAltitude=3,systemZone=nil,territories=3632,type="",waterLevel=nil,planetarySystemId=0},[1]={name="Madis",description="Madis is a barren wasteland of a rock; it sits closest to the sun and temperatures reach extreme highs during the day. The arkship geological survey reports long rocky valleys intermittently separated by small ravines.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.8629,atmosphericEngineMaxAltitude=7165,biosphere="Barren",classification="hyperthermoplanet",bodyId=1,GM=6930729684,gravity=0.36009174603570127,fullAtmosphericDensityMaxAltitude=220,habitability="Low",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=8050,numSatellites=3,positionFromSun=1,center={x=17465536,y=22665536,z=-34464},radius=44300,safeAreaEdgeAltitude=500000,size="XS",spaceEngineMinAltitude=4480,surfaceArea=24661377024,surfaceAverageAltitude=750,surfaceMaxAltitude=850,surfaceMinAltitude=670,systemZone="Low",territories=30722,type="Planet",waterLevel=nil,planetarySystemId=0},[10]={name="Madis Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=10,GM=78480000,gravity=0.08002039003323584,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=17448118.224,y=22966846.286,z=143078.82},radius=10000,safeAreaEdgeAltitude=500000,size="XL",spaceEngineMinAltitude=0,surfaceArea=1256637056,surfaceAverageAltitude=210,surfaceMaxAltitude=420,surfaceMinAltitude=0,systemZone=nil,territories=1472,type="",waterLevel=nil,planetarySystemId=0},[11]={name="Madis Moon 2",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=11,GM=237402000,gravity=0.09602446196397631,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=17194626,y=22243633.88,z=-214962.81},radius=12000,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=0,surfaceArea=1809557376,surfaceAverageAltitude=-700,surfaceMaxAltitude=300,surfaceMinAltitude=-2900,systemZone=nil,territories=1922,type="",waterLevel=nil,planetarySystemId=0},[12]={name="Madis Moon 3",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=12,GM=265046609,gravity=0.12003058201190042,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=17520614,y=22184730,z=-309989.99},radius=15000,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=0,surfaceArea=2827433472,surfaceAverageAltitude=700,surfaceMaxAltitude=1100,surfaceMinAltitude=0,systemZone=nil,territories=3632,type="",waterLevel=nil,planetarySystemId=0},[26]={name="Sanctuary",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9666,atmosphericEngineMaxAltitude=6935,biosphere="",classification="",bodyId=26,GM=68234043600,gravity=1.0000000427743831,fullAtmosphericDensityMaxAltitude=-30,habitability="",hasAtmosphere=true,isSanctuary=true,noAtmosphericDensityAltitude=7800,numSatellites=0,positionFromSun=0,center={x=-1404835,y=562655,z=-285074},radius=83400,safeAreaEdgeAltitude=0,size="L",spaceEngineMinAltitude=4230,surfaceArea=87406149632,surfaceAverageAltitude=80,surfaceMaxAltitude=500,surfaceMinAltitude=-60,systemZone=nil,territories=111632,type="",waterLevel=0,planetarySystemId=0},[6]={name="Sicari",description="Sicari is a typical desert planet; it has survived for millenniums and will continue to endure. While not the most habitable of environments it remains a relatively untouched and livable planet of the Alioth sector. The arkship geological survey reports large flatlands alongside steep plateaus.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.897,atmosphericEngineMaxAltitude=7725,biosphere="Desert",classification="Mesoplanet",bodyId=6,GM=10502547741,gravity=0.4081039739797361,fullAtmosphericDensityMaxAltitude=-625,habitability="Average",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=8770,numSatellites=0,positionFromSun=6,center={x=52765536,y=27165538,z=52065535},radius=51100,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=4480,surfaceArea=32813432832,surfaceAverageAltitude=130,surfaceMaxAltitude=220,surfaceMinAltitude=50,systemZone="Average",territories=41072,type="Planet",waterLevel=nil,planetarySystemId=0},[7]={name="Sinnen",description="Sinnen is a an empty and rocky hell. With no atmosphere to speak of it is one of the least hospitable planets in the sector. The arkship geological survey reports mostly flatlands alongside deep ravines which look to have once been riverbeds. This planet simply looks to have dried up and died, likely from solar winds.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9226,atmosphericEngineMaxAltitude=10335,biosphere="Desert",classification="Mesoplanet",bodyId=7,GM=13033380591,gravity=0.4401121421448438,fullAtmosphericDensityMaxAltitude=-120,habitability="Average",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=11620,numSatellites=1,positionFromSun=7,center={x=58665538,y=29665535,z=58165535},radius=54950,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=6270,surfaceArea=37944188928,surfaceAverageAltitude=317,surfaceMaxAltitude=360,surfaceMinAltitude=23,systemZone="Average",territories=48002,type="Planet",waterLevel=nil,planetarySystemId=0},[70]={name="Sinnen Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=70,GM=396912600,gravity=0.1360346539426409,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=58969616,y=29797945,z=57969449},radius=17000,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=0,surfaceArea=3631681280,surfaceAverageAltitude=-2050,surfaceMaxAltitude=-1950,surfaceMinAltitude=-2150,systemZone=nil,territories=4322,type="",waterLevel=nil,planetarySystemId=0},[110]={name="Symeon",description="Symeon is an ice planet mysteriously split at the equator by a band of solid desert. Exactly how this phenomenon is possible is unclear but some sort of weather anomaly may be responsible. The arkship geological survey reports a fairly diverse mix of flat-lands alongside mountainous formations.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.9559,atmosphericEngineMaxAltitude=6920,biosphere="Ice, Desert",classification="Hybrid",bodyId=110,GM=9204742375,gravity=0.3920998898971822,fullAtmosphericDensityMaxAltitude=-30,habitability="High",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=7800,numSatellites=0,positionFromSun=11,center={x=14165536,y=-85634465,z=-934464.3},radius=49050,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=4230,surfaceArea=30233462784,surfaceAverageAltitude=39,surfaceMaxAltitude=450,surfaceMinAltitude=126,systemZone="High",territories=38882,type="Planet",waterLevel=nil,planetarySystemId=0},[4]={name="Talemai",description="Talemai is a planet in the final stages of an Ice Age. It seems likely that the planet was thrown into tumult by a cataclysmic volcanic event which resulted in its current state. The arkship geological survey reports large mountainous regions across the entire planet.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.8776,atmosphericEngineMaxAltitude=9685,biosphere="Barren",classification="Psychroplanet",bodyId=4,GM=14893847582,gravity=0.4641182439650478,fullAtmosphericDensityMaxAltitude=-78,habitability="Average",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=10890,numSatellites=3,positionFromSun=4,center={x=-13234464,y=55765536,z=465536},radius=57500,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=5890,surfaceArea=41547563008,surfaceAverageAltitude=580,surfaceMaxAltitude=610,surfaceMinAltitude=520,systemZone="Average",territories=52922,type="Planet",waterLevel=nil,planetarySystemId=0},[42]={name="Talemai Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=42,GM=264870000,gravity=0.12003058201190042,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=-13058408,y=55781856,z=740177.76},radius=15000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=0,surfaceArea=2827433472,surfaceAverageAltitude=720,surfaceMaxAltitude=850,surfaceMinAltitude=0,systemZone=nil,territories=3632,type="",waterLevel=nil,planetarySystemId=0},[40]={name="Talemai Moon 2",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=40,GM=141264000,gravity=0.09602446196397631,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=-13503090,y=55594325,z=769838.64},radius=12000,safeAreaEdgeAltitude=500000,size="S",spaceEngineMinAltitude=0,surfaceArea=1809557376,surfaceAverageAltitude=250,surfaceMaxAltitude=450,surfaceMinAltitude=0,systemZone=nil,territories=1922,type="",waterLevel=nil,planetarySystemId=0},[41]={name="Talemai Moon 3",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=41,GM=106830900,gravity=0.08802242599860607,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=-12800515,y=55700259,z=325207.84},radius=11000,safeAreaEdgeAltitude=500000,size="XS",spaceEngineMinAltitude=0,surfaceArea=1520530944,surfaceAverageAltitude=190,surfaceMaxAltitude=400,surfaceMinAltitude=0,systemZone=nil,territories=1922,type="",waterLevel=nil,planetarySystemId=0},[8]={name="Teoma",description="[REDACTED] The arkship geological survey [REDACTED]. This planet should not be here.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.7834,atmosphericEngineMaxAltitude=5580,biosphere="Forest",classification="Mesoplanet",bodyId=8,GM=18477723600,gravity=0.48812434578525177,fullAtmosphericDensityMaxAltitude=15,habitability="High",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=6280,numSatellites=0,positionFromSun=8,center={x=80865538,y=54665536,z=-934463.94},radius=62000,safeAreaEdgeAltitude=500000,size="L",spaceEngineMinAltitude=3420,surfaceArea=48305131520,surfaceAverageAltitude=700,surfaceMaxAltitude=1100,surfaceMinAltitude=-200,systemZone="High",territories=60752,type="Planet",waterLevel=0,planetarySystemId=0},[3]={name="Thades",description="Thades is a scorched desert planet. Perhaps it was once teaming with life but now all that remains is ash and dust. The arkship geological survey reports a rocky mountainous planet bisected by a massive unnatural ravine; something happened to this planet.",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0.03552,atmosphericEngineMaxAltitude=32180,biosphere="Desert",classification="Thermoplanet",bodyId=3,GM=11776905000,gravity=0.49612641213015557,fullAtmosphericDensityMaxAltitude=150,habitability="Low",hasAtmosphere=true,isSanctuary=false,noAtmosphericDensityAltitude=32800,numSatellites=2,positionFromSun=3,center={x=29165536,y=10865536,z=65536},radius=49000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=21400,surfaceArea=30171856896,surfaceAverageAltitude=13640,surfaceMaxAltitude=13690,surfaceMinAltitude=370,systemZone="Low",territories=38882,type="Planet",waterLevel=nil,planetarySystemId=0},[30]={name="Thades Moon 1",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=30,GM=211564034,gravity=0.11202853997062348,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=29214402,y=10907080.695,z=433858.2},radius=14000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=0,surfaceArea=2463008768,surfaceAverageAltitude=60,surfaceMaxAltitude=300,surfaceMinAltitude=0,systemZone=nil,territories=3002,type="",waterLevel=nil,planetarySystemId=0},[31]={name="Thades Moon 2",description="",antiGravMinAltitude=1000,atmosphericDensityAboveSurface=0,atmosphericEngineMaxAltitude=0,biosphere="",classification="",bodyId=31,GM=264870000,gravity=0.12003058201190042,fullAtmosphericDensityMaxAltitude=0,habitability="",hasAtmosphere=false,isSanctuary=false,noAtmosphericDensityAltitude=0,numSatellites=0,positionFromSun=0,center={x=29404193,y=10432768,z=19554.131},radius=15000,safeAreaEdgeAltitude=500000,size="M",spaceEngineMinAltitude=0,surfaceArea=2827433472,surfaceAverageAltitude=70,surfaceMaxAltitude=350,surfaceMinAltitude=0,systemZone=nil,territories=3632,type="",waterLevel=nil,planetarySystemId=0}}}end;local function dz()local function dA(dB)return type(dB)=='number'end;local function dC(dB)return type(tonumber(dB))=='number'end;local function dD(dE)return type(dE)=='table'end;local function dF(dG)return type(dG)=='string'end;local function dH(d0)return dD(d0)and dA(d0.x and d0.y and d0.z)end;local function dI(dJ)return dD(dJ)and dA(dJ.latitude and dJ.longitude and dJ.altitude and dJ.bodyId and dJ.systemId)end;local dK=math.pi/180;local dL=180/math.pi;local epsilon=1e-10;local num=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local dM='::pos{'..num..','..num..','..num..','..num..','..num..'}'local utils=require('cpml.utils')local vec3=require('cpml.vec3')local function dN(dB)local cJ=string.gsub(string.reverse(e('%.4f',dB)),'^0*%.?','')return cJ==''and'0'or string.reverse(cJ)end;local function dO(dP)if dH(dP)then return e('{x=%.3f,y=%.3f,z=%.3f}',dP.x,dP.y,dP.z)end;if dD(dP)and not getmetatable(dP)then local dQ={}local dR=next(dP)if type(dR)=='nil'or dR==1 then dQ=dP else for c_,d0 in pairs(dP)do local ch=dO(d0)if type(c_)=='number'then table.insert(dQ,e('[%s]=%s',c_,ch))else table.insert(dQ,e('%s=%s',c_,ch))end end end;return e('{%s}',table.concat(dQ,','))end;if dF(dP)then return e("'%s'",dP:gsub("'",[[\']]))end;return tostring(dP)end;local dS={}dS.__index=dS;dS.__tostring=function(dP,dT)local dU={}for c_ in pairs(dP)do table.insert(dU,c_)end;table.sort(dU)local dQ={}for _,c_ in ipairs(dU)do local ch=dO(dP[c_])if type(c_)=='number'then table.insert(dQ,e('[%s]=%s',c_,ch))else table.insert(dQ,e('%s=%s',c_,ch))end end;if dT then return e('%s%s',dT,table.concat(dQ,',\n'..dT))end;return e('{%s}',table.concat(dQ,','))end;dS.__eq=function(dV,dW)return dV.planetarySystemId==dW.planetarySystemId and dV.bodyId==dW.bodyId and ck(dV.radius,dW.radius)and ck(dV.center.x,dW.center.x)and ck(dV.center.y,dW.center.y)and ck(dV.center.z,dW.center.z)and ck(dV.GM,dW.GM)end;local function dX(dY,dZ,ds,d_,e0)assert(dC(dY),'Argument 1 (planetarySystemId) must be a number:'..type(dY))assert(dC(dZ),'Argument 2 (bodyId) must be a number:'..type(dZ))assert(dC(ds),'Argument 3 (radius) must be a number:'..type(ds))assert(dD(d_),'Argument 4 (worldCoordinates) must be a array or vec3.'..type(d_))assert(dC(e0),'Argument 5 (GM) must be a number:'..type(e0))return setmetatable({planetarySystemId=tonumber(dY),bodyId=tonumber(dZ),radius=tonumber(ds),center=vec3(d_),GM=tonumber(e0)},dS)end;local MapPosition={}MapPosition.__index=MapPosition;MapPosition.__tostring=function(e1)return e('::pos{%d,%d,%s,%s,%s}',e1.systemId,e1.bodyId,dN(e1.latitude*dL),dN(e1.longitude*dL),dN(e1.altitude))end;MapPosition.__eq=function(dV,dW)return dV.bodyId==dW.bodyId and dV.systemId==dW.systemId and ck(dV.latitude,dW.latitude)and ck(dV.altitude,dW.altitude)and(ck(dV.longitude,dW.longitude)or ck(dV.latitude,math.pi/2)or ck(dV.latitude,-math.pi/2))end;local function e2(e3,dZ,e4,e5,e6)local dY=e3;if dF(e3)and not e5 and not e6 and not dZ and not e4 then dY,dZ,e4,e5,e6=n(e3,dM)assert(dY,'Argument 1 (position string) is malformed.')else assert(dC(dY),'Argument 1 (systemId) must be a number:'..type(dY))assert(dC(dZ),'Argument 2 (bodyId) must be a number:'..type(dZ))assert(dC(e4),'Argument 3 (latitude) must be in degrees:'..type(e4))assert(dC(e5),'Argument 4 (longitude) must be in degrees:'..type(e5))assert(dC(e6),'Argument 5 (altitude) must be in meters:'..type(e6))end;dY=tonumber(dY)dZ=tonumber(dZ)e4=tonumber(e4)e5=tonumber(e5)e6=tonumber(e6)if dZ==0 then return setmetatable({latitude=e4,longitude=e5,altitude=e6,bodyId=dZ,systemId=dY},MapPosition)end;return setmetatable({latitude=dK*q(e4,-90,90),longitude=dK*(e5%360),altitude=e6,bodyId=dZ,systemId=dY},MapPosition)end;local e7={}e7.__index=e7;e7.__tostring=function(dP,dT)local e8=dT and dT..'  'local e9={}local dU={}for c_ in pairs(dP)do table.insert(dU,c_)end;table.sort(dU)for _,ea in ipairs(dU)do bdy=dP[ea]local eb=dS.__tostring(bdy,e8)if dT then table.insert(e9,e('[%s]={\n%s\n%s}',ea,eb,dT))else table.insert(e9,e('  [%s]=%s',ea,eb))end end;if dT then return e('\n%s%s%s',dT,table.concat(e9,',\n'..dT),dT)end;return e('{\n%s\n}',table.concat(e9,',\n'))end;local function ec(ed)local b0={}local pid;for _,d0 in pairs(ed)do local dq=d0.planetarySystemId;if type(dq)~='number'then error('Invalid planetary system ID: '..tostring(dq))elseif pid and dq~=pid then error('Mistringmatch planetary system IDs: '..dq..' and '..pid)end;local ee=d0.bodyId;if type(ee)~='number'then error('Invalid body ID: '..tostring(ee))elseif b0[ee]then error('Duplicate body ID: '..tostring(ee))end;setmetatable(d0.center,getmetatable(vec3.unit_x))b0[ee]=setmetatable(d0,dS)pid=dq end;return setmetatable(b0,e7)end;b4={}local function ef(ed)return setmetatable({galaxyAtlas=ed or{}},b4)end;b4.__index=function(dE,i)if type(i)=='number'then local system=dE.galaxyAtlas[i]return ec(system)end;return rawget(b4,i)end;b4.__pairs=function(dP)return function(dE,c_)local eg,nv=next(dE,c_)return eg,nv and ec(nv)end,dP.galaxyAtlas,nil end;b4.__tostring=function(dP)local eh={}for _,ei in pairs(dP or{})do local ej=ei:getPlanetarySystemId()local ek=e7.__tostring(ei,'    ')table.insert(eh,e('  [%s]={%s\n  }',ej,ek))end;return e('{\n%s\n}\n',table.concat(eh,',\n'))end;b4.BodyParameters=dX;b4.MapPosition=e2;b4.PlanetarySystem=ec;function b4.createBodyParameters(el,dZ,em,en,eo,ep,eq)assert(dC(el),'Argument 1 (planetarySystemId) must be a number:'..type(el))assert(dC(dZ),'Argument 2 (bodyId) must be a number:'..type(dZ))assert(dC(em),'Argument 3 (surfaceArea) must be a number:'..type(em))assert(dD(en),'Argument 4 (aPosition) must be an array or vec3:'..type(en))assert(dD(eo),'Argument 5 (verticalAtPosition) must be an array or vec3:'..type(eo))assert(dC(ep),'Argument 6 (altitude) must be in meters:'..type(ep))assert(dC(eq),'Argument 7 (gravityAtPosition) must be number:'..type(eq))local ds=math.sqrt(em/4/math.pi)local ah=ds+ep;local er=vec3(en)+ah*vec3(eo)local e0=eq*ah*ah;return dX(el,dZ,ds,er,e0)end;b4.isMapPosition=dI;function b4:getPlanetarySystem(e3)if i==nil then i=0 end;if nv==nil then nv=0 end;local el=e3;if dI(e3)then el=e3.systemId end;if type(el)=='number'then local system=self.galaxyAtlas[i]if system then if getmetatable(nv)~=e7 then system=ec(system)end;return system end end end;function e7:castIntersections(df,cI,dh,di)castIntersections(df,cI,self,dh,di)end;function e7:closestBody(es)assert(type(es)=='table','Invalid coordinates.')local et,dj;local eu=vec3(es)for _,ev in pairs(self)do local ew=(ev.center-eu):len2()if(not dj or ew<et)and ev.name~="Space"then dj=ev;et=ew end end;return dj end;function e7:convertToBodyIdAndWorldCoordinates(e3)local ex=e3;if dF(e3)then ex=e2(e3)end;if ex.bodyId==0 then return 0,vec3(ex.latitude,ex.longitude,ex.altitude)end;local ev=self:getBodyParameters(ex)if ev then return ex.bodyId,ev:convertToWorldCoordinates(ex)end end;function e7:getBodyParameters(e3)local dZ=e3;if dI(e3)then dZ=e3.bodyId end;assert(dC(dZ),'Argument 1 (bodyId) must be a number:'..type(dZ))return self[dZ]end;function e7:getPlanetarySystemId()local _,d0=next(self)return d0 and d0.planetarySystemId end;function dS:convertToMapPosition(d_)assert(dD(d_),'Argument 1 (worldCoordinates) must be an array or vec3:'..type(d_))local ey=vec3(d_)if self.bodyId==0 then return setmetatable({latitude=ey.x,longitude=ey.y,altitude=ey.z,bodyId=0,systemId=self.planetarySystemId},MapPosition)end;local ez=ey-self.center;local ah=ez:len()local e6=ah-self.radius;local e4=0;local e5=0;if not ck(ah,0)then local eA=m(ez.y,ez.x)e5=eA>=0 and eA or 2*math.pi+eA;e4=math.pi/2-math.acos(ez.z/ah)end;return setmetatable({latitude=e4,longitude=e5,altitude=e6,bodyId=self.bodyId,systemId=self.planetarySystemId},MapPosition)end;function dS:convertToWorldCoordinates(e3)local ex=dF(e3)and e2(e3)or e3;if ex.bodyId==0 then return vec3(ex.latitude,ex.longitude,ex.altitude)end;assert(dI(ex),'Argument 1 (mapPosition) is not an instance of "MapPosition".')assert(ex.systemId==self.planetarySystemId,'Argument 1 (mapPosition) has a different planetary system ID.')assert(ex.bodyId==self.bodyId,'Argument 1 (mapPosition) has a different planetary body ID.')local eB=math.cos(ex.latitude)return self.center+(self.radius+ex.altitude)*vec3(eB*math.cos(ex.longitude),eB*math.sin(ex.longitude),math.sin(ex.latitude))end;function dS:getAltitude(d_)return(vec3(d_)-self.center):len()-self.radius end;function dS:getDistance(d_)return(vec3(d_)-self.center):len()end;function dS:getGravity(d_)local eC=self.center-vec3(d_)local eD=eC:len2()return self.GM/eD*eC/math.sqrt(eD)end;return setmetatable(b4,{__call=function(_,...)return ef(...)end})end;local function eE()local b6={}local eF=30000000/3600;local eG=eF*eF;local eH=100;local function eI(d0)return 1/math.sqrt(1-d0*d0/eG)end;function b6.computeAccelerationTime(eJ,eK,eL)local eM=eF*math.asin(eJ/eF)return(eF*math.asin(eL/eF)-eM)/eK end;function b6.computeDistanceAndTime(eJ,eL,eN,eO,eP,eQ)eP=eP or 0;eQ=eQ or 0;local eR=eJ<=eL;local eS=eO*(eR and 1 or-1)/eN;local eT=-eQ/eN;local eU=eS+eT;if eR and eU<=0 or not eR and eU>=0 then return-1,-1 end;local eV,eW=0,0;if eS~=0 and eP>0 then local eM=math.asin(eJ/eF)local eX=math.pi*(eS/2+eT)local eY=eS*eP;local eZ=eF*math.pi;local d0=function(dE)local e_=(eX*dE-eY*math.sin(math.pi*dE/2/eP)+eZ*eM)/eZ;local f0=math.tan(e_)return eF*f0/math.sqrt(f0*f0+1)end;local f1=eR and function(dG)return dG>=eL end or function(dG)return dG<=eL end;eW=2*eP;if f1(d0(eW))then local f2=0;while c(eW-f2)>0.5 do local dE=(eW+f2)/2;if f1(d0(dE))then eW=dE else f2=dE end end end;local f3=eJ;local f4=eW/eH;for f5=1,eH do local f6=d0(f5*f4)eV=eV+(f6+f3)*f4/2;f3=f6 end;if eW<2*eP then return eV,eW end;eJ=f3 end;local eM=eF*math.asin(eJ/eF)local A=(eF*math.asin(eL/eF)-eM)/eU;local f7=eG*math.cos(eM/eF)/eU;local ah=f7-eG*math.cos((eU*A+eM)/eF)/eU;return ah+eV,A+eW end;function b6.computeTravelTime(eJ,eK,ah)if ah==0 then return 0 end;if eK>0 then local eM=eF*math.asin(eJ/eF)local f7=eG*math.cos(eM/eF)/eK;return(eF*math.acos(eK*(f7-ah)/eG)-eM)/eK end;if eJ==0 then return-1 end;assert(eJ>0,'Acceleration and initial speed are both zero.')return ah/eJ end;function b6.lorentz(d0)return eI(d0)end;return b6 end;local function f8()local vec3=require('cpml.vec3')local dz=dz()local function dF(dG)return type(dG)=='string'end;local function dD(dE)return type(dE)=='table'end;Kepler={}Kepler.__index=Kepler;function Kepler:escapeAndOrbitalSpeed(e6)assert(self.body)local ah=e6+self.body.radius;if not ck(ah,0)then local orbit=math.sqrt(self.body.GM/ah)return math.sqrt(2)*orbit,orbit end;return nil,nil end;function Kepler:orbitalParameters(e3,f9)assert(self.body)assert(dD(e3)or dF(e3))assert(dD(f9))local db=(dF(e3)or dz.isMapPosition(e3))and self.body:convertToWorldCoordinates(e3)or vec3(e3)local d0=vec3(f9)local fa=db-self.body.center;local d3=d0:len2()local fb=fa:len()local fc=self.body.GM;local fd=((d3-fc/fb)*fa-fa:dot(d0)*d0)/fc;local cl=fc/(2*fc/fb-d3)local fe=fd:len()local dp=fd:normalize()local ff=cl*(1-fe)local fg=cl*(1+fe)local fh=ff*dp+self.body.center;local fi=fe<=1 and-fg*dp+self.body.center or nil;local fj=math.sqrt(cl*fc*(1-fe*fe))local fk=fi and 2*math.pi*math.sqrt(cl^3/fc)local fl=math.acos(fd:dot(fa)/(fe*fb))if fa:dot(d0)<0 then fl=-(fl-2*math.pi)end;local fm=math.acos((math.cos(fl)+fe)/(1+fe*math.cos(fl)))local fn=fm;if fn<0 then fn=fn+2*math.pi end;local fo=fn-fe*math.sin(fn)local fp=0;local fq=0;local fr=0;if fk~=nil then fp=fo/(2*math.pi/fk)fq=fk-fp;fr=fq+fk/2;if fl-math.pi>0 then fq=fp;fr=fq+fk/2 end;if fr>fk then fr=fr-fk end end;return{periapsis={position=fh,speed=fj/ff,circularOrbitSpeed=math.sqrt(fc/ff),altitude=ff-self.body.radius},apoapsis=fi and{position=fi,speed=fj/fg,circularOrbitSpeed=math.sqrt(fc/fg),altitude=fg-self.body.radius},currentVelocity=d0,currentPosition=db,eccentricity=fe,period=fk,eccentricAnomaly=fm,meanAnomaly=fo,timeToPeriapsis=fq,timeToApoapsis=fr}end;local function fs(ft)local ev=dz.BodyParameters(ft.planetarySystemId,ft.bodyId,ft.radius,ft.center,ft.GM)return setmetatable({body=ev},Kepler)end;return setmetatable(Kepler,{__call=function(_,...)return fs(...)end})end;local function fu()local fv=0;local function fw(fx)local ds=500000;local fy,fz,fA=math.huge;local fB=false;local fC=vec3({13771471,7435803,-128971})local fD=18000000;fy=vec3(fx):dist(fC)if fy<fD then return true,c(fy-fD),"Safe Zone",0 end;fz=vec3(fx):dist(vec3(planet.center))if fz<ds then fB=true end;if c(fz-ds)<c(fy-fD)then return fB,c(fz-ds),planet.name,planet.bodyId else return fB,c(fy-fD),"Safe Zone",0 end end;local function fE(d0)if aI==1920 then return d0 else return x(aI*d0/1920,0)end end;local function fF(d0)if aJ==1080 then return d0 else return x(aJ*d0/1080,0)end end;local function fG()return w()==0 and userControlScheme~="keyboard"and l()==0 end;local function fH()local fI="TRAVEL"if not bN then fI="CRUISE"end;if Autopilot then fI="AUTOPILOT"end;return fI end;local function fJ(fK,aZ,cb,fL,fM,fN,fO,fP)local fQ=1;local fR=2;local fS=3;local fT=4;local fU=5;local fV=6;local fW=""local fX=0;local fY=fuelY;local fZ=fuelY+5;if not BarFuelDisplay then fZ=fZ+5 end;if l()==1 and not RemoteHud then fY=fY-50;fZ=fZ-50 end;if fM=="ATMO"then fW="atmofueltank"elseif fM=="SPACE"then fW="spacefueltank"else fW="rocketfueltank"end;fX=_G[fW.."_size"]if#fN>0 then for i=1,#fN do local f_=string.sub(fN[i][fR],1,12)local g0=0;for g1=1,fX do if fN[i][fR]==f(unit[fW.."_"..g1].getData()).name then g0=g1;break end end;if aZ or fO[i]==nil or fP[i]==nil then local g2=0;local g3=0;local g4=0;local g5=0;local g6=p()if g0~=0 then fP[i]=f(unit[fW.."_"..g0].getData()).percentage;fO[i]=f(unit[fW.."_"..g0].getData()).timeLeft;if fO[i]=="n/a"then fO[i]=0 end else g4=k(fN[i][fQ])-fN[i][fT]g2=fN[i][fS]fP[i]=d(0.5+g4*100/g2)g3=fN[i][fU]g5=fN[i][fV]if g3<=g4 then fO[i]=0 else fO[i]=d(0.5+g4/((g3-g4)/(g6-g5)))end;fN[i][fU]=g4;fN[i][fV]=g6 end end;if f_==fL then f_=e("%s %d",fM,i)end;if g0==0 then f_=f_.." *"end;local g7;if fO[i]==0 then g7=""else g7=cR(fO[i])end;if fP[i]~=nil then local g8=d(fP[i]*2.55)local g9=e("rgb(%d,%d,%d)",255-g8,g8,0)local ce=""if g7~=""and fO[i]<120 or fP[i]<5 then if aZ then ce=[[class="red"]]end end;if BarFuelDisplay then table.insert(fK,e([[
                                            <g class="pdim">                        
                                            <rect fill=grey class="bar" x="%d" y="%d" width="100" height="13"></rect></g>
                                            <g class="bar txtstart">
                                            <rect fill=%s width="%d" height="13" x="%d" y="%d"></rect>
                                            <text fill=black x="%d" y="%d">%s%% %s</text>
                                            </g>]],cb,fZ,g9,fP[i],cb,fZ,cb+2,fZ+10,fP[i],g7))fK[#fK+1]=ca(cb,fY,f_,ce.."txtstart pdim txtfuel")fY=fY-30;fZ=fZ-30 else fK[#fK+1]=ca(cb,fY,f_,ce.." pdim txtfuel")fK[#fK+1]=ca(cb,fZ,e("%d%% %s",fP[i],g7),"pdim txtfuel","fill:"..g9)fY=fY+30;fZ=fZ+30 end end end end end;local function ga(fK,e6)if e6<200000 and not ap or e6 and ap then local gb=0;if c(bH)>1 then gb=45*math.log(c(bH),10)if bH<0 then gb=-gb end end;fK[#fK+1]=e([[
                                <g class="pbright txt txtvspd" transform="translate(%d %d) scale(0.6)">
                                        <text x="31" y="-41">1000</text>
                                        <text x="-10" y="-65">100</text>
                                        <text x="-54" y="-45">10</text>
                                        <text x="-73" y="3">O</text>
                                        <text x="-56" y="52">-10</text>
                                        <text x="-14" y="72">-100</text>
                                        <text x="29" y="50">-1000</text>
                                        <text x="85" y="0" class="txtvspdval txtend">%d m/s</text>
                                    <g class="linethick">
                                        <path d="m-41 75 2.5-4.4m17 12 1.2-4.9m20 7.5v-10m-75-34 4.4-2.5m-12-17 4.9-1.2m17 40 7-7m-32-53h10m34-75 2.5 4.4m17-12 1.2 4.9m20-7.5v10m-75 34 4.4 2.5m-12 17 4.9 1.2m17-40 7 7m-32 53h10m116 75-2.5-4.4m-17 12-1.2-4.9m40-17-7-7m-12-128-2.5 4.4m-17-12-1.2 4.9m40 17-7 7"/>
                                        <circle r="90" />
                                    </g>
                                    <path transform="rotate(%d)" d="m-0.094-7c-22 2.2-45 4.8-67 7 23 1.7 45 5.6 67 7 4.4-0.068 7.8-4.9 6.3-9.1-0.86-2.9-3.7-5-6.8-4.9z" />
                                </g>
                            ]],vSpdMeterX,vSpdMeterY,d(bH),d(gb))end;return fK end;local function gc(gd)local ge=-bG;gd=gd-gd:project_on(ge)local gf=vec3(0,0,1)gf=gf-gf:project_on(ge)local gg=gf:cross(ge)local gb=gf:angle_between(gd)*constants.rad2deg;if gd:dot(gg)<0 then gb=360-gb end;return gb end;local function gh(fK,centerX,centerY,gi,gj,cw)local gk=circleRad;local gl=20;local gm=d(gi)if cw then for i=-45,45,5 do local gn=i;fK[#fK+1]=e([[<g transform="rotate(%f,%d,%d)">]],gn,centerX,centerY)len=5;if i%15==0 then len=15 elseif i%10==0 then len=10 end;fK[#fK+1]=e([[<line x1=%d y1=%d x2=%d y2="%d"/></g>]],centerX,centerY+gk+gl-len,centerX,centerY+gk+gl)end;fK[#fK+1]=ca(centerX,centerY+gk+gl-35,gj,"pdim txt txtmid")fK[#fK+1]=ca(centerX,centerY+gk+gl-25,gm.." deg","pdim txt txtmid")fK[#fK+1]=e([[<g transform="rotate(%f,%d,%d)">]],-gi,centerX,centerY)fK[#fK+1]=e([[<<polygon points="%d,%d %d,%d %d,%d"/>]],centerX-5,centerY+gk+gl-20,centerX+5,centerY+gk+gl-20,centerX,centerY+gk+gl-15)fK[#fK+1]="</g>"end;local go=gm;if cw then go=gc(bC)end;local gp=20;local gq=d(go)local gr=0;local gs=centerY+gk+gl+20;local gt=centerX;if gj~="YAW"then gs=fF(130)gt=fE(960)end;local gu=[[<path class="txttick line" d="]]local gv=d(gq-(gp+10)-gq%5+0.5)for i=gv+60,gv,-5 do local cb=gt-(-i*5+go*5)if i%10==0 then gr=10;local num=i;if num==360 then num=0 elseif num>360 then num=num-360 elseif num<0 then num=num+360 end;fK[#fK+1]=ca(cb+5,gs-12,num)elseif i%5==0 then gr=5 end;if gr==10 then gu=e([[%s M %f %f v %d]],gu,cb,gs-5,gr)else gu=e([[%s M %f %f v %d]],gu,cb,gs-2.5,gr)end end;fK[#fK+1]=gu..[["/>]]fK[#fK+1]=e([[<<polygon points="%d,%d %d,%d %d,%d"/>]],gt-5,gs+10,gt+5,gs+10,gt,gs+5)if cw then gj="HDG"end;fK[#fK+1]=ca(gt,gs+25,gq.."deg","pdim txt txtmid","")fK[#fK+1]=ca(gt,gs+35,gj,"pdim txt txtmid","")end;local function gw(fK,gx,gi,centerX,centerY,cw,gy,f6)local gk=circleRad;local gz=d(gk*3/5)if gk>0 then local gA=d(gx)local len=0;local gu=e([[<path transform="rotate(%f,%d,%d)" class="dim line" d="]],-1*gi,centerX,centerY)if not ap then gu=e([[<path transform="rotate(0,%d,%d)" class="dim line" d="]],centerX,centerY)end;fK[#fK+1]=e([[<clipPath id="cut"><circle r="%f" cx="%d" cy="%d"/></clipPath>]],gk-1,centerX,centerY)fK[#fK+1]=[[<g class="dim txttick" clip-path="url(#cut)">]]for i=d(gA-30-gA%5+0.5),d(gA+30+gA%5+0.5),5 do if i%10==0 then len=30 elseif i%5==0 then len=20 end;local cc=centerY+-i*5+gx*5;if len==30 then gu=e([[%s M %d %f h %d]],gu,centerX-gz-len,cc,len)if ap then fK[#fK+1]=e([[<g path transform="rotate(%f,%d,%d)" class="pdim txt txtmid"><text x="%d" y="%f">%d</text></g>]],-1*gi,centerX,centerY,centerX-gz+10,cc,i)fK[#fK+1]=e([[<g path transform="rotate(%f,%d,%d)" class="pdim txt txtmid"><text x="%d" y="%f">%d</text></g>]],-1*gi,centerX,centerY,centerX+gz-10,cc,i)if i==0 or i==180 or i==-180 then fK[#fK+1]=e([[<path transform="rotate(%f,%d,%d)" d="m %d,%f %d,0" stroke-width="1" style="fill:none;stroke:#F5B800;" />]],-1*gi,centerX,centerY,centerX-gz+20,cc,gz*2-40)end else fK[#fK+1]=ca(centerX-gz+10,cc,i,"pdim txt txtmid")fK[#fK+1]=ca(centerX+gz-10,cc,i,"pdim txt txtmid")end;gu=e([[%s M %d %f h %d]],gu,centerX+gz,cc,len)else gu=e([[%s M %d %f h %d]],gu,centerX-gz-len,cc,len)gu=e([[%s M %d %f h %d]],gu,centerX+gz,cc,len)end end;fK[#fK+1]=gu..[["/>]]local gB="PITCH"if not cw then gB="REL PITCH"end;if gx>90 and not ap then gx=90-(gx-90)elseif gx<-90 and not ap then gx=-90-(gx+90)end;if gk>200 then if ap then if f6>O then fK[#fK+1]=ca(centerX,centerY-15,"Yaw","pdim txt txtmid")fK[#fK+1]=ca(centerX,centerY+20,gy,"pdim txt txtmid")end;fK[#fK+1]=e([[<g transform="rotate(%f,%d,%d)">]],-gi,centerX,centerY)else fK[#fK+1]=e([[<g transform="rotate(0,%d,%d)">]],centerX,centerY)end;fK[#fK+1]=e([[<<polygon points="%d,%d %d,%d %d,%d"/> class="pdim txtend"><text x="%d" y="%f">%d</text>]],centerX-gz+25,centerY-5,centerX-gz+20,centerY,centerX-gz+25,centerY+5,centerX-gz+50,centerY+4,gA)fK[#fK+1]=e([[<<polygon points="%d,%d %d,%d %d,%d"/> class="pdim txtend"><text x="%d" y="%f">%d</text>]],centerX+gz-25,centerY-5,centerX+gz-20,centerY,centerX+gz-25,centerY+5,centerX+gz-30,centerY+4,gA)fK[#fK+1]="</g>"end;local gC=d(gk/3)fK[#fK+1]=e([[<path d="m %d,%d %d,0" stroke-width="2" style="fill:none;stroke:#F5B800;" />]],centerX-gC,centerY,gk-gC)if not ap and cw then fK[#fK+1]=e([[<path transform="rotate(%f,%d,%d)" d="m %d,%f %d,0" stroke-width="1" style="fill:none;stroke:#F5B800;" />]],-1*gi,centerX,centerY,centerX-gz+10,centerY,gz*2-20)end;fK[#fK+1]="</g>"if gk<200 then if ap and f6>O then fK[#fK+1]=ca(centerX,centerY-gk,gB,"pdim txt txtmid")fK[#fK+1]=ca(centerX,centerY-gk+10,gA,"pdim txt txtmid")fK[#fK+1]=ca(centerX,centerY-15,"Yaw","pdim txt txtmid")fK[#fK+1]=ca(centerX,centerY+20,gy,"pdim txt txtmid")else fK[#fK+1]=ca(centerX,centerY-gk,gB,"pdim txt txtmid")fK[#fK+1]=ca(centerX,centerY-gk+15,gA,"pdim txt txtmid")end end end end;local function gD(fK,e6,cw)local gE=altMeterX;local gF=altMeterY;local gG=78;local gH=19;local gI=an;if an~=-1 then fK[#fK+1]=ca(gE+gG,gF+gH+20,e("AGL: %.1fm",an),"pdim altsm txtend")end;if cw and(e6<200000 and not ap or e6 and ap)then table.insert(fK,e([[
                                <g class="pdim">                        
                                    <rect class="line" x="%d" y="%d" width="%d" height="%d"/> 
                                    <clipPath id="alt"><rect class="line" x="%d" y="%d" width="%d" height="%d"/></clipPath>
                                    <g clip-path="url(#alt)">]],gE-1,gF-4,gG+2,gH+6,gE+1,gF-1,gG-4,gH))local cz=0;local gJ=1;local gK=0;local gL=e6<0;local gM=9;if gL then gM=0 end;local e6=c(e6)while cz<6 do local gN=11;local gO=16;local gP=9;local gQ=14;local ce="altsm"if cz>2 then gO=gO+3;gN=gN+2;gQ=gQ+2;gP=gP-6;ce="altbig"end;if gL then ce=ce.." red"end;local gR=e6/gJ%10;local gS=d(gR)local gT=d((gS+1)%10)local gU=gK;if cz==0 then gU=gR-gS;if gL then gU=1-gU end end;if gL and(cz==0 or gK~=0)then local gV=gT;gT=gS;gS=gV end;local gW=gO*(gU-1)local gX=gW+gO;local cb=gE+gP+(6-cz)*gN;local cc=gF+gQ;fK[#fK+1]=ca(cb,cc+gW,gT,ce)fK[#fK+1]=ca(cb,cc+gX,gS,ce)cz=cz+1;gJ=gJ*10;if gS==gM then gK=gU else gK=0 end end;table.insert(fK,[[</g></g>]])end end;local function gY(f9)f9=vec3(f9)local gZ=-math.deg(m(f9.y,f9.z))+180;gZ=gZ-90;if gZ<0 then gZ=360+gZ end;if gZ>180 then gZ=-180+gZ-180 end;return-gZ end;local function g_(f9)f9=vec3(f9)local go=math.deg(m(f9.y,f9.x))-90;if go<-180 then go=360+go end;return go end;local function h0(fK,f9,f6,centerX,centerY)if f6>5 and not ap or f6>O then local gk=circleRad;local h1=20;local h2=20;local h3=vec3(f9)local h4=gY(h3)local h5=g_(h3)local h6=14;local h7=h6/2;local h8=-h5/h2*gk;local h9=h4/h1*gk;local cb=centerX+h8;local cc=centerY+h9;local ah=math.sqrt(h8^2+h9^2)local ha=[[<circle
                            cx="]]..cb..[["
                            cy="]]..cc..[["
                            r="]]..h7/h6 ..[["
                            style="fill:#d7fe00;stroke:none;fill-opacity:1"/>
                        <circle
                            cx="]]..cb..[["
                            cy="]]..cc..[["
                            r="]]..h7 ..[["
                            style="stroke:#d7fe00;stroke-opacity:1;fill:none" />
                        <path
                            d="M ]]..cb-h6 ..[[,]]..cc..[[ h ]]..h7 ..[["
                            style="stroke:#d7fe00;stroke-opacity:1" />
                        <path
                            d="M ]]..cb+h7 ..[[,]]..cc..[[ h ]]..h7 ..[["
                            style="stroke:#d7fe00;stroke-opacity:1" />
                        <path
                            d="M ]]..cb..[[,]]..cc-h6 ..[[ v ]]..h7 ..[["
                            style="stroke:#d7fe00;stroke-opacity:1" />]]if ah<gk then fK[#fK+1]=ha else local gb=m(h9,h8)local hb=4;local hc=centerX+gk*math.cos(gb)local hd=centerY+gk*math.sin(gb)fK[#fK+1]=e('<g transform="rotate(%f %f %f)"><rect x="%f" y="%f" width="%f" height="%f" stroke="#d7fe00" fill="#d7fe00" /><path d="M %f %f l %f %f l %f %f z" fill="#d7fe00" stroke="#d7fe00"></g>',gb*180/math.pi,hc,hd,hc-hb,hd-hb/2,hb*2,hb,hc+hb,hd-hb,hb,hb,-hb,hb)end;if not ap then h4=gY(-h3)h5=g_(-h3)h8=-h5/h2*gk;h9=h4/h1*gk;cb=centerX+h8;cc=centerY+h9;ah=math.sqrt(h8^2+h9^2)if ah<gk then local he=[[<circle
                                    cx="]]..cb..[["
                                    cy="]]..cc..[["
                                    r="]]..h7 ..[["
                                    style="stroke:#d7fe00;stroke-opacity:1;fill:none" />
                                <path
                                    d="M ]]..cb..[[,]]..cc-h6 ..[[ v ]]..h7 ..[["
                                    style="stroke:#d7fe00;stroke-opacity:1" id="l"/>
                                <use
                                    xlink:href="#l"
                                    transform="rotate(120,]]..cb..[[,]]..cc..[[)" />
                                <use
                                    xlink:href="#l"
                                    transform="rotate(-120,]]..cb..[[,]]..cc..[[)" />
                                <path
                                    d="M ]]..cb-h7 ..[[,]]..cc..[[ h ]]..h6 ..[["
                                    style="stroke-width:0.5;stroke:#d7fe00;stroke-opacity:1"
                                    transform="rotate(-45,]]..cb..[[,]]..cc..[[)" id="c"/>
                                <use
                                    xlink:href="#c"
                                    transform="rotate(-90,]]..cb..[[,]]..cc..[[)"/>]]fK[#fK+1]=he end end end end;local function hf(fK,fI,hg,hh)hg=d(hg+0.5)local fY=throtPosY+10;local fZ=throtPosY+20;if l()==1 and not RemoteHud then fY=55;fZ=65 end;local hi="CRUISE"local unit="km/h"local ch=hh;if fI=="TRAVEL"or fI=="AUTOPILOT"then hi="THROT"unit="%"ch=hg;local hj="dim"if hg<0 then hj="red"end;fK[#fK+1]=e([[<g class="%s">
                                <path class="linethick" d="M %d %d L %d %d L %d %d L %d %d"/>
                                <g transform="translate(0 %.0f)">
                                    <polygon points="%d,%d %d,%d %d,%d"/>
                                </g>]],hj,throtPosX-7,throtPosY-50,throtPosX,throtPosY-50,throtPosX,throtPosY+50,throtPosX-7,throtPosY+50,1-c(hg),throtPosX-10,throtPosY+50,throtPosX-15,throtPosY+53,throtPosX-15,throtPosY+47)end;fK[#fK+1]=ca(throtPosX+10,fY,hi,"pbright txtstart")fK[#fK+1]=ca(throtPosX+10,fZ,e("%.0f %s",ch,unit),"pbright txtstart")if ap and AtmoSpeedAssist and bN and I then hg=d(J*100+0.5)local hj="red"if hg<0 then hj="red"end;fK[#fK+1]=e([[<g class="%s">
                                <g transform="translate(0 %d)">
                                    <polygon points="%d,%d %d,%d %d,%d"/>
                                </g></g>]],hj,1-c(hg),throtPosX-10,throtPosY+50,throtPosX-15,throtPosY+53,throtPosX-15,throtPosY+47)fK[#fK+1]=ca(throtPosX+10,fY+40,"LIMIT","pbright txtstart")fK[#fK+1]=ca(throtPosX+10,fZ+40,hg.."%","pbright txtstart")end;if ap and AtmoSpeedAssist or Reentry then fK[#fK+1]=ca(throtPosX+10,fY-40,"LIMIT: "..bl.." km/h","dim txtstart")elseif not ap and Autopilot then fK[#fK+1]=ca(throtPosX+10,fY-40,"LIMIT: "..d(MaxGameVelocity*3.6+0.5).." km/h","dim txtstart")end end;local function hk(fK,hl)local hm=throtPosY-10;local hn=throtPosX+10;fK[#fK+1]=ca(0,0,"","pdim txt txtend")if l()==1 and not RemoteHud then hm=75 end;fK[#fK+1]=ca(hn,hm,d(hl).." km/h","pbright txtbig txtstart")end;local function ho(fK)fK[#fK+1]=ca(fE(1900),fF(1070),e("ARCH Hud Version: %.3f",VERSION_NUMBER),"hudver")fK[#fK+1]=[[<g class="warnings">]]if unit.isMouseControlActivated()==1 then fK[#fK+1]=ca(fE(960),fF(550),"Warning: Invalid Control Scheme Detected","warnings")fK[#fK+1]=ca(fE(960),fF(600),"Keyboard Scheme must be selected","warnings")fK[#fK+1]=ca(fE(960),fF(650),"Set your preferred scheme in Lua Parameters instead","warnings")end;local hp=fE(960)local hq=fF(860)local hr=fF(880)local hs=fF(900)local ht=fF(960)local hu=fF(200)local hv=fF(250)local hw=fF(960)if l()==1 and not RemoteHud then hq=fF(135)hr=fF(155)hs=fF(175)hu=fF(115)hv=fF(95)end;if BrakeIsOn then fK[#fK+1]=ca(hp,hq,"Brake Engaged","warnings")elseif H>0 then fK[#fK+1]=ca(hp,hq,"Auto-Brake Engaged","warnings","opacity:"..H)end;if ap and bg and an==-1 then if not Autopilot and not VectorToTarget and not BrakeLanding and not bL and not VertTakeOff and not AutoTakeoff then fK[#fK+1]=ca(hp,hu+50,"** STALL WARNING **","warnings")bY("stall","SW",2)end end;if bX then fK[#fK+1]=ca(hp,hu+70,"Flight Assist in Progress","warnings")end;if aw then fK[#fK+1]=ca(hp,hw,"Gyro Enabled","warnings")end;if GearExtended then if Q then fK[#fK+1]=ca(hp,hr,"Gear Extended","warn")else fK[#fK+1]=ca(hp,hr,"Landed (G: Takeoff)","warnings")end;local hx=cn(a:getTargetGroundAltitude())fK[#fK+1]=ca(hp,hs,"Hover Height: "..hx,"warn")end;if a5 then fK[#fK+1]=ca(hp,ht+20,"ROCKET BOOST ENABLED","warn")end;if antigrav and not ExternalAGG and bL and AntigravTargetAltitude~=nil then if c(ar-antigrav.getBaseAltitude())<501 then fK[#fK+1]=ca(hp,hu+15,e("AGG On - Target Altitude: %d Singularity Altitude: %d",d(AntigravTargetAltitude),d(antigrav.getBaseAltitude())),"warn")else fK[#fK+1]=ca(hp,hu+15,e("AGG On - Target Altitude: %d Singluarity Altitude: %d",d(AntigravTargetAltitude),d(antigrav.getBaseAltitude())),"warnings")end elseif Autopilot and AutopilotTargetName~="None"then fK[#fK+1]=ca(hp,hu+20,"Autopilot "..AutopilotStatus,"warn")elseif LockPitch~=nil then fK[#fK+1]=ca(hp,hu+20,e("LockedPitch: %d",d(LockPitch)),"warn")elseif Y then fK[#fK+1]=ca(hp,hu+20,"Follow Mode Engaged","warn")elseif Reentry then fK[#fK+1]=ca(hp,hu+20,"Re-entry in Progress","warn")end;local hy,dw,dx=b5:getPlanetarySystem(0):castIntersections(bI,bE:normalize(),function(dj)if dj.noAtmosphericDensityAltitude>0 then return dj.radius+dj.noAtmosphericDensityAltitude else return dj.radius+dj.surfaceMaxAltitude*1.5 end end)local hz=dw;if dx~=nil and dw~=nil then hz=math.min(dx,dw)end;if AltitudeHold or VertTakeOff then local hx=cn(HoldAltitude,2)if VertTakeOff then if bL then hx=cn(antigrav.getBaseAltitude(),2).." AGG singularity height"end;fK[#fK+1]=ca(hp,hu,"VTO to "..hx,"warn")elseif AutoTakeoff and not IntoOrbit then if al then fK[#fK+1]=ca(hp,hu,"Takeoff to "..AutopilotTargetName,"warn")else fK[#fK+1]=ca(hp,hu,"Takeoff to "..hx,"warn")end;if BrakeIsOn and not VertTakeOff then fK[#fK+1]=ca(hp,hu+50,"Throttle Up and Disengage Brake For Takeoff","crit")end else fK[#fK+1]=ca(hp,hu,"Altitude Hold: "..hx,"warn")end end;if VertTakeOff and(antigrav~=nil and antigrav)then if aq>0.1 then fK[#fK+1]=ca(hp,hu+20,"Beginning ascent","warn")elseif aq<0.09 and aq>0.05 then fK[#fK+1]=ca(hp,hu+20,"Aligning trajectory","warn")elseif aq<0.05 then fK[#fK+1]=ca(hp,hu+20,"Leaving atmosphere","warn")end end;if IntoOrbit then if bn~=nil then fK[#fK+1]=ca(hp,hu,bn,"warn")end end;if IntruderAlertSystem and safeMass==-1 then fK[#fK+1]=ca(hp,hu+70,"POSSIBLE INTRUDER ALERT - MASS GAIN OF "..bJ.."kg DETECTED","warnings")bY("alarm","AL",2)end;if BrakeLanding then if StrongBrakes then fK[#fK+1]=ca(hp,hu,"Brake-Landing","warnings")else fK[#fK+1]=ca(hp,hu,"Coast-Landing","warnings")end end;if ProgradeIsOn then fK[#fK+1]=ca(hp,hu,"Prograde Alignment","crit")end;if RetrogradeIsOn then fK[#fK+1]=ca(hp,hu,"Retrograde Alignment","crit")end;if hz~=nil and aq==0 then local hx=cn(hz)local travelTime=b6.computeTravelTime(bF,0,hz)local hA="Collision"if hy.noAtmosphericDensityAltitude>0 then hA="Atmosphere"end;fK[#fK+1]=ca(hp,hv+20,hy.name.." "..hA.." "..cR(travelTime).." In "..hx,"crit")end;if VectorToTarget and not IntoOrbit then fK[#fK+1]=ca(hp,hu+35,VectorStatus,"warn")end;fK[#fK+1]="</g>"return fK end;local function hB(f6)return d(x(f6*3.6,0)+0.5).." km/h"end;local function hC(fK)local hD=OrbitMapX;local hE=OrbitMapY;local hF=OrbitMapSize;local hG=4;local hH=15;local cb=0;local cc=0;local hI,hJ,hK,hL;local function hM(type)local hN,A,f6,hO;if type=="Periapsis"then hN=orbit.periapsis.altitude;A=orbit.timeToPeriapsis;f6=orbit.periapsis.speed;hO=35 else hN=orbit.apoapsis.altitude;A=orbit.timeToApoapsis;f6=orbit.apoapsis.speed;hO=-35 end;fK[#fK+1]=e([[<line class="pdim op30 linethick" x1="%f" y1="%f" x2="%f" y2="%f"/>]],cb+hO,cc-5,hD+hF/2-hI+hL,cc-5)fK[#fK+1]=ca(cb,cc,type)cc=cc+hH;local hx=cn(hN)fK[#fK+1]=ca(cb,cc,hx)cc=cc+hH;fK[#fK+1]=ca(cb,cc,cR(A))cc=cc+hH;fK[#fK+1]=ca(cb,cc,hB(f6))end;if orbit~=nil and aq<0.2 and planet~=nil and orbit.apoapsis~=nil and orbit.periapsis~=nil and orbit.period~=nil and orbit.apoapsis.speed>5 and DisplayOrbit then hE=hE+hG;cb=hD+hF+hD/2+hG;cc=hE+hF/2+5+hG;hI=hF/4;hL=0;fK[#fK+1]=[[<g class="pbright txtorb txtmid">]]fK[#fK+1]=e('<rect width="%f" height="%d" rx="10" ry="10" x="%d" y="%d" style="fill:rgb(0,0,100);stroke-width:4;stroke:white;fill-opacity:0.3;" />',hF+hD*2,hF+hE,hG,hG)if orbit.periapsis~=nil and orbit.apoapsis~=nil then hK=(orbit.apoapsis.altitude+orbit.periapsis.altitude+planet.radius*2)/(hI*2)hJ=(planet.radius+orbit.periapsis.altitude+(orbit.apoapsis.altitude-orbit.periapsis.altitude)/2)/hK*(1-orbit.eccentricity)hL=hI-orbit.periapsis.altitude/hK-planet.radius/hK;local hP=""if orbit.periapsis.altitude<=0 then hP='redout'end;fK[#fK+1]=e([[<ellipse class="%s line" cx="%f" cy="%f" rx="%f" ry="%f"/>]],hP,hD+hF/2+hL+hG,hE+hF/2+hG,hI,hJ)fK[#fK+1]=e('<circle cx="%f" cy="%f" r="%f" stroke="white" stroke-width="3" fill="blue" />',hD+hF/2+hG,hE+hF/2+hG,planet.radius/hK)end;if orbit.apoapsis~=nil and orbit.apoapsis.speed<MaxGameVelocity and orbit.apoapsis.speed>1 then hM("Apoapsis")end;cc=hE+hF/2+5+hG;cb=hD-hD/2+10+hG;if orbit.periapsis~=nil and orbit.periapsis.speed<MaxGameVelocity and orbit.periapsis.speed>1 then hM("Periapsis")end;fK[#fK+1]=ca(hD+hF/2+hG,planet.name,20+hG,"txtorbbig")if orbit.period~=nil and orbit.periapsis~=nil and orbit.apoapsis~=nil and orbit.apoapsis.speed>1 then local hQ=orbit.timeToApoapsis/orbit.period*2*math.pi;local hR=hI*math.cos(hQ)local hS=hJ*math.sin(hQ)fK[#fK+1]=e('<circle cx="%f" cy="%f" r="5" stroke="white" stroke-width="3" fill="white" />',hD+hF/2+hR+hL+hG,hE+hF/2+hS+hG)end;fK[#fK+1]=[[</g>]]return fK else return fK end end;local function hT()if radarPanelID~=nil and aj==0 then s(radarPanelID)radarPanelID=nil;if perisPanelID~=nil then s(perisPanelID)perisPanelID=nil end else if aj==1 then s(radarPanelID)radarPanelID=nil;_autoconf.displayCategoryPanel(radar,radar_size,L_TEXT("ui_lua_widget_periscope", "Periscope"),"periscope")perisPanelID=_autoconf.panels[_autoconf.panels_size]end;placeRadar=true;if radarPanelID==nil and placeRadar then _autoconf.displayCategoryPanel(radar,radar_size,L_TEXT("ui_lua_widget_radar", "Radar"),"radar")radarPanelID=_autoconf.panels[_autoconf.panels_size]placeRadar=false end;aj=0 end end;local function hU(fK)local cb=30;local cc=275;local hV={"Alt-1: Increment Interplanetary Helper","Alt-2: Decrement Interplanetary Helper","Alt-3: Toggle Vanilla Widget view"}local hW={"","------------------IN ATMO-----------------","Alt-4: Autopilot in atmo to target","Alt-4-4: Autopilot to LowOrbitHeight over atmosphere and orbit to target","Alt-6: Altitude hold at current altitude","Alt-6-6: Altitude Hold at 11% atmosphere"}local hX={"","------------------NO ATMO-----------------","Alt-4 (Alt < 100k): Autopilot to Orbit and land","Alt-4 (Alt > 100k): Autopilot to target","Alt-6: Orbit at current altitude","Alt-6-6: Orbit at LowOrbitHeight over atmosphere"}local hY={"","------------------ALWAYS--------------------","Alt-5: Lock Pitch at current pitch","Alt-7: Toggle InHud Sounds","Alt-8: Toggle ground stabilization (underwater flight)","Alt-9: Activate Gyroscope","","CTRL: Toggle Brakes on and off, cancels active AP","LeftAlt: Tap to shift freelook on and off","Shift: Hold while not in freelook to see Buttons","Type /commands or /help in lua chat to see text commands"}if ap then c0(hV,hW)table.insert(hV,"--------------CONDITIONAL-----------------")if VertTakeOff then table.insert(hV,"Hit Alt-6 before exiting Atmosphere during VTO to hold in level flight")end;if an~=-1 then if antigrav then if bL then table.insert(hV,"Alt-6: AGG is on, will takeoff to AGG Height")else table.insert(hV,"Turn on AGG to takeoff to AGG Height")end end;if VertTakeOffEngine then table.insert(hV,"Alt-6: Begins Vertical Takeoff.")else table.insert(hV,"Alt-4/Alt-6: Autotakeoff if below hoverheight")end else table.insert(hV,"G: Begin BrakeLanding or Land")end else c0(hV,hX)end;if AltitudeHold then table.insert(hV,"Alt-Spacebar/Alt-C will raise/lower target height")end;c0(hV,hY)for i=1,#hV do cc=cc+12;fK[#fK+1]=ca(cb,cc,hV[i],"pdim txttick txtstart")end end;local function hZ(h_,i0)local i1;local i2=(i0-h_):normalize()local fa=(bI-h_):dot(i2)/i2:dot(i2)if fa<=0.then return(bI-h_):len()elseif fa>=(i0-h_):len()then return(bI-i0):len()end;local i3=h_+fa*i2;i1=(i3-bI):len()return i1 end;local function i4()local i1;local i5=nil;local i6=nil;local i7=nil;for c_,i8 in pairs(b0[0])do if i8.hasAtmosphere then local ah=hZ(planet.center,i8.center)if i5==nil or ah<i5 then i6=i8;i5=ah;i7=planet end;if aa and aa.hasAtmosphere and aa.name~=planet.name then local ew=hZ(aa.center,i8.center)if ew<i5 then i6=i8;i5=ew;i7=aa end end end end;local i9=fE(1770)local ia=fF(330)if i5 then local ib="txttick "local ic=500000;if i5<i6.radius+ic or i5<i7.radius+ic then if bU then ib="txttick red "else ib="txttick orange "end end;i1=cn(i5,2)bW=ca(i9,ia,"Pipe ("..i7.name.."--"..i6.name.."): "..i1,ib.."pbright txtmid")end end;local id={}function id.HUDPrologue(fK)bU,fv,_,_=fw(bI)if not bU then D=PvPR;F=PvPG;E=PvPB else D=SafeR;F=SafeG;E=SafeB end;ay=[[rgb(]]..d(D+0.5)..","..d(F+0.5)..","..d(E+0.5)..[[)]]az=[[rgb(]]..d(D*0.9+0.5)..","..d(F*0.9+0.5)..","..d(E*0.9+0.5)..[[)]]local ie=ay;local ig=az;local ih=ay;local ii=az;if fG()and not brightHud then ie=[[rgb(]]..d(D*0.4+0.5)..","..d(F*0.4+0.5)..","..d(E*0.3+0.5)..[[)]]ig=[[rgb(]]..d(D*0.3+0.5)..","..d(F*0.3+0.5)..","..d(E*0.2+0.5)..[[)]]end;fK[#fK+1]=e([[
                        <head>
                            <style>
                                body {margin: 0}
                                svg {position:absolute;top:0;left:0;font-family:Montserrat;} 
                                .txt {font-size:10px;font-weight:bold;}
                                .txttick {font-size:12px;font-weight:bold;}
                                .txtbig {font-size:14px;font-weight:bold;}
                                .altsm {font-size:16px;font-weight:normal;}
                                .altbig {font-size:21px;font-weight:normal;}
                                .line {stroke-width:2px;fill:none}
                                .linethick {stroke-width:3px;fill:none}
                                .warnings {font-size:26px;fill:red;text-anchor:middle;font-family:Bank}
                                .warn {fill:orange;font-size:24px}
                                .crit {fill:darkred;font-size:28px}
                                .bright {fill:%s;stroke:%s}
                                .pbright {fill:%s;stroke:%s}
                                .dim {fill:%s;stroke:%s}
                                .pdim {fill:%s;stroke:%s}
                                .red {fill:red;stroke:red}
                                .orange {fill:orange;stroke:orange}
                                .redout {fill:none;stroke:red}
                                .op30 {opacity:0.3}
                                .op10 {opacity:0.1}
                                .txtstart {text-anchor:start}
                                .txtend {text-anchor:end}
                                .txtmid {text-anchor:middle}
                                .txtvspd {font-family:sans-serif;font-weight:normal}
                                .txtvspdval {font-size:20px}
                                .txtfuel {font-size:11px;font-weight:bold}
                                .txtorb {font-size:12px}
                                .txtorbbig {font-size:18px}
                                .hudver {font-size:10px;font-weight:bold;fill:red;text-anchor:end;font-family:Bank}
                                .msg {font-size:40px;fill:red;text-anchor:middle;font-weight:normal}
                                .cursor {stroke:white}
                            </style>
                        </head>
                        <body>
                            <svg height="100%%" width="100%%" viewBox="0 0 %d %d">
                            ]],ie,ie,ih,ih,ig,ig,ii,ii,aI,aJ)return fK end;function id.DrawVerticalSpeed(fK,e6)ga(fK,e6)end;function id.UpdateHud(fK)local e6=ar;local f9=core.getVelocity()local f6=vec3(f9):len()local gZ=bO;local ij=bP;local gi=ij;local gx=bO;local hg=d(unit.getThrottle())local hl=f6*3.6;local hh=unit.getAxisCommandValue(0)local ik=fE(1770)local il=fF(310)if AtmoSpeedAssist and bN then hh=G;hg=G*100 end;local fI=fH()local gj="ROLL"local cw=unit.getClosestPlanetInfluence()>0;if hg==nil then hg=0 end;if not cw then if f6>5 then gZ=gY(f9)ij=g_(f9)else gZ=0;ij=0 end;gj="YAW"end;if fv>50000 and not ap then local im;if fv>200000 then im=x(fv/200000,2).." su"else im=x(fv/1000,1).." km"end;fK[#fK+1]=ca(ik,il,"PvP Boundary: "..im,"pbright txtbig txtmid")end;fK[#fK+1]=ai;fK[#fK+1]=aD;fK[#fK+1]=bV;if bW~=""then fK[#fK+1]=bW end;if a_%aU==0 then aZ=true end;if fuelX~=0 and fuelY~=0 then fJ(fK,aZ,fuelX,"Atmospheric ","ATMO",aN,aX,aY)fJ(fK,aZ,fuelX+120,"Space fuel t","SPACE",aO,aV,aW)fJ(fK,aZ,fuelX+240,"Rocket fuel ","ROCKET",aP,aS,aT)end;if aZ then aZ=false;a_=0 end;a_=a_+1;ga(fK,e6)if l()==0 or RemoteHud then if not fG()or brightHud then if cw then gh(fK,centerX,centerY,gi,gj,cw)gw(fK,gx,gi,centerX,centerY,cw,d(g_(f9)),f6)else gh(fK,centerX,centerY,ij,gj,cw)gw(fK,gZ,ij,centerX,centerY,cw,d(ij),f6)end;gD(fK,e6,cw)h0(fK,f9,f6,centerX,centerY)end end;hf(fK,fI,hg,hh)hk(fK,hl)ho(fK)hC(fK)if showHelp then hU(fK)end;return fK end;function id.HUDEpilogue(fK)fK[#fK+1]="</svg>"return fK end;function id.ExtraData(fK)local io=fE(1240)local ip=fF(55)local iq=ip+10;local ir;local is=0;local fI=fH()if VertTakeOffEngine then fI=fI.."-VERTICAL"end;if TurnBurn then fI="TB-"..fI end;if not stablized then fI=fI.."-DeCoupled"end;local it=vec3(core.getWorldAcceleration()):len()/9.80665;ir=core.g()fK[#fK+1]=[[<g class="pdim txt txtend">]]if l()==1 and not RemoteHud then io=fE(1120)ip=fF(55)iq=ip+10 elseif ap then local iu=fE(770)fK[#fK+1]=ca(iu,ip,"ATMOSPHERE","pdim txt txtend")fK[#fK+1]=ca(iu,iq,e("%.2f",aq),"pdim txt txtend","")end;fK[#fK+1]=ca(io,ip,"GRAVITY","pdim txt txtend")fK[#fK+1]=ca(io,iq,e("%.2f",ir/9.80665),"pdim txt txtend")fK[#fK+1]=ca(io,ip+20,"ACCEL","pdim txt txtend")fK[#fK+1]=ca(io,iq+20,e("%.2f",it),"pdim txt txtend")fK[#fK+1]=ca(fE(960),fF(180),fI,"txtbig txtmid")end;function id.DrawOdometer(fK,ab,TotalDistanceTravelled,ac)local ir;local iv=0;local iw=0;local is=0;if ap then is=LastMaxBrakeInAtmo else is=LastMaxBrake end;maxThrust=a:maxForceForward()ir=core.g()if ir>0.1 then iw=au*ir;iv=maxThrust/ir end;fK[#fK+1]=e([[
                        <g class="pbright txt">
                        <path class="linethick" d="M %d 0 L %d %d Q %d %d %d %d L %d 0"/>]],fE(660),fE(700),fF(35),fE(960),fF(55),fE(1240),fF(35),fE(1280))if l()==0 or RemoteHud then fK[#fK+1]=ca(fE(700),fF(20),e("Trip: %.2f km",ab),"txtstart")fK[#fK+1]=ca(fE(700),fF(30),e("Lifetime: %.2f kSU",TotalDistanceTravelled/200000),"txtstart")fK[#fK+1]=ca(fE(830),fF(20),"Trip Time: "..cR(ac),"txtstart")fK[#fK+1]=ca(fE(830),fF(30),"Total Time: "..cR(TotalFlightTime),"txtstart")fK[#fK+1]=ca(fE(970),fF(20),e("Mass: %.2f Tons",au/1000),"txtstart")fK[#fK+1]=ca(fE(1240),fF(10),e("Max Brake: %.2f kN",is/1000),"txtend")fK[#fK+1]=ca(fE(1240),fF(30),e("Max Thrust: %.2f kN",maxThrust/1000),"txtend")if ir>0.1 then fK[#fK+1]=ca(fE(970),fF(30),e("Max Mass: %.2f Tons",iv/1000),"txtstart")fK[#fK+1]=ca(fE(1240),fF(20),e("Req Thrust: %.2f kN",iw/1000),"txtend")else fK[#fK+1]=ca(fE(970),fF(30),"Max Mass: n/a","txtstart")fK[#fK+1]=ca(fE(1240),fF(20),"Req Thrust: n/a","txtend")end end;fK[#fK+1]="</g>"return fK end;function id.DrawWarnings(fK)return ho(fK)end;function id.DisplayOrbitScreen(fK)return hC(fK)end;function id.DisplayMessage(fK,hx)if hx~="empty"then local cc=310;for ix in string.gmatch(hx,"([^\n]+)")do cc=cc+35;fK[#fK+1]=ca("50%",cc,ix,"msg")end end;if ag~=0 then unit.setTimer("msgTick",ag)ag=0 end end;function id.DrawDeadZone(fK)fK[#fK+1]=e([[<circle class="dim line" style="fill:none" cx="50%%" cy="50%%" r="%d"/>]],DeadZone)end;function id.UpdatePipe()if ap then bW=""return end;i4()end;function id.UpdateRadarRoutine()local iy={}local function iz(iA,iB,iC,iD,iE,iF,iG,iH)iB,iD,iF,iH=vec3(iB),vec3(iD),vec3(iF),vec3(iH)local iI,iJ,iK=iA*iA,iC*iC,iE*iE;local d3=iD-iB;local iL=d3:normalize()local iM=d3:len()local d4=iF-iB;local iN=(d4-d4:project_on(iL)):normalize()local iO,iP=d4:dot(iL),d4:dot(iN)local iQ=iO*iO+iP*iP;local iR=iL:cross(iN)local cb=(iI-iJ+iM*iM)/(2*iM)local cc=(iI-iK+iQ-2*iO*cb)/(2*iP)local dJ=iI-cb^2-cc^2;local iS=math.sqrt(dJ)local iT=iB+iL*cb+iN*cc+iR*iS;local iU=iB+iL*cb+iN*cc-iR*iS;if math.abs((iH-iT):len()-iG)<math.abs((iH-iU):len()-iG)then return iT else return iU end end;local function iV(iW,fb)local iX=iW.pts;local cz=#iX;local iY=iW.ref;local iZ=getTrueWorldPos()if cz>4 then local i_=iX[cz]local j0=iX[cz-1]local j1=iX[cz-2]local j2=iX[cz-3]local db=iz(i_[1],i_[2],j0[1],j0[2],j1[1],j1[2],j2[1],j2[2])local cb,cc,iS=db.x,db.y,db.z;if cb==cb then cb=cb+iY[1]cc=cc+iY[2]iS=iS+iY[3]iW.ref=iZ;iW.center=vec3(cb,cc,iS)table.insert(iy,iW)end;iW.pts={}else local j3={iZ[1]-iY[1],iZ[2]-iY[2],iZ[3]-iY[3]}iW.pts[cz+1]={fb,j3}end end;if radar_1 then local j4=radar_1.getEntries()local j5=radar_1.getData()local j6=j5:gmatch('{"constructId[^}]*}[^}]*}')local j7=fE(1770)local j8=fF(350)if#j4>0 then local j9={}local ja=0;local iZ=getTrueWorldPos()for d0 in j6 do local dq,ah,jb=d0:match([[{"constructId":"([%d%.]*)","distance":([%d%.]*).-"size":"(%a+)"]])local jc=16;ah=tonumber(ah)if radar_1.hasMatchingTransponder(dq)==1 then table.insert(j9,dq)end;if ah>0 and radar_1.getConstructType(dq)=="static"then local f_=radar_1.getConstructName(dq)dq=tostring(dq)local iW=contacts[dq]if iW==nil then contacts[dq]={}contacts[dq].pts={}contacts[dq].ref=iZ;contacts[dq].name=f_;if jb=="L"then jc=128 elseif jb=="M"then jc=64 elseif jb=="S"then jc=32 end;contacts[dq].radius=jc/2+C/2 else iV(iW,ah)end end;ja=ja+1;if ja>100 then coroutine.yield()ja=0 end end;local dj,jd,je=castIntersections(bI,bE:normalize(),iy)iy={}if dj then system.print("COLLISION: "..dj.name.." N: "..jd)end;local jf=j5:find('identifiedConstructs":%[%]')if jf==nil and perisPanelID==nil then aj=1;hT()end;if jf~=nil and perisPanelID~=nil then hT()end;if radarPanelID==nil then hT()end;bV=ca(j7,j8,"Radar: "..#j4 .." contacts","pbright txtbig txtmid")if#j9>0 then local cc=fF(15)local cb=fE(1370)bV=bV..ca(cb,cc,"Friendlies In Range","pbright txtbig txtmid")for c_,d0 in pairs(j9)do cc=cc+20;bV=bV..ca(cb,cc,radar_1.getConstructName(d0),"pdim txtmid")end end else local jg;jg=j5:find('worksInEnvironment":false')if jg then bV=ca(j7,j8,"Radar: Jammed","pbright txtbig txtmid")else bV=ca(j7,j8,"Radar: No Contacts","pbright txtbig txtmid")end;if radarPanelID~=nil then aj=0;hT()end end end end;function id.UpdateRadar()local _,jh=coroutine.resume(UpdateRadarCoroutine)if jh then UpdateRadarCoroutine=coroutine.create(id.UpdateRadarRoutine)end end;function id.DrawSettings(fK)if#bR>0 then local cb=fE(640)local cc=fF(200)fK[#fK+1]=[[<g class="pbright txtvspd txtstart">]]for c_,d0 in pairs(bR)do fK[#fK+1]=ca(cb,cc,d0 ..": ".._G[d0])cc=cc+20;if c_%12==0 then cb=cb+fE(350)cc=fF(200)end end;fK[#fK+1]=ca(fE(640),fF(200)+260,"To Change: In Lua Chat, enter /G VariableName Value")fK[#fK+1]="</g>"end;return fK end;UpdateRadarCoroutine=coroutine.create(id.UpdateRadarRoutine)return id end;local function ji()local function jj()local function jk(jl,jm)return jl.name<jm.name end;bT={}for c_,d0 in pairs(b0[0])do bT[#bT+1]={name=d0.name,index=c_}end;table.sort(bT,jk)end;local dy={}function dy.UpdateAtlasLocationsList()jj()end;function dy.UpdateAutopilotTarget()if AutopilotTargetIndex==0 then AutopilotTargetName="None"aa=nil;CustomTarget=nil;return true end;local jn=bT[AutopilotTargetIndex].index;local jo=b0[0][jn]if jo.center then AutopilotTargetName=jo.name;aa=b5[0][jn]if CustomTarget~=nil then if aq==0 then if t(widgetMaxBrakeTimeText,widgetMaxBrakeTime)~=1 then u(widgetMaxBrakeTimeText,widgetMaxBrakeTime)end;if t(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)~=1 then u(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)end;if t(widgetCurBrakeTimeText,widgetCurBrakeTime)~=1 then u(widgetCurBrakeTimeText,widgetCurBrakeTime)end;if t(widgetCurBrakeDistanceText,widgetCurBrakeDistance)~=1 then u(widgetCurBrakeDistanceText,widgetCurBrakeDistance)end;if t(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)~=1 then u(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)end end;if t(widgetMaxMassText,widgetMaxMass)~=1 then u(widgetMaxMassText,widgetMaxMass)end;if t(widgetTravelTimeText,widgetTravelTime)~=1 then u(widgetTravelTimeText,widgetTravelTime)end;if t(widgetTargetOrbitText,widgetTargetOrbit)~=1 then u(widgetTargetOrbitText,widgetTargetOrbit)end end;CustomTarget=nil else CustomTarget=jo;for _,d0 in pairs(b5[0])do if d0.name==CustomTarget.planetname then aa=d0;AutopilotTargetName=CustomTarget.name;break end end;if t(widgetMaxMassText,widgetMaxMass)~=1 then u(widgetMaxMassText,widgetMaxMass)end;if t(widgetTravelTimeText,widgetTravelTime)~=1 then u(widgetTravelTimeText,widgetTravelTime)end end;if CustomTarget==nil then AutopilotTargetCoords=vec3(aa.center)else AutopilotTargetCoords=CustomTarget.position end;if aa.planetname~="Space"then if aa.hasAtmosphere then AutopilotTargetOrbit=d(aa.radius*(TargetOrbitRadius-1)+aa.noAtmosphericDensityAltitude)else AutopilotTargetOrbit=d(aa.radius*(TargetOrbitRadius-1)+aa.surfaceMaxAltitude)end else AutopilotTargetOrbit=1000 end;if CustomTarget~=nil and CustomTarget.planetname=="Space"then AutopilotEndSpeed=0 else _,AutopilotEndSpeed=b8(aa):escapeAndOrbitalSpeed(AutopilotTargetOrbit)end;AutopilotPlanetGravity=0;AutopilotAccelerating=false;AutopilotBraking=false;AutopilotCruising=false;Autopilot=false;AutopilotRealigned=false;AutopilotStatus="Aligning"return true end;function dy.adjustAutopilotTargetIndex(ge)if not Autopilot and not VectorToTarget and not al and not IntoOrbit then if ge==nil then AutopilotTargetIndex=AutopilotTargetIndex+1;if AutopilotTargetIndex>#bT then AutopilotTargetIndex=0 end else AutopilotTargetIndex=AutopilotTargetIndex-1;if AutopilotTargetIndex<0 then AutopilotTargetIndex=#bT end end;if AutopilotTargetIndex==0 then ba.UpdateAutopilotTarget()else local jn=bT[AutopilotTargetIndex].index;local jo=b0[0][jn]if jo.name=="Space"or iphCondition=="Custom Only"and jo.center or iphCondition=="No Moons"and string.find(jo.name,"Moon")~=nil then if ge==nil then ba.adjustAutopilotTargetIndex()else ba.adjustAutopilotTargetIndex(1)end else ba.UpdateAutopilotTarget()end end else a0="Disengage autopilot before changing Interplanetary Helper"bY("iph","AP")end end;function dy.findAtlasIndex(jp)for c_,d0 in pairs(jp)do if d0.name and d0.name==CustomTarget.name then return c_ end end;return-1 end;for c_,d0 in pairs(SavedLocations)do table.insert(b0[0],d0)end;jj()dy.UpdateAutopilotTarget()return dy end;local function jq()local jr={}local js={vec3(bE),-vec3(bE),vec3(bB),-vec3(bB),vec3(bD),-vec3(bD)}local function jt(f6)local ju=AutopilotEndSpeed;if not Autopilot then ju=0 end;if not ap then return b6.computeDistanceAndTime(f6,ju,au,0,0,LastMaxBrake-AutopilotPlanetGravity*au)else if LastMaxBrakeInAtmo and LastMaxBrakeInAtmo>0 then return b6.computeDistanceAndTime(f6,ju,au,0,0,LastMaxBrakeInAtmo-AutopilotPlanetGravity*au)else return 0,0 end end end;local function jv(f6)local ju=AutopilotEndSpeed;if not Autopilot then ju=0 end;return b6.computeDistanceAndTime(f6,ju,au,a:maxForceForward(),warmup,LastMaxBrake-AutopilotPlanetGravity*au)end;function jr.GetAutopilotBrakeDistanceAndTime(f6)return jt(f6)end;function jr.GetAutopilotTBBrakeDistanceAndTime(f6)return jv(f6)end;local function jw(jx,jy,jz)jy=jy:project_on_plane(jx)jz=jz:project_on_plane(jx)return m(jy:cross(jz):dot(jx),jy:dot(jz))end;local function jA()local function jB()local jC=-1;local jD=-1;if vBooster then jC=vBooster.distance()end;if hover then jD=hover.distance()end;if jC~=-1 and jD~=-1 then if jC<jD then return jC else return jD end elseif jC~=-1 then return jC elseif jD~=-1 then return jD else return-1 end end;local jE=jB()local jF=-1;if telemeter_1 then jF=telemeter_1.getDistance()end;if jE~=-1 and jF~=-1 then if jE<jF then return jE else return jF end elseif jE~=-1 then return jE else return jF end end;local function jG(planet,es,jH)local function jI(jJ,d_)local ey=vec3(d_)if jJ.bodyId==0 then return setmetatable({latitude=ey.x,longitude=ey.y,altitude=ey.z,bodyId=0,systemId=jJ.planetarySystemId},MapPosition)end;local ez=ey-jJ.center;local ah=ez:len()local e6=ah-jJ.radius;local e4=0;local e5=0;if not ck(ah,0)then local eA=m(ez.y,ez.x)e5=eA>=0 and eA or 2*math.pi+eA;e4=math.pi/2-math.acos(ez.z/ah)end;return setmetatable({latitude=math.deg(e4),longitude=math.deg(e5),altitude=e6,bodyId=jJ.bodyId,systemId=jJ.planetarySystemId},MapPosition)end;local jK=jI(planet,es)jK="::pos{"..jK.systemId..","..jK.bodyId..","..jK.latitude..","..jK.longitude..","..jK.altitude.."}"if jH then return jK else system.setWaypoint(jK)return true end end;function jr.showWayPoint(planet,es,jH)return jG(planet,es,jH)end;function jr.APTick()ap=j()>0;aq=j()ar=core.getAltitude()an=jA()A=p()bh=A;if antigrav then bL=antigrav.getState()==1 end;local jL=1;local jM=1;local jN=A-bh;local jO=-math.deg(jw(bB,bE,bC))local jP=math.deg(jw(bD,bE,bC))local ge=bG*-1;bg=ap and jO<-YawStallAngle or jO>YawStallAngle or jP<-PitchStallAngle or jP>PitchStallAngle;local jQ=system.getMouseDeltaX()local jR=system.getMouseDeltaY()if InvertMouse and not Z then jR=-jR end;T=0;X=0;S=0;sys=b5[0]planet=sys:closestBody(core.getConstructWorldPos())kepPlanet=b8(planet)orbit=kepPlanet:orbitalParameters(core.getConstructWorldPos(),bE)if ar==0 then ar=(bI-planet.center):len()-planet.radius end;local ir=planet:getGravity(core.getConstructWorldPos()):len()*au;bi=0;b7=core.getMaxKinematicsParametersAlongAxis("ground",core.getConstructOrientationUp())[1]if w()==0 then if l()==1 and Z then if not bc then ae=ae+jQ;af=af+jR end else ae=0;af=0 end else ae=ae+jQ;af=af+jR;ah=math.sqrt(ae*ae+af*af)if not Z and l()==0 then if userControlScheme=="virtual joystick"then if ae>0 and ae>DeadZone then T=T-(ae-DeadZone)*MouseXSensitivity elseif ae<0 and ae<DeadZone*-1 then T=T-(ae+DeadZone)*MouseXSensitivity else T=0 end;if af>0 and af>DeadZone then S=S-(af-DeadZone)*MouseYSensitivity elseif af<0 and af<DeadZone*-1 then S=S-(af+DeadZone)*MouseYSensitivity else S=0 end else ae=0;af=0;if userControlScheme=="mouse"then S=(-utils.smoothstep(jR,-100,100)+0.5)*2*jL;T=(-utils.smoothstep(jQ,-100,100)+0.5)*2*jM end end end end;local jS=bF>8334;if bF>SpaceSpeedLimit/3.6 and not ap and not Autopilot and not jS then a0="Space Speed Engine Shutoff reached"cg(0)end;if not jS and LastIsWarping then if not BrakeIsOn then cC()end;if Autopilot then cu()end end;LastIsWarping=jS;if ap and aq>0.09 then if bF>bl/3.6 and not AtmoSpeedAssist and not ax then BrakeIsOn=true;ax=true elseif not AtmoSpeedAssist and ax then if bF<bl/3.6 then BrakeIsOn=false;ax=false end end end;if BrakeIsOn then W=1 else W=0 end;if ProgradeIsOn then if ak then BrakeIsOn=false;local jT=false;if CustomTarget~=nil then jT=cD(CustomTarget.position-bI,0.1)else jT=cD(vec3(bE),0.01)end;be=true;if jT then cj(d(bl))if(c(bP)<2 or c(bO)>85)and bF>=bl/3.6-1 then BrakeIsOn=false;ProgradeIsOn=false;P=true;ak=false;am=true;Autopilot=false;cP()end elseif ap and AtmoSpeedAssist then cg(1)end elseif bF>O then cD(vec3(bE),0.01)end end;if RetrogradeIsOn then if ap then RetrogradeIsOn=false elseif bF>O then cD(-vec3(bE))end end;if not ProgradeIsOn and ak and not IntoOrbit then if aq==0 then P=true;cP()ak=false;am=true else ak=false;cu()end end;if am and CustomTarget~=nil and(ar<HoldAltitude+250 and ar>HoldAltitude-250)and bF*3.6>bl-250 and c(bH)<25 and aq>=0.1 and(CustomTarget.position-bI):len()>2000+ar then cu()am=false end;if VertTakeOff then be=true;local jU=HoldAltitude;if bH<-30 then a0="Unable to achieve lift. Safety Landing."ad=0;be=autoRollPreference;VertTakeOff=false;BrakeLanding=true elseif not ExternalAGG and bL or HoldAltitude<planet.spaceEngineMinAltitude then if bL then jU=antigrav.getBaseAltitude()end;if ar<jU-100 then bm=0;ad=15;BrakeIsOn=false elseif bH>0 then BrakeIsOn=true;ad=0 elseif bH<-30 then BrakeIsOn=true;ad=15 elseif ar>=jU then if bL then if Autopilot or VectorToTarget then cq()else BrakeIsOn=true;VertTakeOff=false end;a0="Takeoff complete. Singularity engaged"bY("aggLk","AG")else BrakeIsOn=false;a0="VTO complete. Engaging Horizontal Flight"bY("vtoc","VT")cq()end;ad=0 end else if aq>0.08 then bm=0;BrakeIsOn=false;ad=20 elseif aq<0.08 and aq>0 then BrakeIsOn=false;if by then bm=0;ad=20 else ad=0;bm=36;cj(3500)end else be=autoRollPreference;IntoOrbit=true;bw=false;CancelIntoOrbit=false;bq=false;bo=nil;bp=nil;if bv==nil then bv=planet end;bu=jU;bt=true;VertTakeOff=false end end;if bm~=nil then if vTpitchPID==nil then vTpitchPID=pid.new(2*0.01,0,2*0.1)end;local jV=q(bm-bO,-PitchStallAngle*0.80,PitchStallAngle*0.80)vTpitchPID:inject(jV)local jW=q(vTpitchPID:get(),-1,1)S=jW end end;if IntoOrbit then local cM;local jX=false;local jY=cn(bu)if bv==nil then bv=planet;if VectorToTarget then bv=aa end end;if not bt then bu=d(bv.radius+bv.surfaceMaxAltitude+LowOrbitHeight)if bv.hasAtmosphere then bu=d(bv.radius+bv.noAtmosphericDensityAltitude+LowOrbitHeight)end;bt=true end;if bs.VectorToTarget then cM=CustomTarget.position-bI end;local jZ,j_=b8(bv):escapeAndOrbitalSpeed((bI-bv.center):len()-bv.radius)local k0=bP;if not bq then local k1=false;local k2=false;cg(0)bp=0;bn="Aligning to orbital path - OrbitHeight: "..jY;if bs.VectorToTarget then cD(cM:normalize():project_on_plane(bG))jX=bC:dot(cM:project_on_plane(bB):normalize())>0.95 else cD(bE)jX=jO<0.5;if bF<150 then jX=true end end;S=0;bo=0;if bO<=bo+1 and bO>=bo-1 then k1=true else k1=false end;if k0<=bp+1 and k0>=bp-1 then k2=true else k2=false end;if k1 and k2 and jX then bo=nil;bp=nil;bq=true end else if bs.VectorToTarget then cD(cM:normalize():project_on_plane(bG))elseif bF>150 then cD(bE)end;S=0;if bs.VectorToTarget then local a6,_=b6.computeDistanceAndTime(bF,bl/3.6,au,0,0,LastMaxBrake)if bw and cM:len()>15000+a6+ar then bn="Orbiting to Target"if ar-100<=bv.noAtmosphericDensityAltitude or travelTime>orbit.timeToPeriapsis and orbit.periapsis.altitude<bv.noAtmosphericDensityAltitude then bw=false end elseif bw or cM:len()<15000+a6+ar then a0="Orbit complete, proceeding with reentry"bY("orCom","OB")AutopilotTargetCoords=CustomTarget.position;P=true;am=true;bs.VectorToTarget,bs.AutopilotAlign=false,false;cr()cP()end end;if orbit.periapsis~=nil and orbit.apoapsis~=nil and orbit.eccentricity<1 and ar>bu*0.9 and ar<bu*1.4 then if orbit.apoapsis~=nil then if orbit.periapsis.altitude>=bu*0.99 and orbit.apoapsis.altitude>=bu*0.99 and orbit.periapsis.altitude<orbit.apoapsis.altitude and orbit.periapsis.altitude*1.05>=orbit.apoapsis.altitude or bw then if bw then BrakeIsOn=false;cg(0)bo=0;if not bs.VectorToTarget then a0="Orbit complete"bY("orCom","OB")cr()end else bA=bA+1;if bA>=2 then bw=true end end else bn="Adjusting Orbit - OrbitHeight: "..jY;br=true;cj(j_*3.6+1)if VSpdPID==nil then VSpdPID=pid.new(0.5,0,10*0.1)end;local k3=bH;local k4=ar-bu;local k5=c(k4)if bH<10 and c(bO)<10 and k5<100 then k3=bH*2 end;if k3<10 and c(bO)<10 and k5<100 then k3=k3*2 end;if k3<5 and c(bO)<5 and k5<100 then k3=k3*4 end;VSpdPID:inject(k3)bo=q(-VSpdPID:get(),-90,90)if OrbitAltPID==nil then OrbitAltPID=pid.new(0.15,0,5*0.1)end;OrbitAltPID:inject(k4)bo=q(bo-q(OrbitAltPID:get(),-15,15),-90,90)end end else local k6=2.75;local k7=c(o(jZ*k6))local k8=k7%50;if k8>0 then k7=k7-k8+50 end;BrakeIsOn=false;if ar<bu*0.8 then bn="Escaping planet gravity - OrbitHeight: "..jY;bo=utils.map(bH,200,0,-15,80)elseif ar>=bu*0.8 and ar<bu*1.15 then bn="Approaching orbital corridor - OrbitHeight: "..jY;k7=k7*0.75;bo=utils.map(bH,100,-100,-15,65)elseif ar>=bu*1.15 and ar<bu*1.5 then bn="Approaching orbital corridor - OrbitHeight: "..jY;k7=k7*0.75;if bH<0 or br then bo=utils.map(ar,bu*1.5,bu*1.01,-30,0)else bo=utils.map(ar,bu*0.99,bu*1.5,0,30)end elseif ar>bu*1.5 then bn="Reentering orbital corridor - OrbitHeight: "..jY;bo=-65;local k9=utils.map(bH,-150,-400,1,0.55)k7=k7*k9 end;cj(d(k7))end end;if bo~=nil then if OrbitPitchPID==nil then OrbitPitchPID=pid.new(1*0.01,0,5*0.1)end;local ka=bo-bO;OrbitPitchPID:inject(ka)local kb=q(OrbitPitchPID:get(),-0.5,0.5)S=kb end end;if Autopilot and aq==0 and not ak then local function kc(kd,orbit)system.print(kd)BrakeIsOn=false;AutopilotBraking=false;Autopilot=false;TargetSet=false;AutopilotStatus="Aligning"cg(0)N=false;a0=kd;bY("apCom","AP")if orbit or ak then if orbit and AutopilotTargetOrbit~=nil and not ak then if not ar or ar==0 then return end;bu=ar;bt=true end;cr()end end;local ke,kf=AutopilotTargetCoords,false;if CustomTarget~=nil and CustomTarget.planetname~="Space"then AutopilotRealigned=true;if not TargetSet then local kg=(CustomTarget.position-aa.center):normalize()local kh=kg:project_on_plane((aa.center-bI):normalize()):normalize()local ki=aa.center+kh*(aa.radius+AutopilotTargetOrbit)local kj=CustomTarget.position+(CustomTarget.position-aa.center):normalize()*(AutopilotTargetOrbit-aa:getAltitude(CustomTarget.position))if(bI-ki):len()<(bI-kj):len()then ke=ki else ke=kj;AutopilotEndSpeed=0 end;AutopilotTargetCoords=ke;bb.showWayPoint(aa,AutopilotTargetCoords)kf=true;TargetSet=true end;AutopilotPlanetGravity=0 elseif CustomTarget~=nil and CustomTarget.planetname=="Space"then AutopilotPlanetGravity=0;kf=true;TargetSet=true;AutopilotRealigned=true;ke=CustomTarget.position+(bI-CustomTarget.position)*AutopilotTargetOrbit elseif CustomTarget==nil then AutopilotPlanetGravity=0;if not TargetSet then local kg=(bI+bE*100000-aa.center):normalize()local kh=kg:project_on_plane((aa.center-bI):normalize()):normalize()if kh:len()<1 then kg=(bI+bC*100000-aa.center):normalize()kh=kg:project_on_plane((aa.center-bI):normalize()):normalize()end;ke=aa.center+kh*(aa.radius+AutopilotTargetOrbit)AutopilotTargetCoords=ke;TargetSet=true;kf=true;AutopilotRealigned=true;bb.showWayPoint(aa,AutopilotTargetCoords)end end;AutopilotDistance=(vec3(ke)-bI):len()local hy,dw,dx=b5:getPlanetarySystem(0):castIntersections(bI,bE:normalize(),function(dj)if dj.noAtmosphericDensityAltitude>0 then return dj.radius+dj.noAtmosphericDensityAltitude else return dj.radius+dj.surfaceMaxAltitude*1.5 end end)local hz=dw;if dx~=nil and dw~=nil then hz=math.min(dx,dw)end;if hz~=nil and hz<AutopilotDistance and hy.name==aa.name then AutopilotDistance=hz end;local jT=true;local kk=(aa.center-(bI+vec3(bE):normalize()*AutopilotDistance)):len()-aa.radius;local hx=cn(kk)t(widgetTrajectoryAltitudeText,'{"label": "Projected Altitude", "value": "'..hx..'"}')local a6,a7;if not TurnBurn then a6,a7=jt(bF)else a6,a7=jv(bF)end;if bF>300 and AutopilotAccelerating then local cM=vec3(ke)-bI;local kl=q(math.deg(jw(bB,bE:normalize(),cM:normalize()))*bF/500,-90,90)local km=q(math.deg(jw(bD,bE:normalize(),cM:normalize()))*bF/500,-90,90)if c(kl)<20 and c(km)<20 then kl=kl*2;km=km*2 end;if c(kl)<2 and c(km)<2 then kl=kl*2;km=km*2 end;local jO=-math.deg(jw(bB,bC,bE:normalize()))local jP=-math.deg(jw(bD,bC,bE:normalize()))if apPitchPID==nil then apPitchPID=pid.new(2*0.01,0,2*0.1)end;apPitchPID:inject(km-jP)local kn=q(apPitchPID:get(),-1,1)S=S+kn;if apYawPID==nil then apYawPID=pid.new(2*0.01,0,2*0.1)end;apYawPID:inject(kl-jO)local ko=q(apYawPID:get(),-1,1)T=T+ko;kf=true;if c(kl)>2 or c(km)>2 then if AutopilotStatus~="Adjusting Trajectory"then AutopilotStatus="Adjusting Trajectory"bY("apAdj","AP")end else if AutopilotStatus~="Accelerating"then AutopilotStatus="Accelerating"bY("apAcc","AP")end end end;if kk<AutopilotTargetOrbit*1.5 then if CustomTarget~=nil and CustomTarget.planetname=="Space"then AutopilotEndSpeed=0 elseif CustomTarget==nil then _,AutopilotEndSpeed=b8(aa):escapeAndOrbitalSpeed(kk)end end;if not AutopilotCruising and not AutopilotBraking and not kf then jT=cD((ke-bI):normalize())elseif TurnBurn and(AutopilotBraking or AutopilotCruising)then jT=cD(-vec3(bE):normalize())end;if AutopilotAccelerating then if not N then BrakeIsOn=false;cg(AutopilotInterplanetaryThrottle)G=x(AutopilotInterplanetaryThrottle,2)N=true end;local kp=unit.getThrottle()if AtmoSpeedAssist then kp=G end;if vec3(core.getVelocity()):len()>=MaxGameVelocity or kp==0 and N then AutopilotAccelerating=false;if AutopilotStatus~="Cruising"then bY("apCru","AP")AutopilotStatus="Cruising"end;AutopilotCruising=true;cg(0)end;if AutopilotDistance<=a6 then AutopilotAccelerating=false;if AutopilotStatus~="Braking"then bY("apBrk","AP")AutopilotStatus="Braking"end;AutopilotBraking=true;cg(0)N=false end elseif AutopilotBraking then if AutopilotStatus~="Orbiting to Target"then BrakeIsOn=true;W=1 end;if TurnBurn then cg(1,true)end;local _,j_=b8(aa):escapeAndOrbitalSpeed((bI-planet.center):len()-planet.radius)local cM;if CustomTarget~=nil then cM=CustomTarget.position-bI end;if CustomTarget~=nil and CustomTarget.planetname=="Space"and bF<50 then kc("Autopilot complete, arrived at space location")BrakeIsOn=true;W=1 elseif CustomTarget~=nil and CustomTarget.planetname~="Space"and bF<=j_ and(orbit.apoapsis==nil or orbit.periapsis==nil or orbit.apoapsis.altitude<=0 or orbit.periapsis.altitude<=0)then kc("Autopilot complete, commencing reentry")AutopilotTargetCoords=CustomTarget.position;ak=true;bb.showWayPoint(aa,AutopilotTargetCoords)elseif orbit.periapsis~=nil and orbit.periapsis.altitude>0 and orbit.eccentricity<1 or AutopilotStatus=="Circularizing"then if AutopilotStatus~="Circularizing"then bY("apCir","AP")AutopilotStatus="Circularizing"end;if bF<=j_ then if CustomTarget~=nil then if bE:normalize():dot(cM:normalize())>0.4 then if AutopilotStatus~="Orbiting to Target"then bY("apOrb","OB")AutopilotStatus="Orbiting to Target"end;if not WaypointSet then BrakeIsOn=false;bb.showWayPoint(aa,CustomTarget.position)WaypointSet=true end else kc("Autopilot complete, proceeding with reentry")AutopilotTargetCoords=CustomTarget.position;ak=true;bb.showWayPoint(aa,CustomTarget.position)WaypointSet=false end else kc("Autopilot completed, setting orbit",true)W=0 end end elseif AutopilotStatus=="Circularizing"then kc("Autopilot complete, fixing Orbit",true)end elseif AutopilotCruising then if AutopilotDistance<=a6 then AutopilotAccelerating=false;if AutopilotStatus~="Braking"then bY("apBrk","AP")AutopilotStatus="Braking"end;AutopilotBraking=true end;local kp=unit.getThrottle()if AtmoSpeedAssist then kp=G end;if kp>0 then AutopilotAccelerating=true;if AutopilotStatus~="Accelerating"then AutopilotStatus="Accelerating"bY("apAcc","AP")end;AutopilotCruising=false end else if jT then if not AutopilotRealigned and CustomTarget==nil or not AutopilotRealigned and CustomTarget~=nil and CustomTarget.planetname~="Space"then if not ak then AutopilotTargetCoords=vec3(aa.center)+(AutopilotTargetOrbit+aa.radius)*bD;AutopilotShipUp=bB;AutopilotShipRight=bD end;AutopilotRealigned=true elseif jT then AutopilotAccelerating=true;if AutopilotStatus~="Accelerating"then AutopilotStatus="Accelerating"bY("apAcc","AP")end;if not N then cg(AutopilotInterplanetaryThrottle,true)G=x(AutopilotInterplanetaryThrottle,2)N=true;BrakeIsOn=false end end end end elseif Autopilot and(CustomTarget~=nil and CustomTarget.planetname~="Space"and aq>0)then a0="Autopilot complete, proceeding with reentry"bY("apCom","AP")AutopilotTargetCoords=CustomTarget.position;BrakeIsOn=false;AutopilotBraking=false;Autopilot=false;TargetSet=false;AutopilotStatus="Aligning"W=0;cg(0)N=false;ProgradeIsOn=true;ak=true;bb.showWayPoint(aa,CustomTarget.position)end;if Y then be=true;local km=0;local db=bI+vec3(unit.getMasterPlayerRelativePosition())local kq=db-bI;local kr=vec3(kq):project_on(bC):len()local ks=vec3(kq):project_on(bD):len()local ah=math.sqrt(kr*kr+ks*ks)cD(kq:normalize())local kt=40;local ku=ah<kt;local kv=100;local kw=q((ah-kt)/2,10,kv)S=0;local jT=c(T)<0.1;if jT and bF<kw and not ku then BrakeIsOn=false;km=-20 else BrakeIsOn=true;km=0 end;local kx=0;if c(km-bO)>kx then if pitchPID==nil then pitchPID=pid.new(2*0.01,0,2*0.1)end;pitchPID:inject(km-bO)local kn=pitchPID:get()S=kn end end;if AltitudeHold or BrakeLanding or Reentry or VectorToTarget or LockPitch~=nil then local cw=unit.getClosestPlanetInfluence()>0;local ky=HoldAltitude-ar;local kz=500+bF;local kA=1;if AutoTakeoff then kA=q(bF/100,0.1,1)end;local km=(utils.smoothstep(ky,-kz,kz)-0.5)*2*MaxPitch*kA;if not Reentry and not ak and not VectorToTarget and bC:dot(bE:normalize())<0.99 then km=(utils.smoothstep(ky,-kz*q(20-19*aq*10,1,20),kz*q(20-19*aq*10,1,20))-0.5)*2*MaxPitch*q(2-aq*10,1,2)*kA end;if not AltitudeHold then km=0 end;if LockPitch~=nil then if cw and not IntoOrbit then km=LockPitch else LockPitch=nil end end;be=true;local kB=S;if Reentry then local kC=d(bl)local kD,kE=b6.computeDistanceAndTime(bF,kC/3.6,au,0,0,LastMaxBrake-planet.gravity*9.8*au)local kF=ar-(planet.noAtmosphericDensityAltitude+5000)if not bN and ar>planet.noAtmosphericDensityAltitude+5000 and bF<=kC/3.6 and bF>kC/3.6-10 and c(bE:normalize():dot(bC))>0.9 then cg(0)elseif bN and bF>kC/3.6 and(kD>-1 and kF<=kD or ar<=planet.noAtmosphericDensityAltitude+5000)then BrakeIsOn=true else BrakeIsOn=false end;cj(kC,true)if not P then km=-80;if aq>0.02 then a0="PARACHUTE DEPLOYED"Reentry=false;BrakeLanding=true;km=0;be=autoRollPreference end elseif planet.noAtmosphericDensityAltitude>0 and ar>planet.noAtmosphericDensityAltitude+5000 then be=true elseif ar<=planet.noAtmosphericDensityAltitude+5000 then cj(kC)if not bN and r:getTargetSpeed(axisCommandId.longitudinal)==bl then P=false;Reentry=false;be=true end end end;if bF>O and not al and not VectorToTarget and not BrakeLanding and ForceAlignment then cD(vec3(bE))end;if bX or(VectorToTarget or al)and AutopilotTargetIndex>0 and aq>0.01 then local cM;if bX then if type(bX)=="table"then cM=bX elseif bX<3 and bX>0 then cM=-bG:cross(bE)*5000 elseif bX>=3 then cM=bG:cross(bE)*5000 elseif bX==0 then cM=bE*25000 end elseif CustomTarget~=nil then cM=CustomTarget.position-bI else cM=aa.center-bI end;local kl=math.deg(jw(bG:normalize(),bE,cM))*2;local kG=math.rad(c(bP))if bF>minRollVelocity and aq>0.01 then local kH=q(90-km*2,-90,90)bi=q(kl*2,-kH,kH)local kI=kl;kl=q(q(kl,-YawStallAngle*0.80,YawStallAngle*0.80)*math.cos(kG)+4*(bO-km)*math.sin(math.rad(bP)),-YawStallAngle*0.80,YawStallAngle*0.80)km=q(q(km*math.cos(kG),-PitchStallAngle*0.80,PitchStallAngle*0.80)+c(q(c(kI)*math.sin(kG),-PitchStallAngle*0.80,PitchStallAngle*0.80)),-PitchStallAngle*0.80,PitchStallAngle*0.80)else bi=0;kl=q(kl,-YawStallAngle*0.80,YawStallAngle*0.80)end;local kJ=jO-kl;if(type(bX)=="table"or bX==0)and c(kJ)<=0.0001 then if bX==0 then cs()end;bX=nil;bY("180Off","BR")return end;if not bg and bF>minRollVelocity and aq>0.01 then if yawPID==nil then yawPID=pid.new(2*0.01,0,2*0.1)end;yawPID:inject(kJ)local ko=q(yawPID:get(),-1,1)T=T+ko elseif ap and an>-1 or bF<minRollVelocity then cD(cM)elseif bg and aq>0.01 then if(jO<-YawStallAngle or jO>YawStallAngle)and aq>0.01 then cD(bE)end;if(jP<-PitchStallAngle or jP>PitchStallAngle)and aq>0.01 then km=q(bO-jP,bO-PitchStallAngle*0.80,bO+PitchStallAngle*0.80)end end;if CustomTarget~=nil and not al then local jU=planet:getAltitude(CustomTarget.position)local kF=math.sqrt(cM:len()^2-(ar-jU)^2)local kK=LastMaxBrakeInAtmo;if kK then kK=kK*q(bF/100,0.1,1)*aq else kK=LastMaxBrake end;if aq<0.01 then kK=LastMaxBrake end;local kL=bE:len()-c(bH)local kM=vec3(core.getWorldAirFrictionAcceleration())local kN=math.sqrt(kM:len()-kM:project_on(ge):len())*au;if bF>100 then a6,a7=b6.computeDistanceAndTime(bF,100,au,0,0,kK+kN)local kO,kP=b6.computeDistanceAndTime(100,0,au,0,0,kK/2)a6=a6+kO else a6,a7=b6.computeDistanceAndTime(bF,0,au,0,0,kK/2)end;StrongBrakes=true;if collisionAlertStatus=="active"or not al and not Reentry and kF<=a6+bF*jN/2 and(bE:project_on_plane(bG):normalize():dot(cM:project_on_plane(bG):normalize())>0.99 or VectorStatus=="Finalizing Approach")then VectorStatus="Finalizing Approach"cg(0)if AltitudeHold then cs()VectorToTarget=true end;BrakeIsOn=true elseif not AutoTakeoff then BrakeIsOn=false end;if collisionAlertStatus=="active"or VectorStatus=="Finalizing Approach"and(kL<0.1 or kF<0.1 or LastDistanceToTarget~=nil and LastDistanceToTarget<kF)then if not bL then bY("bklOn","BL")BrakeLanding=true end;VectorToTarget=false;VectorStatus="Proceeding to Waypoint"collisionAlertStatus=false end;LastDistanceToTarget=kF end elseif VectorToTarget and aq==0 and HoldAltitude>planet.noAtmosphericDensityAltitude and not(al or Reentry)then if CustomTarget~=nil and aa.name==planet.name then local cM=CustomTarget.position-bI;local jU=planet:getAltitude(CustomTarget.position)local kF=math.sqrt(cM:len()^2-(ar-jU)^2)local kK=LastMaxBrakeInAtmo;if kK then a6,a7=b6.computeDistanceAndTime(bF,0,au,0,0,kK/2)StrongBrakes=true;if kF<=a6+bF*jN/2 and bE:project_on_plane(bG):normalize():dot(cM:project_on_plane(bG):normalize())>0.99 then if planet.hasAtmosphere then BrakeIsOn=false;ProgradeIsOn=false;P=true;ak=false;am=true;Autopilot=false;cP()end end;LastDistanceToTarget=kF end end end;if aq==0 and(AltitudeHold and HoldAltitude>planet.noAtmosphericDensityAltitude)and not(al or IntoOrbit or Reentry)then if not bw and not IntoOrbit then bu=HoldAltitude;bt=true;if VectorToTarget then bs.VectorToTarget=true end;cr()VectorToTarget=false;bq=true end end;if bg and aq>0.01 and an==-1 and bF>minRollVelocity and VectorStatus~="Finalizing Approach"then cD(bE)km=q(bO-jP,bO-PitchStallAngle*0.80,bO+PitchStallAngle*0.80)end;S=kB;local jF=-1;if BrakeLanding then km=0;local kQ=false;local kR=30;if b7~=nil and b7>0 then local kS=q(aq,0.4,2)local kK=LastMaxBrakeInAtmo*q(bF/100,0.1,1)*kS;local kT=b7*kS+kK-ir;local kU=kK/2-ir;local kV=bF-math.sqrt(c(kU/2)*20/(0.5*au))*utils.sign(kU)if kV<0 then kV=0 end;local kW;if bF>100 then local kX,_=b6.computeDistanceAndTime(bF,100,au,0,0,kK)local kY,_=b6.computeDistanceAndTime(100,0,au,0,0,math.sqrt(kK))kW=kX+kY else kW=b6.computeDistanceAndTime(bF,0,au,0,0,math.sqrt(kK))end;if kW<20 then BrakeIsOn=false else local kZ=0;if kV>100 then local k_,_=b6.computeDistanceAndTime(kV,100,au,0,0,kT)local l0,_=b6.computeDistanceAndTime(100,0,au,0,0,b7*kS+math.sqrt(kK)-ir)kZ=k_+l0 else kZ,_=b6.computeDistanceAndTime(kV,0,au,0,0,b7*kS+math.sqrt(kK)-ir)end;kZ=(kZ+15+bF*jN)*1.1;local l1=CustomTarget~=nil and planet:getAltitude(CustomTarget.position)>0 and CustomTarget.safe;if l1 then local jU=planet:getAltitude(CustomTarget.position)local l2=ar-jU-100;local cM=CustomTarget.position-bI;local l3=math.sqrt(cM:len()^2-(ar-jU)^2)if l3>100 then l1=false elseif l2<=kZ or kZ==-1 then BrakeIsOn=true;kQ=true else BrakeIsOn=false;kQ=true end end;if not l1 and CalculateBrakeLandingSpeed then if kZ>=kR then BrakeIsOn=true else BrakeIsOn=false end;kQ=true end end end;if not bN then cg(0)end;r:setTargetGroundAltitude(500)r:activateGroundEngineAltitudeStabilization(500)stablized=true;jF=an;if jF>-1 then be=autoRollPreference;if bF<1 or bE:normalize():dot(bG)<0 then BrakeLanding=false;AltitudeHold=false;GearExtended=true;if Q then a.control.extendLandingGears()bY("grOut","LG",1)end;r:setTargetGroundAltitude(LandingGearGroundHeight)ad=0;BrakeIsOn=true else BrakeIsOn=true end elseif StrongBrakes and bE:normalize():dot(-ge)<0.999 then BrakeIsOn=true elseif bH<-brakeLandingRate and not kQ then BrakeIsOn=true elseif not kQ then BrakeIsOn=false end end;if AutoTakeoff or al then local hy,dx,dw;if AutopilotTargetCoords~=nil then hy,dx,dw=b5:getPlanetarySystem(0):castIntersections(bI,(AutopilotTargetCoords-bI):normalize(),function(dj)return dj.radius+dj.noAtmosphericDensityAltitude end)end;if bL then if ar>=HoldAltitude-50 then AutoTakeoff=false;if not Autopilot and not VectorToTarget then BrakeIsOn=true;cg(0)end else HoldAltitude=antigrav.getBaseAltitude()end elseif c(km)<15 and ar/HoldAltitude>0.75 then AutoTakeoff=false;if not al then if bN and not AtmoSpeedAssist then a.control.cancelCurrentControlMasterMode()end elseif al and bF<O then Autopilot=true;al=false;AltitudeHold=false;AutoTakeoff=false;cg(0)elseif al then cg(0)BrakeIsOn=true end elseif al and aq==0 and aa~=nil and(hy==nil or hy.name==aa.name)then Autopilot=true;al=false;AltitudeHold=false;AutoTakeoff=false;if not bN then cg(0)end;AutopilotAccelerating=true end end;local l4=an>-1;local l5=bO;if(VectorToTarget or al or bX)and not l4 and bF>minRollVelocity and aq>0.01 then local kG=math.rad(c(bP))l5=bO*c(math.cos(kG))+jP*math.sin(kG)end;local l6=q(km-l5,-PitchStallAngle*0.80,PitchStallAngle*0.80)if aq<0.01 and VectorToTarget then l6=q(km-l5,-85,MaxPitch)elseif aq<0.01 then l6=q(km-l5,-MaxPitch,MaxPitch)end;if c(bP)<5 or VectorToTarget or bX or BrakeLanding or l4 or AltitudeHold then if pitchPID==nil then pitchPID=pid.new(5*0.01,0,5*0.1)end;pitchPID:inject(l6)local kn=pitchPID:get()S=S+kn end end;if antigrav~=nil and(antigrav and not ExternalAGG and ar<200000)then if AntigravTargetAltitude==nil or AntigravTargetAltitude<1000 then AntigravTargetAltitude=1000 end;if desiredBaseAltitude~=AntigravTargetAltitude then desiredBaseAltitude=AntigravTargetAltitude;antigrav.setBaseAltitude(desiredBaseAltitude)end end end;an=jA()return jr end;function script.onStart()local function l7()local function l8(l9)local la=dbHud_1.hasKey;for c_,d0 in pairs(l9)do if la(d0)then local cJ=f(dbHud_1.getStringValue(d0))if cJ~=nil then _G[d0]=cJ;aK=true end end end end;if dbHud_1 then if not useTheseSettings then l8(c3())coroutine.yield()l8(b)else l8(b)a0="Updated user preferences used.  Will be saved when you exit seat.\nToggle off useTheseSettings to use saved values"ag=5;aK=false end;coroutine.yield()if aK then a0="Loaded Saved Variables"L=x(ResolutionX/2,0)M=x(ResolutionY/2,0)aI=ResolutionX;aJ=ResolutionY;BrakeToggleStatus=BrakeToggleDefault;userControlScheme=string.lower(userControlScheme)be=autoRollPreference;bl=AtmoSpeedLimit;ay=[[rgb(]]..d(D+0.5)..","..d(F+0.5)..","..d(E+0.5)..[[)]]az=[[rgb(]]..d(D*0.9+0.5)..","..d(F*0.9+0.5)..","..d(E*0.9+0.5)..[[)]]elseif not useTheseSettings then a0="No Saved Variables Found - Exit HUD to save settings"end else a0="No databank found. Attach one to control unit and rerun \nthe autoconfigure to save preferences and locations"end;if LastStartTime+180<A then LastMaxBrakeInAtmo=0 end;LastStartTime=A;userControlScheme=string.lower(userControlScheme)if string.find("keyboard virtual joystick mouse",userControlScheme)==nil then a0="Invalid User Control Scheme selected.\nChange userControlScheme in Lua Parameters to keyboard, mouse, or virtual joystick\nOr use shift and button in screen"ag=7 end;if antigrav and not ExternalAGG then if AntigravTargetAltitude==nil then AntigravTargetAltitude=ar end;antigrav.setBaseAltitude(AntigravTargetAltitude)end;if safeMass==0 then safeMass=au end;VectorStatus="Proceeding to Waypoint"end;local function lb()local function lc(ld,le)if ld>le then le=ld end;local lf,lg=0,0;if ContainerOptimization>0 then lf=ContainerOptimization*0.05 end;if FuelTankOptimization>0 then lg=FuelTankOptimization*0.05 end;le=le*(1-(lf+lg))return le end;local lh=core.getElementNameById;local li=fuelX~=0 and fuelY~=0;for c_ in pairs(as)do local type=core.getElementTypeById(as[c_])if n(type,'^.*Atmospheric Engine$')then if n(tostring(core.getElementTagsById(as[c_])),'^.*vertical.*$')then bK=true end end;if n(type,'^.*Space Engine$')then bz=true;if n(tostring(core.getElementTagsById(as[c_])),'^.*vertical.*$')then local lj=core.getElementRotationById(as[c_])if lj[4]<0 then if o(-lj[4],0.1)==0.5 then bx=true end else if o(lj[4],0.1)==0.5 then by=true end end end end;if type=="Landing Gear"then Q=true end;if type=="Dynamic Core Unit"then local lk=h(as[c_])if lk>10000 then C=128 elseif lk>1000 then C=64 elseif lk>150 then C=32 end end;aQ=aQ+h(as[c_])if li and(type=="Atmospheric Fuel Tank"or type=="Space Fuel Tank"or type=="Rocket Fuel Tank")then local lk=h(as[c_])local ll=k(as[c_])local ld=0;local g6=p()if type=="Atmospheric Fuel Tank"then local le=400;local lm=35.03;if lk>10000 then le=51200;lm=5480 elseif lk>1300 then le=6400;lm=988.67 elseif lk>150 then le=1600;lm=182.67 end;ld=ll-lm;if fuelTankHandlingAtmo>0 then le=le+le*fuelTankHandlingAtmo*0.2 end;le=lc(ld,le)aN[#aN+1]={as[c_],lh(as[c_]),le,lm,ld,g6}end;if type=="Rocket Fuel Tank"then local le=320;local lm=173.42;if lk>65000 then le=40000;lm=25740 elseif lk>6000 then le=5120;lm=4720 elseif lk>700 then le=640;lm=886.72 end;ld=ll-lm;if fuelTankHandlingRocket>0 then le=le+le*fuelTankHandlingRocket*0.1 end;le=lc(ld,le)aP[#aP+1]={as[c_],lh(as[c_]),le,lm,ld,g6}end;if type=="Space Fuel Tank"then local le=2400;local lm=182.67;if lk>10000 then le=76800;lm=5480 elseif lk>1300 then le=9600;lm=988.67 end;ld=ll-lm;if fuelTankHandlingSpace>0 then le=le+le*fuelTankHandlingSpace*0.2 end;le=lc(ld,le)aO[#aO+1]={as[c_],lh(as[c_]),le,lm,ld,g6}end end end;if not bK then VertTakeOff,VertTakeOffEngine=false,false end end;local function ln()if gyro~=nil then aw=gyro.getState()==1 end;if not stablized then r:deactivateGroundEngineAltitudeStabilization()end;if userControlScheme~="keyboard"then v(1)else v(0)end;if door and(ap or not ap and ar<10000)then for _,d0 in pairs(door)do d0.toggle()end end;if switch then for _,d0 in pairs(switch)do d0.toggle()end end;if forcefield and(ap or not ap==0 and ar<10000)then for _,d0 in pairs(forcefield)do d0.toggle()end end;if antigrav then bL=antigrav.getState()==1;if bL and not ExternalAGG then antigrav.show()end end;if l()==1 and RemoteFreeze then system.freeze(1)else system.freeze(0)end;if Q then GearExtended=a.control.isAnyLandingGearExtended()==1;if GearExtended then a.control.extendLandingGears()else a.control.retractLandingGears()end end;if an~=-1 or not ap and vec3(core.getVelocity()):len()<50 then BrakeIsOn=true;GearExtended=true;if Q then a.control.extendLandingGears()end else BrakeIsOn=false end;r:setTargetGroundAltitude(bf)if ap and an~=-1 then b7=core.getMaxKinematicsParametersAlongAxis("ground",core.getConstructOrientationUp())[1]end;WasInAtmo=ap end;local function lo(lp,lq,lr,ls,cb,cc,lt,lu,lv,lw)local lx={enableName=lp,disableName=lq,width=lr,height=ls,x=cb,y=cc,toggleVar=lt,toggleFunction=lu,drawCondition=lv,hovered=false}if lw then table.insert(aH,lx)else table.insert(aG,lx)end;return lx end;local function ly(lz)if not bQ then showHandlingVariables=false;showHudVariables=false;showPhysicsVariables=false;showHud=true;return elseif lz=="handling"then showHandlingVariables=not showHandlingVariables;showHudVariables=false;showPhysicsVariables=false elseif lz=="hud"then showHudVariables=not showHudVariables;showHandlingVariables=false;showPhysicsVariables=false elseif lz=="physics"then showPhysicsVariables=not showPhysicsVariables;showHandlingVariables=false;showHudVariables=false end;if showPhysicsVariables or showHudVariables or showHandlingVariables then bR=c3(lz)showHud=false else bR={}showHud=true end end;local function lA()bQ=not bQ;if bQ then aF=aH;a0="Hold SHIFT to see Settings"bS=showHud else aF=aG;a0="Hold SHIFT to see Control Buttons"ly()showHud=bS end end;local function lB(d0)_G[d0]=not _G[d0]if _G[d0]then a0=d0 .." set to true"else a0=d0 .." set to false"end;if d0=="showHud"then bS=_G[d0]elseif d0=="BrakeToggleDefault"then BrakeToggleStatus=BrakeToggleDefault elseif d0=="Cockpit"then system.showScreen(0)dbHud_1.setStringValue("content","")end end;local function lC()local lD=50;local lE=340;local cb=500;local cc=aJ/2-400;local lF=0;for c_,d0 in pairs(c3("boolean"))do if type(_G[d0])=="boolean"then lo(d0,d0,lE,lD,cb,cc,function()return _G[d0]end,function()lB(d0)end,function()return true end,true)cc=cc+lD+20;if lF==9 then cb=cb+lE+20;cc=aJ/2-400;lF=0 else lF=lF+1 end end end;lo("Control View","Control View",lE,lD,10,aJ/2-500,function()return true end,lA,function()return true end,true)lo("View Handling Settings",'Hide Handling Settings',lE,lD,10,aJ/2-(500-lD),function()return showHandlingVariables end,function()ly("handling")end,function()return true end,true)lo("View Hud Settings",'Hide Hud Settings',lE,lD,10,aJ/2-(500-lD*2),function()return showHudVariables end,function()ly("hud")end,function()return true end,true)lo("View Physics Settings",'Hide Physics Settings',lE,lD,10,aJ/2-(500-lD*3),function()return showPhysicsVariables end,function()ly("physics")end,function()return true end,true)end;local function lG()local function lH()if dbHud_1 then local position=bI;local f_=planet.name..". "..#SavedLocations;if radar_1 then local dq,_=radar_1.getData():match('"constructId":"([0-9]*)","distance":([%d%.]*)')if dq~=nil and dq~=""then f_=f_.." "..radar_1.getConstructName(dq)end end;local cA={}cA={position=position,name=f_,atmosphere=planet.atmosphericDensityAboveSurface,planetname=planet.name,gravity=planet.gravity,safe=true}SavedLocations[#SavedLocations+1]=cA;table.insert(b0[0],cA)ba.UpdateAtlasLocationsList()a0="Location saved as "..f_ else a0="Databank must be installed to save locations"end end;local function lI()TurnBurn=not TurnBurn end;local function lJ(lK)if lK==1 then ProgradeIsOn=not ProgradeIsOn;RetrogradeIsOn=false else RetrogradeIsOn=not RetrogradeIsOn;ProgradeIsOn=false end;Autopilot=false;AltitudeHold=false;Y=false;BrakeLanding=false;LockPitch=nil;Reentry=false;AutoTakeoff=false end;local function lL()lJ(1)end;local function lM()local cz=-1;cz=ba.findAtlasIndex(b0[0])if cz>-1 then table.remove(b0[0],cz)end;cz=-1;cz=ba.findAtlasIndex(SavedLocations)if cz~=-1 then a0=CustomTarget.name.." saved location cleared"table.remove(SavedLocations,cz)end;ba.adjustAutopilotTargetIndex()ba.UpdateAtlasLocationsList()end;local function lN()local f_=AutopilotTargetName;if f_==nil then local hx=cn((bI-CustomTarget.position):len())f_=CustomTarget.name.." "..hx end;if f_==nil then f_="None"end;return"Engage Autopilot: "..f_ end;local function lO()local f_=AutopilotTargetName;if f_==nil then f_=CustomTarget.name end;if f_==nil then f_="None"end;return"Disable Autopilot: "..f_ end;local function lP()if safeMass>0 then a0="Safe Mass set to "..x(au,2).." kg"else a0="Intruder Detection reset\nSafe Mass set to "..x(au,2).." kg"ag=5;bJ=0 end;safeMass=au end;local lD=50;local lE=260;local lQ=lo("Enable Brake Toggle","Disable Brake Toggle",lE,lD,aI/2-lE/2,aJ/2+350,function()return BrakeToggleStatus end,function()BrakeToggleStatus=not BrakeToggleStatus;if BrakeToggleStatus then a0="Brakes in Toggle Mode"else a0="Brakes in Default Mode"end end)lo("Align Prograde","Disable Prograde",lE,lD,aI/2-lE/2-50-lQ.width,aJ/2-lD+380,function()return ProgradeIsOn end,lL)lo("Align Retrograde","Disable Retrograde",lE,lD,aI/2-lE/2+lQ.width+50,aJ/2-lD+380,function()return RetrogradeIsOn end,lJ,function()return aq==0 end)local lR=lo(lN,lO,600,60,aI/2-600/2,aJ/2-60/2-400,function()return Autopilot end,cu)lo("Save Position","Save Position",200,lR.height,lR.x+lR.width+30,lR.y,function()return false end,lH,function()return AutopilotTargetIndex==0 or CustomTarget==nil end)lo("Update Position","Update Position",200,lR.height,lR.x+lR.width+30,lR.y,function()return false end,cx,function()return AutopilotTargetIndex>0 and CustomTarget~=nil end)lo("Clear Position","Clear Position",200,lR.height,lR.x-200-30,lR.y,function()return true end,lM,function()return AutopilotTargetIndex>0 and CustomTarget~=nil end)lD=60;lE=300;local cb=10;local cc=aJ/2-500;lo("Show Help","Hide Help",lE,lD,cb,cc,function()return showHelp end,function()showHelp=not showHelp end)cc=cc+lD+20;lo("View Settings","View Settings",lE,lD,cb,cc,function()return true end,lA)local cc=aJ/2-300;lo("Enable Turn and Burn","Disable Turn and Burn",lE,lD,cb,cc,function()return TurnBurn end,lI)lo("Horizontal Takeoff Mode","Vertical Takeoff Mode",lE,lD,cb+lE+20,cc,function()return VertTakeOffEngine end,function()VertTakeOffEngine=not VertTakeOffEngine;if VertTakeOffEngine then a0="Vertical Takeoff Mode"else a0="Horizontal Takeoff Mode"end end,function()return bK end)cc=cc+lD+20;lo("Show Orbit Display","Hide Orbit Display",lE,lD,cb,cc,function()return DisplayOrbit end,function()DisplayOrbit=not DisplayOrbit;if DisplayOrbit then a0="Orbit Display Enabled"else a0="Orbit Display Disabled"end end)lo("Engage Orbiting","Cancel Orbiting",lE,lD,cb+lE+20,cc,function()return IntoOrbit end,cr,function()return aq==0 and unit.getClosestPlanetInfluence()>0 end)cc=cc+lD+20;lo("Glide Re-Entry","Cancel Glide Re-Entry",lE,lD,cb,cc,function()return Reentry end,function()ak=true;lL()end,function()return planet.hasAtmosphere and not ap end)lo("Parachute Re-Entry","Cancel Parachute Re-Entry",lE,lD,cb+lE+20,cc,function()return Reentry end,cP,function()return planet.hasAtmosphere and not ap end)cc=cc+lD+20;lo("Engage Follow Mode","Disable Follow Mode",lE,lD,cb,cc,function()return Y end,ct,function()return l()==1 end)lo("Enable Repair Arrows","Disable Repair Arrows",lE,lD,cb+lE+20,cc,function()return aR end,function()aR=not aR;if aR then a0="Repair Arrows Enabled"else a0="Repair Arrows Diabled"end end,function()return l()==1 end)cc=cc+lD+20;if not ExternalAGG then lo("Enable AGG","Disable AGG",lE,lD,cb,cc,function()return bL end,cQ,function()return antigrav~=nil end)end;lo("Reset Intruder Alert","Set Safe Mass",lE,lD,cb+lE+20,cc,function()return safeMass>0 end,lP,function()return IntruderAlertSystem end)cc=cc+lD+20;lo(function()return e("Switch IPH Mode - Current: %s",iphCondition)end,function()return e("IPH Mode: %s",iphCondition)end,lE*2,lD,cb,cc,function()return false end,function()if iphCondition=="All"then iphCondition="Custom Only"elseif iphCondition=="Custom Only"then iphCondition="No Moons"else iphCondition="All"end;a0="IPH Mode: "..iphCondition end)cc=cc+lD+20;lo(function()return e("Toggle Control Scheme - Current: %s",userControlScheme)end,function()return e("Control Scheme: %s",userControlScheme)end,lE*2,lD,cb,cc,function()return false end,function()if userControlScheme=="keyboard"then userControlScheme="mouse"elseif userControlScheme=="mouse"then userControlScheme="virtual joystick"else userControlScheme="keyboard"end;a0="New Control Scheme: "..userControlScheme end)end;SetupComplete=false;beginSetup=coroutine.create(function()r:setupCustomTargetSpeedRanges(axisCommandId.longitudinal,{1000,5000,10000,20000,30000})l7()coroutine.yield()lb()coroutine.yield()bb=jq()ln()lC()lG()aF=aG;coroutine.yield()b0=dy()b4=dz()b5=b4(dy())b6=eE()b8=f8()b9=fu()ba=ji()bb=jq()coroutine.yield()unit.hide()system.showScreen(1)collectgarbage("collect")coroutine.yield()unit.setTimer("apTick",apTickRate)unit.setTimer("hudTick",hudTickRate)unit.setTimer("oneSecond",1)unit.setTimer("tenthSecond",1/10)unit.setTimer("fiveSecond",5)bY("start","SU")end)end;function script.onStop()_autoconf.hideCategoryPanels()if antigrav~=nil and not ExternalAGG then antigrav.hide()end;if warpdrive~=nil then warpdrive.hide()end;core.hide()a.control.switchOffHeadlights()if door and(aq>0 or aq==0 and ar<10000)then for _,d0 in pairs(door)do d0.toggle()end end;if switch then for _,d0 in pairs(switch)do d0.toggle()end end;if forcefield and(aq>0 or aq==0 and ar<10000)then for _,d0 in pairs(forcefield)do d0.toggle()end end;safeMass=au;cW()if button then button.activate()end;if SetWaypointOnExit then bb.showWayPoint(planet,bI)end;bY("stop","SU")end;function script.onTick(lS)if lS=="contact"then if not contactTimer then contactTimer=0 end;if A>contactTimer+10 then a0="Radar Contact"bY("rdrCon","RC")contactTimer=A end;unit.stopTimer("contact")elseif lS=="tenthSecond"then local function lT()local lU=system.createData;local lV=system.createWidget;panelInterplanetary=system.createWidgetPanel("Interplanetary Helper")interplanetaryHeader=lV(panelInterplanetary,"value")interplanetaryHeaderText=lU('{"label": "Target Planet", "value": "N/A", "unit":""}')u(interplanetaryHeaderText,interplanetaryHeader)widgetDistance=lV(panelInterplanetary,"value")widgetDistanceText=lU('{"label": "distance", "value": "N/A", "unit":""}')u(widgetDistanceText,widgetDistance)widgetTravelTime=lV(panelInterplanetary,"value")widgetTravelTimeText=lU('{"label": "Travel Time", "value": "N/A", "unit":""}')u(widgetTravelTimeText,widgetTravelTime)widgetMaxMass=lV(panelInterplanetary,"value")widgetMaxMassText=lU('{"label": "Maximum Mass", "value": "N/A", "unit":""}')u(widgetMaxMassText,widgetMaxMass)widgetTargetOrbit=lV(panelInterplanetary,"value")widgetTargetOrbitText=lU('{"label": "Target Altitude", "value": "N/A", "unit":""}')u(widgetTargetOrbitText,widgetTargetOrbit)widgetCurBrakeDistance=lV(panelInterplanetary,"value")widgetCurBrakeDistanceText=lU('{"label": "Cur Brake distance", "value": "N/A", "unit":""}')widgetCurBrakeTime=lV(panelInterplanetary,"value")widgetCurBrakeTimeText=lU('{"label": "Cur Brake Time", "value": "N/A", "unit":""}')widgetMaxBrakeDistance=lV(panelInterplanetary,"value")widgetMaxBrakeDistanceText=lU('{"label": "Max Brake distance", "value": "N/A", "unit":""}')widgetMaxBrakeTime=lV(panelInterplanetary,"value")widgetMaxBrakeTimeText=lU('{"label": "Max Brake Time", "value": "N/A", "unit":""}')widgetTrajectoryAltitude=lV(panelInterplanetary,"value")widgetTrajectoryAltitudeText=lU('{"label": "Projected Altitude", "value": "N/A", "unit":""}')if not ap then u(widgetCurBrakeDistanceText,widgetCurBrakeDistance)u(widgetCurBrakeTimeText,widgetCurBrakeTime)u(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)u(widgetMaxBrakeTimeText,widgetMaxBrakeTime)u(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)end end;local function lW()s(panelInterplanetary)panelInterplanetary=nil end;local function lX()if not Autopilot then if CustomTarget==nil or CustomTarget.planetname~=planet.name then AutopilotDistance=(aa.center-bI):len()else AutopilotDistance=(CustomTarget.position-bI):len()end end;local f6=bF;local kp=unit.getThrottle()/100;if AtmoSpeedAssist then kp=G end;local lY,lZ=b6.computeDistanceAndTime(bF,MaxGameVelocity,au,a:maxForceForward()*kp,warmup,0)local a6,a7;if not TurnBurn then a6,a7=bb.GetAutopilotBrakeDistanceAndTime(MaxGameVelocity)else a6,a7=bb.GetAutopilotTBBrakeDistanceAndTime(MaxGameVelocity)end;local _,l_;if not TurnBurn and f6>0 then _,l_=bb.GetAutopilotBrakeDistanceAndTime(f6)else _,l_=bb.GetAutopilotTBBrakeDistanceAndTime(f6)end;local m0=0;local m1=0;if AutopilotCruising or not Autopilot and f6>5 then m1=b6.computeTravelTime(f6,0,AutopilotDistance)elseif a6+lY<AutopilotDistance then m0=AutopilotDistance-(a6+lY)m1=b6.computeTravelTime(8333.0556,0,m0)else local m2=(AutopilotDistance-a6)/lY;lY=AutopilotDistance-a6;lZ=lZ*m2 end;if CustomTarget~=nil and CustomTarget.planetname==planet.name and not Autopilot then return m1 elseif AutopilotBraking then return l_ elseif AutopilotCruising then return m1+l_ else return lZ+a7+m1 end end;local function m3(ir,m4)if ir==nil then ir=core.g()end;ir=x(ir,5)if m4~=nil and m4 or(aM==nil or aM~=ir)then local f9=core.getVelocity()local f6=vec3(f9):len()local m5=f(unit.getData()).maxBrake;if m5~=nil and m5>0 and ap then m5=m5/q(f6/100,0.1,1)m5=m5/aq;if aq>0.10 then if LastMaxBrakeInAtmo then LastMaxBrakeInAtmo=(LastMaxBrakeInAtmo+m5)/2 else LastMaxBrakeInAtmo=m5 end end end;if m5~=nil and m5>0 then LastMaxBrake=m5 end;aM=ir end end;m3(nil,true)if aq>0 and not WasInAtmo then if not bN and AtmoSpeedAssist and(AltitudeHold or Reentry)then cg(1)K=false end end;if bM~=nil then if r:getTargetSpeed(axisCommandId.longitudinal)~=bM then cj(bM,TRUE)else bM=nil end end;if AutopilotTargetName~="None"then if panelInterplanetary==nil then lT()end;if AutopilotTargetName~=nil then local m6=CustomTarget~=nil;local m7=LastMaxBrakeInAtmo/aa:getGravity(aa.center+vec3(0,0,1)*aa.radius):len()t(interplanetaryHeaderText,'{"label": "Target", "value": "'..AutopilotTargetName..'", "unit":""}')travelTime=lX()if m6 and not Autopilot then ah=(bI-CustomTarget.position):len()else ah=(AutopilotTargetCoords-bI):len()end;if not TurnBurn then a6,a7=bb.GetAutopilotBrakeDistanceAndTime(bF)a8,a9=bb.GetAutopilotBrakeDistanceAndTime(MaxGameVelocity)else a6,a7=bb.GetAutopilotTBBrakeDistanceAndTime(bF)a8,a9=bb.GetAutopilotTBBrakeDistanceAndTime(MaxGameVelocity)end;local hx=cn(ah)t(widgetDistanceText,'{"label": "distance", "value": "'..hx..'"}')t(widgetTravelTimeText,'{"label": "Travel Time", "value": "'..cR(travelTime)..'", "unit":""}')hx=cn(a6)t(widgetCurBrakeDistanceText,'{"label": "Cur Brake distance", "value": "'..hx..'"}')t(widgetCurBrakeTimeText,'{"label": "Cur Brake Time", "value": "'..cR(a7)..'", "unit":""}')hx=cn(a8)t(widgetMaxBrakeDistanceText,'{"label": "Max Brake distance", "value": "'..hx..'"}')t(widgetMaxBrakeTimeText,'{"label": "Max Brake Time", "value": "'..cR(a9)..'", "unit":""}')t(widgetMaxMassText,'{"label": "Maximum Mass", "value": "'..e("%.2f",m7/1000)..'", "unit":" Tons"}')hx=cn(AutopilotTargetOrbit)t(widgetTargetOrbitText,'{"label": "Target Orbit", "value": "'..hx..'"}')if aq>0 and not WasInAtmo then system.removeDataFromWidget(widgetMaxBrakeTimeText,widgetMaxBrakeTime)system.removeDataFromWidget(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)system.removeDataFromWidget(widgetCurBrakeTimeText,widgetCurBrakeTime)system.removeDataFromWidget(widgetCurBrakeDistanceText,widgetCurBrakeDistance)system.removeDataFromWidget(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)WasInAtmo=true end;if aq==0 and WasInAtmo then if t(widgetMaxBrakeTimeText,widgetMaxBrakeTime)==1 then u(widgetMaxBrakeTimeText,widgetMaxBrakeTime)end;if t(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)==1 then u(widgetMaxBrakeDistanceText,widgetMaxBrakeDistance)end;if t(widgetCurBrakeTimeText,widgetCurBrakeTime)==1 then u(widgetCurBrakeTimeText,widgetCurBrakeTime)end;if t(widgetCurBrakeDistanceText,widgetCurBrakeDistance)==1 then u(widgetCurBrakeDistanceText,widgetCurBrakeDistance)end;if t(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)==1 then u(widgetTrajectoryAltitudeText,widgetTrajectoryAltitude)end;WasInAtmo=false end end else lW()end;if warpdrive~=nil then if f(warpdrive.getData()).destination~="Unknown"and f(warpdrive.getData()).distance>400000 then warpdrive.show()showWarpWidget=true else warpdrive.hide()showWarpWidget=false end end elseif lS=="oneSecond"then local function m8(fK)local m9=0;aD=""local ma=aQ;local mb=0;local mc=0;local md=0;local g8=0;local g9=""local me=core.getElementHitPointsById;for c_ in pairs(as)do local lk=0;local mf=0;mf=h(as[c_])lk=me(as[c_])mb=mb+lk;if lk<mf then if lk==0 then md=md+1 else mc=mc+1 end;if aR and#aA==0 then position=vec3(core.getElementPositionById(as[c_]))local cb=position.x-C;local cc=position.y-C;local iS=position.z-C;table.insert(aA,core.spawnArrowSticker(cb,cc,iS+1,"down"))table.insert(aA,core.spawnArrowSticker(cb,cc,iS+1,"down"))core.rotateSticker(aA[2],0,0,90)table.insert(aA,core.spawnArrowSticker(cb+1,cc,iS,"north"))table.insert(aA,core.spawnArrowSticker(cb+1,cc,iS,"north"))core.rotateSticker(aA[4],90,90,0)table.insert(aA,core.spawnArrowSticker(cb-1,cc,iS,"south"))table.insert(aA,core.spawnArrowSticker(cb-1,cc,iS,"south"))core.rotateSticker(aA[6],90,-90,0)table.insert(aA,core.spawnArrowSticker(cb,cc-1,iS,"east"))table.insert(aA,core.spawnArrowSticker(cb,cc-1,iS,"east"))core.rotateSticker(aA[8],90,0,90)table.insert(aA,core.spawnArrowSticker(cb,cc+1,iS,"west"))table.insert(aA,core.spawnArrowSticker(cb,cc+1,iS,"west"))core.rotateSticker(aA[10],-90,0,90)table.insert(aA,as[c_])end elseif aR and#aA>0 and aA[11]==as[c_]then for g1 in pairs(aA)do core.deleteSticker(aA[g1])end;aA={}end end;m9=d(mb/ma*100)if m9<100 then fK[#fK+1]=ca(0,0,"","pbright txt")g8=d(m9*2.55)g9=e("rgb(%d,%d,%d)",255-g8,g8,0)if m9<100 then fK[#fK+1]=ca("50%",1035,"Elemental Integrity: "..m9 .."%","txtbig txtmid","fill:"..g9)if md>0 then fK[#fK+1]=ca("50%",1055,"Disabled Modules: "..md.." Damaged Modules: "..mc,"txtbig txtmid","fill:"..g9)elseif mc>0 then fK[#fK+1]=ca("50%",1055,"Damaged Modules: "..mc,"txtbig txtmid","fill:"..g9)end end end end;local function mg()if weapon then if WeaponPanelID==nil and(radarPanelID~=nil or GearExtended)then _autoconf.displayCategoryPanel(weapon,weapon_size,L_TEXT("ui_lua_widget_weapon", "Weapons"),"weapon",true)WeaponPanelID=_autoconf.panels[_autoconf.panels_size]elseif WeaponPanelID~=nil and radarPanelID==nil and not GearExtended then s(WeaponPanelID)WeaponPanelID=nil end end end;local function mh()local g6=p()local hl=bF;local mi=g6-at;if hl>1.38889 then hl=hl/1000;local mj=hl*(g6-at)TotalDistanceTravelled=TotalDistanceTravelled+mj;ab=ab+mj end;ac=ac+mi;TotalFlightTime=TotalFlightTime+mi;at=g6 end;local function mk()if safeMass>0 then if au>safeMass+50 then bJ=d(au-safeMass)safeMass=-1 elseif au<safeMass then safeMass=au end elseif safeMass==-1 then safeMass=-2 else safeMass=-1 end end;if IntruderAlertSystem then mk()end;mh()b9.UpdatePipe()mg()local fK={}b9.ExtraData(fK)if ShowOdometer then fK=b9.DrawOdometer(fK,ab,TotalDistanceTravelled,ac)end;if ShouldCheckDamage then m8(fK)end;ai=table.concat(fK,"")collectgarbage("collect")elseif lS=="fiveSecond"then if not UseSatNav then return end;ao=dbHud_1.getStringValue("SPBAutopilotTargetName")if ao~=nil and ao~=""and ao~="SatNavNotChanged"then local cJ=f(dbHud_1.getStringValue("SavedLocations"))if cJ~=nil then _G["SavedLocations"]=cJ;local cz=-1;local cA;for c_,d0 in pairs(SavedLocations)do if d0.name and d0.name=="SatNav Location"then cz=c_;break end end;if cz~=-1 then cA=SavedLocations[cz]cz=-1;for c_,d0 in pairs(b0[0])do if d0.name and d0.name=="SatNav Location"then cz=c_;break end end;if cz>-1 then b0[0][cz]=cA end;ba.UpdateAtlasLocationsList()a0=cA.name.." position updated"end end;for i=1,#bT do if bT[i].name==ao then AutopilotTargetIndex=i;system.print("Index = "..AutopilotTargetIndex.." "..bT[i].name)ba.UpdateAutopilotTarget()dbHud_1.setStringValue("SPBAutopilotTargetName","SatNavNotChanged")break end end end elseif lS=="msgTick"then local fK={}b9.DisplayMessage(fK,"empty")a0="empty"unit.stopTimer("msgTick")ag=3 elseif lS=="animateTick"then bd=true;bc=false;ae=0;af=0;unit.stopTimer("animateTick")elseif lS=="hudTick"then local function ml(fK)local mm=d(q(ah/(aI/4)*255,0,255))fK[#fK+1]=e("<line x1='0' y1='0' x2='%fpx' y2='%fpx' style='stroke:rgb(%d,%d,%d);stroke-width:2;transform:translate(50%%, 50%%)' />",ae,af,d(D+0.5)+mm,d(F+0.5)-mm,d(E+0.5)-mm)end;local function mn()for _,d0 in pairs(aF)do if d0.hovered then if not d0.drawCondition or d0.drawCondition()then d0.toggleFunction()end;d0.hovered=false end end end;local function mo()local function mp(mq,mr,cb,cc,lr,ls)if mq>cb and mq<cb+lr and mr>cc and mr<cc+ls then return true else return false end end;local cb=ae+aI/2;local cc=af+aJ/2;for _,d0 in pairs(aF)do d0.hovered=mp(cb,cc,d0.x,d0.y,d0.width,d0.height)end end;local function ms(fK)local function mt(fK,mu,hover,cb,cc,e_,mv,mw,mx,my,mz)if type(my)=="function"then my=my()end;if type(mz)=="function"then mz=mz()end;fK[#fK+1]=e("<rect x='%f' y='%f' width='%f' height='%f' fill='",cb,cc,e_,mv)if mu then fK[#fK+1]=e("%s'",mw)else fK[#fK+1]=mx end;if hover then fK[#fK+1]=" style='stroke:white; stroke-width:2'"else fK[#fK+1]=" style='stroke:black; stroke-width:1'"end;fK[#fK+1]="></rect>"fK[#fK+1]=e("<text x='%f' y='%f' font-size='24' fill='",cb+e_/2,cc+mv/2+5)if mu then fK[#fK+1]="black"else fK[#fK+1]="white"end;fK[#fK+1]="' text-anchor='middle' font-family='Montserrat'>"if mu then fK[#fK+1]=e("%s</text>",my)else fK[#fK+1]=e("%s</text>",mz)end end;local mA="rgb(50,50,50)'"local mB="rgb(210,200,200)"local mC=mt;for _,d0 in pairs(aF)do local lq=d0.disableName;local lp=d0.enableName;if type(lq)=="function"then lq=lq()end;if type(lp)=="function"then lp=lp()end;if not d0.drawCondition or d0.drawCondition()then mC(fK,d0.toggleVar(),d0.hovered,d0.x,d0.y,d0.width,d0.height,mB,mA,lq,lp)end end end;local fK={}b9.HUDPrologue(fK)if showHud then b9.UpdateHud(fK)else if AlwaysVSpd then b9.DrawVerticalSpeed(fK,ar)end;b9.DisplayOrbitScreen(fK)b9.DrawWarnings(fK)end;if bQ and bR~={}then b9.DrawSettings(fK)end;b9.UpdateRadar()b9.HUDEpilogue(fK)fK[#fK+1]=e([[<svg width="100%%" height="100%%" style="position:absolute;top:0;left:0"  viewBox="0 0 %d %d">]],aI,aJ)if a0~="empty"then b9.DisplayMessage(fK,a0)end;if l()==0 and userControlScheme=="virtual joystick"then if DisplayDeadZone then b9.DrawDeadZone(fK)end end;if w()==0 then if l()==1 and Z then if not AltIsOn then mo()ms(fK)end;if not bc and not bd then local mD=table.concat(fK,"")fK={}fK[#fK+1]=e("<style>@keyframes test { from { opacity: 0; } to { opacity: 1; } }  body { animation-name: test; animation-duration: 0.5s; }</style><body><svg width='100%%' height='100%%' position='absolute' top='0' left='0'><rect width='100%%' height='100%%' x='0' y='0' position='absolute' style='fill:rgb(6,5,26);'/></svg><svg width='50%%' height='50%%' style='position:absolute;top:30%%;left:25%%' viewbox='0 0 %d %d'>",aI,aJ)fK[#fK+1]=mD;fK[#fK+1]="</body>"bc=true;fK[#fK+1]=[[</svg></body>]]unit.setTimer("animateTick",0.5)local content=table.concat(fK,"")system.setScreen(content)elseif bd then local mD=table.concat(fK,"")fK={}fK[#fK+1]=e("<body style='background-color:rgb(6,5,26)'><svg width='50%%' height='50%%' style='position:absolute;top:30%%;left:25%%' viewbox='0 0 %d %d'>",aI,aJ)fK[#fK+1]=mD;fK[#fK+1]="</body>"end;if not bc then fK[#fK+1]=e([[<g transform="translate(%d %d)"><circle class="cursor" cx="%fpx" cy="%fpx" r="5"/></g>]],L,M,ae,af)end else mn()end else if not Z and l()==0 then mn()if ah>DeadZone then if DisplayDeadZone then ml(fK)end end elseif not AltIsOn then mo()ms(fK)end;fK[#fK+1]=e([[<g transform="translate(%d %d)"><circle class="cursor" cx="%fpx" cy="%fpx" r="5"/></g>]],L,M,ae,af)end;fK[#fK+1]=[[</svg></body>]]content=table.concat(fK,"")if not DidLogOutput then system.logInfo(LastContent)DidLogOutput=true end elseif lS=="apTick"then bb.APTick()end end;function script.onFlush()local function mE(mF,kw)local mG=vec3()local mH=vec3()if mF==axisCommandId.longitudinal then mG=vec3(core.getConstructOrientationForward())mH=bC elseif mF==axisCommandId.vertical then mG=vec3(core.getConstructOrientationUp())mH=bB elseif mF==axisCommandId.lateral then mG=vec3(core.getConstructOrientationRight())mH=bD else return vec3()end;local mI=vec3(core.getWorldGravity())local mJ=mI:dot(mH)local mK=vec3(core.getWorldAirFrictionAcceleration())local mL=mK:dot(mH)local mM=vec3(core.getVelocity())local mN=mM:dot(mG)local mO=kw*constants.kph2m;if targetSpeedPID2==nil then targetSpeedPID2=pid.new(10,0,10.0)end;targetSpeedPID2:inject(mO-mN)local mP=targetSpeedPID2:get()local mQ=(mP-mL-mJ)*mH;return mQ end;local function mR(mF,kw)local mG=vec3()local mH=vec3()if mF==axisCommandId.longitudinal then mG=vec3(core.getConstructOrientationForward())mH=bC elseif mF==axisCommandId.vertical then mG=vec3(core.getConstructOrientationUp())mH=bB elseif mF==axisCommandId.lateral then mG=vec3(core.getConstructOrientationRight())mH=bD else return vec3()end;local mI=vec3(core.getWorldGravity())local mJ=mI:dot(mH)local mK=vec3(core.getWorldAirFrictionAcceleration())local mL=mK:dot(mH)local mM=vec3(core.getVelocity())local mN=mM:dot(mG)local mO=kw*constants.kph2m;if targetSpeedPID==nil then targetSpeedPID=pid.new(10,0,10.0)end;targetSpeedPID:inject(mO-mN)local mP=targetSpeedPID:get()local mQ=(mP-mL-mJ)*mH;return mQ end;local function mS(mT,gd,jm)local mU=mT:cross(jm):normalize_inplace()local gZ=math.acos(q(mU:dot(-gd),-1,1))*constants.rad2deg;if mU:cross(-gd):dot(jm)<0 then gZ=-gZ end;return gZ end;if antigrav and not ExternalAGG then if not bL and antigrav.getBaseAltitude()~=AntigravTargetAltitude then antigrav.setBaseAltitude(AntigravTargetAltitude)end end;bN=r:getAxisCommandType(0)==axisCommandType.byThrottle;if bN and K then cg(0)K=false elseif not bN and not K then G=0;K=true end;pitchSpeedFactor=math.max(pitchSpeedFactor,0.01)yawSpeedFactor=math.max(yawSpeedFactor,0.01)rollSpeedFactor=math.max(rollSpeedFactor,0.01)torqueFactor=math.max(torqueFactor,0.01)brakeSpeedFactor=math.max(brakeSpeedFactor,0.01)brakeFlatFactor=math.max(brakeFlatFactor,0.01)autoRollFactor=math.max(autoRollFactor,0.01)turnAssistFactor=math.max(turnAssistFactor,0.01)local mV=q(R+S+system.getControlDeviceForwardInput(),-1,1)local mW=q(U+X+system.getControlDeviceYawInput(),-1,1)local mX=q(V+T-system.getControlDeviceLeftRightInput(),-1,1)local mY=W;bG=vec3(core.getWorldVertical())if bG==nil or bG:len()==0 then bG=(planet.center-bI):normalize()end;bB=vec3(core.getConstructWorldOrientationUp())bC=vec3(core.getConstructWorldOrientationForward())bD=vec3(core.getConstructWorldOrientationRight())bE=vec3(core.getWorldVelocity())bI=vec3(core.getConstructWorldPos())au=core.getConstructMass()bF=vec3(bE):len()bH=-bG:dot(bE)bP=getRoll(bG,bC,bD)local mZ=bP/180*math.pi;local m_=math.cos(mZ)local n0=math.sin(mZ)bO=mS(bG,bC,bD*m_+bB*n0)local n1=bE:normalize()local n2=c(bP)local n3=utils.sign(bP)local n4=vec3(core.getWorldAngularVelocity())local n5=mV*pitchSpeedFactor*bD+mW*rollSpeedFactor*bC+mX*yawSpeedFactor*bB;if be==true and bG:len()>0.01 then local n6=c(bi-bP)if((ProgradeIsOn or Reentry or BrakeLanding or ak or AltitudeHold or IntoOrbit)and n6>0 or aq>0.0 and n6<autoRollRollThreshold and autoRollPreference)and mW==0 and c(bO)<85 then local n7=bi;local n8=autoRollFactor;if aq==0 then n8=n8/4;bi=0;n7=0 end;if rollPID==nil then rollPID=pid.new(n8*0.01,0,n8*0.1)end;rollPID:inject(n7-bP)local n9=rollPID:get()n5=n5+n9*bC end end;if bG:len()>0.01 and aq>0.0 then local na=20.0;if turnAssist==true and n2>na and mV==0 and mX==0 then local nb=turnAssistFactor*0.1;local nc=turnAssistFactor*0.025;local nd=(n2-na)/(180-na)*180;local ne=0;if nd<90 then ne=nd/90 elseif nd<180 then ne=(180-nd)/90 end;ne=ne*ne;local nf=-n3*nc*(1.0-ne)local ng=nb*ne;n5=n5+ng*bD+nf*bB end end;local nh=1;local ni=0;local nj=1;if system.getMouseWheel()>0 then if AltIsOn then if aq>0 or Reentry then bl=q(bl+speedChangeLarge,0,AtmoSpeedLimit)elseif Autopilot then MaxGameVelocity=q(MaxGameVelocity+speedChangeLarge/3.6*100,0,8333.00)end elseif av then local nk=G;G=x(q(G+speedChangeLarge/100,-1,1),2)if G>=0 and nk<0 then G=0;av=false end end elseif system.getMouseWheel()<0 then if AltIsOn then if aq>0 or Reentry then bl=q(bl-speedChangeLarge,0,AtmoSpeedLimit)elseif Autopilot then MaxGameVelocity=q(MaxGameVelocity-speedChangeLarge/3.6*100,0,8333.00)end elseif av then local nk=G;G=x(q(G-speedChangeLarge/100,-1,1),2)if G<=0 and nk>0 then G=0;av=false end end else av=true end;H=0;if ap and AtmoSpeedAssist and bN then if throttlePID==nil then throttlePID=pid.new(0.5,0,1)end;throttlePID:inject(bl/3.6-bE:dot(bC))local nl=throttlePID:get()J=q(nl,-1,1)if J<G and aq>0.005 then I=true;r:setThrottleCommand(axisCommandId.longitudinal,q(J,0.01,1))else I=false;r:setThrottleCommand(axisCommandId.longitudinal,G)end;if brakePID==nil then brakePID=pid.new(1*0.01,0,1*0.1)end;brakePID:inject(bE:len()-bl/3.6)local nm=q(brakePID:get(),0,1)if aq>0 and bH<-80 or aq>0.005 then H=nm end;if H>0 then if I and J==0.01 then r:setThrottleCommand(axisCommandId.longitudinal,0)end else J=q(J,0.01,1)end;local nn=''local no=vec3()local np=mE(axisCommandId.vertical,ad*1000)a:setEngineForceCommand("vertical airfoil , vertical ground ",np,ni)local nq='thrust analog longitudinal 'if ExtraLongitudeTags~="none"then nq=nq..ExtraLongitudeTags end;local nr=r:getAxisCommandType(axisCommandId.longitudinal)local ns=r:composeAxisAccelerationFromThrottle(nq,axisCommandId.longitudinal)local nt=mR(axisCommandId.lateral,LeftAmount*1000)nn=nn..' , '.."lateral airfoil , lateral ground "no=no+nt;if no:len()>constants.epsilon then a:setEngineForceCommand(nn,no,ni,'','','',nj)end;a:setEngineForceCommand(nq,ns,nh)local nu='thrust analog vertical fueled 'local nw='thrust analog lateral fueled 'if ExtraLateralTags~="none"then nw=nw..ExtraLateralTags end;if ExtraVerticalTags~="none"then nu=nu..ExtraVerticalTags end;if ad~=0 or BrakeLanding and BrakeIsOn or not GearExtended and not stablized then a:setEngineForceCommand(nu,np,nh)else a:setEngineForceCommand(nu,vec3(),nh)end;if LeftAmount~=0 then a:setEngineForceCommand(nw,nt,nh)else a:setEngineForceCommand(nw,vec3(),nh)end;if mY==0 then mY=H end;local nx=-mY*(brakeSpeedFactor*bE+brakeFlatFactor*n1)a:setEngineForceCommand('brake',nx)else if AtmoSpeedAssist then r:setThrottleCommand(axisCommandId.longitudinal,G)end;local kw=unit.getAxisCommandValue(0)if not bN then if brakePID==nil then brakePID=pid.new(1*0.01,0,1*0.1)end;brakePID:inject(bE:len()-kw/3.6)local nm=q(brakePID:get(),0,1)mY=q(mY+nm,0,1)end;local nx=-mY*(brakeSpeedFactor*bE+brakeFlatFactor*n1)a:setEngineForceCommand('brake',nx)local nn=''local no=vec3()local ny=false;local nq='thrust analog longitudinal 'if ExtraLongitudeTags~="none"then nq=nq..ExtraLongitudeTags end;local nr=r:getAxisCommandType(axisCommandId.longitudinal)if nr==axisCommandType.byThrottle then local ns=r:composeAxisAccelerationFromThrottle(nq,axisCommandId.longitudinal)a:setEngineForceCommand(nq,ns,nh)elseif nr==axisCommandType.byTargetSpeed then local ns=r:composeAxisAccelerationFromTargetSpeed(axisCommandId.longitudinal)nn=nn..' , '..nq;no=no+ns;if r:getTargetSpeed(axisCommandId.longitudinal)==0 or r:getCurrentToTargetDeltaSpeed(axisCommandId.longitudinal)<-r:getTargetSpeedCurrentStep(axisCommandId.longitudinal)*0.5 then ny=true end end;local nw='thrust analog lateral 'if ExtraLateralTags~="none"then nw=nw..ExtraLateralTags end;local nz=r:getAxisCommandType(axisCommandId.lateral)if nz==axisCommandType.byThrottle then local nA=r:composeAxisAccelerationFromThrottle(nw,axisCommandId.lateral)a:setEngineForceCommand(nw,nA,nh)elseif nz==axisCommandType.byTargetSpeed then local nt=r:composeAxisAccelerationFromTargetSpeed(axisCommandId.lateral)nn=nn..' , '..nw;no=no+nt end;local nu='thrust analog vertical 'if ExtraVerticalTags~="none"then nu=nu..ExtraVerticalTags end;local nB=r:getAxisCommandType(axisCommandId.vertical)if nB==axisCommandType.byThrottle then local np=r:composeAxisAccelerationFromThrottle(nu,axisCommandId.vertical)if ad~=0 or BrakeLanding and BrakeIsOn then a:setEngineForceCommand(nu,np,nh,'airfoil','ground','',nj)else a:setEngineForceCommand(nu,vec3(),nh)a:setEngineForceCommand('airfoil vertical',np,nh,'airfoil','','',nj)a:setEngineForceCommand('ground vertical',np,nh,'ground','','',nj)end elseif nB==axisCommandType.byTargetSpeed then if ad<0 then a:setEngineForceCommand('hover',vec3(),nh)end;local nC=r:composeAxisAccelerationFromTargetSpeed(axisCommandId.vertical)nn=nn..' , '..nu;no=no+nC end;if no:len()>constants.epsilon then if W~=0 or ny or c(n1:dot(bC))<0.8 then nn=nn..', brake'end;a:setEngineForceCommand(nn,no,ni,'','','',nj)end end;local nD=torqueFactor*(n5-n4)local nE=vec3(core.getWorldAirFrictionAngularAcceleration())nD=nD-nE;a:setEngineTorqueCommand('torque',nD,nh,'airfoil','','',nj)a:setBoosterCommand('rocket_engine')if a5 and not VanillaRockets then local f6=vec3(core.getVelocity()):len()local nF=0.15;if not bN then local nG=r:getTargetSpeed(axisCommandId.longitudinal)if f6*3.6>nG*(1-nF)and IsRocketOn then IsRocketOn=false;a:toggleBoosters()elseif f6*3.6<nG*(1-nF)and not IsRocketOn then IsRocketOn=true;a:toggleBoosters()end else local kp=unit.getThrottle()if AtmoSpeedAssist then kp=G*100 end;local kw=kp/100;if j==0 then kw=kw*MaxGameVelocity;if f6>=kw*(1-nF)and IsRocketOn then IsRocketOn=false;a:toggleBoosters()elseif f6<kw*(1-nF)and not IsRocketOn then IsRocketOn=true;a:toggleBoosters()end else local kC=d(bl)kw=kw*kC/3.6;if f6>=kw*(1-nF)and IsRocketOn then IsRocketOn=false;a:toggleBoosters()elseif f6<kw*(1-nF)and not IsRocketOn then IsRocketOn=true;a:toggleBoosters()end end end end end;function script.onUpdate()if not SetupComplete then local _,cJ=coroutine.resume(beginSetup)if cJ then SetupComplete=true end else a:update()if not bc and content~=LastContent then if not Cockpit then system.setScreen(content)else dbHud_1.setStringValue("content",content)end end;LastContent=content end end;function script.onActionStart(nH)local z=1;local function nI(nJ)local function nK(nL,nJ)local nM={planet.surfaceMaxAltitude+100,planet.spaceEngineMinAltitude-50,planet.noAtmosphericDensityAltitude+LowOrbitHeight,planet.radius*(TargetOrbitRadius-1)+planet.noAtmosphericDensityAltitude}local nN=nL;for _,d0 in ipairs(nM)do if nJ and nN>d0 then nL=d0 elseif nL<d0 and not nJ then nL=d0;break end end;return nL end;if nJ then z=-1 end;if not ExternalAGG and bL then if Z and nJ then AntigravTargetAltitude=1000 elseif AntigravTargetAltitude~=nil then AntigravTargetAltitude=AntigravTargetAltitude+z*a2;if AntigravTargetAltitude<1000 then AntigravTargetAltitude=1000 end;if AltitudeHold and AntigravTargetAltitude<HoldAltitude+10 and AntigravTargetAltitude>HoldAltitude-10 then HoldAltitude=AntigravTargetAltitude end else AntigravTargetAltitude=desiredBaseAltitude+z*100 end elseif AltitudeHold or VertTakeOff or IntoOrbit then if IntoOrbit then if Z then bu=nK(bu,nJ)else bu=bu+z*a1 end;if bu<planet.noAtmosphericDensityAltitude then bu=planet.noAtmosphericDensityAltitude end else if Z and ap then HoldAltitude=nK(HoldAltitude,nJ)else HoldAltitude=HoldAltitude+z*a1 end end else r:updateTargetGroundAltitudeFromActionStart(z*1.0)end end;local function nO(nJ)if nJ then z=-1 end;if not Z then if AtmoSpeedAssist and not AltIsOn then G=q(G+z*speedChangeLarge/100,-1,1)else r:updateCommandFromActionStart(axisCommandId.longitudinal,z*speedChangeLarge)end else if nJ then z=1 else z=nil end;ba.adjustAutopilotTargetIndex(z)end end;local function nP(nQ)if not ap then a0="Flight Assist in Atmo only"return end;local dE=type(nQ)if bX==nil then if dE=="table"then if Autopilot or VectorToTarget then cu()end;bY("180On","BR")elseif dE==1 then bY("bnkLft","BR")else bY("bnkRht","BR")end;if not AltitudeHold and not Autopilot and not VectorToTarget then cs()if dE~="table"then nQ=nQ+1 end end;bX=nQ elseif dE=="table"then bY("180Off","BR")bX=nil end end;if nH=="gear"then GearExtended=not GearExtended;if GearExtended then VectorToTarget=false;LockPitch=nil;cg(0)if vBooster or hover then if ap and an==-1 then bY("bklOn","BL")StrongBrakes=true;Reentry=false;AutoTakeoff=false;VertTakeOff=false;AltitudeHold=false;BrakeLanding=true;be=true;GearExtended=false else if Q then bY("grOut","LG",1)a.control.extendLandingGears()end;r:setTargetGroundAltitude(LandingGearGroundHeight)if ap then BrakeIsOn=true end end end;if Q and not BrakeLanding and not(vBooster or hover)then bY("grOut","LG",1)a.control.extendLandingGears()end else if Q then bY("grIn","LG",1)a.control.retractLandingGears()end;r:setTargetGroundAltitude(TargetHoverHeight)end elseif nH=="light"then if a.control.isAnyHeadlightSwitchedOn()==1 then a.control.switchOffHeadlights()else a.control.switchOnHeadlights()end elseif nH=="forward"then R=R-1 elseif nH=="backward"then if AltIsOn then nP(-bE*5000)else R=R+1 end elseif nH=="left"then if AltIsOn then nP(1)else U=U-1 end elseif nH=="right"then if AltIsOn then nP(3)else U=U+1 end elseif nH=="yawright"then V=V-1 elseif nH=="yawleft"then V=V+1 elseif nH=="straferight"then r:updateCommandFromActionStart(axisCommandId.lateral,1.0)LeftAmount=1 elseif nH=="strafeleft"then r:updateCommandFromActionStart(axisCommandId.lateral,-1.0)LeftAmount=-1 elseif nH=="up"then ad=ad+1;r:deactivateGroundEngineAltitudeStabilization()r:updateCommandFromActionStart(axisCommandId.vertical,1.0)elseif nH=="down"then ad=ad-1;r:deactivateGroundEngineAltitudeStabilization()r:updateCommandFromActionStart(axisCommandId.vertical,-1.0)elseif nH=="groundaltitudeup"then nI()elseif nH=="groundaltitudedown"then nI(true)elseif nH=="option1"then ba.adjustAutopilotTargetIndex()toggleView=false elseif nH=="option2"then ba.adjustAutopilotTargetIndex(1)toggleView=false elseif nH=="option3"then local function nR()aE=not aE;if not aE then bY("wid","DH")unit.show()core.show()if atmofueltank_size>0 then _autoconf.displayCategoryPanel(atmofueltank,atmofueltank_size,L_TEXT("ui_lua_widget_atmofuel", "Atmo Fuel"),"fuel_container")fuelPanelID=_autoconf.panels[_autoconf.panels_size]end;if spacefueltank_size>0 then _autoconf.displayCategoryPanel(spacefueltank,spacefueltank_size,L_TEXT("ui_lua_widget_spacefuel", "Space Fuel"),"fuel_container")spacefuelPanelID=_autoconf.panels[_autoconf.panels_size]end;if rocketfueltank_size>0 then _autoconf.displayCategoryPanel(rocketfueltank,rocketfueltank_size,L_TEXT("ui_lua_widget_rocketfuel", "Rocket Fuel"),"fuel_container")rocketfuelPanelID=_autoconf.panels[_autoconf.panels_size]end else bY("hud","DH")unit.hide()core.hide()if fuelPanelID~=nil then s(fuelPanelID)fuelPanelID=nil end;if spacefuelPanelID~=nil then s(spacefuelPanelID)spacefuelPanelID=nil end;if rocketfuelPanelID~=nil then s(rocketfuelPanelID)rocketfuelPanelID=nil end end end;if hideHudOnToggleWidgets then if showHud then showHud=false else showHud=true end end;nR()toggleView=false elseif nH=="option4"then bX=nil;cu()toggleView=false elseif nH=="option5"then local function nS()if LockPitch==nil then bY("lkPOn","LP")LockPitch=bO;AutoTakeoff=false;AltitudeHold=false;BrakeLanding=false else bY("lkPOff","LP")LockPitch=nil end end;nS()toggleView=false elseif nH=="option6"then cs()toggleView=false elseif nH=="option7"then sounds=not sounds;if sounds then a0="All HUD sounds enabled"else a0="All HUD sounds disabled"end;toggleView=false elseif nH=="option8"then stablized=not stablized;if not stablized then a0="DeCoupled Mode - Ground Stabilization off"r:deactivateGroundEngineAltitudeStabilization()bY("gsOff","GS")else a0="Coupled Mode - Ground Stabilization on"r:activateGroundEngineAltitudeStabilization(currentGroundAltitudeStabilization)a:setEngineForceCommand('hover',vec3(),1)bY("gsOn","GS")end;toggleView=false elseif nH=="option9"then if gyro~=nil then gyro.toggle()aw=gyro.getState()==1;if aw then bY("gyOn","GA")else bY("gyOff","GA")end end;toggleView=false elseif nH=="lshift"then if AltIsOn then Z=true;return end;if w()==1 then Z=true;PrevViewLock=w()v(1)elseif l()==1 and ShiftShowsRemoteButtons then Z=true;bd=false;bc=false end elseif nH=="brake"then if BrakeToggleStatus then cC()elseif not BrakeIsOn then cC()else BrakeIsOn=true end elseif nH=="lalt"then toggleView=true;AltIsOn=true;if l()==0 and not freeLookToggle and userControlScheme=="keyboard"then v(1)end elseif nH=="booster"then if VanillaRockets then a:toggleBoosters()elseif not a5 then if not IsRocketOn then a:toggleBoosters()IsRocketOn=true end;a5=true else if IsRocketOn then a:toggleBoosters()IsRocketOn=false end;a5=false end elseif nH=="stopengines"then local function nT()if A-B<1.5 then bY("clear","CA")AutopilotAccelerating=false;AutopilotBraking=false;AutopilotCruising=false;Autopilot=false;AutopilotRealigned=false;AutopilotStatus="Aligning"RetrogradeIsOn=false;ProgradeIsOn=false;bX=nil;AltitudeHold=false;Reentry=false;BrakeLanding=false;BrakeIsOn=false;AutoTakeoff=false;VertTakeOff=false;Y=false;N=false;ak=false;al=false;P=false;be=autoRollPreference;VectorToTarget=false;TurnBurn=false;aw=false;LockPitch=nil;IntoOrbit=false end end;nT()B=A;if r:getAxisCommandType(0)~=axisCommandType.byTargetSpeed then if G~=0 then r:resetCommand(axisCommandId.longitudinal)cg(0)else cg(100)end else if r:getTargetSpeed(axisCommandId.longitudinal)~=0 then r:resetCommand(axisCommandId.longitudinal)else if ap then cj(AtmoSpeedLimit)else cj(MaxGameVelocity*3.6)end end end elseif nH=="speedup"then nO()elseif nH=="speeddown"then nO(true)elseif nH=="antigravity"and not ExternalAGG then if antigrav~=nil then cQ()end end end;function script.onActionStop(nH)local function nU()if not ExternalAGG and bL then a4=a2 end;if AltitudeHold or VertTakeOff or IntoOrbit then a3=a1 end end;if nH=="forward"then R=0 elseif nH=="backward"then R=0 elseif nH=="left"then if bX==2 then bX=0 else bX=nil end;U=0 elseif nH=="right"then if bX==4 then bX=0 else bX=nil end;U=0 elseif nH=="yawright"then V=0 elseif nH=="yawleft"then V=0 elseif nH=="straferight"then r:updateCommandFromActionStop(axisCommandId.lateral,-1.0)LeftAmount=0 elseif nH=="strafeleft"then r:updateCommandFromActionStop(axisCommandId.lateral,1.0)LeftAmount=0 elseif nH=="up"then ad=0;r:updateCommandFromActionStop(axisCommandId.vertical,-1.0)if stablized then r:activateGroundEngineAltitudeStabilization(currentGroundAltitudeStabilization)a:setEngineForceCommand('hover',vec3(),1)end elseif nH=="down"then ad=0;r:updateCommandFromActionStop(axisCommandId.vertical,1.0)if stablized then r:activateGroundEngineAltitudeStabilization(currentGroundAltitudeStabilization)a:setEngineForceCommand('hover',vec3(),1)end elseif nH=="groundaltitudeup"then nU()toggleView=false elseif nH=="groundaltitudedown"then nU()toggleView=false elseif nH=="lshift"then if w()==1 then ae=0;af=0;v(PrevViewLock)elseif l()==1 and ShiftShowsRemoteButtons then bd=false;bc=false end;Z=false elseif nH=="brake"then if not BrakeToggleStatus then if BrakeIsOn then cC()else BrakeIsOn=false end end elseif nH=="lalt"then if l()==0 and freeLookToggle then if toggleView then if w()==1 then v(0)else v(1)end else toggleView=true end elseif l()==0 and not freeLookToggle and userControlScheme=="keyboard"then v(0)end;AltIsOn=false end end;function script.onActionLoop(nH)local z=1;local function nV(nJ)if nJ then z=-1 end;if not ExternalAGG and bL then if AntigravTargetAltitude~=nil then AntigravTargetAltitude=AntigravTargetAltitude+z*a4;if AntigravTargetAltitude<1000 then AntigravTargetAltitude=1000 end;if AltitudeHold and AntigravTargetAltitude<HoldAltitude+10 and AntigravTargetAltitude>HoldAltitude-10 then HoldAltitude=AntigravTargetAltitude end;a4=a4*1.05;BrakeIsOn=false else AntigravTargetAltitude=desiredBaseAltitude+z*100;BrakeIsOn=false end elseif AltitudeHold or VertTakeOff or IntoOrbit then if IntoOrbit then bu=bu+z*a3;if bu<planet.noAtmosphericDensityAltitude then bu=planet.noAtmosphericDensityAltitude end else HoldAltitude=HoldAltitude+z*a3 end;a3=a3*1.05 else r:updateTargetGroundAltitudeFromActionLoop(z*1.0)end end;local function nW(nJ)if nJ then z=-1 end;if not Z then if AtmoSpeedAssist and not AltIsOn then G=q(G+z*speedChangeSmall/100,-1,1)else r:updateCommandFromActionLoop(axisCommandId.longitudinal,z*speedChangeSmall)end end end;if nH=="groundaltitudeup"then if not Z then nV()end elseif nH=="groundaltitudedown"then if not Z then nV(true)end elseif nH=="speedup"then nW()elseif nH=="speeddown"then nW(true)end end;function script.onInputText(cd)local function nX()for c_,d0 in pairs(c3())do dbHud_1.setStringValue(d0,g(nil))end;for c_,d0 in pairs(b)do if d0~="SavedLocations"then dbHud_1.setStringValue(d0,g(nil))end end;a0="Databank wiped except Save Locations. New variables will save after re-enter seat and exit"ag=5;aK=false end;local function nY(f_,db)local nZ=false;local dM='::pos{'..num..','..num..','..num..','..num..','..num..'}'local dY,dZ,e4,e5,e6=n(db,dM)for _,d0 in pairs(b5[0])do if d0.name==f_ then e5=math.rad(e5)e4=math.rad(e4)local planet=b0[tonumber(dY)][tonumber(dZ)]local eB=math.cos(e4)local n_=vec3(eB*math.cos(e5),eB*math.sin(e5),math.sin(e4))return planet.center+(planet.radius+e6)*n_ end end;return f_.." not found"end;local function o0(o1,planet,db,gV)local function o2(db)local num=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local dM='::pos{'..num..','..num..','..num..','..num..','..num..'}'local dY,dZ,e4,e5,e6=n(db,dM)if dY=="0"and dZ=="0"then return vec3(tonumber(e4),tonumber(e5),tonumber(e6))end;e5=math.rad(e5)e4=math.rad(e4)local planet=b0[tonumber(dY)][tonumber(dZ)]local eB=math.cos(e4)local n_=vec3(eB*math.cos(e5),eB*math.sin(e5),math.sin(e4))return planet.center+(planet.radius+e6)*n_ end;if dbHud_1 or gV then local cA={}local position=o2(db)if planet.name=="Space"then cA={position=position,name=o1,atmosphere=0,planetname=planet.name,gravity=planet.gravity}else cA={position=position,name=o1,atmosphere=planet.atmosphericDensityAboveSurface,planetname=planet.name,gravity=planet.gravity}end;if not gV then SavedLocations[#SavedLocations+1]=cA else for c_,d0 in pairs(b0[0])do if d0.name and o1==d0.name then table.remove(b0[0],c_)end end end;table.insert(b0[0],cA)ba.UpdateAtlasLocationsList()else a0="Databank must be installed to save permanent locations"end end;local i;local o3,o4=nil,nil;local o5="Command List:\n/commands \n/setname <newname> - Updates current selected saved position name\n/G VariableName newValue - Updates global variable to new value\n".."/G dump - shows all variables updatable by /G\n/agg <targetheight> - Manually set agg target height\n".."/addlocation SafeZoneCenter ::pos{0,0,13771471,7435803,-128971} - adds a saved location by waypoint, not as accurate as making one at location\n".."/::pos{0,0,13771471,7435803,-128971} - adds a temporary waypoint that is not saved to databank with name 0Temp\n".."/copydatabank - copies dbHud databank to a blank databank\n".."/iphWP - displays current IPH target's ::pos waypoint in lua chat"i=string.find(cd," ")o3=cd;if i~=nil then o3=string.sub(cd,0,i-1)o4=string.sub(cd,i+1)end;if o3=="/help"or o3=="/commands"then for ix in string.gmatch(o5,"([^\n]+)")do system.print(ix)end;return elseif o3=="/setname"then if o4==nil or o4==""then a0="Usage: ah-setname Newname"return end;if AutopilotTargetIndex>0 and CustomTarget~=nil then cx(o4)else a0="Select a saved target to rename first"end elseif o3=="/addlocation"or string.find(cd,"::pos")~=nil then local gV=false;local o1="0-Temp"if o4==nil or o4==""then o4=o3;gV=true end;i=string.find(o4,"::")if not gV then o1=string.sub(o4,1,i-2)end;local db=string.sub(o4,i)local num=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local dM='::pos{'..num..','..num..','..num..','..num..','..num..'}'local dY,dZ,e4,e5,e6=n(db,dM)local planet=b0[tonumber(dY)][tonumber(dZ)]if planet.name=="Space"then local o6=vec3(tonumber(e4),tonumber(e5),tonumber(e6))local e1=sys:closestBody(o6)if(o6-e1.center):len()<e1.radius+e1.noAtmosphericDensityAltitude then planet=e1 end end;o0(o1,planet,db,gV)a0="Added "..o1 .." to saved locations,\nplanet "..planet.name.." at "..db;ag=5 elseif o3=="/agg"then if o4==nil or o4==""then a0="Usage: /agg targetheight"return end;o4=tonumber(o4)if o4<1000 then o4=1000 end;AntigravTargetAltitude=o4;a0="AGG Target Height set to "..o4 elseif o3=="/G"then if o4==nil or o4==""then a0="Usage: /G VariableName variablevalue\n/G dump - shows all variables"return end;if o4=="dump"then for c_,d0 in pairs(c3())do if type(_G[d0])=="boolean"then if _G[d0]==true then system.print(d0 .." true")else system.print(d0 .." false")end elseif _G[d0]==nil then system.print(d0 .." nil")else system.print(d0 .." ".._G[d0])end end;return end;i=string.find(o4," ")local o7=string.sub(o4,0,i-1)local o8=string.sub(o4,i+1)for c_,d0 in pairs(c3())do if d0==o7 then a0="Variable "..o7 .." changed to "..o8;local o9=type(_G[d0])if o9=="number"then o8=tonumber(o8)elseif o9=="boolean"then if string.lower(o8)=="true"then o8=true else o8=false end end;_G[d0]=o8;return end end;a0="No such global variable: "..o7 elseif o3=="/copydatabank"then if dbHud_2 then cW(true)else a0="Spare Databank required to copy databank"end elseif o3=="/iphWP"then if AutopilotTargetIndex>0 then system.print(bb.showWayPoint(aa,AutopilotTargetCoords,true))a0="::pos waypoint shown in lua chat"else a0="No target selected in IPH"end end end;function script.onEnter(dq)if radar_1 and not ap and not bU then unit.setTimer("contact",0.1)end end;script.onStart()
        
        
        -- error handling code added by wrap.lua
        end, __wrap_lua__traceback)
        if not ok then
          __wrap_lua__error(message)
          if not script then script = {} end
        end
    stop:
      lua: |
        if not __wrap_lua__stopped and script.onStop then
          local ok, message = xpcall(script.onStop,__wrap_lua__traceback,unit)
          if not ok then __wrap_lua__error(message) end
        end
    tick(timerId):
      lua: |
        if not __wrap_lua__stopped and script.onTick then
          local ok, message = xpcall(script.onTick,__wrap_lua__traceback,timerId,unit)
          if not ok then __wrap_lua__error(message) end
        end
  system:
    actionStart(action):
      lua: |
        if not __wrap_lua__stopped and script.onActionStart then
          local ok, message = xpcall(script.onActionStart,__wrap_lua__traceback,action,system)
          if not ok then __wrap_lua__error(message) end
        end
    actionStop(action):
      lua: |
        if not __wrap_lua__stopped and script.onActionStop then
          local ok, message = xpcall(script.onActionStop,__wrap_lua__traceback,action,system)
          if not ok then __wrap_lua__error(message) end
        end
    actionLoop(action):
      lua: |
        if not __wrap_lua__stopped and script.onActionLoop then
          local ok, message = xpcall(script.onActionLoop,__wrap_lua__traceback,action,system)
          if not ok then __wrap_lua__error(message) end
        end
    update:
      lua: |
        if not __wrap_lua__stopped and script.onUpdate then
          local ok, message = xpcall(script.onUpdate,__wrap_lua__traceback,system)
          if not ok then __wrap_lua__error(message) end
        end
    flush:
      lua: |
        if not __wrap_lua__stopped and script.onFlush then
          local ok, message = xpcall(script.onFlush,__wrap_lua__traceback,system)
          if not ok then __wrap_lua__error(message) end
        end
    inputText(text):
      lua: |
        if not __wrap_lua__stopped and script.onInputText then
          local ok, message = xpcall(script.onInputText,__wrap_lua__traceback,text,system)
          if not ok then __wrap_lua__error(message) end
        end
  radar_1:
    enter(id):
      lua: |
        local radar = radar_1
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_1
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_2:
    enter(id):
      lua: |
        local radar = radar_2
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_2
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_3:
    enter(id):
      lua: |
        local radar = radar_3
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_3
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_4:
    enter(id):
      lua: |
        local radar = radar_4
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_4
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_5:
    enter(id):
      lua: |
        local radar = radar_5
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_5
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_6:
    enter(id):
      lua: |
        local radar = radar_6
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_6
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_7:
    enter(id):
      lua: |
        local radar = radar_7
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_7
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_8:
    enter(id):
      lua: |
        local radar = radar_8
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_8
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_9:
    enter(id):
      lua: |
        local radar = radar_9
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_9
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
  radar_10:
    enter(id):
      lua: |
        local radar = radar_10
        if not __wrap_lua__stopped and script.onEnter then
          local ok, message = xpcall(script.onEnter,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
    leave(id):
      lua: |
        local radar = radar_10
        if not __wrap_lua__stopped and script.onLeave then
          local ok, message = xpcall(script.onLeave,__wrap_lua__traceback,id,radar)
          if not ok then __wrap_lua__error(message) end
        end
